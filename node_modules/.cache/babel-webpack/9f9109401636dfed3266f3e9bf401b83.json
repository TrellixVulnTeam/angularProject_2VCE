{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar PluginFileHandler =\n/** @class */\nfunction () {\n  function PluginFileHandler(fileSystem, buildRoot, modulesDirectories, excludedPackageTest) {\n    this.fileSystem = fileSystem;\n    this.buildRoot = buildRoot;\n    this.modulesDirectories = modulesDirectories;\n    this.excludedPackageTest = excludedPackageTest;\n  }\n\n  PluginFileHandler.prototype.getModule = function (filename) {\n    if (filename === null || filename === undefined) {\n      return null;\n    }\n\n    if (this.modulesDirectories !== null) {\n      var foundInModuleDirectory = false;\n\n      try {\n        for (var _a = __values(this.modulesDirectories), _b = _a.next(); !_b.done; _b = _a.next()) {\n          var modulesDirectory = _b.value;\n\n          if (this.fileSystem.isFileInDirectory(filename, modulesDirectory)) {\n            foundInModuleDirectory = true;\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      if (!foundInModuleDirectory) {\n        return null;\n      }\n    }\n\n    var module = this.findModuleDir(filename);\n\n    if (module !== null && this.excludedPackageTest(module.name)) {\n      return null;\n    }\n\n    return module;\n\n    var e_1, _c;\n  };\n\n  PluginFileHandler.prototype.findModuleDir = function (filename) {\n    var pathSeparator = this.fileSystem.pathSeparator;\n    var dirOfModule = filename.substring(0, filename.lastIndexOf(pathSeparator));\n    var oldDirOfModule = null;\n\n    while (!this.dirContainsValidPackageJson(dirOfModule)) {\n      // check parent directory\n      oldDirOfModule = dirOfModule;\n      dirOfModule = this.fileSystem.resolvePath(\"\" + dirOfModule + pathSeparator + \"..\" + pathSeparator); // reached filesystem root\n\n      if (oldDirOfModule === dirOfModule) {\n        return null;\n      }\n    }\n\n    if (this.buildRoot === dirOfModule) {\n      return null;\n    }\n\n    var packageJson = this.parsePackageJson(dirOfModule);\n    return {\n      name: packageJson.name,\n      directory: dirOfModule\n    };\n  };\n\n  PluginFileHandler.prototype.parsePackageJson = function (dirOfModule) {\n    var packageJsonText = this.fileSystem.readFileAsUtf8(this.fileSystem.join(dirOfModule, PluginFileHandler.PACKAGE_JSON));\n    var packageJson = JSON.parse(packageJsonText);\n    return packageJson;\n  };\n\n  PluginFileHandler.prototype.dirContainsValidPackageJson = function (dirOfModule) {\n    if (!this.fileSystem.pathExists(this.fileSystem.join(dirOfModule, PluginFileHandler.PACKAGE_JSON))) {\n      return false;\n    }\n\n    var packageJson = this.parsePackageJson(dirOfModule);\n    return !!packageJson.name;\n  };\n\n  PluginFileHandler.PACKAGE_JSON = 'package.json';\n  return PluginFileHandler;\n}();\n\nexports.PluginFileHandler = PluginFileHandler;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/license-webpack-plugin/dist/PluginFileHandler.js"],"names":["__values","o","m","Symbol","iterator","i","call","next","length","value","done","Object","defineProperty","exports","PluginFileHandler","fileSystem","buildRoot","modulesDirectories","excludedPackageTest","prototype","getModule","filename","undefined","foundInModuleDirectory","_a","_b","modulesDirectory","isFileInDirectory","e_1_1","e_1","error","_c","return","module","findModuleDir","name","pathSeparator","dirOfModule","substring","lastIndexOf","oldDirOfModule","dirContainsValidPackageJson","resolvePath","packageJson","parsePackageJson","directory","packageJsonText","readFileAsUtf8","join","PACKAGE_JSON","JSON","parse","pathExists"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PluginFileHandler = /** @class */ (function () {\n    function PluginFileHandler(fileSystem, buildRoot, modulesDirectories, excludedPackageTest) {\n        this.fileSystem = fileSystem;\n        this.buildRoot = buildRoot;\n        this.modulesDirectories = modulesDirectories;\n        this.excludedPackageTest = excludedPackageTest;\n    }\n    PluginFileHandler.prototype.getModule = function (filename) {\n        if (filename === null || filename === undefined) {\n            return null;\n        }\n        if (this.modulesDirectories !== null) {\n            var foundInModuleDirectory = false;\n            try {\n                for (var _a = __values(this.modulesDirectories), _b = _a.next(); !_b.done; _b = _a.next()) {\n                    var modulesDirectory = _b.value;\n                    if (this.fileSystem.isFileInDirectory(filename, modulesDirectory)) {\n                        foundInModuleDirectory = true;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (!foundInModuleDirectory) {\n                return null;\n            }\n        }\n        var module = this.findModuleDir(filename);\n        if (module !== null && this.excludedPackageTest(module.name)) {\n            return null;\n        }\n        return module;\n        var e_1, _c;\n    };\n    PluginFileHandler.prototype.findModuleDir = function (filename) {\n        var pathSeparator = this.fileSystem.pathSeparator;\n        var dirOfModule = filename.substring(0, filename.lastIndexOf(pathSeparator));\n        var oldDirOfModule = null;\n        while (!this.dirContainsValidPackageJson(dirOfModule)) {\n            // check parent directory\n            oldDirOfModule = dirOfModule;\n            dirOfModule = this.fileSystem.resolvePath(\"\" + dirOfModule + pathSeparator + \"..\" + pathSeparator);\n            // reached filesystem root\n            if (oldDirOfModule === dirOfModule) {\n                return null;\n            }\n        }\n        if (this.buildRoot === dirOfModule) {\n            return null;\n        }\n        var packageJson = this.parsePackageJson(dirOfModule);\n        return {\n            name: packageJson.name,\n            directory: dirOfModule\n        };\n    };\n    PluginFileHandler.prototype.parsePackageJson = function (dirOfModule) {\n        var packageJsonText = this.fileSystem.readFileAsUtf8(this.fileSystem.join(dirOfModule, PluginFileHandler.PACKAGE_JSON));\n        var packageJson = JSON.parse(packageJsonText);\n        return packageJson;\n    };\n    PluginFileHandler.prototype.dirContainsValidPackageJson = function (dirOfModule) {\n        if (!this.fileSystem.pathExists(this.fileSystem.join(dirOfModule, PluginFileHandler.PACKAGE_JSON))) {\n            return false;\n        }\n        var packageJson = this.parsePackageJson(dirOfModule);\n        return !!packageJson.name;\n    };\n    PluginFileHandler.PACKAGE_JSON = 'package.json';\n    return PluginFileHandler;\n}());\nexports.PluginFileHandler = PluginFileHandler;\n"]},"metadata":{},"sourceType":"script"}