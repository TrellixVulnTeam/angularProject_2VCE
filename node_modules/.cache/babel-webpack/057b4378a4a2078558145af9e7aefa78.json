{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSyncHost = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar rxjs_1 = require(\"rxjs\");\n\nfunction wrapAction(action) {\n  return new rxjs_1.Observable(function (subscriber) {\n    subscriber.next(action());\n    subscriber.complete();\n  });\n}\n\nfunction createSyncHost(handler) {\n  return new ( /*#__PURE__*/function () {\n    function _class() {\n      _classCallCheck(this, _class);\n    }\n\n    _createClass(_class, [{\n      key: \"capabilities\",\n      get: function get() {\n        return {\n          synchronous: true\n        };\n      }\n    }, {\n      key: \"read\",\n      value: function read(path) {\n        return wrapAction(function () {\n          return handler.read(path);\n        });\n      }\n    }, {\n      key: \"list\",\n      value: function list(path) {\n        return wrapAction(function () {\n          return handler.list(path);\n        });\n      }\n    }, {\n      key: \"exists\",\n      value: function exists(path) {\n        return wrapAction(function () {\n          return handler.exists(path);\n        });\n      }\n    }, {\n      key: \"isDirectory\",\n      value: function isDirectory(path) {\n        return wrapAction(function () {\n          return handler.isDirectory(path);\n        });\n      }\n    }, {\n      key: \"isFile\",\n      value: function isFile(path) {\n        return wrapAction(function () {\n          return handler.isFile(path);\n        });\n      }\n    }, {\n      key: \"stat\",\n      value: function stat(path) {\n        return wrapAction(function () {\n          return handler.stat(path);\n        });\n      }\n    }, {\n      key: \"write\",\n      value: function write(path, content) {\n        return wrapAction(function () {\n          return handler.write(path, content);\n        });\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(path) {\n        return wrapAction(function () {\n          return handler.delete(path);\n        });\n      }\n    }, {\n      key: \"rename\",\n      value: function rename(from, to) {\n        return wrapAction(function () {\n          return handler.rename(from, to);\n        });\n      }\n    }, {\n      key: \"watch\",\n      value: function watch() {\n        return null;\n      }\n    }]);\n\n    return _class;\n  }())();\n}\n\nexports.createSyncHost = createSyncHost;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/@angular-devkit/core/src/virtual-fs/host/create.js"],"names":["Object","defineProperty","exports","value","createSyncHost","rxjs_1","require","wrapAction","action","Observable","subscriber","next","complete","handler","synchronous","path","read","list","exists","isDirectory","isFile","stat","content","write","delete","from","to","rename"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyB,KAAK,CAA9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,MAAD,CAAtB;;AACA,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AACxB,SAAO,IAAIH,MAAM,CAACI,UAAX,CAAsB,UAACC,UAAD,EAAgB;AACzCA,IAAAA,UAAU,CAACC,IAAX,CAAgBH,MAAM,EAAtB;AACAE,IAAAA,UAAU,CAACE,QAAX;AACH,GAHM,CAAP;AAIH;;AACD,SAASR,cAAT,CAAwBS,OAAxB,EAAiC;AAC7B,SAAO;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WACH,eAAmB;AACf,eAAO;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAAP;AACH;AAHE;AAAA;AAAA,aAIH,cAAKC,IAAL,EAAW;AACP,eAAOR,UAAU,CAAC;AAAA,iBAAMM,OAAO,CAACG,IAAR,CAAaD,IAAb,CAAN;AAAA,SAAD,CAAjB;AACH;AANE;AAAA;AAAA,aAOH,cAAKA,IAAL,EAAW;AACP,eAAOR,UAAU,CAAC;AAAA,iBAAMM,OAAO,CAACI,IAAR,CAAaF,IAAb,CAAN;AAAA,SAAD,CAAjB;AACH;AATE;AAAA;AAAA,aAUH,gBAAOA,IAAP,EAAa;AACT,eAAOR,UAAU,CAAC;AAAA,iBAAMM,OAAO,CAACK,MAAR,CAAeH,IAAf,CAAN;AAAA,SAAD,CAAjB;AACH;AAZE;AAAA;AAAA,aAaH,qBAAYA,IAAZ,EAAkB;AACd,eAAOR,UAAU,CAAC;AAAA,iBAAMM,OAAO,CAACM,WAAR,CAAoBJ,IAApB,CAAN;AAAA,SAAD,CAAjB;AACH;AAfE;AAAA;AAAA,aAgBH,gBAAOA,IAAP,EAAa;AACT,eAAOR,UAAU,CAAC;AAAA,iBAAMM,OAAO,CAACO,MAAR,CAAeL,IAAf,CAAN;AAAA,SAAD,CAAjB;AACH;AAlBE;AAAA;AAAA,aAmBH,cAAKA,IAAL,EAAW;AACP,eAAOR,UAAU,CAAC;AAAA,iBAAMM,OAAO,CAACQ,IAAR,CAAaN,IAAb,CAAN;AAAA,SAAD,CAAjB;AACH;AArBE;AAAA;AAAA,aAsBH,eAAMA,IAAN,EAAYO,OAAZ,EAAqB;AACjB,eAAOf,UAAU,CAAC;AAAA,iBAAMM,OAAO,CAACU,KAAR,CAAcR,IAAd,EAAoBO,OAApB,CAAN;AAAA,SAAD,CAAjB;AACH;AAxBE;AAAA;AAAA,aAyBH,iBAAOP,IAAP,EAAa;AACT,eAAOR,UAAU,CAAC;AAAA,iBAAMM,OAAO,CAACW,MAAR,CAAeT,IAAf,CAAN;AAAA,SAAD,CAAjB;AACH;AA3BE;AAAA;AAAA,aA4BH,gBAAOU,IAAP,EAAaC,EAAb,EAAiB;AACb,eAAOnB,UAAU,CAAC;AAAA,iBAAMM,OAAO,CAACc,MAAR,CAAeF,IAAf,EAAqBC,EAArB,CAAN;AAAA,SAAD,CAAjB;AACH;AA9BE;AAAA;AAAA,aA+BH,iBAAQ;AACJ,eAAO,IAAP;AACH;AAjCE;;AAAA;AAAA,QAAP;AAmCH;;AACDxB,OAAO,CAACE,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSyncHost = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst rxjs_1 = require(\"rxjs\");\nfunction wrapAction(action) {\n    return new rxjs_1.Observable((subscriber) => {\n        subscriber.next(action());\n        subscriber.complete();\n    });\n}\nfunction createSyncHost(handler) {\n    return new (class {\n        get capabilities() {\n            return { synchronous: true };\n        }\n        read(path) {\n            return wrapAction(() => handler.read(path));\n        }\n        list(path) {\n            return wrapAction(() => handler.list(path));\n        }\n        exists(path) {\n            return wrapAction(() => handler.exists(path));\n        }\n        isDirectory(path) {\n            return wrapAction(() => handler.isDirectory(path));\n        }\n        isFile(path) {\n            return wrapAction(() => handler.isFile(path));\n        }\n        stat(path) {\n            return wrapAction(() => handler.stat(path));\n        }\n        write(path, content) {\n            return wrapAction(() => handler.write(path, content));\n        }\n        delete(path) {\n            return wrapAction(() => handler.delete(path));\n        }\n        rename(from, to) {\n            return wrapAction(() => handler.rename(from, to));\n        }\n        watch() {\n            return null;\n        }\n    })();\n}\nexports.createSyncHost = createSyncHost;\n"]},"metadata":{},"sourceType":"script"}