{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar HarmonyCompatibilityDependency = require(\"./HarmonyCompatibilityDependency\");\n\nvar HarmonyInitDependency = require(\"./HarmonyInitDependency\");\n\nmodule.exports = /*#__PURE__*/function () {\n  function HarmonyDetectionParserPlugin() {\n    _classCallCheck(this, HarmonyDetectionParserPlugin);\n  }\n\n  _createClass(HarmonyDetectionParserPlugin, [{\n    key: \"apply\",\n    value: function apply(parser) {\n      parser.hooks.program.tap(\"HarmonyDetectionParserPlugin\", function (ast) {\n        var isStrictHarmony = parser.state.module.type === \"javascript/esm\";\n        var isHarmony = isStrictHarmony || ast.body.some(function (statement) {\n          return statement.type === \"ImportDeclaration\" || statement.type === \"ExportDefaultDeclaration\" || statement.type === \"ExportNamedDeclaration\" || statement.type === \"ExportAllDeclaration\";\n        });\n\n        if (isHarmony) {\n          var _module = parser.state.module;\n          var compatDep = new HarmonyCompatibilityDependency(_module);\n          compatDep.loc = {\n            start: {\n              line: -1,\n              column: 0\n            },\n            end: {\n              line: -1,\n              column: 0\n            },\n            index: -3\n          };\n\n          _module.addDependency(compatDep);\n\n          var initDep = new HarmonyInitDependency(_module);\n          initDep.loc = {\n            start: {\n              line: -1,\n              column: 0\n            },\n            end: {\n              line: -1,\n              column: 0\n            },\n            index: -2\n          };\n\n          _module.addDependency(initDep);\n\n          parser.state.harmonyParserScope = parser.state.harmonyParserScope || {};\n          parser.scope.isStrict = true;\n          _module.buildMeta.exportsType = \"namespace\";\n          _module.buildInfo.strict = true;\n          _module.buildInfo.exportsArgument = \"__webpack_exports__\";\n\n          if (isStrictHarmony) {\n            _module.buildMeta.strictHarmonyModule = true;\n            _module.buildInfo.moduleArgument = \"__webpack_module__\";\n          }\n        }\n      });\n\n      var skipInHarmony = function skipInHarmony() {\n        var module = parser.state.module;\n\n        if (module && module.buildMeta && module.buildMeta.exportsType) {\n          return true;\n        }\n      };\n\n      var nullInHarmony = function nullInHarmony() {\n        var module = parser.state.module;\n\n        if (module && module.buildMeta && module.buildMeta.exportsType) {\n          return null;\n        }\n      };\n\n      var nonHarmonyIdentifiers = [\"define\", \"exports\"];\n\n      for (var _i = 0, _nonHarmonyIdentifier = nonHarmonyIdentifiers; _i < _nonHarmonyIdentifier.length; _i++) {\n        var identifer = _nonHarmonyIdentifier[_i];\n        parser.hooks.evaluateTypeof.for(identifer).tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\n        parser.hooks.typeof.for(identifer).tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n        parser.hooks.evaluate.for(identifer).tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\n        parser.hooks.expression.for(identifer).tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n        parser.hooks.call.for(identifer).tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n      }\n    }\n  }]);\n\n  return HarmonyDetectionParserPlugin;\n}();","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/dependencies/HarmonyDetectionParserPlugin.js"],"names":["HarmonyCompatibilityDependency","require","HarmonyInitDependency","module","exports","parser","hooks","program","tap","ast","isStrictHarmony","state","type","isHarmony","body","some","statement","compatDep","loc","start","line","column","end","index","addDependency","initDep","harmonyParserScope","scope","isStrict","buildMeta","exportsType","buildInfo","strict","exportsArgument","strictHarmonyModule","moduleArgument","skipInHarmony","nullInHarmony","nonHarmonyIdentifiers","identifer","evaluateTypeof","for","typeof","evaluate","expression","call"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst HarmonyCompatibilityDependency = require(\"./HarmonyCompatibilityDependency\");\nconst HarmonyInitDependency = require(\"./HarmonyInitDependency\");\n\nmodule.exports = class HarmonyDetectionParserPlugin {\n\tapply(parser) {\n\t\tparser.hooks.program.tap(\"HarmonyDetectionParserPlugin\", ast => {\n\t\t\tconst isStrictHarmony = parser.state.module.type === \"javascript/esm\";\n\t\t\tconst isHarmony =\n\t\t\t\tisStrictHarmony ||\n\t\t\t\tast.body.some(\n\t\t\t\t\tstatement =>\n\t\t\t\t\t\tstatement.type === \"ImportDeclaration\" ||\n\t\t\t\t\t\tstatement.type === \"ExportDefaultDeclaration\" ||\n\t\t\t\t\t\tstatement.type === \"ExportNamedDeclaration\" ||\n\t\t\t\t\t\tstatement.type === \"ExportAllDeclaration\"\n\t\t\t\t);\n\t\t\tif (isHarmony) {\n\t\t\t\tconst module = parser.state.module;\n\t\t\t\tconst compatDep = new HarmonyCompatibilityDependency(module);\n\t\t\t\tcompatDep.loc = {\n\t\t\t\t\tstart: {\n\t\t\t\t\t\tline: -1,\n\t\t\t\t\t\tcolumn: 0\n\t\t\t\t\t},\n\t\t\t\t\tend: {\n\t\t\t\t\t\tline: -1,\n\t\t\t\t\t\tcolumn: 0\n\t\t\t\t\t},\n\t\t\t\t\tindex: -3\n\t\t\t\t};\n\t\t\t\tmodule.addDependency(compatDep);\n\t\t\t\tconst initDep = new HarmonyInitDependency(module);\n\t\t\t\tinitDep.loc = {\n\t\t\t\t\tstart: {\n\t\t\t\t\t\tline: -1,\n\t\t\t\t\t\tcolumn: 0\n\t\t\t\t\t},\n\t\t\t\t\tend: {\n\t\t\t\t\t\tline: -1,\n\t\t\t\t\t\tcolumn: 0\n\t\t\t\t\t},\n\t\t\t\t\tindex: -2\n\t\t\t\t};\n\t\t\t\tmodule.addDependency(initDep);\n\t\t\t\tparser.state.harmonyParserScope = parser.state.harmonyParserScope || {};\n\t\t\t\tparser.scope.isStrict = true;\n\t\t\t\tmodule.buildMeta.exportsType = \"namespace\";\n\t\t\t\tmodule.buildInfo.strict = true;\n\t\t\t\tmodule.buildInfo.exportsArgument = \"__webpack_exports__\";\n\t\t\t\tif (isStrictHarmony) {\n\t\t\t\t\tmodule.buildMeta.strictHarmonyModule = true;\n\t\t\t\t\tmodule.buildInfo.moduleArgument = \"__webpack_module__\";\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst skipInHarmony = () => {\n\t\t\tconst module = parser.state.module;\n\t\t\tif (module && module.buildMeta && module.buildMeta.exportsType) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\n\t\tconst nullInHarmony = () => {\n\t\t\tconst module = parser.state.module;\n\t\t\tif (module && module.buildMeta && module.buildMeta.exportsType) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t};\n\n\t\tconst nonHarmonyIdentifiers = [\"define\", \"exports\"];\n\t\tfor (const identifer of nonHarmonyIdentifiers) {\n\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t.for(identifer)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\n\t\t\tparser.hooks.typeof\n\t\t\t\t.for(identifer)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n\t\t\tparser.hooks.evaluate\n\t\t\t\t.for(identifer)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\n\t\t\tparser.hooks.expression\n\t\t\t\t.for(identifer)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n\t\t\tparser.hooks.call\n\t\t\t\t.for(identifer)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n\t\t}\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}