{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _objectSpread = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar forEachBail = require(\"./forEachBail\");\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\n/** @typedef {{alias: string|Array<string>|false, name: string, onlyModule?: boolean}} AliasOption */\n\n\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {AliasOption | Array<AliasOption>} options options\n   * @param {string | ResolveStepHook} target target\n   */\n  function AliasPlugin(source, options, target) {\n    _classCallCheck(this, AliasPlugin);\n\n    this.source = source;\n    this.options = Array.isArray(options) ? options : [options];\n    this.target = target;\n  }\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n\n\n  _createClass(AliasPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"AliasPlugin\", function (request, resolveContext, callback) {\n        var innerRequest = request.request || request.path;\n        if (!innerRequest) return callback();\n        forEachBail(_this.options, function (item, callback) {\n          var shouldStop = false;\n\n          if (innerRequest === item.name || !item.onlyModule && innerRequest.startsWith(item.name + \"/\")) {\n            var remainingRequest = innerRequest.substr(item.name.length);\n\n            var resolveWithAlias = function resolveWithAlias(alias, callback) {\n              if (alias === false) {\n                var ignoreObj = _objectSpread(_objectSpread({}, request), {}, {\n                  path: false\n                });\n\n                return callback(null, ignoreObj);\n              }\n\n              if (innerRequest !== alias && !innerRequest.startsWith(alias + \"/\")) {\n                shouldStop = true;\n                var newRequestStr = alias + remainingRequest;\n\n                var obj = _objectSpread(_objectSpread({}, request), {}, {\n                  request: newRequestStr,\n                  fullySpecified: false\n                });\n\n                return resolver.doResolve(target, obj, \"aliased with mapping '\" + item.name + \"': '\" + alias + \"' to '\" + newRequestStr + \"'\", resolveContext, function (err, result) {\n                  if (err) return callback(err);\n                  if (result) return callback(null, result);\n                  return callback();\n                });\n              }\n\n              return callback();\n            };\n\n            var stoppingCallback = function stoppingCallback(err, result) {\n              if (err) return callback(err);\n              if (result) return callback(null, result); // Don't allow other aliasing or raw request\n\n              if (shouldStop) return callback(null, null);\n              return callback();\n            };\n\n            if (Array.isArray(item.alias)) {\n              return forEachBail(item.alias, resolveWithAlias, stoppingCallback);\n            } else {\n              return resolveWithAlias(item.alias, stoppingCallback);\n            }\n          }\n\n          return callback();\n        }, callback);\n      });\n    }\n  }]);\n\n  return AliasPlugin;\n}();","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/enhanced-resolve/lib/AliasPlugin.js"],"names":["forEachBail","require","module","exports","source","options","target","Array","isArray","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","innerRequest","path","item","shouldStop","name","onlyModule","startsWith","remainingRequest","substr","length","resolveWithAlias","alias","ignoreObj","newRequestStr","obj","fullySpecified","doResolve","err","result","stoppingCallback"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {{alias: string|Array<string>|false, name: string, onlyModule?: boolean}} AliasOption */\n\nmodule.exports = class AliasPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {AliasOption | Array<AliasOption>} options options\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, options, target) {\n\t\tthis.source = source;\n\t\tthis.options = Array.isArray(options) ? options : [options];\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"AliasPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst innerRequest = request.request || request.path;\n\t\t\t\tif (!innerRequest) return callback();\n\t\t\t\tforEachBail(\n\t\t\t\t\tthis.options,\n\t\t\t\t\t(item, callback) => {\n\t\t\t\t\t\tlet shouldStop = false;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tinnerRequest === item.name ||\n\t\t\t\t\t\t\t(!item.onlyModule && innerRequest.startsWith(item.name + \"/\"))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst remainingRequest = innerRequest.substr(item.name.length);\n\t\t\t\t\t\t\tconst resolveWithAlias = (alias, callback) => {\n\t\t\t\t\t\t\t\tif (alias === false) {\n\t\t\t\t\t\t\t\t\tconst ignoreObj = {\n\t\t\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\t\t\tpath: false\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\treturn callback(null, ignoreObj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tinnerRequest !== alias &&\n\t\t\t\t\t\t\t\t\t!innerRequest.startsWith(alias + \"/\")\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tshouldStop = true;\n\t\t\t\t\t\t\t\t\tconst newRequestStr = alias + remainingRequest;\n\t\t\t\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\t\t\trequest: newRequestStr,\n\t\t\t\t\t\t\t\t\t\tfullySpecified: false\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\treturn resolver.doResolve(\n\t\t\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\t\t\t\"aliased with mapping '\" +\n\t\t\t\t\t\t\t\t\t\t\titem.name +\n\t\t\t\t\t\t\t\t\t\t\t\"': '\" +\n\t\t\t\t\t\t\t\t\t\t\talias +\n\t\t\t\t\t\t\t\t\t\t\t\"' to '\" +\n\t\t\t\t\t\t\t\t\t\t\tnewRequestStr +\n\t\t\t\t\t\t\t\t\t\t\t\"'\",\n\t\t\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\t\t\t\tif (result) return callback(null, result);\n\t\t\t\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tconst stoppingCallback = (err, result) => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t\tif (result) return callback(null, result);\n\t\t\t\t\t\t\t\t// Don't allow other aliasing or raw request\n\t\t\t\t\t\t\t\tif (shouldStop) return callback(null, null);\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif (Array.isArray(item.alias)) {\n\t\t\t\t\t\t\t\treturn forEachBail(\n\t\t\t\t\t\t\t\t\titem.alias,\n\t\t\t\t\t\t\t\t\tresolveWithAlias,\n\t\t\t\t\t\t\t\t\tstoppingCallback\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn resolveWithAlias(item.alias, stoppingCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t},\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}