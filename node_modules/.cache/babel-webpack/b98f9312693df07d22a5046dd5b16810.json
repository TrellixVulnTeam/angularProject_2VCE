{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler-cli/src/ngtsc/partial_evaluator/src/builtin\", [\"require\", \"exports\", \"tslib\", \"@angular/compiler-cli/src/ngtsc/partial_evaluator/src/dynamic\", \"@angular/compiler-cli/src/ngtsc/partial_evaluator/src/result\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ObjectAssignBuiltinFn = exports.ArrayConcatBuiltinFn = exports.ArraySliceBuiltinFn = void 0;\n\n  var tslib_1 = require(\"tslib\");\n\n  var dynamic_1 = require(\"@angular/compiler-cli/src/ngtsc/partial_evaluator/src/dynamic\");\n\n  var result_1 = require(\"@angular/compiler-cli/src/ngtsc/partial_evaluator/src/result\");\n\n  var ArraySliceBuiltinFn =\n  /** @class */\n  function (_super) {\n    tslib_1.__extends(ArraySliceBuiltinFn, _super);\n\n    function ArraySliceBuiltinFn(lhs) {\n      var _this = _super.call(this) || this;\n\n      _this.lhs = lhs;\n      return _this;\n    }\n\n    ArraySliceBuiltinFn.prototype.evaluate = function (node, args) {\n      if (args.length === 0) {\n        return this.lhs;\n      } else {\n        return dynamic_1.DynamicValue.fromUnknown(node);\n      }\n    };\n\n    return ArraySliceBuiltinFn;\n  }(result_1.KnownFn);\n\n  exports.ArraySliceBuiltinFn = ArraySliceBuiltinFn;\n\n  var ArrayConcatBuiltinFn =\n  /** @class */\n  function (_super) {\n    tslib_1.__extends(ArrayConcatBuiltinFn, _super);\n\n    function ArrayConcatBuiltinFn(lhs) {\n      var _this = _super.call(this) || this;\n\n      _this.lhs = lhs;\n      return _this;\n    }\n\n    ArrayConcatBuiltinFn.prototype.evaluate = function (node, args) {\n      var e_1, _a;\n\n      var result = tslib_1.__spread(this.lhs);\n\n      try {\n        for (var args_1 = tslib_1.__values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {\n          var arg = args_1_1.value;\n\n          if (arg instanceof dynamic_1.DynamicValue) {\n            result.push(dynamic_1.DynamicValue.fromDynamicInput(node, arg));\n          } else if (Array.isArray(arg)) {\n            result.push.apply(result, tslib_1.__spread(arg));\n          } else {\n            result.push(arg);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      return result;\n    };\n\n    return ArrayConcatBuiltinFn;\n  }(result_1.KnownFn);\n\n  exports.ArrayConcatBuiltinFn = ArrayConcatBuiltinFn;\n\n  var ObjectAssignBuiltinFn =\n  /** @class */\n  function (_super) {\n    tslib_1.__extends(ObjectAssignBuiltinFn, _super);\n\n    function ObjectAssignBuiltinFn() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    ObjectAssignBuiltinFn.prototype.evaluate = function (node, args) {\n      var e_2, _a, e_3, _b;\n\n      if (args.length === 0) {\n        return dynamic_1.DynamicValue.fromUnsupportedSyntax(node);\n      }\n\n      try {\n        for (var args_2 = tslib_1.__values(args), args_2_1 = args_2.next(); !args_2_1.done; args_2_1 = args_2.next()) {\n          var arg = args_2_1.value;\n\n          if (arg instanceof dynamic_1.DynamicValue) {\n            return dynamic_1.DynamicValue.fromDynamicInput(node, arg);\n          } else if (!(arg instanceof Map)) {\n            return dynamic_1.DynamicValue.fromUnsupportedSyntax(node);\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (args_2_1 && !args_2_1.done && (_a = args_2.return)) _a.call(args_2);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n\n      var _c = tslib_1.__read(args),\n          target = _c[0],\n          sources = _c.slice(1);\n\n      try {\n        for (var sources_1 = tslib_1.__values(sources), sources_1_1 = sources_1.next(); !sources_1_1.done; sources_1_1 = sources_1.next()) {\n          var source = sources_1_1.value;\n          source.forEach(function (value, key) {\n            return target.set(key, value);\n          });\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (sources_1_1 && !sources_1_1.done && (_b = sources_1.return)) _b.call(sources_1);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n\n      return target;\n    };\n\n    return ObjectAssignBuiltinFn;\n  }(result_1.KnownFn);\n\n  exports.ObjectAssignBuiltinFn = ObjectAssignBuiltinFn;\n});","map":{"version":3,"sources":["../../../../../../../../../packages/compiler-cli/src/ngtsc/partial_evaluator/src/builtin.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ts from 'typescript';\n\nimport {DynamicValue} from './dynamic';\nimport {KnownFn, ResolvedValue, ResolvedValueArray} from './result';\n\nexport class ArraySliceBuiltinFn extends KnownFn {\n  constructor(private lhs: ResolvedValueArray) {\n    super();\n  }\n\n  evaluate(node: ts.CallExpression, args: ResolvedValueArray): ResolvedValue {\n    if (args.length === 0) {\n      return this.lhs;\n    } else {\n      return DynamicValue.fromUnknown(node);\n    }\n  }\n}\n\nexport class ArrayConcatBuiltinFn extends KnownFn {\n  constructor(private lhs: ResolvedValueArray) {\n    super();\n  }\n\n  evaluate(node: ts.CallExpression, args: ResolvedValueArray): ResolvedValue {\n    const result: ResolvedValueArray = [...this.lhs];\n    for (const arg of args) {\n      if (arg instanceof DynamicValue) {\n        result.push(DynamicValue.fromDynamicInput(node, arg));\n      } else if (Array.isArray(arg)) {\n        result.push(...arg);\n      } else {\n        result.push(arg);\n      }\n    }\n    return result;\n  }\n}\n\nexport class ObjectAssignBuiltinFn extends KnownFn {\n  evaluate(node: ts.CallExpression, args: ResolvedValueArray): ResolvedValue {\n    if (args.length === 0) {\n      return DynamicValue.fromUnsupportedSyntax(node);\n    }\n    for (const arg of args) {\n      if (arg instanceof DynamicValue) {\n        return DynamicValue.fromDynamicInput(node, arg);\n      } else if (!(arg instanceof Map)) {\n        return DynamicValue.fromUnsupportedSyntax(node);\n      }\n    }\n    const [target, ...sources] = args as Map<string, ResolvedValue>[];\n    for (const source of sources) {\n      source.forEach((value, key) => target.set(key, value));\n    }\n    return target;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}