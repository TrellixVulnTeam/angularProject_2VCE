{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar Cache = /*#__PURE__*/function () {\n  function Cache(compilation) {\n    _classCallCheck(this, Cache);\n\n    this.cache = compilation.getCache('TerserWebpackPlugin');\n  }\n\n  _createClass(Cache, [{\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cacheData) {\n        var _this = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // eslint-disable-next-line no-param-reassign\n                cacheData.eTag = cacheData.eTag || Array.isArray(cacheData.inputSource) ? cacheData.inputSource.map(function (item) {\n                  return _this.cache.getLazyHashedEtag(item);\n                }).reduce(function (previousValue, currentValue) {\n                  return _this.cache.mergeEtags(previousValue, currentValue);\n                }) : this.cache.getLazyHashedEtag(cacheData.inputSource);\n                return _context.abrupt(\"return\", this.cache.getPromise(cacheData.name, cacheData.eTag));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }()\n  }, {\n    key: \"store\",\n    value: function () {\n      var _store = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(cacheData) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (cacheData.target === 'comments') {\n                  data = cacheData.output;\n                } else {\n                  data = {\n                    source: cacheData.source,\n                    extractedCommentsSource: cacheData.extractedCommentsSource,\n                    commentsFilename: cacheData.commentsFilename\n                  };\n                }\n\n                return _context2.abrupt(\"return\", this.cache.storePromise(cacheData.name, cacheData.eTag, data));\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function store(_x2) {\n        return _store.apply(this, arguments);\n      }\n\n      return store;\n    }()\n  }]);\n\n  return Cache;\n}();\n\nexports.default = Cache;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/terser-webpack-plugin/dist/Webpack5Cache.js"],"names":["Object","defineProperty","exports","value","default","Cache","compilation","cache","getCache","cacheData","eTag","Array","isArray","inputSource","map","item","getLazyHashedEtag","reduce","previousValue","currentValue","mergeEtags","getPromise","name","target","data","output","source","extractedCommentsSource","commentsFilename","storePromise"],"mappings":"AAAA;;;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;IAEMC,K;AACJ,iBAAYC,WAAZ,EAAyB;AAAA;;AACvB,SAAKC,KAAL,GAAaD,WAAW,CAACE,QAAZ,CAAqB,qBAArB,CAAb;AACD;;;;;0EAED,iBAAUC,SAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AACE;AACAA,gBAAAA,SAAS,CAACC,IAAV,GAAiBD,SAAS,CAACC,IAAV,IAAkBC,KAAK,CAACC,OAAN,CAAcH,SAAS,CAACI,WAAxB,CAAlB,GAAyDJ,SAAS,CAACI,WAAV,CAAsBC,GAAtB,CAA0B,UAAAC,IAAI;AAAA,yBAAI,KAAI,CAACR,KAAL,CAAWS,iBAAX,CAA6BD,IAA7B,CAAJ;AAAA,iBAA9B,EAAsEE,MAAtE,CAA6E,UAACC,aAAD,EAAgBC,YAAhB;AAAA,yBAAiC,KAAI,CAACZ,KAAL,CAAWa,UAAX,CAAsBF,aAAtB,EAAqCC,YAArC,CAAjC;AAAA,iBAA7E,CAAzD,GAA6N,KAAKZ,KAAL,CAAWS,iBAAX,CAA6BP,SAAS,CAACI,WAAvC,CAA9O;AAFF,iDAGS,KAAKN,KAAL,CAAWc,UAAX,CAAsBZ,SAAS,CAACa,IAAhC,EAAsCb,SAAS,CAACC,IAAhD,CAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;4EAMA,kBAAYD,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAGE,oBAAIA,SAAS,CAACc,MAAV,KAAqB,UAAzB,EAAqC;AACnCC,kBAAAA,IAAI,GAAGf,SAAS,CAACgB,MAAjB;AACD,iBAFD,MAEO;AACLD,kBAAAA,IAAI,GAAG;AACLE,oBAAAA,MAAM,EAAEjB,SAAS,CAACiB,MADb;AAELC,oBAAAA,uBAAuB,EAAElB,SAAS,CAACkB,uBAF9B;AAGLC,oBAAAA,gBAAgB,EAAEnB,SAAS,CAACmB;AAHvB,mBAAP;AAKD;;AAXH,kDAaS,KAAKrB,KAAL,CAAWsB,YAAX,CAAwBpB,SAAS,CAACa,IAAlC,EAAwCb,SAAS,CAACC,IAAlD,EAAwDc,IAAxD,CAbT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;AAkBFtB,OAAO,CAACE,OAAR,GAAkBC,KAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Cache {\n  constructor(compilation) {\n    this.cache = compilation.getCache('TerserWebpackPlugin');\n  }\n\n  async get(cacheData) {\n    // eslint-disable-next-line no-param-reassign\n    cacheData.eTag = cacheData.eTag || Array.isArray(cacheData.inputSource) ? cacheData.inputSource.map(item => this.cache.getLazyHashedEtag(item)).reduce((previousValue, currentValue) => this.cache.mergeEtags(previousValue, currentValue)) : this.cache.getLazyHashedEtag(cacheData.inputSource);\n    return this.cache.getPromise(cacheData.name, cacheData.eTag);\n  }\n\n  async store(cacheData) {\n    let data;\n\n    if (cacheData.target === 'comments') {\n      data = cacheData.output;\n    } else {\n      data = {\n        source: cacheData.source,\n        extractedCommentsSource: cacheData.extractedCommentsSource,\n        commentsFilename: cacheData.commentsFilename\n      };\n    }\n\n    return this.cache.storePromise(cacheData.name, cacheData.eTag, data);\n  }\n\n}\n\nexports.default = Cache;"]},"metadata":{},"sourceType":"script"}