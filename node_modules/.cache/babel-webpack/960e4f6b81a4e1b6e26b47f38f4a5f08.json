{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getResourceUrl = exports.replaceResources = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ts = require(\"typescript\");\n\nfunction replaceResources(shouldTransform, getTypeChecker) {\n  var directTemplateLoading = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return function (context) {\n    var typeChecker = getTypeChecker();\n    var resourceImportDeclarations = [];\n    var moduleKind = context.getCompilerOptions().module;\n\n    var visitNode = function visitNode(node) {\n      if (ts.isClassDeclaration(node)) {\n        var decorators = ts.visitNodes(node.decorators, function (node) {\n          return ts.isDecorator(node) ? visitDecorator(node, typeChecker, directTemplateLoading, resourceImportDeclarations, moduleKind) : node;\n        });\n        return ts.updateClassDeclaration(node, decorators, node.modifiers, node.name, node.typeParameters, node.heritageClauses, node.members);\n      }\n\n      return ts.visitEachChild(node, visitNode, context);\n    };\n\n    return function (sourceFile) {\n      if (!shouldTransform(sourceFile.fileName)) {\n        return sourceFile;\n      }\n\n      var updatedSourceFile = ts.visitNode(sourceFile, visitNode);\n\n      if (resourceImportDeclarations.length) {\n        // Add resource imports\n        return ts.updateSourceFileNode(updatedSourceFile, ts.setTextRange(ts.createNodeArray([].concat(resourceImportDeclarations, _toConsumableArray(updatedSourceFile.statements))), updatedSourceFile.statements));\n      }\n\n      return updatedSourceFile;\n    };\n  };\n}\n\nexports.replaceResources = replaceResources;\n\nfunction visitDecorator(node, typeChecker, directTemplateLoading, resourceImportDeclarations, moduleKind) {\n  if (!isComponentDecorator(node, typeChecker)) {\n    return node;\n  }\n\n  if (!ts.isCallExpression(node.expression)) {\n    return node;\n  }\n\n  var decoratorFactory = node.expression;\n  var args = decoratorFactory.arguments;\n\n  if (args.length !== 1 || !ts.isObjectLiteralExpression(args[0])) {\n    // Unsupported component metadata\n    return node;\n  }\n\n  var objectExpression = args[0];\n  var styleReplacements = []; // visit all properties\n\n  var properties = ts.visitNodes(objectExpression.properties, function (node) {\n    return ts.isObjectLiteralElementLike(node) ? visitComponentMetadata(node, styleReplacements, directTemplateLoading, resourceImportDeclarations, moduleKind) : node;\n  }); // replace properties with updated properties\n\n  if (styleReplacements.length > 0) {\n    var styleProperty = ts.createPropertyAssignment(ts.createIdentifier('styles'), ts.createArrayLiteral(styleReplacements));\n    properties = ts.createNodeArray([].concat(_toConsumableArray(properties), [styleProperty]));\n  }\n\n  return ts.updateDecorator(node, ts.updateCall(decoratorFactory, decoratorFactory.expression, decoratorFactory.typeArguments, [ts.updateObjectLiteral(objectExpression, properties)]));\n}\n\nfunction visitComponentMetadata(node, styleReplacements, directTemplateLoading, resourceImportDeclarations, moduleKind) {\n  if (!ts.isPropertyAssignment(node) || ts.isComputedPropertyName(node.name)) {\n    return node;\n  }\n\n  var name = node.name.text;\n\n  switch (name) {\n    case 'moduleId':\n      return undefined;\n\n    case 'templateUrl':\n      var importName = createResourceImport(node.initializer, directTemplateLoading ? '!raw-loader!' : '', resourceImportDeclarations, moduleKind);\n\n      if (!importName) {\n        return node;\n      }\n\n      return ts.updatePropertyAssignment(node, ts.createIdentifier('template'), importName);\n\n    case 'styles':\n    case 'styleUrls':\n      if (!ts.isArrayLiteralExpression(node.initializer)) {\n        return node;\n      }\n\n      var isInlineStyles = name === 'styles';\n      var styles = ts.visitNodes(node.initializer.elements, function (node) {\n        if (!ts.isStringLiteral(node) && !ts.isNoSubstitutionTemplateLiteral(node)) {\n          return node;\n        }\n\n        if (isInlineStyles) {\n          return ts.createLiteral(node.text);\n        }\n\n        return createResourceImport(node, undefined, resourceImportDeclarations, moduleKind) || node;\n      }); // Styles should be placed first\n\n      if (isInlineStyles) {\n        styleReplacements.unshift.apply(styleReplacements, _toConsumableArray(styles));\n      } else {\n        styleReplacements.push.apply(styleReplacements, _toConsumableArray(styles));\n      }\n\n      return undefined;\n\n    default:\n      return node;\n  }\n}\n\nfunction getResourceUrl(node) {\n  var loader = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  // only analyze strings\n  if (!ts.isStringLiteral(node) && !ts.isNoSubstitutionTemplateLiteral(node)) {\n    return null;\n  }\n\n  return \"\".concat(loader).concat(/^\\.?\\.\\//.test(node.text) ? '' : './').concat(node.text);\n}\n\nexports.getResourceUrl = getResourceUrl;\n\nfunction isComponentDecorator(node, typeChecker) {\n  if (!ts.isDecorator(node)) {\n    return false;\n  }\n\n  var origin = getDecoratorOrigin(node, typeChecker);\n\n  if (origin && origin.module === '@angular/core' && origin.name === 'Component') {\n    return true;\n  }\n\n  return false;\n}\n\nfunction createResourceImport(node, loader, resourceImportDeclarations) {\n  var moduleKind = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ts.ModuleKind.ES2015;\n  var url = getResourceUrl(node, loader);\n\n  if (!url) {\n    return null;\n  }\n\n  var urlLiteral = ts.createLiteral(url);\n\n  if (moduleKind < ts.ModuleKind.ES2015) {\n    return ts.createPropertyAccess(ts.createCall(ts.createIdentifier('require'), [], [urlLiteral]), 'default');\n  } else {\n    var importName = ts.createIdentifier(\"__NG_CLI_RESOURCE__\".concat(resourceImportDeclarations.length));\n    resourceImportDeclarations.push(ts.createImportDeclaration(undefined, undefined, ts.createImportClause(importName, undefined), urlLiteral));\n    return importName;\n  }\n}\n\nfunction getDecoratorOrigin(decorator, typeChecker) {\n  if (!ts.isCallExpression(decorator.expression)) {\n    return null;\n  }\n\n  var identifier;\n  var name = '';\n\n  if (ts.isPropertyAccessExpression(decorator.expression.expression)) {\n    identifier = decorator.expression.expression.expression;\n    name = decorator.expression.expression.name.text;\n  } else if (ts.isIdentifier(decorator.expression.expression)) {\n    identifier = decorator.expression.expression;\n  } else {\n    return null;\n  } // NOTE: resolver.getReferencedImportDeclaration would work as well but is internal\n\n\n  var symbol = typeChecker.getSymbolAtLocation(identifier);\n\n  if (symbol && symbol.declarations && symbol.declarations.length > 0) {\n    var declaration = symbol.declarations[0];\n    var module;\n\n    if (ts.isImportSpecifier(declaration)) {\n      name = (declaration.propertyName || declaration.name).text;\n      module = declaration.parent.parent.parent.moduleSpecifier.text;\n    } else if (ts.isNamespaceImport(declaration)) {\n      // Use the name from the decorator namespace property access\n      module = declaration.parent.parent.moduleSpecifier.text;\n    } else if (ts.isImportClause(declaration)) {\n      name = declaration.name.text;\n      module = declaration.parent.moduleSpecifier.text;\n    } else {\n      return null;\n    }\n\n    return {\n      name: name,\n      module: module\n    };\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@ngtools/webpack/src/transformers/replace_resources.js"],"names":["Object","defineProperty","exports","value","getResourceUrl","replaceResources","ts","require","shouldTransform","getTypeChecker","directTemplateLoading","context","typeChecker","resourceImportDeclarations","moduleKind","getCompilerOptions","module","visitNode","node","isClassDeclaration","decorators","visitNodes","isDecorator","visitDecorator","updateClassDeclaration","modifiers","name","typeParameters","heritageClauses","members","visitEachChild","sourceFile","fileName","updatedSourceFile","length","updateSourceFileNode","setTextRange","createNodeArray","statements","isComponentDecorator","isCallExpression","expression","decoratorFactory","args","arguments","isObjectLiteralExpression","objectExpression","styleReplacements","properties","isObjectLiteralElementLike","visitComponentMetadata","styleProperty","createPropertyAssignment","createIdentifier","createArrayLiteral","updateDecorator","updateCall","typeArguments","updateObjectLiteral","isPropertyAssignment","isComputedPropertyName","text","undefined","importName","createResourceImport","initializer","updatePropertyAssignment","isArrayLiteralExpression","isInlineStyles","styles","elements","isStringLiteral","isNoSubstitutionTemplateLiteral","createLiteral","unshift","push","loader","test","origin","getDecoratorOrigin","ModuleKind","ES2015","url","urlLiteral","createPropertyAccess","createCall","createImportDeclaration","createImportClause","decorator","identifier","isPropertyAccessExpression","isIdentifier","symbol","getSymbolAtLocation","declarations","declaration","isImportSpecifier","propertyName","parent","moduleSpecifier","isNamespaceImport","isImportClause"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResourceUrl = exports.replaceResources = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ts = require(\"typescript\");\nfunction replaceResources(shouldTransform, getTypeChecker, directTemplateLoading = false) {\n    return (context) => {\n        const typeChecker = getTypeChecker();\n        const resourceImportDeclarations = [];\n        const moduleKind = context.getCompilerOptions().module;\n        const visitNode = (node) => {\n            if (ts.isClassDeclaration(node)) {\n                const decorators = ts.visitNodes(node.decorators, node => ts.isDecorator(node)\n                    ? visitDecorator(node, typeChecker, directTemplateLoading, resourceImportDeclarations, moduleKind)\n                    : node);\n                return ts.updateClassDeclaration(node, decorators, node.modifiers, node.name, node.typeParameters, node.heritageClauses, node.members);\n            }\n            return ts.visitEachChild(node, visitNode, context);\n        };\n        return (sourceFile) => {\n            if (!shouldTransform(sourceFile.fileName)) {\n                return sourceFile;\n            }\n            const updatedSourceFile = ts.visitNode(sourceFile, visitNode);\n            if (resourceImportDeclarations.length) {\n                // Add resource imports\n                return ts.updateSourceFileNode(updatedSourceFile, ts.setTextRange(ts.createNodeArray([\n                    ...resourceImportDeclarations,\n                    ...updatedSourceFile.statements,\n                ]), updatedSourceFile.statements));\n            }\n            return updatedSourceFile;\n        };\n    };\n}\nexports.replaceResources = replaceResources;\nfunction visitDecorator(node, typeChecker, directTemplateLoading, resourceImportDeclarations, moduleKind) {\n    if (!isComponentDecorator(node, typeChecker)) {\n        return node;\n    }\n    if (!ts.isCallExpression(node.expression)) {\n        return node;\n    }\n    const decoratorFactory = node.expression;\n    const args = decoratorFactory.arguments;\n    if (args.length !== 1 || !ts.isObjectLiteralExpression(args[0])) {\n        // Unsupported component metadata\n        return node;\n    }\n    const objectExpression = args[0];\n    const styleReplacements = [];\n    // visit all properties\n    let properties = ts.visitNodes(objectExpression.properties, node => ts.isObjectLiteralElementLike(node)\n        ? visitComponentMetadata(node, styleReplacements, directTemplateLoading, resourceImportDeclarations, moduleKind)\n        : node);\n    // replace properties with updated properties\n    if (styleReplacements.length > 0) {\n        const styleProperty = ts.createPropertyAssignment(ts.createIdentifier('styles'), ts.createArrayLiteral(styleReplacements));\n        properties = ts.createNodeArray([...properties, styleProperty]);\n    }\n    return ts.updateDecorator(node, ts.updateCall(decoratorFactory, decoratorFactory.expression, decoratorFactory.typeArguments, [\n        ts.updateObjectLiteral(objectExpression, properties),\n    ]));\n}\nfunction visitComponentMetadata(node, styleReplacements, directTemplateLoading, resourceImportDeclarations, moduleKind) {\n    if (!ts.isPropertyAssignment(node) || ts.isComputedPropertyName(node.name)) {\n        return node;\n    }\n    const name = node.name.text;\n    switch (name) {\n        case 'moduleId':\n            return undefined;\n        case 'templateUrl':\n            const importName = createResourceImport(node.initializer, directTemplateLoading ? '!raw-loader!' : '', resourceImportDeclarations, moduleKind);\n            if (!importName) {\n                return node;\n            }\n            return ts.updatePropertyAssignment(node, ts.createIdentifier('template'), importName);\n        case 'styles':\n        case 'styleUrls':\n            if (!ts.isArrayLiteralExpression(node.initializer)) {\n                return node;\n            }\n            const isInlineStyles = name === 'styles';\n            const styles = ts.visitNodes(node.initializer.elements, node => {\n                if (!ts.isStringLiteral(node) && !ts.isNoSubstitutionTemplateLiteral(node)) {\n                    return node;\n                }\n                if (isInlineStyles) {\n                    return ts.createLiteral(node.text);\n                }\n                return createResourceImport(node, undefined, resourceImportDeclarations, moduleKind) || node;\n            });\n            // Styles should be placed first\n            if (isInlineStyles) {\n                styleReplacements.unshift(...styles);\n            }\n            else {\n                styleReplacements.push(...styles);\n            }\n            return undefined;\n        default:\n            return node;\n    }\n}\nfunction getResourceUrl(node, loader = '') {\n    // only analyze strings\n    if (!ts.isStringLiteral(node) && !ts.isNoSubstitutionTemplateLiteral(node)) {\n        return null;\n    }\n    return `${loader}${/^\\.?\\.\\//.test(node.text) ? '' : './'}${node.text}`;\n}\nexports.getResourceUrl = getResourceUrl;\nfunction isComponentDecorator(node, typeChecker) {\n    if (!ts.isDecorator(node)) {\n        return false;\n    }\n    const origin = getDecoratorOrigin(node, typeChecker);\n    if (origin && origin.module === '@angular/core' && origin.name === 'Component') {\n        return true;\n    }\n    return false;\n}\nfunction createResourceImport(node, loader, resourceImportDeclarations, moduleKind = ts.ModuleKind.ES2015) {\n    const url = getResourceUrl(node, loader);\n    if (!url) {\n        return null;\n    }\n    const urlLiteral = ts.createLiteral(url);\n    if (moduleKind < ts.ModuleKind.ES2015) {\n        return ts.createPropertyAccess(ts.createCall(ts.createIdentifier('require'), [], [urlLiteral]), 'default');\n    }\n    else {\n        const importName = ts.createIdentifier(`__NG_CLI_RESOURCE__${resourceImportDeclarations.length}`);\n        resourceImportDeclarations.push(ts.createImportDeclaration(undefined, undefined, ts.createImportClause(importName, undefined), urlLiteral));\n        return importName;\n    }\n}\nfunction getDecoratorOrigin(decorator, typeChecker) {\n    if (!ts.isCallExpression(decorator.expression)) {\n        return null;\n    }\n    let identifier;\n    let name = '';\n    if (ts.isPropertyAccessExpression(decorator.expression.expression)) {\n        identifier = decorator.expression.expression.expression;\n        name = decorator.expression.expression.name.text;\n    }\n    else if (ts.isIdentifier(decorator.expression.expression)) {\n        identifier = decorator.expression.expression;\n    }\n    else {\n        return null;\n    }\n    // NOTE: resolver.getReferencedImportDeclaration would work as well but is internal\n    const symbol = typeChecker.getSymbolAtLocation(identifier);\n    if (symbol && symbol.declarations && symbol.declarations.length > 0) {\n        const declaration = symbol.declarations[0];\n        let module;\n        if (ts.isImportSpecifier(declaration)) {\n            name = (declaration.propertyName || declaration.name).text;\n            module = declaration.parent.parent.parent.moduleSpecifier.text;\n        }\n        else if (ts.isNamespaceImport(declaration)) {\n            // Use the name from the decorator namespace property access\n            module = declaration.parent.parent.moduleSpecifier.text;\n        }\n        else if (ts.isImportClause(declaration)) {\n            name = declaration.name.text;\n            module = declaration.parent.moduleSpecifier.text;\n        }\n        else {\n            return null;\n        }\n        return { name, module };\n    }\n    return null;\n}\n"]},"metadata":{},"sourceType":"script"}