{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar path = require(\"path\");\n\nmodule.exports = /*#__PURE__*/function () {\n  function MainFieldPlugin(source, options, target) {\n    _classCallCheck(this, MainFieldPlugin);\n\n    this.source = source;\n    this.options = options;\n    this.target = target;\n  }\n\n  _createClass(MainFieldPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"MainFieldPlugin\", function (request, resolveContext, callback) {\n        if (request.path !== request.descriptionFileRoot) return callback();\n        if (request.alreadyTriedMainField === request.descriptionFilePath) return callback();\n        var content = request.descriptionFileData;\n        var filename = path.basename(request.descriptionFilePath);\n        var mainModule;\n        var field = _this.options.name;\n\n        if (Array.isArray(field)) {\n          var current = content;\n\n          for (var j = 0; j < field.length; j++) {\n            if (current === null || typeof current !== \"object\") {\n              current = null;\n              break;\n            }\n\n            current = current[field[j]];\n          }\n\n          if (typeof current === \"string\") {\n            mainModule = current;\n          }\n        } else {\n          if (typeof content[field] === \"string\") {\n            mainModule = content[field];\n          }\n        }\n\n        if (!mainModule) return callback();\n        if (_this.options.forceRelative && !/^\\.\\.?\\//.test(mainModule)) mainModule = \"./\" + mainModule;\n        var obj = Object.assign({}, request, {\n          request: mainModule,\n          alreadyTriedMainField: request.descriptionFilePath\n        });\n        return resolver.doResolve(target, obj, \"use \" + mainModule + \" from \" + _this.options.name + \" in \" + filename, resolveContext, callback);\n      });\n    }\n  }]);\n\n  return MainFieldPlugin;\n}();","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/node_modules/enhanced-resolve/lib/MainFieldPlugin.js"],"names":["path","require","module","exports","source","options","target","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","descriptionFileRoot","alreadyTriedMainField","descriptionFilePath","content","descriptionFileData","filename","basename","mainModule","field","name","Array","isArray","current","j","length","forceRelative","test","obj","Object","assign","doResolve"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEAC,MAAM,CAACC,OAAP;AACC,2BAAYC,MAAZ,EAAoBC,OAApB,EAA6BC,MAA7B,EAAqC;AAAA;;AACpC,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA;;AALF;AAAA;AAAA,WAOC,eAAMC,QAAN,EAAgB;AAAA;;AACf,UAAMD,MAAM,GAAGC,QAAQ,CAACC,UAAT,CAAoB,KAAKF,MAAzB,CAAf;AACAC,MAAAA,QAAQ,CACNE,OADF,CACU,KAAKL,MADf,EAEEM,QAFF,CAEW,iBAFX,EAE8B,UAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,EAAuC;AACnE,YAAIF,OAAO,CAACX,IAAR,KAAiBW,OAAO,CAACG,mBAA7B,EAAkD,OAAOD,QAAQ,EAAf;AAClD,YAAIF,OAAO,CAACI,qBAAR,KAAkCJ,OAAO,CAACK,mBAA9C,EACC,OAAOH,QAAQ,EAAf;AACD,YAAMI,OAAO,GAAGN,OAAO,CAACO,mBAAxB;AACA,YAAMC,QAAQ,GAAGnB,IAAI,CAACoB,QAAL,CAAcT,OAAO,CAACK,mBAAtB,CAAjB;AACA,YAAIK,UAAJ;AACA,YAAMC,KAAK,GAAG,KAAI,CAACjB,OAAL,CAAakB,IAA3B;;AACA,YAAIC,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAJ,EAA0B;AACzB,cAAII,OAAO,GAAGT,OAAd;;AACA,eAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACtC,gBAAID,OAAO,KAAK,IAAZ,IAAoB,OAAOA,OAAP,KAAmB,QAA3C,EAAqD;AACpDA,cAAAA,OAAO,GAAG,IAAV;AACA;AACA;;AACDA,YAAAA,OAAO,GAAGA,OAAO,CAACJ,KAAK,CAACK,CAAD,CAAN,CAAjB;AACA;;AACD,cAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;AAChCL,YAAAA,UAAU,GAAGK,OAAb;AACA;AACD,SAZD,MAYO;AACN,cAAI,OAAOT,OAAO,CAACK,KAAD,CAAd,KAA0B,QAA9B,EAAwC;AACvCD,YAAAA,UAAU,GAAGJ,OAAO,CAACK,KAAD,CAApB;AACA;AACD;;AACD,YAAI,CAACD,UAAL,EAAiB,OAAOR,QAAQ,EAAf;AACjB,YAAI,KAAI,CAACR,OAAL,CAAawB,aAAb,IAA8B,CAAC,WAAWC,IAAX,CAAgBT,UAAhB,CAAnC,EACCA,UAAU,GAAG,OAAOA,UAApB;AACD,YAAMU,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBtB,OAAlB,EAA2B;AACtCA,UAAAA,OAAO,EAAEU,UAD6B;AAEtCN,UAAAA,qBAAqB,EAAEJ,OAAO,CAACK;AAFO,SAA3B,CAAZ;AAIA,eAAOT,QAAQ,CAAC2B,SAAT,CACN5B,MADM,EAENyB,GAFM,EAGN,SACCV,UADD,GAEC,QAFD,GAGC,KAAI,CAAChB,OAAL,CAAakB,IAHd,GAIC,MAJD,GAKCJ,QARK,EASNP,cATM,EAUNC,QAVM,CAAP;AAYA,OA9CF;AA+CA;AAxDF;;AAAA;AAAA","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\n\nmodule.exports = class MainFieldPlugin {\n\tconstructor(source, options, target) {\n\t\tthis.source = source;\n\t\tthis.options = options;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MainFieldPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (request.path !== request.descriptionFileRoot) return callback();\n\t\t\t\tif (request.alreadyTriedMainField === request.descriptionFilePath)\n\t\t\t\t\treturn callback();\n\t\t\t\tconst content = request.descriptionFileData;\n\t\t\t\tconst filename = path.basename(request.descriptionFilePath);\n\t\t\t\tlet mainModule;\n\t\t\t\tconst field = this.options.name;\n\t\t\t\tif (Array.isArray(field)) {\n\t\t\t\t\tlet current = content;\n\t\t\t\t\tfor (let j = 0; j < field.length; j++) {\n\t\t\t\t\t\tif (current === null || typeof current !== \"object\") {\n\t\t\t\t\t\t\tcurrent = null;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrent = current[field[j]];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof current === \"string\") {\n\t\t\t\t\t\tmainModule = current;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (typeof content[field] === \"string\") {\n\t\t\t\t\t\tmainModule = content[field];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!mainModule) return callback();\n\t\t\t\tif (this.options.forceRelative && !/^\\.\\.?\\//.test(mainModule))\n\t\t\t\t\tmainModule = \"./\" + mainModule;\n\t\t\t\tconst obj = Object.assign({}, request, {\n\t\t\t\t\trequest: mainModule,\n\t\t\t\t\talreadyTriedMainField: request.descriptionFilePath\n\t\t\t\t});\n\t\t\t\treturn resolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"use \" +\n\t\t\t\t\t\tmainModule +\n\t\t\t\t\t\t\" from \" +\n\t\t\t\t\t\tthis.options.name +\n\t\t\t\t\t\t\" in \" +\n\t\t\t\t\t\tfilename,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}