{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n/*\n<rules>: <rule>\n<rules>: [<rule>]\n<rule>: {\n\tresource: {\n\t\ttest: <condition>,\n\t\tinclude: <condition>,\n\t\texclude: <condition>,\n\t},\n\tresource: <condition>, -> resource.test\n\ttest: <condition>, -> resource.test\n\tinclude: <condition>, -> resource.include\n\texclude: <condition>, -> resource.exclude\n\tresourceQuery: <condition>,\n\tcompiler: <condition>,\n\tissuer: <condition>,\n\tuse: \"loader\", -> use[0].loader\n\tloader: <>, -> use[0].loader\n\tloaders: <>, -> use\n\toptions: {}, -> use[0].options,\n\tquery: {}, -> options\n\tparser: {},\n\tuse: [\n\t\t\"loader\" -> use[x].loader\n\t],\n\tuse: [\n\t\t{\n\t\t\tloader: \"loader\",\n\t\t\toptions: {}\n\t\t}\n\t],\n\trules: [\n\t\t<rule>\n\t],\n\toneOf: [\n\t\t<rule>\n\t]\n}\n\n<condition>: /regExp/\n<condition>: function(arg) {}\n<condition>: \"starting\"\n<condition>: [<condition>] // or\n<condition>: { and: [<condition>] }\n<condition>: { or: [<condition>] }\n<condition>: { not: [<condition>] }\n<condition>: { test: <condition>, include: <condition>, exclude: <condition> }\n\n\nnormalized:\n\n{\n\tresource: function(),\n\tresourceQuery: function(),\n\tcompiler: function(),\n\tissuer: function(),\n\tuse: [\n\t\t{\n\t\t\tloader: string,\n\t\t\toptions: string,\n\t\t\t<any>: <any>\n\t\t}\n\t],\n\trules: [<rule>],\n\toneOf: [<rule>],\n\t<any>: <any>,\n}\n\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar notMatcher = function notMatcher(matcher) {\n  return function (str) {\n    return !matcher(str);\n  };\n};\n\nvar orMatcher = function orMatcher(items) {\n  return function (str) {\n    for (var i = 0; i < items.length; i++) {\n      if (items[i](str)) return true;\n    }\n\n    return false;\n  };\n};\n\nvar andMatcher = function andMatcher(items) {\n  return function (str) {\n    for (var i = 0; i < items.length; i++) {\n      if (!items[i](str)) return false;\n    }\n\n    return true;\n  };\n};\n\nmodule.exports = /*#__PURE__*/function () {\n  function RuleSet(rules) {\n    _classCallCheck(this, RuleSet);\n\n    this.references = Object.create(null);\n    this.rules = RuleSet.normalizeRules(rules, this.references, \"ref-\");\n  }\n\n  _createClass(RuleSet, [{\n    key: \"exec\",\n    value: function exec(data) {\n      var result = [];\n\n      this._run(data, {\n        rules: this.rules\n      }, result);\n\n      return result;\n    }\n  }, {\n    key: \"_run\",\n    value: function _run(data, rule, result) {\n      // test conditions\n      if (rule.resource && !data.resource) return false;\n      if (rule.realResource && !data.realResource) return false;\n      if (rule.resourceQuery && !data.resourceQuery) return false;\n      if (rule.compiler && !data.compiler) return false;\n      if (rule.issuer && !data.issuer) return false;\n      if (rule.resource && !rule.resource(data.resource)) return false;\n      if (rule.realResource && !rule.realResource(data.realResource)) return false;\n      if (data.issuer && rule.issuer && !rule.issuer(data.issuer)) return false;\n\n      if (data.resourceQuery && rule.resourceQuery && !rule.resourceQuery(data.resourceQuery)) {\n        return false;\n      }\n\n      if (data.compiler && rule.compiler && !rule.compiler(data.compiler)) {\n        return false;\n      } // apply\n\n\n      var keys = Object.keys(rule).filter(function (key) {\n        return ![\"resource\", \"realResource\", \"resourceQuery\", \"compiler\", \"issuer\", \"rules\", \"oneOf\", \"use\", \"enforce\"].includes(key);\n      });\n\n      var _iterator = _createForOfIteratorHelper(keys),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var key = _step.value;\n          result.push({\n            type: key,\n            value: rule[key]\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (rule.use) {\n        var process = function process(use) {\n          if (typeof use === \"function\") {\n            process(use(data));\n          } else if (Array.isArray(use)) {\n            use.forEach(process);\n          } else {\n            result.push({\n              type: \"use\",\n              value: use,\n              enforce: rule.enforce\n            });\n          }\n        };\n\n        process(rule.use);\n      }\n\n      if (rule.rules) {\n        for (var i = 0; i < rule.rules.length; i++) {\n          this._run(data, rule.rules[i], result);\n        }\n      }\n\n      if (rule.oneOf) {\n        for (var _i = 0; _i < rule.oneOf.length; _i++) {\n          if (this._run(data, rule.oneOf[_i], result)) break;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"findOptionsByIdent\",\n    value: function findOptionsByIdent(ident) {\n      var options = this.references[ident];\n\n      if (!options) {\n        throw new Error(\"Can't find options with ident '\" + ident + \"'\");\n      }\n\n      return options;\n    }\n  }], [{\n    key: \"normalizeRules\",\n    value: function normalizeRules(rules, refs, ident) {\n      if (Array.isArray(rules)) {\n        return rules.map(function (rule, idx) {\n          return RuleSet.normalizeRule(rule, refs, \"\".concat(ident, \"-\").concat(idx));\n        });\n      } else if (rules) {\n        return [RuleSet.normalizeRule(rules, refs, ident)];\n      } else {\n        return [];\n      }\n    }\n  }, {\n    key: \"normalizeRule\",\n    value: function normalizeRule(rule, refs, ident) {\n      if (typeof rule === \"string\") {\n        return {\n          use: [{\n            loader: rule\n          }]\n        };\n      }\n\n      if (!rule) {\n        throw new Error(\"Unexcepted null when object was expected as rule\");\n      }\n\n      if (typeof rule !== \"object\") {\n        throw new Error(\"Unexcepted \" + typeof rule + \" when object was expected as rule (\" + rule + \")\");\n      }\n\n      var newRule = {};\n      var useSource;\n      var resourceSource;\n      var condition;\n\n      var checkUseSource = function checkUseSource(newSource) {\n        if (useSource && useSource !== newSource) {\n          throw new Error(RuleSet.buildErrorMessage(rule, new Error(\"Rule can only have one result source (provided \" + newSource + \" and \" + useSource + \")\")));\n        }\n\n        useSource = newSource;\n      };\n\n      var checkResourceSource = function checkResourceSource(newSource) {\n        if (resourceSource && resourceSource !== newSource) {\n          throw new Error(RuleSet.buildErrorMessage(rule, new Error(\"Rule can only have one resource source (provided \" + newSource + \" and \" + resourceSource + \")\")));\n        }\n\n        resourceSource = newSource;\n      };\n\n      if (rule.test || rule.include || rule.exclude) {\n        checkResourceSource(\"test + include + exclude\");\n        condition = {\n          test: rule.test,\n          include: rule.include,\n          exclude: rule.exclude\n        };\n\n        try {\n          newRule.resource = RuleSet.normalizeCondition(condition);\n        } catch (error) {\n          throw new Error(RuleSet.buildErrorMessage(condition, error));\n        }\n      }\n\n      if (rule.resource) {\n        checkResourceSource(\"resource\");\n\n        try {\n          newRule.resource = RuleSet.normalizeCondition(rule.resource);\n        } catch (error) {\n          throw new Error(RuleSet.buildErrorMessage(rule.resource, error));\n        }\n      }\n\n      if (rule.realResource) {\n        try {\n          newRule.realResource = RuleSet.normalizeCondition(rule.realResource);\n        } catch (error) {\n          throw new Error(RuleSet.buildErrorMessage(rule.realResource, error));\n        }\n      }\n\n      if (rule.resourceQuery) {\n        try {\n          newRule.resourceQuery = RuleSet.normalizeCondition(rule.resourceQuery);\n        } catch (error) {\n          throw new Error(RuleSet.buildErrorMessage(rule.resourceQuery, error));\n        }\n      }\n\n      if (rule.compiler) {\n        try {\n          newRule.compiler = RuleSet.normalizeCondition(rule.compiler);\n        } catch (error) {\n          throw new Error(RuleSet.buildErrorMessage(rule.compiler, error));\n        }\n      }\n\n      if (rule.issuer) {\n        try {\n          newRule.issuer = RuleSet.normalizeCondition(rule.issuer);\n        } catch (error) {\n          throw new Error(RuleSet.buildErrorMessage(rule.issuer, error));\n        }\n      }\n\n      if (rule.loader && rule.loaders) {\n        throw new Error(RuleSet.buildErrorMessage(rule, new Error(\"Provided loader and loaders for rule (use only one of them)\")));\n      }\n\n      var loader = rule.loaders || rule.loader;\n\n      if (typeof loader === \"string\" && !rule.options && !rule.query) {\n        checkUseSource(\"loader\");\n        newRule.use = RuleSet.normalizeUse(loader.split(\"!\"), ident);\n      } else if (typeof loader === \"string\" && (rule.options || rule.query)) {\n        checkUseSource(\"loader + options/query\");\n        newRule.use = RuleSet.normalizeUse({\n          loader: loader,\n          options: rule.options,\n          query: rule.query\n        }, ident);\n      } else if (loader && (rule.options || rule.query)) {\n        throw new Error(RuleSet.buildErrorMessage(rule, new Error(\"options/query cannot be used with loaders (use options for each array item)\")));\n      } else if (loader) {\n        checkUseSource(\"loaders\");\n        newRule.use = RuleSet.normalizeUse(loader, ident);\n      } else if (rule.options || rule.query) {\n        throw new Error(RuleSet.buildErrorMessage(rule, new Error(\"options/query provided without loader (use loader + options)\")));\n      }\n\n      if (rule.use) {\n        checkUseSource(\"use\");\n        newRule.use = RuleSet.normalizeUse(rule.use, ident);\n      }\n\n      if (rule.rules) {\n        newRule.rules = RuleSet.normalizeRules(rule.rules, refs, \"\".concat(ident, \"-rules\"));\n      }\n\n      if (rule.oneOf) {\n        newRule.oneOf = RuleSet.normalizeRules(rule.oneOf, refs, \"\".concat(ident, \"-oneOf\"));\n      }\n\n      var keys = Object.keys(rule).filter(function (key) {\n        return ![\"resource\", \"resourceQuery\", \"compiler\", \"test\", \"include\", \"exclude\", \"issuer\", \"loader\", \"options\", \"query\", \"loaders\", \"use\", \"rules\", \"oneOf\"].includes(key);\n      });\n\n      var _iterator2 = _createForOfIteratorHelper(keys),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var key = _step2.value;\n          newRule[key] = rule[key];\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      if (Array.isArray(newRule.use)) {\n        var _iterator3 = _createForOfIteratorHelper(newRule.use),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var item = _step3.value;\n\n            if (item.ident) {\n              refs[item.ident] = item.options;\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n\n      return newRule;\n    }\n  }, {\n    key: \"buildErrorMessage\",\n    value: function buildErrorMessage(condition, error) {\n      var conditionAsText = JSON.stringify(condition, function (key, value) {\n        return value === undefined ? \"undefined\" : value;\n      }, 2);\n      return error.message + \" in \" + conditionAsText;\n    }\n  }, {\n    key: \"normalizeUse\",\n    value: function normalizeUse(use, ident) {\n      if (typeof use === \"function\") {\n        return function (data) {\n          return RuleSet.normalizeUse(use(data), ident);\n        };\n      }\n\n      if (Array.isArray(use)) {\n        return use.map(function (item, idx) {\n          return RuleSet.normalizeUse(item, \"\".concat(ident, \"-\").concat(idx));\n        }).reduce(function (arr, items) {\n          return arr.concat(items);\n        }, []);\n      }\n\n      return [RuleSet.normalizeUseItem(use, ident)];\n    }\n  }, {\n    key: \"normalizeUseItemString\",\n    value: function normalizeUseItemString(useItemString) {\n      var idx = useItemString.indexOf(\"?\");\n\n      if (idx >= 0) {\n        return {\n          loader: useItemString.substr(0, idx),\n          options: useItemString.substr(idx + 1)\n        };\n      }\n\n      return {\n        loader: useItemString,\n        options: undefined\n      };\n    }\n  }, {\n    key: \"normalizeUseItem\",\n    value: function normalizeUseItem(item, ident) {\n      if (typeof item === \"string\") {\n        return RuleSet.normalizeUseItemString(item);\n      }\n\n      var newItem = {};\n\n      if (item.options && item.query) {\n        throw new Error(\"Provided options and query in use\");\n      }\n\n      if (!item.loader) {\n        throw new Error(\"No loader specified\");\n      }\n\n      newItem.options = item.options || item.query;\n\n      if (typeof newItem.options === \"object\" && newItem.options) {\n        if (newItem.options.ident) {\n          newItem.ident = newItem.options.ident;\n        } else {\n          newItem.ident = ident;\n        }\n      }\n\n      var keys = Object.keys(item).filter(function (key) {\n        return ![\"options\", \"query\"].includes(key);\n      });\n\n      var _iterator4 = _createForOfIteratorHelper(keys),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var key = _step4.value;\n          newItem[key] = item[key];\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return newItem;\n    }\n  }, {\n    key: \"normalizeCondition\",\n    value: function normalizeCondition(condition) {\n      if (!condition) throw new Error(\"Expected condition but got falsy value\");\n\n      if (typeof condition === \"string\") {\n        return function (str) {\n          return str.indexOf(condition) === 0;\n        };\n      }\n\n      if (typeof condition === \"function\") {\n        return condition;\n      }\n\n      if (condition instanceof RegExp) {\n        return condition.test.bind(condition);\n      }\n\n      if (Array.isArray(condition)) {\n        var items = condition.map(function (c) {\n          return RuleSet.normalizeCondition(c);\n        });\n        return orMatcher(items);\n      }\n\n      if (typeof condition !== \"object\") {\n        throw Error(\"Unexcepted \" + typeof condition + \" when condition was expected (\" + condition + \")\");\n      }\n\n      var matchers = [];\n      Object.keys(condition).forEach(function (key) {\n        var value = condition[key];\n\n        switch (key) {\n          case \"or\":\n          case \"include\":\n          case \"test\":\n            if (value) matchers.push(RuleSet.normalizeCondition(value));\n            break;\n\n          case \"and\":\n            if (value) {\n              var _items = value.map(function (c) {\n                return RuleSet.normalizeCondition(c);\n              });\n\n              matchers.push(andMatcher(_items));\n            }\n\n            break;\n\n          case \"not\":\n          case \"exclude\":\n            if (value) {\n              var matcher = RuleSet.normalizeCondition(value);\n              matchers.push(notMatcher(matcher));\n            }\n\n            break;\n\n          default:\n            throw new Error(\"Unexcepted property \" + key + \" in condition\");\n        }\n      });\n\n      if (matchers.length === 0) {\n        throw new Error(\"Excepted condition but got \" + condition);\n      }\n\n      if (matchers.length === 1) {\n        return matchers[0];\n      }\n\n      return andMatcher(matchers);\n    }\n  }]);\n\n  return RuleSet;\n}();","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/RuleSet.js"],"names":["notMatcher","matcher","str","orMatcher","items","i","length","andMatcher","module","exports","rules","references","Object","create","RuleSet","normalizeRules","data","result","_run","rule","resource","realResource","resourceQuery","compiler","issuer","keys","filter","key","includes","push","type","value","use","process","Array","isArray","forEach","enforce","oneOf","ident","options","Error","refs","map","idx","normalizeRule","loader","newRule","useSource","resourceSource","condition","checkUseSource","newSource","buildErrorMessage","checkResourceSource","test","include","exclude","normalizeCondition","error","loaders","query","normalizeUse","split","item","conditionAsText","JSON","stringify","undefined","message","reduce","arr","concat","normalizeUseItem","useItemString","indexOf","substr","normalizeUseItemString","newItem","RegExp","bind","c","matchers"],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAAC,OAAO,EAAI;AAC7B,SAAO,UAAAC,GAAG,EAAI;AACb,WAAO,CAACD,OAAO,CAACC,GAAD,CAAf;AACA,GAFD;AAGA,CAJD;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAC1B,SAAO,UAAAF,GAAG,EAAI;AACb,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACtC,UAAID,KAAK,CAACC,CAAD,CAAL,CAASH,GAAT,CAAJ,EAAmB,OAAO,IAAP;AACnB;;AACD,WAAO,KAAP;AACA,GALD;AAMA,CAPD;;AASA,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAAAH,KAAK,EAAI;AAC3B,SAAO,UAAAF,GAAG,EAAI;AACb,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACtC,UAAI,CAACD,KAAK,CAACC,CAAD,CAAL,CAASH,GAAT,CAAL,EAAoB,OAAO,KAAP;AACpB;;AACD,WAAO,IAAP;AACA,GALD;AAMA,CAPD;;AASAM,MAAM,CAACC,OAAP;AACC,mBAAYC,KAAZ,EAAmB;AAAA;;AAClB,SAAKC,UAAL,GAAkBC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAlB;AACA,SAAKH,KAAL,GAAaI,OAAO,CAACC,cAAR,CAAuBL,KAAvB,EAA8B,KAAKC,UAAnC,EAA+C,MAA/C,CAAb;AACA;;AAJF;AAAA;AAAA,WAoXC,cAAKK,IAAL,EAAW;AACV,UAAMC,MAAM,GAAG,EAAf;;AACA,WAAKC,IAAL,CACCF,IADD,EAEC;AACCN,QAAAA,KAAK,EAAE,KAAKA;AADb,OAFD,EAKCO,MALD;;AAOA,aAAOA,MAAP;AACA;AA9XF;AAAA;AAAA,WAgYC,cAAKD,IAAL,EAAWG,IAAX,EAAiBF,MAAjB,EAAyB;AACxB;AACA,UAAIE,IAAI,CAACC,QAAL,IAAiB,CAACJ,IAAI,CAACI,QAA3B,EAAqC,OAAO,KAAP;AACrC,UAAID,IAAI,CAACE,YAAL,IAAqB,CAACL,IAAI,CAACK,YAA/B,EAA6C,OAAO,KAAP;AAC7C,UAAIF,IAAI,CAACG,aAAL,IAAsB,CAACN,IAAI,CAACM,aAAhC,EAA+C,OAAO,KAAP;AAC/C,UAAIH,IAAI,CAACI,QAAL,IAAiB,CAACP,IAAI,CAACO,QAA3B,EAAqC,OAAO,KAAP;AACrC,UAAIJ,IAAI,CAACK,MAAL,IAAe,CAACR,IAAI,CAACQ,MAAzB,EAAiC,OAAO,KAAP;AACjC,UAAIL,IAAI,CAACC,QAAL,IAAiB,CAACD,IAAI,CAACC,QAAL,CAAcJ,IAAI,CAACI,QAAnB,CAAtB,EAAoD,OAAO,KAAP;AACpD,UAAID,IAAI,CAACE,YAAL,IAAqB,CAACF,IAAI,CAACE,YAAL,CAAkBL,IAAI,CAACK,YAAvB,CAA1B,EACC,OAAO,KAAP;AACD,UAAIL,IAAI,CAACQ,MAAL,IAAeL,IAAI,CAACK,MAApB,IAA8B,CAACL,IAAI,CAACK,MAAL,CAAYR,IAAI,CAACQ,MAAjB,CAAnC,EAA6D,OAAO,KAAP;;AAC7D,UACCR,IAAI,CAACM,aAAL,IACAH,IAAI,CAACG,aADL,IAEA,CAACH,IAAI,CAACG,aAAL,CAAmBN,IAAI,CAACM,aAAxB,CAHF,EAIE;AACD,eAAO,KAAP;AACA;;AACD,UAAIN,IAAI,CAACO,QAAL,IAAiBJ,IAAI,CAACI,QAAtB,IAAkC,CAACJ,IAAI,CAACI,QAAL,CAAcP,IAAI,CAACO,QAAnB,CAAvC,EAAqE;AACpE,eAAO,KAAP;AACA,OApBuB,CAsBxB;;;AACA,UAAME,IAAI,GAAGb,MAAM,CAACa,IAAP,CAAYN,IAAZ,EAAkBO,MAAlB,CAAyB,UAAAC,GAAG,EAAI;AAC5C,eAAO,CAAC,CACP,UADO,EAEP,cAFO,EAGP,eAHO,EAIP,UAJO,EAKP,QALO,EAMP,OANO,EAOP,OAPO,EAQP,KARO,EASP,SATO,EAUNC,QAVM,CAUGD,GAVH,CAAR;AAWA,OAZY,CAAb;;AAvBwB,iDAoCNF,IApCM;AAAA;;AAAA;AAoCxB,4DAAwB;AAAA,cAAbE,GAAa;AACvBV,UAAAA,MAAM,CAACY,IAAP,CAAY;AACXC,YAAAA,IAAI,EAAEH,GADK;AAEXI,YAAAA,KAAK,EAAEZ,IAAI,CAACQ,GAAD;AAFA,WAAZ;AAIA;AAzCuB;AAAA;AAAA;AAAA;AAAA;;AA2CxB,UAAIR,IAAI,CAACa,GAAT,EAAc;AACb,YAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAD,GAAG,EAAI;AACtB,cAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;AAC9BC,YAAAA,OAAO,CAACD,GAAG,CAAChB,IAAD,CAAJ,CAAP;AACA,WAFD,MAEO,IAAIkB,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAJ,EAAwB;AAC9BA,YAAAA,GAAG,CAACI,OAAJ,CAAYH,OAAZ;AACA,WAFM,MAEA;AACNhB,YAAAA,MAAM,CAACY,IAAP,CAAY;AACXC,cAAAA,IAAI,EAAE,KADK;AAEXC,cAAAA,KAAK,EAAEC,GAFI;AAGXK,cAAAA,OAAO,EAAElB,IAAI,CAACkB;AAHH,aAAZ;AAKA;AACD,SAZD;;AAaAJ,QAAAA,OAAO,CAACd,IAAI,CAACa,GAAN,CAAP;AACA;;AAED,UAAIb,IAAI,CAACT,KAAT,EAAgB;AACf,aAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGc,IAAI,CAACT,KAAL,CAAWJ,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC3C,eAAKa,IAAL,CAAUF,IAAV,EAAgBG,IAAI,CAACT,KAAL,CAAWL,CAAX,CAAhB,EAA+BY,MAA/B;AACA;AACD;;AAED,UAAIE,IAAI,CAACmB,KAAT,EAAgB;AACf,aAAK,IAAIjC,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGc,IAAI,CAACmB,KAAL,CAAWhC,MAA/B,EAAuCD,EAAC,EAAxC,EAA4C;AAC3C,cAAI,KAAKa,IAAL,CAAUF,IAAV,EAAgBG,IAAI,CAACmB,KAAL,CAAWjC,EAAX,CAAhB,EAA+BY,MAA/B,CAAJ,EAA4C;AAC5C;AACD;;AAED,aAAO,IAAP;AACA;AAzcF;AAAA;AAAA,WA2cC,4BAAmBsB,KAAnB,EAA0B;AACzB,UAAMC,OAAO,GAAG,KAAK7B,UAAL,CAAgB4B,KAAhB,CAAhB;;AACA,UAAI,CAACC,OAAL,EAAc;AACb,cAAM,IAAIC,KAAJ,CAAU,oCAAoCF,KAApC,GAA4C,GAAtD,CAAN;AACA;;AACD,aAAOC,OAAP;AACA;AAjdF;AAAA;AAAA,WAMC,wBAAsB9B,KAAtB,EAA6BgC,IAA7B,EAAmCH,KAAnC,EAA0C;AACzC,UAAIL,KAAK,CAACC,OAAN,CAAczB,KAAd,CAAJ,EAA0B;AACzB,eAAOA,KAAK,CAACiC,GAAN,CAAU,UAACxB,IAAD,EAAOyB,GAAP,EAAe;AAC/B,iBAAO9B,OAAO,CAAC+B,aAAR,CAAsB1B,IAAtB,EAA4BuB,IAA5B,YAAqCH,KAArC,cAA8CK,GAA9C,EAAP;AACA,SAFM,CAAP;AAGA,OAJD,MAIO,IAAIlC,KAAJ,EAAW;AACjB,eAAO,CAACI,OAAO,CAAC+B,aAAR,CAAsBnC,KAAtB,EAA6BgC,IAA7B,EAAmCH,KAAnC,CAAD,CAAP;AACA,OAFM,MAEA;AACN,eAAO,EAAP;AACA;AACD;AAhBF;AAAA;AAAA,WAkBC,uBAAqBpB,IAArB,EAA2BuB,IAA3B,EAAiCH,KAAjC,EAAwC;AACvC,UAAI,OAAOpB,IAAP,KAAgB,QAApB,EAA8B;AAC7B,eAAO;AACNa,UAAAA,GAAG,EAAE,CACJ;AACCc,YAAAA,MAAM,EAAE3B;AADT,WADI;AADC,SAAP;AAOA;;AACD,UAAI,CAACA,IAAL,EAAW;AACV,cAAM,IAAIsB,KAAJ,CAAU,kDAAV,CAAN;AACA;;AACD,UAAI,OAAOtB,IAAP,KAAgB,QAApB,EAA8B;AAC7B,cAAM,IAAIsB,KAAJ,CACL,gBACC,OAAOtB,IADR,GAEC,qCAFD,GAGCA,IAHD,GAIC,GALI,CAAN;AAOA;;AAED,UAAM4B,OAAO,GAAG,EAAhB;AACA,UAAIC,SAAJ;AACA,UAAIC,cAAJ;AACA,UAAIC,SAAJ;;AAEA,UAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,SAAS,EAAI;AACnC,YAAIJ,SAAS,IAAIA,SAAS,KAAKI,SAA/B,EAA0C;AACzC,gBAAM,IAAIX,KAAJ,CACL3B,OAAO,CAACuC,iBAAR,CACClC,IADD,EAEC,IAAIsB,KAAJ,CACC,oDACCW,SADD,GAEC,OAFD,GAGCJ,SAHD,GAIC,GALF,CAFD,CADK,CAAN;AAYA;;AACDA,QAAAA,SAAS,GAAGI,SAAZ;AACA,OAhBD;;AAkBA,UAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAF,SAAS,EAAI;AACxC,YAAIH,cAAc,IAAIA,cAAc,KAAKG,SAAzC,EAAoD;AACnD,gBAAM,IAAIX,KAAJ,CACL3B,OAAO,CAACuC,iBAAR,CACClC,IADD,EAEC,IAAIsB,KAAJ,CACC,sDACCW,SADD,GAEC,OAFD,GAGCH,cAHD,GAIC,GALF,CAFD,CADK,CAAN;AAYA;;AACDA,QAAAA,cAAc,GAAGG,SAAjB;AACA,OAhBD;;AAkBA,UAAIjC,IAAI,CAACoC,IAAL,IAAapC,IAAI,CAACqC,OAAlB,IAA6BrC,IAAI,CAACsC,OAAtC,EAA+C;AAC9CH,QAAAA,mBAAmB,CAAC,0BAAD,CAAnB;AACAJ,QAAAA,SAAS,GAAG;AACXK,UAAAA,IAAI,EAAEpC,IAAI,CAACoC,IADA;AAEXC,UAAAA,OAAO,EAAErC,IAAI,CAACqC,OAFH;AAGXC,UAAAA,OAAO,EAAEtC,IAAI,CAACsC;AAHH,SAAZ;;AAKA,YAAI;AACHV,UAAAA,OAAO,CAAC3B,QAAR,GAAmBN,OAAO,CAAC4C,kBAAR,CAA2BR,SAA3B,CAAnB;AACA,SAFD,CAEE,OAAOS,KAAP,EAAc;AACf,gBAAM,IAAIlB,KAAJ,CAAU3B,OAAO,CAACuC,iBAAR,CAA0BH,SAA1B,EAAqCS,KAArC,CAAV,CAAN;AACA;AACD;;AAED,UAAIxC,IAAI,CAACC,QAAT,EAAmB;AAClBkC,QAAAA,mBAAmB,CAAC,UAAD,CAAnB;;AACA,YAAI;AACHP,UAAAA,OAAO,CAAC3B,QAAR,GAAmBN,OAAO,CAAC4C,kBAAR,CAA2BvC,IAAI,CAACC,QAAhC,CAAnB;AACA,SAFD,CAEE,OAAOuC,KAAP,EAAc;AACf,gBAAM,IAAIlB,KAAJ,CAAU3B,OAAO,CAACuC,iBAAR,CAA0BlC,IAAI,CAACC,QAA/B,EAAyCuC,KAAzC,CAAV,CAAN;AACA;AACD;;AAED,UAAIxC,IAAI,CAACE,YAAT,EAAuB;AACtB,YAAI;AACH0B,UAAAA,OAAO,CAAC1B,YAAR,GAAuBP,OAAO,CAAC4C,kBAAR,CAA2BvC,IAAI,CAACE,YAAhC,CAAvB;AACA,SAFD,CAEE,OAAOsC,KAAP,EAAc;AACf,gBAAM,IAAIlB,KAAJ,CAAU3B,OAAO,CAACuC,iBAAR,CAA0BlC,IAAI,CAACE,YAA/B,EAA6CsC,KAA7C,CAAV,CAAN;AACA;AACD;;AAED,UAAIxC,IAAI,CAACG,aAAT,EAAwB;AACvB,YAAI;AACHyB,UAAAA,OAAO,CAACzB,aAAR,GAAwBR,OAAO,CAAC4C,kBAAR,CAA2BvC,IAAI,CAACG,aAAhC,CAAxB;AACA,SAFD,CAEE,OAAOqC,KAAP,EAAc;AACf,gBAAM,IAAIlB,KAAJ,CAAU3B,OAAO,CAACuC,iBAAR,CAA0BlC,IAAI,CAACG,aAA/B,EAA8CqC,KAA9C,CAAV,CAAN;AACA;AACD;;AAED,UAAIxC,IAAI,CAACI,QAAT,EAAmB;AAClB,YAAI;AACHwB,UAAAA,OAAO,CAACxB,QAAR,GAAmBT,OAAO,CAAC4C,kBAAR,CAA2BvC,IAAI,CAACI,QAAhC,CAAnB;AACA,SAFD,CAEE,OAAOoC,KAAP,EAAc;AACf,gBAAM,IAAIlB,KAAJ,CAAU3B,OAAO,CAACuC,iBAAR,CAA0BlC,IAAI,CAACI,QAA/B,EAAyCoC,KAAzC,CAAV,CAAN;AACA;AACD;;AAED,UAAIxC,IAAI,CAACK,MAAT,EAAiB;AAChB,YAAI;AACHuB,UAAAA,OAAO,CAACvB,MAAR,GAAiBV,OAAO,CAAC4C,kBAAR,CAA2BvC,IAAI,CAACK,MAAhC,CAAjB;AACA,SAFD,CAEE,OAAOmC,KAAP,EAAc;AACf,gBAAM,IAAIlB,KAAJ,CAAU3B,OAAO,CAACuC,iBAAR,CAA0BlC,IAAI,CAACK,MAA/B,EAAuCmC,KAAvC,CAAV,CAAN;AACA;AACD;;AAED,UAAIxC,IAAI,CAAC2B,MAAL,IAAe3B,IAAI,CAACyC,OAAxB,EAAiC;AAChC,cAAM,IAAInB,KAAJ,CACL3B,OAAO,CAACuC,iBAAR,CACClC,IADD,EAEC,IAAIsB,KAAJ,CACC,6DADD,CAFD,CADK,CAAN;AAQA;;AAED,UAAMK,MAAM,GAAG3B,IAAI,CAACyC,OAAL,IAAgBzC,IAAI,CAAC2B,MAApC;;AACA,UAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8B,CAAC3B,IAAI,CAACqB,OAApC,IAA+C,CAACrB,IAAI,CAAC0C,KAAzD,EAAgE;AAC/DV,QAAAA,cAAc,CAAC,QAAD,CAAd;AACAJ,QAAAA,OAAO,CAACf,GAAR,GAAclB,OAAO,CAACgD,YAAR,CAAqBhB,MAAM,CAACiB,KAAP,CAAa,GAAb,CAArB,EAAwCxB,KAAxC,CAAd;AACA,OAHD,MAGO,IAAI,OAAOO,MAAP,KAAkB,QAAlB,KAA+B3B,IAAI,CAACqB,OAAL,IAAgBrB,IAAI,CAAC0C,KAApD,CAAJ,EAAgE;AACtEV,QAAAA,cAAc,CAAC,wBAAD,CAAd;AACAJ,QAAAA,OAAO,CAACf,GAAR,GAAclB,OAAO,CAACgD,YAAR,CACb;AACChB,UAAAA,MAAM,EAAEA,MADT;AAECN,UAAAA,OAAO,EAAErB,IAAI,CAACqB,OAFf;AAGCqB,UAAAA,KAAK,EAAE1C,IAAI,CAAC0C;AAHb,SADa,EAMbtB,KANa,CAAd;AAQA,OAVM,MAUA,IAAIO,MAAM,KAAK3B,IAAI,CAACqB,OAAL,IAAgBrB,IAAI,CAAC0C,KAA1B,CAAV,EAA4C;AAClD,cAAM,IAAIpB,KAAJ,CACL3B,OAAO,CAACuC,iBAAR,CACClC,IADD,EAEC,IAAIsB,KAAJ,CACC,6EADD,CAFD,CADK,CAAN;AAQA,OATM,MASA,IAAIK,MAAJ,EAAY;AAClBK,QAAAA,cAAc,CAAC,SAAD,CAAd;AACAJ,QAAAA,OAAO,CAACf,GAAR,GAAclB,OAAO,CAACgD,YAAR,CAAqBhB,MAArB,EAA6BP,KAA7B,CAAd;AACA,OAHM,MAGA,IAAIpB,IAAI,CAACqB,OAAL,IAAgBrB,IAAI,CAAC0C,KAAzB,EAAgC;AACtC,cAAM,IAAIpB,KAAJ,CACL3B,OAAO,CAACuC,iBAAR,CACClC,IADD,EAEC,IAAIsB,KAAJ,CACC,8DADD,CAFD,CADK,CAAN;AAQA;;AAED,UAAItB,IAAI,CAACa,GAAT,EAAc;AACbmB,QAAAA,cAAc,CAAC,KAAD,CAAd;AACAJ,QAAAA,OAAO,CAACf,GAAR,GAAclB,OAAO,CAACgD,YAAR,CAAqB3C,IAAI,CAACa,GAA1B,EAA+BO,KAA/B,CAAd;AACA;;AAED,UAAIpB,IAAI,CAACT,KAAT,EAAgB;AACfqC,QAAAA,OAAO,CAACrC,KAAR,GAAgBI,OAAO,CAACC,cAAR,CACfI,IAAI,CAACT,KADU,EAEfgC,IAFe,YAGZH,KAHY,YAAhB;AAKA;;AAED,UAAIpB,IAAI,CAACmB,KAAT,EAAgB;AACfS,QAAAA,OAAO,CAACT,KAAR,GAAgBxB,OAAO,CAACC,cAAR,CACfI,IAAI,CAACmB,KADU,EAEfI,IAFe,YAGZH,KAHY,YAAhB;AAKA;;AAED,UAAMd,IAAI,GAAGb,MAAM,CAACa,IAAP,CAAYN,IAAZ,EAAkBO,MAAlB,CAAyB,UAAAC,GAAG,EAAI;AAC5C,eAAO,CAAC,CACP,UADO,EAEP,eAFO,EAGP,UAHO,EAIP,MAJO,EAKP,SALO,EAMP,SANO,EAOP,QAPO,EAQP,QARO,EASP,SATO,EAUP,OAVO,EAWP,SAXO,EAYP,KAZO,EAaP,OAbO,EAcP,OAdO,EAeNC,QAfM,CAeGD,GAfH,CAAR;AAgBA,OAjBY,CAAb;;AA5LuC,kDA8MrBF,IA9MqB;AAAA;;AAAA;AA8MvC,+DAAwB;AAAA,cAAbE,GAAa;AACvBoB,UAAAA,OAAO,CAACpB,GAAD,CAAP,GAAeR,IAAI,CAACQ,GAAD,CAAnB;AACA;AAhNsC;AAAA;AAAA;AAAA;AAAA;;AAkNvC,UAAIO,KAAK,CAACC,OAAN,CAAcY,OAAO,CAACf,GAAtB,CAAJ,EAAgC;AAAA,oDACZe,OAAO,CAACf,GADI;AAAA;;AAAA;AAC/B,iEAAgC;AAAA,gBAArBgC,IAAqB;;AAC/B,gBAAIA,IAAI,CAACzB,KAAT,EAAgB;AACfG,cAAAA,IAAI,CAACsB,IAAI,CAACzB,KAAN,CAAJ,GAAmByB,IAAI,CAACxB,OAAxB;AACA;AACD;AAL8B;AAAA;AAAA;AAAA;AAAA;AAM/B;;AAED,aAAOO,OAAP;AACA;AA7OF;AAAA;AAAA,WA+OC,2BAAyBG,SAAzB,EAAoCS,KAApC,EAA2C;AAC1C,UAAMM,eAAe,GAAGC,IAAI,CAACC,SAAL,CACvBjB,SADuB,EAEvB,UAACvB,GAAD,EAAMI,KAAN,EAAgB;AACf,eAAOA,KAAK,KAAKqC,SAAV,GAAsB,WAAtB,GAAoCrC,KAA3C;AACA,OAJsB,EAKvB,CALuB,CAAxB;AAOA,aAAO4B,KAAK,CAACU,OAAN,GAAgB,MAAhB,GAAyBJ,eAAhC;AACA;AAxPF;AAAA;AAAA,WA0PC,sBAAoBjC,GAApB,EAAyBO,KAAzB,EAAgC;AAC/B,UAAI,OAAOP,GAAP,KAAe,UAAnB,EAA+B;AAC9B,eAAO,UAAAhB,IAAI;AAAA,iBAAIF,OAAO,CAACgD,YAAR,CAAqB9B,GAAG,CAAChB,IAAD,CAAxB,EAAgCuB,KAAhC,CAAJ;AAAA,SAAX;AACA;;AACD,UAAIL,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAJ,EAAwB;AACvB,eAAOA,GAAG,CACRW,GADK,CACD,UAACqB,IAAD,EAAOpB,GAAP;AAAA,iBAAe9B,OAAO,CAACgD,YAAR,CAAqBE,IAArB,YAA8BzB,KAA9B,cAAuCK,GAAvC,EAAf;AAAA,SADC,EAEL0B,MAFK,CAEE,UAACC,GAAD,EAAMnE,KAAN;AAAA,iBAAgBmE,GAAG,CAACC,MAAJ,CAAWpE,KAAX,CAAhB;AAAA,SAFF,EAEqC,EAFrC,CAAP;AAGA;;AACD,aAAO,CAACU,OAAO,CAAC2D,gBAAR,CAAyBzC,GAAzB,EAA8BO,KAA9B,CAAD,CAAP;AACA;AApQF;AAAA;AAAA,WAsQC,gCAA8BmC,aAA9B,EAA6C;AAC5C,UAAM9B,GAAG,GAAG8B,aAAa,CAACC,OAAd,CAAsB,GAAtB,CAAZ;;AACA,UAAI/B,GAAG,IAAI,CAAX,EAAc;AACb,eAAO;AACNE,UAAAA,MAAM,EAAE4B,aAAa,CAACE,MAAd,CAAqB,CAArB,EAAwBhC,GAAxB,CADF;AAENJ,UAAAA,OAAO,EAAEkC,aAAa,CAACE,MAAd,CAAqBhC,GAAG,GAAG,CAA3B;AAFH,SAAP;AAIA;;AACD,aAAO;AACNE,QAAAA,MAAM,EAAE4B,aADF;AAENlC,QAAAA,OAAO,EAAE4B;AAFH,OAAP;AAIA;AAlRF;AAAA;AAAA,WAoRC,0BAAwBJ,IAAxB,EAA8BzB,KAA9B,EAAqC;AACpC,UAAI,OAAOyB,IAAP,KAAgB,QAApB,EAA8B;AAC7B,eAAOlD,OAAO,CAAC+D,sBAAR,CAA+Bb,IAA/B,CAAP;AACA;;AAED,UAAMc,OAAO,GAAG,EAAhB;;AAEA,UAAId,IAAI,CAACxB,OAAL,IAAgBwB,IAAI,CAACH,KAAzB,EAAgC;AAC/B,cAAM,IAAIpB,KAAJ,CAAU,mCAAV,CAAN;AACA;;AAED,UAAI,CAACuB,IAAI,CAAClB,MAAV,EAAkB;AACjB,cAAM,IAAIL,KAAJ,CAAU,qBAAV,CAAN;AACA;;AAEDqC,MAAAA,OAAO,CAACtC,OAAR,GAAkBwB,IAAI,CAACxB,OAAL,IAAgBwB,IAAI,CAACH,KAAvC;;AAEA,UAAI,OAAOiB,OAAO,CAACtC,OAAf,KAA2B,QAA3B,IAAuCsC,OAAO,CAACtC,OAAnD,EAA4D;AAC3D,YAAIsC,OAAO,CAACtC,OAAR,CAAgBD,KAApB,EAA2B;AAC1BuC,UAAAA,OAAO,CAACvC,KAAR,GAAgBuC,OAAO,CAACtC,OAAR,CAAgBD,KAAhC;AACA,SAFD,MAEO;AACNuC,UAAAA,OAAO,CAACvC,KAAR,GAAgBA,KAAhB;AACA;AACD;;AAED,UAAMd,IAAI,GAAGb,MAAM,CAACa,IAAP,CAAYuC,IAAZ,EAAkBtC,MAAlB,CAAyB,UAASC,GAAT,EAAc;AACnD,eAAO,CAAC,CAAC,SAAD,EAAY,OAAZ,EAAqBC,QAArB,CAA8BD,GAA9B,CAAR;AACA,OAFY,CAAb;;AAzBoC,kDA6BlBF,IA7BkB;AAAA;;AAAA;AA6BpC,+DAAwB;AAAA,cAAbE,GAAa;AACvBmD,UAAAA,OAAO,CAACnD,GAAD,CAAP,GAAeqC,IAAI,CAACrC,GAAD,CAAnB;AACA;AA/BmC;AAAA;AAAA;AAAA;AAAA;;AAiCpC,aAAOmD,OAAP;AACA;AAtTF;AAAA;AAAA,WAwTC,4BAA0B5B,SAA1B,EAAqC;AACpC,UAAI,CAACA,SAAL,EAAgB,MAAM,IAAIT,KAAJ,CAAU,wCAAV,CAAN;;AAChB,UAAI,OAAOS,SAAP,KAAqB,QAAzB,EAAmC;AAClC,eAAO,UAAAhD,GAAG;AAAA,iBAAIA,GAAG,CAACyE,OAAJ,CAAYzB,SAAZ,MAA2B,CAA/B;AAAA,SAAV;AACA;;AACD,UAAI,OAAOA,SAAP,KAAqB,UAAzB,EAAqC;AACpC,eAAOA,SAAP;AACA;;AACD,UAAIA,SAAS,YAAY6B,MAAzB,EAAiC;AAChC,eAAO7B,SAAS,CAACK,IAAV,CAAeyB,IAAf,CAAoB9B,SAApB,CAAP;AACA;;AACD,UAAIhB,KAAK,CAACC,OAAN,CAAce,SAAd,CAAJ,EAA8B;AAC7B,YAAM9C,KAAK,GAAG8C,SAAS,CAACP,GAAV,CAAc,UAAAsC,CAAC;AAAA,iBAAInE,OAAO,CAAC4C,kBAAR,CAA2BuB,CAA3B,CAAJ;AAAA,SAAf,CAAd;AACA,eAAO9E,SAAS,CAACC,KAAD,CAAhB;AACA;;AACD,UAAI,OAAO8C,SAAP,KAAqB,QAAzB,EAAmC;AAClC,cAAMT,KAAK,CACV,gBACC,OAAOS,SADR,GAEC,gCAFD,GAGCA,SAHD,GAIC,GALS,CAAX;AAOA;;AAED,UAAMgC,QAAQ,GAAG,EAAjB;AACAtE,MAAAA,MAAM,CAACa,IAAP,CAAYyB,SAAZ,EAAuBd,OAAvB,CAA+B,UAAAT,GAAG,EAAI;AACrC,YAAMI,KAAK,GAAGmB,SAAS,CAACvB,GAAD,CAAvB;;AACA,gBAAQA,GAAR;AACC,eAAK,IAAL;AACA,eAAK,SAAL;AACA,eAAK,MAAL;AACC,gBAAII,KAAJ,EAAWmD,QAAQ,CAACrD,IAAT,CAAcf,OAAO,CAAC4C,kBAAR,CAA2B3B,KAA3B,CAAd;AACX;;AACD,eAAK,KAAL;AACC,gBAAIA,KAAJ,EAAW;AACV,kBAAM3B,MAAK,GAAG2B,KAAK,CAACY,GAAN,CAAU,UAAAsC,CAAC;AAAA,uBAAInE,OAAO,CAAC4C,kBAAR,CAA2BuB,CAA3B,CAAJ;AAAA,eAAX,CAAd;;AACAC,cAAAA,QAAQ,CAACrD,IAAT,CAActB,UAAU,CAACH,MAAD,CAAxB;AACA;;AACD;;AACD,eAAK,KAAL;AACA,eAAK,SAAL;AACC,gBAAI2B,KAAJ,EAAW;AACV,kBAAM9B,OAAO,GAAGa,OAAO,CAAC4C,kBAAR,CAA2B3B,KAA3B,CAAhB;AACAmD,cAAAA,QAAQ,CAACrD,IAAT,CAAc7B,UAAU,CAACC,OAAD,CAAxB;AACA;;AACD;;AACD;AACC,kBAAM,IAAIwC,KAAJ,CAAU,yBAAyBd,GAAzB,GAA+B,eAAzC,CAAN;AApBF;AAsBA,OAxBD;;AAyBA,UAAIuD,QAAQ,CAAC5E,MAAT,KAAoB,CAAxB,EAA2B;AAC1B,cAAM,IAAImC,KAAJ,CAAU,gCAAgCS,SAA1C,CAAN;AACA;;AACD,UAAIgC,QAAQ,CAAC5E,MAAT,KAAoB,CAAxB,EAA2B;AAC1B,eAAO4E,QAAQ,CAAC,CAAD,CAAf;AACA;;AACD,aAAO3E,UAAU,CAAC2E,QAAD,CAAjB;AACA;AAlXF;;AAAA;AAAA","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*\n<rules>: <rule>\n<rules>: [<rule>]\n<rule>: {\n\tresource: {\n\t\ttest: <condition>,\n\t\tinclude: <condition>,\n\t\texclude: <condition>,\n\t},\n\tresource: <condition>, -> resource.test\n\ttest: <condition>, -> resource.test\n\tinclude: <condition>, -> resource.include\n\texclude: <condition>, -> resource.exclude\n\tresourceQuery: <condition>,\n\tcompiler: <condition>,\n\tissuer: <condition>,\n\tuse: \"loader\", -> use[0].loader\n\tloader: <>, -> use[0].loader\n\tloaders: <>, -> use\n\toptions: {}, -> use[0].options,\n\tquery: {}, -> options\n\tparser: {},\n\tuse: [\n\t\t\"loader\" -> use[x].loader\n\t],\n\tuse: [\n\t\t{\n\t\t\tloader: \"loader\",\n\t\t\toptions: {}\n\t\t}\n\t],\n\trules: [\n\t\t<rule>\n\t],\n\toneOf: [\n\t\t<rule>\n\t]\n}\n\n<condition>: /regExp/\n<condition>: function(arg) {}\n<condition>: \"starting\"\n<condition>: [<condition>] // or\n<condition>: { and: [<condition>] }\n<condition>: { or: [<condition>] }\n<condition>: { not: [<condition>] }\n<condition>: { test: <condition>, include: <condition>, exclude: <condition> }\n\n\nnormalized:\n\n{\n\tresource: function(),\n\tresourceQuery: function(),\n\tcompiler: function(),\n\tissuer: function(),\n\tuse: [\n\t\t{\n\t\t\tloader: string,\n\t\t\toptions: string,\n\t\t\t<any>: <any>\n\t\t}\n\t],\n\trules: [<rule>],\n\toneOf: [<rule>],\n\t<any>: <any>,\n}\n\n*/\n\n\"use strict\";\n\nconst notMatcher = matcher => {\n\treturn str => {\n\t\treturn !matcher(str);\n\t};\n};\n\nconst orMatcher = items => {\n\treturn str => {\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tif (items[i](str)) return true;\n\t\t}\n\t\treturn false;\n\t};\n};\n\nconst andMatcher = items => {\n\treturn str => {\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tif (!items[i](str)) return false;\n\t\t}\n\t\treturn true;\n\t};\n};\n\nmodule.exports = class RuleSet {\n\tconstructor(rules) {\n\t\tthis.references = Object.create(null);\n\t\tthis.rules = RuleSet.normalizeRules(rules, this.references, \"ref-\");\n\t}\n\n\tstatic normalizeRules(rules, refs, ident) {\n\t\tif (Array.isArray(rules)) {\n\t\t\treturn rules.map((rule, idx) => {\n\t\t\t\treturn RuleSet.normalizeRule(rule, refs, `${ident}-${idx}`);\n\t\t\t});\n\t\t} else if (rules) {\n\t\t\treturn [RuleSet.normalizeRule(rules, refs, ident)];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tstatic normalizeRule(rule, refs, ident) {\n\t\tif (typeof rule === \"string\") {\n\t\t\treturn {\n\t\t\t\tuse: [\n\t\t\t\t\t{\n\t\t\t\t\t\tloader: rule\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t}\n\t\tif (!rule) {\n\t\t\tthrow new Error(\"Unexcepted null when object was expected as rule\");\n\t\t}\n\t\tif (typeof rule !== \"object\") {\n\t\t\tthrow new Error(\n\t\t\t\t\"Unexcepted \" +\n\t\t\t\t\ttypeof rule +\n\t\t\t\t\t\" when object was expected as rule (\" +\n\t\t\t\t\trule +\n\t\t\t\t\t\")\"\n\t\t\t);\n\t\t}\n\n\t\tconst newRule = {};\n\t\tlet useSource;\n\t\tlet resourceSource;\n\t\tlet condition;\n\n\t\tconst checkUseSource = newSource => {\n\t\t\tif (useSource && useSource !== newSource) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\tRuleSet.buildErrorMessage(\n\t\t\t\t\t\trule,\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\"Rule can only have one result source (provided \" +\n\t\t\t\t\t\t\t\tnewSource +\n\t\t\t\t\t\t\t\t\" and \" +\n\t\t\t\t\t\t\t\tuseSource +\n\t\t\t\t\t\t\t\t\")\"\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tuseSource = newSource;\n\t\t};\n\n\t\tconst checkResourceSource = newSource => {\n\t\t\tif (resourceSource && resourceSource !== newSource) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\tRuleSet.buildErrorMessage(\n\t\t\t\t\t\trule,\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\"Rule can only have one resource source (provided \" +\n\t\t\t\t\t\t\t\tnewSource +\n\t\t\t\t\t\t\t\t\" and \" +\n\t\t\t\t\t\t\t\tresourceSource +\n\t\t\t\t\t\t\t\t\")\"\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tresourceSource = newSource;\n\t\t};\n\n\t\tif (rule.test || rule.include || rule.exclude) {\n\t\t\tcheckResourceSource(\"test + include + exclude\");\n\t\t\tcondition = {\n\t\t\t\ttest: rule.test,\n\t\t\t\tinclude: rule.include,\n\t\t\t\texclude: rule.exclude\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tnewRule.resource = RuleSet.normalizeCondition(condition);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(condition, error));\n\t\t\t}\n\t\t}\n\n\t\tif (rule.resource) {\n\t\t\tcheckResourceSource(\"resource\");\n\t\t\ttry {\n\t\t\t\tnewRule.resource = RuleSet.normalizeCondition(rule.resource);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.resource, error));\n\t\t\t}\n\t\t}\n\n\t\tif (rule.realResource) {\n\t\t\ttry {\n\t\t\t\tnewRule.realResource = RuleSet.normalizeCondition(rule.realResource);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.realResource, error));\n\t\t\t}\n\t\t}\n\n\t\tif (rule.resourceQuery) {\n\t\t\ttry {\n\t\t\t\tnewRule.resourceQuery = RuleSet.normalizeCondition(rule.resourceQuery);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.resourceQuery, error));\n\t\t\t}\n\t\t}\n\n\t\tif (rule.compiler) {\n\t\t\ttry {\n\t\t\t\tnewRule.compiler = RuleSet.normalizeCondition(rule.compiler);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.compiler, error));\n\t\t\t}\n\t\t}\n\n\t\tif (rule.issuer) {\n\t\t\ttry {\n\t\t\t\tnewRule.issuer = RuleSet.normalizeCondition(rule.issuer);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.issuer, error));\n\t\t\t}\n\t\t}\n\n\t\tif (rule.loader && rule.loaders) {\n\t\t\tthrow new Error(\n\t\t\t\tRuleSet.buildErrorMessage(\n\t\t\t\t\trule,\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\"Provided loader and loaders for rule (use only one of them)\"\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tconst loader = rule.loaders || rule.loader;\n\t\tif (typeof loader === \"string\" && !rule.options && !rule.query) {\n\t\t\tcheckUseSource(\"loader\");\n\t\t\tnewRule.use = RuleSet.normalizeUse(loader.split(\"!\"), ident);\n\t\t} else if (typeof loader === \"string\" && (rule.options || rule.query)) {\n\t\t\tcheckUseSource(\"loader + options/query\");\n\t\t\tnewRule.use = RuleSet.normalizeUse(\n\t\t\t\t{\n\t\t\t\t\tloader: loader,\n\t\t\t\t\toptions: rule.options,\n\t\t\t\t\tquery: rule.query\n\t\t\t\t},\n\t\t\t\tident\n\t\t\t);\n\t\t} else if (loader && (rule.options || rule.query)) {\n\t\t\tthrow new Error(\n\t\t\t\tRuleSet.buildErrorMessage(\n\t\t\t\t\trule,\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\"options/query cannot be used with loaders (use options for each array item)\"\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t} else if (loader) {\n\t\t\tcheckUseSource(\"loaders\");\n\t\t\tnewRule.use = RuleSet.normalizeUse(loader, ident);\n\t\t} else if (rule.options || rule.query) {\n\t\t\tthrow new Error(\n\t\t\t\tRuleSet.buildErrorMessage(\n\t\t\t\t\trule,\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\"options/query provided without loader (use loader + options)\"\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tif (rule.use) {\n\t\t\tcheckUseSource(\"use\");\n\t\t\tnewRule.use = RuleSet.normalizeUse(rule.use, ident);\n\t\t}\n\n\t\tif (rule.rules) {\n\t\t\tnewRule.rules = RuleSet.normalizeRules(\n\t\t\t\trule.rules,\n\t\t\t\trefs,\n\t\t\t\t`${ident}-rules`\n\t\t\t);\n\t\t}\n\n\t\tif (rule.oneOf) {\n\t\t\tnewRule.oneOf = RuleSet.normalizeRules(\n\t\t\t\trule.oneOf,\n\t\t\t\trefs,\n\t\t\t\t`${ident}-oneOf`\n\t\t\t);\n\t\t}\n\n\t\tconst keys = Object.keys(rule).filter(key => {\n\t\t\treturn ![\n\t\t\t\t\"resource\",\n\t\t\t\t\"resourceQuery\",\n\t\t\t\t\"compiler\",\n\t\t\t\t\"test\",\n\t\t\t\t\"include\",\n\t\t\t\t\"exclude\",\n\t\t\t\t\"issuer\",\n\t\t\t\t\"loader\",\n\t\t\t\t\"options\",\n\t\t\t\t\"query\",\n\t\t\t\t\"loaders\",\n\t\t\t\t\"use\",\n\t\t\t\t\"rules\",\n\t\t\t\t\"oneOf\"\n\t\t\t].includes(key);\n\t\t});\n\t\tfor (const key of keys) {\n\t\t\tnewRule[key] = rule[key];\n\t\t}\n\n\t\tif (Array.isArray(newRule.use)) {\n\t\t\tfor (const item of newRule.use) {\n\t\t\t\tif (item.ident) {\n\t\t\t\t\trefs[item.ident] = item.options;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn newRule;\n\t}\n\n\tstatic buildErrorMessage(condition, error) {\n\t\tconst conditionAsText = JSON.stringify(\n\t\t\tcondition,\n\t\t\t(key, value) => {\n\t\t\t\treturn value === undefined ? \"undefined\" : value;\n\t\t\t},\n\t\t\t2\n\t\t);\n\t\treturn error.message + \" in \" + conditionAsText;\n\t}\n\n\tstatic normalizeUse(use, ident) {\n\t\tif (typeof use === \"function\") {\n\t\t\treturn data => RuleSet.normalizeUse(use(data), ident);\n\t\t}\n\t\tif (Array.isArray(use)) {\n\t\t\treturn use\n\t\t\t\t.map((item, idx) => RuleSet.normalizeUse(item, `${ident}-${idx}`))\n\t\t\t\t.reduce((arr, items) => arr.concat(items), []);\n\t\t}\n\t\treturn [RuleSet.normalizeUseItem(use, ident)];\n\t}\n\n\tstatic normalizeUseItemString(useItemString) {\n\t\tconst idx = useItemString.indexOf(\"?\");\n\t\tif (idx >= 0) {\n\t\t\treturn {\n\t\t\t\tloader: useItemString.substr(0, idx),\n\t\t\t\toptions: useItemString.substr(idx + 1)\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tloader: useItemString,\n\t\t\toptions: undefined\n\t\t};\n\t}\n\n\tstatic normalizeUseItem(item, ident) {\n\t\tif (typeof item === \"string\") {\n\t\t\treturn RuleSet.normalizeUseItemString(item);\n\t\t}\n\n\t\tconst newItem = {};\n\n\t\tif (item.options && item.query) {\n\t\t\tthrow new Error(\"Provided options and query in use\");\n\t\t}\n\n\t\tif (!item.loader) {\n\t\t\tthrow new Error(\"No loader specified\");\n\t\t}\n\n\t\tnewItem.options = item.options || item.query;\n\n\t\tif (typeof newItem.options === \"object\" && newItem.options) {\n\t\t\tif (newItem.options.ident) {\n\t\t\t\tnewItem.ident = newItem.options.ident;\n\t\t\t} else {\n\t\t\t\tnewItem.ident = ident;\n\t\t\t}\n\t\t}\n\n\t\tconst keys = Object.keys(item).filter(function(key) {\n\t\t\treturn ![\"options\", \"query\"].includes(key);\n\t\t});\n\n\t\tfor (const key of keys) {\n\t\t\tnewItem[key] = item[key];\n\t\t}\n\n\t\treturn newItem;\n\t}\n\n\tstatic normalizeCondition(condition) {\n\t\tif (!condition) throw new Error(\"Expected condition but got falsy value\");\n\t\tif (typeof condition === \"string\") {\n\t\t\treturn str => str.indexOf(condition) === 0;\n\t\t}\n\t\tif (typeof condition === \"function\") {\n\t\t\treturn condition;\n\t\t}\n\t\tif (condition instanceof RegExp) {\n\t\t\treturn condition.test.bind(condition);\n\t\t}\n\t\tif (Array.isArray(condition)) {\n\t\t\tconst items = condition.map(c => RuleSet.normalizeCondition(c));\n\t\t\treturn orMatcher(items);\n\t\t}\n\t\tif (typeof condition !== \"object\") {\n\t\t\tthrow Error(\n\t\t\t\t\"Unexcepted \" +\n\t\t\t\t\ttypeof condition +\n\t\t\t\t\t\" when condition was expected (\" +\n\t\t\t\t\tcondition +\n\t\t\t\t\t\")\"\n\t\t\t);\n\t\t}\n\n\t\tconst matchers = [];\n\t\tObject.keys(condition).forEach(key => {\n\t\t\tconst value = condition[key];\n\t\t\tswitch (key) {\n\t\t\t\tcase \"or\":\n\t\t\t\tcase \"include\":\n\t\t\t\tcase \"test\":\n\t\t\t\t\tif (value) matchers.push(RuleSet.normalizeCondition(value));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"and\":\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tconst items = value.map(c => RuleSet.normalizeCondition(c));\n\t\t\t\t\t\tmatchers.push(andMatcher(items));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"not\":\n\t\t\t\tcase \"exclude\":\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tconst matcher = RuleSet.normalizeCondition(value);\n\t\t\t\t\t\tmatchers.push(notMatcher(matcher));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"Unexcepted property \" + key + \" in condition\");\n\t\t\t}\n\t\t});\n\t\tif (matchers.length === 0) {\n\t\t\tthrow new Error(\"Excepted condition but got \" + condition);\n\t\t}\n\t\tif (matchers.length === 1) {\n\t\t\treturn matchers[0];\n\t\t}\n\t\treturn andMatcher(matchers);\n\t}\n\n\texec(data) {\n\t\tconst result = [];\n\t\tthis._run(\n\t\t\tdata,\n\t\t\t{\n\t\t\t\trules: this.rules\n\t\t\t},\n\t\t\tresult\n\t\t);\n\t\treturn result;\n\t}\n\n\t_run(data, rule, result) {\n\t\t// test conditions\n\t\tif (rule.resource && !data.resource) return false;\n\t\tif (rule.realResource && !data.realResource) return false;\n\t\tif (rule.resourceQuery && !data.resourceQuery) return false;\n\t\tif (rule.compiler && !data.compiler) return false;\n\t\tif (rule.issuer && !data.issuer) return false;\n\t\tif (rule.resource && !rule.resource(data.resource)) return false;\n\t\tif (rule.realResource && !rule.realResource(data.realResource))\n\t\t\treturn false;\n\t\tif (data.issuer && rule.issuer && !rule.issuer(data.issuer)) return false;\n\t\tif (\n\t\t\tdata.resourceQuery &&\n\t\t\trule.resourceQuery &&\n\t\t\t!rule.resourceQuery(data.resourceQuery)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tif (data.compiler && rule.compiler && !rule.compiler(data.compiler)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// apply\n\t\tconst keys = Object.keys(rule).filter(key => {\n\t\t\treturn ![\n\t\t\t\t\"resource\",\n\t\t\t\t\"realResource\",\n\t\t\t\t\"resourceQuery\",\n\t\t\t\t\"compiler\",\n\t\t\t\t\"issuer\",\n\t\t\t\t\"rules\",\n\t\t\t\t\"oneOf\",\n\t\t\t\t\"use\",\n\t\t\t\t\"enforce\"\n\t\t\t].includes(key);\n\t\t});\n\t\tfor (const key of keys) {\n\t\t\tresult.push({\n\t\t\t\ttype: key,\n\t\t\t\tvalue: rule[key]\n\t\t\t});\n\t\t}\n\n\t\tif (rule.use) {\n\t\t\tconst process = use => {\n\t\t\t\tif (typeof use === \"function\") {\n\t\t\t\t\tprocess(use(data));\n\t\t\t\t} else if (Array.isArray(use)) {\n\t\t\t\t\tuse.forEach(process);\n\t\t\t\t} else {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttype: \"use\",\n\t\t\t\t\t\tvalue: use,\n\t\t\t\t\t\tenforce: rule.enforce\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tprocess(rule.use);\n\t\t}\n\n\t\tif (rule.rules) {\n\t\t\tfor (let i = 0; i < rule.rules.length; i++) {\n\t\t\t\tthis._run(data, rule.rules[i], result);\n\t\t\t}\n\t\t}\n\n\t\tif (rule.oneOf) {\n\t\t\tfor (let i = 0; i < rule.oneOf.length; i++) {\n\t\t\t\tif (this._run(data, rule.oneOf[i], result)) break;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfindOptionsByIdent(ident) {\n\t\tconst options = this.references[ident];\n\t\tif (!options) {\n\t\t\tthrow new Error(\"Can't find options with ident '\" + ident + \"'\");\n\t\t}\n\t\treturn options;\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}