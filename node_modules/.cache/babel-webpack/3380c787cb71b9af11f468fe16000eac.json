{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar Resolver = require(\"./Resolver\");\n\nvar _require = require(\"./util/path\"),\n    getType = _require.getType,\n    PathType = _require.PathType;\n\nvar SyncAsyncFileSystemDecorator = require(\"./SyncAsyncFileSystemDecorator\");\n\nvar AliasFieldPlugin = require(\"./AliasFieldPlugin\");\n\nvar AliasPlugin = require(\"./AliasPlugin\");\n\nvar AppendPlugin = require(\"./AppendPlugin\");\n\nvar ConditionalPlugin = require(\"./ConditionalPlugin\");\n\nvar DescriptionFilePlugin = require(\"./DescriptionFilePlugin\");\n\nvar DirectoryExistsPlugin = require(\"./DirectoryExistsPlugin\");\n\nvar ExportsFieldPlugin = require(\"./ExportsFieldPlugin\");\n\nvar FileExistsPlugin = require(\"./FileExistsPlugin\");\n\nvar ImportsFieldPlugin = require(\"./ImportsFieldPlugin\");\n\nvar JoinRequestPartPlugin = require(\"./JoinRequestPartPlugin\");\n\nvar JoinRequestPlugin = require(\"./JoinRequestPlugin\");\n\nvar MainFieldPlugin = require(\"./MainFieldPlugin\");\n\nvar ModulesInHierachicDirectoriesPlugin = require(\"./ModulesInHierachicDirectoriesPlugin\");\n\nvar ModulesInRootPlugin = require(\"./ModulesInRootPlugin\");\n\nvar NextPlugin = require(\"./NextPlugin\");\n\nvar ParsePlugin = require(\"./ParsePlugin\");\n\nvar PnpPlugin = require(\"./PnpPlugin\");\n\nvar RestrictionsPlugin = require(\"./RestrictionsPlugin\");\n\nvar ResultPlugin = require(\"./ResultPlugin\");\n\nvar RootsPlugin = require(\"./RootsPlugin\");\n\nvar SelfReferencePlugin = require(\"./SelfReferencePlugin\");\n\nvar SymlinkPlugin = require(\"./SymlinkPlugin\");\n\nvar TryNextPlugin = require(\"./TryNextPlugin\");\n\nvar UnsafeCachePlugin = require(\"./UnsafeCachePlugin\");\n\nvar UseFilePlugin = require(\"./UseFilePlugin\");\n/** @typedef {import(\"./AliasPlugin\").AliasOption} AliasOptionEntry */\n\n/** @typedef {import(\"./PnpPlugin\").PnpApiImpl} PnpApi */\n\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n\n/** @typedef {import(\"./Resolver\").SyncFileSystem} SyncFileSystem */\n\n/** @typedef {string|string[]|false} AliasOptionNewRequest */\n\n/** @typedef {{[k: string]: AliasOptionNewRequest}} AliasOptions */\n\n/** @typedef {{apply: function(Resolver): void} | function(this: Resolver, Resolver): void} Plugin */\n\n/**\n * @typedef {Object} UserResolveOptions\n * @property {(AliasOptions | AliasOptionEntry[])=} alias A list of module alias configurations or an object which maps key to value\n * @property {(AliasOptions | AliasOptionEntry[])=} fallback A list of module alias configurations or an object which maps key to value, applied only after modules option\n * @property {(string | string[])[]=} aliasFields A list of alias fields in description files\n * @property {(function(ResolveRequest): boolean)=} cachePredicate A function which decides whether a request should be cached or not. An object is passed with at least `path` and `request` properties.\n * @property {boolean=} cacheWithContext Whether or not the unsafeCache should include request context as part of the cache key.\n * @property {string[]=} descriptionFiles A list of description files to read from\n * @property {string[]=} conditionNames A list of exports field condition names.\n * @property {boolean=} enforceExtension Enforce that a extension from extensions must be used\n * @property {(string | string[])[]=} exportsFields A list of exports fields in description files\n * @property {(string | string[])[]=} importsFields A list of imports fields in description files\n * @property {string[]=} extensions A list of extensions which should be tried for files\n * @property {FileSystem} fileSystem The file system which should be used\n * @property {(Object | boolean)=} unsafeCache Use this cache object to unsafely cache the successful requests\n * @property {boolean=} symlinks Resolve symlinks to their symlinked location\n * @property {Resolver=} resolver A prepared Resolver to which the plugins are attached\n * @property {string[] | string=} modules A list of directories to resolve modules from, can be absolute path or folder name\n * @property {(string | string[] | {name: string | string[], forceRelative: boolean})[]=} mainFields A list of main fields in description files\n * @property {string[]=} mainFiles  A list of main files in directories\n * @property {Plugin[]=} plugins A list of additional resolve plugins which should be applied\n * @property {PnpApi | null=} pnpApi A PnP API that should be used - null is \"never\", undefined is \"auto\"\n * @property {string[]=} roots A list of root paths\n * @property {boolean=} fullySpecified The request is already fully specified and no extensions or directories are resolved for it\n * @property {boolean=} resolveToContext Resolve to a context instead of a file\n * @property {(string|RegExp)[]=} restrictions A list of resolve restrictions\n * @property {boolean=} useSyncFileSystemCalls Use only the sync constiants of the file system calls\n * @property {boolean=} preferRelative Prefer to resolve module requests as relative requests before falling back to modules\n */\n\n/**\n * @typedef {Object} ResolveOptions\n * @property {AliasOptionEntry[]} alias\n * @property {AliasOptionEntry[]} fallback\n * @property {Set<string | string[]>} aliasFields\n * @property {(function(ResolveRequest): boolean)} cachePredicate\n * @property {boolean} cacheWithContext\n * @property {Set<string>} conditionNames A list of exports field condition names.\n * @property {string[]} descriptionFiles\n * @property {boolean} enforceExtension\n * @property {Set<string | string[]>} exportsFields\n * @property {Set<string | string[]>} importsFields\n * @property {Set<string>} extensions\n * @property {FileSystem} fileSystem\n * @property {Object | false} unsafeCache\n * @property {boolean} symlinks\n * @property {Resolver=} resolver\n * @property {Array<string | string[]>} modules\n * @property {{name: string[], forceRelative: boolean}[]} mainFields\n * @property {Set<string>} mainFiles\n * @property {Plugin[]} plugins\n * @property {PnpApi | null} pnpApi\n * @property {Set<string>} roots\n * @property {boolean} fullySpecified\n * @property {boolean} resolveToContext\n * @property {Set<string|RegExp>} restrictions\n * @property {boolean} preferRelative\n */\n\n/**\n * @param {PnpApi | null=} option option\n * @returns {PnpApi | null} processed option\n */\n\n\nfunction processPnpApiOption(option) {\n  if (option === undefined &&\n  /** @type {NodeJS.ProcessVersions & {pnp: string}} */\n  process.versions.pnp) {\n    // @ts-ignore\n    return require(\"pnpapi\"); // eslint-disable-line node/no-missing-require\n  }\n\n  return option || null;\n}\n/**\n * @param {AliasOptions | AliasOptionEntry[] | undefined} alias alias\n * @returns {AliasOptionEntry[]} normalized aliases\n */\n\n\nfunction normalizeAlias(alias) {\n  return typeof alias === \"object\" && !Array.isArray(alias) && alias !== null ? Object.keys(alias).map(function (key) {\n    /** @type {AliasOptionEntry} */\n    var obj = {\n      name: key,\n      onlyModule: false,\n      alias: alias[key]\n    };\n\n    if (/\\$$/.test(key)) {\n      obj.onlyModule = true;\n      obj.name = key.substr(0, key.length - 1);\n    }\n\n    return obj;\n  }) :\n  /** @type {Array<AliasOptionEntry>} */\n  alias || [];\n}\n/**\n * @param {UserResolveOptions} options input options\n * @returns {ResolveOptions} output options\n */\n\n\nfunction createOptions(options) {\n  var mainFieldsSet = new Set(options.mainFields || [\"main\"]);\n  var mainFields = [];\n\n  var _iterator = _createForOfIteratorHelper(mainFieldsSet),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n\n      if (typeof item === \"string\") {\n        mainFields.push({\n          name: [item],\n          forceRelative: true\n        });\n      } else if (Array.isArray(item)) {\n        mainFields.push({\n          name: item,\n          forceRelative: true\n        });\n      } else {\n        mainFields.push({\n          name: Array.isArray(item.name) ? item.name : [item.name],\n          forceRelative: item.forceRelative\n        });\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return {\n    alias: normalizeAlias(options.alias),\n    fallback: normalizeAlias(options.fallback),\n    aliasFields: new Set(options.aliasFields),\n    cachePredicate: options.cachePredicate || function () {\n      return true;\n    },\n    cacheWithContext: typeof options.cacheWithContext !== \"undefined\" ? options.cacheWithContext : true,\n    exportsFields: new Set(options.exportsFields || [\"exports\"]),\n    importsFields: new Set(options.importsFields || [\"imports\"]),\n    conditionNames: new Set(options.conditionNames),\n    descriptionFiles: Array.from(new Set(options.descriptionFiles || [\"package.json\"])),\n    enforceExtension: options.enforceExtension || false,\n    extensions: new Set(options.extensions || [\".js\", \".json\", \".node\"]),\n    fileSystem: options.useSyncFileSystemCalls ? new SyncAsyncFileSystemDecorator(\n    /** @type {SyncFileSystem} */\n\n    /** @type {unknown} */\n    options.fileSystem) : options.fileSystem,\n    unsafeCache: options.unsafeCache && typeof options.unsafeCache !== \"object\" ? {} : options.unsafeCache || false,\n    symlinks: typeof options.symlinks !== \"undefined\" ? options.symlinks : true,\n    resolver: options.resolver,\n    modules: mergeFilteredToArray(Array.isArray(options.modules) ? options.modules : options.modules ? [options.modules] : [\"node_modules\"], function (item) {\n      var type = getType(item);\n      return type === PathType.Normal || type === PathType.Relative;\n    }),\n    mainFields: mainFields,\n    mainFiles: new Set(options.mainFiles || [\"index\"]),\n    plugins: options.plugins || [],\n    pnpApi: processPnpApiOption(options.pnpApi),\n    roots: new Set(options.roots || undefined),\n    fullySpecified: options.fullySpecified || false,\n    resolveToContext: options.resolveToContext || false,\n    preferRelative: options.preferRelative || false,\n    restrictions: new Set(options.restrictions)\n  };\n}\n/**\n * @param {UserResolveOptions} options resolve options\n * @returns {Resolver} created resolver\n */\n\n\nexports.createResolver = function (options) {\n  var normalizedOptions = createOptions(options);\n  var alias = normalizedOptions.alias,\n      fallback = normalizedOptions.fallback,\n      aliasFields = normalizedOptions.aliasFields,\n      cachePredicate = normalizedOptions.cachePredicate,\n      cacheWithContext = normalizedOptions.cacheWithContext,\n      conditionNames = normalizedOptions.conditionNames,\n      descriptionFiles = normalizedOptions.descriptionFiles,\n      enforceExtension = normalizedOptions.enforceExtension,\n      exportsFields = normalizedOptions.exportsFields,\n      importsFields = normalizedOptions.importsFields,\n      extensions = normalizedOptions.extensions,\n      fileSystem = normalizedOptions.fileSystem,\n      fullySpecified = normalizedOptions.fullySpecified,\n      mainFields = normalizedOptions.mainFields,\n      mainFiles = normalizedOptions.mainFiles,\n      modules = normalizedOptions.modules,\n      userPlugins = normalizedOptions.plugins,\n      pnpApi = normalizedOptions.pnpApi,\n      resolveToContext = normalizedOptions.resolveToContext,\n      preferRelative = normalizedOptions.preferRelative,\n      symlinks = normalizedOptions.symlinks,\n      unsafeCache = normalizedOptions.unsafeCache,\n      customResolver = normalizedOptions.resolver,\n      restrictions = normalizedOptions.restrictions,\n      roots = normalizedOptions.roots;\n  var plugins = userPlugins.slice();\n  var resolver = customResolver ? customResolver : new Resolver(fileSystem, normalizedOptions); //// pipeline ////\n\n  resolver.ensureHook(\"resolve\");\n  resolver.ensureHook(\"internalResolve\");\n  resolver.ensureHook(\"newInteralResolve\");\n  resolver.ensureHook(\"parsedResolve\");\n  resolver.ensureHook(\"describedResolve\");\n  resolver.ensureHook(\"internal\");\n  resolver.ensureHook(\"rawModule\");\n  resolver.ensureHook(\"module\");\n  resolver.ensureHook(\"resolveAsModule\");\n  resolver.ensureHook(\"undescribedResolveInPackage\");\n  resolver.ensureHook(\"resolveInPackage\");\n  resolver.ensureHook(\"resolveInExistingDirectory\");\n  resolver.ensureHook(\"relative\");\n  resolver.ensureHook(\"describedRelative\");\n  resolver.ensureHook(\"directory\");\n  resolver.ensureHook(\"undescribedExistingDirectory\");\n  resolver.ensureHook(\"existingDirectory\");\n  resolver.ensureHook(\"undescribedRawFile\");\n  resolver.ensureHook(\"rawFile\");\n  resolver.ensureHook(\"file\");\n  resolver.ensureHook(\"finalFile\");\n  resolver.ensureHook(\"existingFile\");\n  resolver.ensureHook(\"resolved\"); // resolve\n\n  for (var _i = 0, _arr = [{\n    source: \"resolve\",\n    resolveOptions: {\n      fullySpecified: fullySpecified\n    }\n  }, {\n    source: \"internal-resolve\",\n    resolveOptions: {\n      fullySpecified: false\n    }\n  }]; _i < _arr.length; _i++) {\n    var _arr$_i = _arr[_i],\n        source = _arr$_i.source,\n        resolveOptions = _arr$_i.resolveOptions;\n\n    if (unsafeCache) {\n      plugins.push(new UnsafeCachePlugin(source, cachePredicate, unsafeCache, cacheWithContext, \"new-\".concat(source)));\n      plugins.push(new ParsePlugin(\"new-\".concat(source), resolveOptions, \"parsed-resolve\"));\n    } else {\n      plugins.push(new ParsePlugin(source, resolveOptions, \"parsed-resolve\"));\n    }\n  } // parsed-resolve\n\n\n  plugins.push(new DescriptionFilePlugin(\"parsed-resolve\", descriptionFiles, false, \"described-resolve\"));\n  plugins.push(new NextPlugin(\"after-parsed-resolve\", \"described-resolve\")); // described-resolve\n\n  plugins.push(new NextPlugin(\"described-resolve\", \"normal-resolve\"));\n\n  if (fallback.length > 0) {\n    plugins.push(new AliasPlugin(\"described-resolve\", fallback, \"internal-resolve\"));\n  } // normal-resolve\n\n\n  if (alias.length > 0) plugins.push(new AliasPlugin(\"normal-resolve\", alias, \"internal-resolve\"));\n  aliasFields.forEach(function (item) {\n    plugins.push(new AliasFieldPlugin(\"normal-resolve\", item, \"internal-resolve\"));\n  });\n\n  if (preferRelative) {\n    plugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n  }\n\n  plugins.push(new ConditionalPlugin(\"after-normal-resolve\", {\n    module: true\n  }, \"resolve as module\", false, \"raw-module\"));\n  plugins.push(new ConditionalPlugin(\"after-normal-resolve\", {\n    internal: true\n  }, \"resolve as internal import\", false, \"internal\"));\n\n  if (roots.size > 0) {\n    plugins.push(new RootsPlugin(\"after-normal-resolve\", roots, \"relative\"));\n  }\n\n  if (!preferRelative) {\n    plugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n  } // internal\n\n\n  importsFields.forEach(function (importsField) {\n    plugins.push(new ImportsFieldPlugin(\"internal\", conditionNames, importsField, \"relative\", \"internal-resolve\"));\n  }); // raw-module\n\n  exportsFields.forEach(function (exportsField) {\n    plugins.push(new SelfReferencePlugin(\"raw-module\", exportsField, \"resolve-as-module\"));\n  });\n  modules.forEach(function (item) {\n    if (Array.isArray(item)) {\n      plugins.push(new ModulesInHierachicDirectoriesPlugin(\"raw-module\", item, \"module\"));\n\n      if (item.includes(\"node_modules\") && pnpApi) {\n        plugins.push(new PnpPlugin(\"raw-module\", pnpApi, \"relative\"));\n      }\n    } else {\n      plugins.push(new ModulesInRootPlugin(\"raw-module\", item, \"module\"));\n    }\n  }); // module\n\n  plugins.push(new JoinRequestPartPlugin(\"module\", \"resolve-as-module\")); // resolve-as-module\n\n  if (!resolveToContext) {\n    plugins.push(new ConditionalPlugin(\"resolve-as-module\", {\n      directory: false,\n      request: \".\"\n    }, \"single file module\", true, \"undescribed-raw-file\"));\n  }\n\n  plugins.push(new DirectoryExistsPlugin(\"resolve-as-module\", \"undescribed-resolve-in-package\")); // undescribed-resolve-in-package\n\n  plugins.push(new DescriptionFilePlugin(\"undescribed-resolve-in-package\", descriptionFiles, false, \"resolve-in-package\"));\n  plugins.push(new NextPlugin(\"after-undescribed-resolve-in-package\", \"resolve-in-package\")); // resolve-in-package\n\n  exportsFields.forEach(function (exportsField) {\n    plugins.push(new ExportsFieldPlugin(\"resolve-in-package\", conditionNames, exportsField, \"relative\"));\n  });\n  plugins.push(new NextPlugin(\"resolve-in-package\", \"resolve-in-existing-directory\")); // resolve-in-existing-directory\n\n  plugins.push(new JoinRequestPlugin(\"resolve-in-existing-directory\", \"relative\")); // relative\n\n  plugins.push(new DescriptionFilePlugin(\"relative\", descriptionFiles, true, \"described-relative\"));\n  plugins.push(new NextPlugin(\"after-relative\", \"described-relative\")); // described-relative\n\n  if (resolveToContext) {\n    plugins.push(new NextPlugin(\"described-relative\", \"directory\"));\n  } else {\n    plugins.push(new ConditionalPlugin(\"described-relative\", {\n      directory: false\n    }, null, true, \"raw-file\"));\n    plugins.push(new ConditionalPlugin(\"described-relative\", {\n      fullySpecified: false\n    }, \"as directory\", true, \"directory\"));\n  } // directory\n\n\n  plugins.push(new DirectoryExistsPlugin(\"directory\", \"undescribed-existing-directory\"));\n\n  if (resolveToContext) {\n    // undescribed-existing-directory\n    plugins.push(new NextPlugin(\"undescribed-existing-directory\", \"resolved\"));\n  } else {\n    // undescribed-existing-directory\n    plugins.push(new DescriptionFilePlugin(\"undescribed-existing-directory\", descriptionFiles, false, \"existing-directory\"));\n    mainFiles.forEach(function (item) {\n      plugins.push(new UseFilePlugin(\"undescribed-existing-directory\", item, \"undescribed-raw-file\"));\n    }); // described-existing-directory\n\n    mainFields.forEach(function (item) {\n      plugins.push(new MainFieldPlugin(\"existing-directory\", item, \"resolve-in-existing-directory\"));\n    });\n    mainFiles.forEach(function (item) {\n      plugins.push(new UseFilePlugin(\"existing-directory\", item, \"undescribed-raw-file\"));\n    }); // undescribed-raw-file\n\n    plugins.push(new DescriptionFilePlugin(\"undescribed-raw-file\", descriptionFiles, true, \"raw-file\"));\n    plugins.push(new NextPlugin(\"after-undescribed-raw-file\", \"raw-file\")); // raw-file\n\n    plugins.push(new ConditionalPlugin(\"raw-file\", {\n      fullySpecified: true\n    }, null, false, \"file\"));\n\n    if (!enforceExtension) {\n      plugins.push(new TryNextPlugin(\"raw-file\", \"no extension\", \"file\"));\n    }\n\n    extensions.forEach(function (item) {\n      plugins.push(new AppendPlugin(\"raw-file\", item, \"file\"));\n    }); // file\n\n    if (alias.length > 0) plugins.push(new AliasPlugin(\"file\", alias, \"internal-resolve\"));\n    aliasFields.forEach(function (item) {\n      plugins.push(new AliasFieldPlugin(\"file\", item, \"internal-resolve\"));\n    });\n    plugins.push(new NextPlugin(\"file\", \"final-file\")); // final-file\n\n    plugins.push(new FileExistsPlugin(\"final-file\", \"existing-file\")); // existing-file\n\n    if (symlinks) plugins.push(new SymlinkPlugin(\"existing-file\", \"existing-file\"));\n    plugins.push(new NextPlugin(\"existing-file\", \"resolved\"));\n  } // resolved\n\n\n  if (restrictions.size > 0) {\n    plugins.push(new RestrictionsPlugin(resolver.hooks.resolved, restrictions));\n  }\n\n  plugins.push(new ResultPlugin(resolver.hooks.resolved)); //// RESOLVER ////\n\n  var _iterator2 = _createForOfIteratorHelper(plugins),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var plugin = _step2.value;\n\n      if (typeof plugin === \"function\") {\n        plugin.call(resolver, resolver);\n      } else {\n        plugin.apply(resolver);\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return resolver;\n};\n/**\n * Merging filtered elements\n * @param {string[]} array source array\n * @param {function(string): boolean} filter predicate\n * @returns {Array<string | string[]>} merge result\n */\n\n\nfunction mergeFilteredToArray(array, filter) {\n  /** @type {Array<string | string[]>} */\n  var result = [];\n  var set = new Set(array);\n\n  var _iterator3 = _createForOfIteratorHelper(set),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var item = _step3.value;\n\n      if (filter(item)) {\n        var lastElement = result.length > 0 ? result[result.length - 1] : undefined;\n\n        if (Array.isArray(lastElement)) {\n          lastElement.push(item);\n        } else {\n          result.push([item]);\n        }\n      } else {\n        result.push(item);\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/enhanced-resolve/lib/ResolverFactory.js"],"names":["Resolver","require","getType","PathType","SyncAsyncFileSystemDecorator","AliasFieldPlugin","AliasPlugin","AppendPlugin","ConditionalPlugin","DescriptionFilePlugin","DirectoryExistsPlugin","ExportsFieldPlugin","FileExistsPlugin","ImportsFieldPlugin","JoinRequestPartPlugin","JoinRequestPlugin","MainFieldPlugin","ModulesInHierachicDirectoriesPlugin","ModulesInRootPlugin","NextPlugin","ParsePlugin","PnpPlugin","RestrictionsPlugin","ResultPlugin","RootsPlugin","SelfReferencePlugin","SymlinkPlugin","TryNextPlugin","UnsafeCachePlugin","UseFilePlugin","processPnpApiOption","option","undefined","process","versions","pnp","normalizeAlias","alias","Array","isArray","Object","keys","map","key","obj","name","onlyModule","test","substr","length","createOptions","options","mainFieldsSet","Set","mainFields","item","push","forceRelative","fallback","aliasFields","cachePredicate","cacheWithContext","exportsFields","importsFields","conditionNames","descriptionFiles","from","enforceExtension","extensions","fileSystem","useSyncFileSystemCalls","unsafeCache","symlinks","resolver","modules","mergeFilteredToArray","type","Normal","Relative","mainFiles","plugins","pnpApi","roots","fullySpecified","resolveToContext","preferRelative","restrictions","exports","createResolver","normalizedOptions","userPlugins","customResolver","slice","ensureHook","source","resolveOptions","forEach","module","internal","size","importsField","exportsField","includes","directory","request","hooks","resolved","plugin","call","apply","array","filter","result","set","lastElement"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Resolver = require(\"./Resolver\");\nconst { getType, PathType } = require(\"./util/path\");\n\nconst SyncAsyncFileSystemDecorator = require(\"./SyncAsyncFileSystemDecorator\");\n\nconst AliasFieldPlugin = require(\"./AliasFieldPlugin\");\nconst AliasPlugin = require(\"./AliasPlugin\");\nconst AppendPlugin = require(\"./AppendPlugin\");\nconst ConditionalPlugin = require(\"./ConditionalPlugin\");\nconst DescriptionFilePlugin = require(\"./DescriptionFilePlugin\");\nconst DirectoryExistsPlugin = require(\"./DirectoryExistsPlugin\");\nconst ExportsFieldPlugin = require(\"./ExportsFieldPlugin\");\nconst FileExistsPlugin = require(\"./FileExistsPlugin\");\nconst ImportsFieldPlugin = require(\"./ImportsFieldPlugin\");\nconst JoinRequestPartPlugin = require(\"./JoinRequestPartPlugin\");\nconst JoinRequestPlugin = require(\"./JoinRequestPlugin\");\nconst MainFieldPlugin = require(\"./MainFieldPlugin\");\nconst ModulesInHierachicDirectoriesPlugin = require(\"./ModulesInHierachicDirectoriesPlugin\");\nconst ModulesInRootPlugin = require(\"./ModulesInRootPlugin\");\nconst NextPlugin = require(\"./NextPlugin\");\nconst ParsePlugin = require(\"./ParsePlugin\");\nconst PnpPlugin = require(\"./PnpPlugin\");\nconst RestrictionsPlugin = require(\"./RestrictionsPlugin\");\nconst ResultPlugin = require(\"./ResultPlugin\");\nconst RootsPlugin = require(\"./RootsPlugin\");\nconst SelfReferencePlugin = require(\"./SelfReferencePlugin\");\nconst SymlinkPlugin = require(\"./SymlinkPlugin\");\nconst TryNextPlugin = require(\"./TryNextPlugin\");\nconst UnsafeCachePlugin = require(\"./UnsafeCachePlugin\");\nconst UseFilePlugin = require(\"./UseFilePlugin\");\n\n/** @typedef {import(\"./AliasPlugin\").AliasOption} AliasOptionEntry */\n/** @typedef {import(\"./PnpPlugin\").PnpApiImpl} PnpApi */\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").SyncFileSystem} SyncFileSystem */\n\n/** @typedef {string|string[]|false} AliasOptionNewRequest */\n/** @typedef {{[k: string]: AliasOptionNewRequest}} AliasOptions */\n/** @typedef {{apply: function(Resolver): void} | function(this: Resolver, Resolver): void} Plugin */\n\n/**\n * @typedef {Object} UserResolveOptions\n * @property {(AliasOptions | AliasOptionEntry[])=} alias A list of module alias configurations or an object which maps key to value\n * @property {(AliasOptions | AliasOptionEntry[])=} fallback A list of module alias configurations or an object which maps key to value, applied only after modules option\n * @property {(string | string[])[]=} aliasFields A list of alias fields in description files\n * @property {(function(ResolveRequest): boolean)=} cachePredicate A function which decides whether a request should be cached or not. An object is passed with at least `path` and `request` properties.\n * @property {boolean=} cacheWithContext Whether or not the unsafeCache should include request context as part of the cache key.\n * @property {string[]=} descriptionFiles A list of description files to read from\n * @property {string[]=} conditionNames A list of exports field condition names.\n * @property {boolean=} enforceExtension Enforce that a extension from extensions must be used\n * @property {(string | string[])[]=} exportsFields A list of exports fields in description files\n * @property {(string | string[])[]=} importsFields A list of imports fields in description files\n * @property {string[]=} extensions A list of extensions which should be tried for files\n * @property {FileSystem} fileSystem The file system which should be used\n * @property {(Object | boolean)=} unsafeCache Use this cache object to unsafely cache the successful requests\n * @property {boolean=} symlinks Resolve symlinks to their symlinked location\n * @property {Resolver=} resolver A prepared Resolver to which the plugins are attached\n * @property {string[] | string=} modules A list of directories to resolve modules from, can be absolute path or folder name\n * @property {(string | string[] | {name: string | string[], forceRelative: boolean})[]=} mainFields A list of main fields in description files\n * @property {string[]=} mainFiles  A list of main files in directories\n * @property {Plugin[]=} plugins A list of additional resolve plugins which should be applied\n * @property {PnpApi | null=} pnpApi A PnP API that should be used - null is \"never\", undefined is \"auto\"\n * @property {string[]=} roots A list of root paths\n * @property {boolean=} fullySpecified The request is already fully specified and no extensions or directories are resolved for it\n * @property {boolean=} resolveToContext Resolve to a context instead of a file\n * @property {(string|RegExp)[]=} restrictions A list of resolve restrictions\n * @property {boolean=} useSyncFileSystemCalls Use only the sync constiants of the file system calls\n * @property {boolean=} preferRelative Prefer to resolve module requests as relative requests before falling back to modules\n */\n\n/**\n * @typedef {Object} ResolveOptions\n * @property {AliasOptionEntry[]} alias\n * @property {AliasOptionEntry[]} fallback\n * @property {Set<string | string[]>} aliasFields\n * @property {(function(ResolveRequest): boolean)} cachePredicate\n * @property {boolean} cacheWithContext\n * @property {Set<string>} conditionNames A list of exports field condition names.\n * @property {string[]} descriptionFiles\n * @property {boolean} enforceExtension\n * @property {Set<string | string[]>} exportsFields\n * @property {Set<string | string[]>} importsFields\n * @property {Set<string>} extensions\n * @property {FileSystem} fileSystem\n * @property {Object | false} unsafeCache\n * @property {boolean} symlinks\n * @property {Resolver=} resolver\n * @property {Array<string | string[]>} modules\n * @property {{name: string[], forceRelative: boolean}[]} mainFields\n * @property {Set<string>} mainFiles\n * @property {Plugin[]} plugins\n * @property {PnpApi | null} pnpApi\n * @property {Set<string>} roots\n * @property {boolean} fullySpecified\n * @property {boolean} resolveToContext\n * @property {Set<string|RegExp>} restrictions\n * @property {boolean} preferRelative\n */\n\n/**\n * @param {PnpApi | null=} option option\n * @returns {PnpApi | null} processed option\n */\nfunction processPnpApiOption(option) {\n\tif (\n\t\toption === undefined &&\n\t\t/** @type {NodeJS.ProcessVersions & {pnp: string}} */ (process.versions).pnp\n\t) {\n\t\t// @ts-ignore\n\t\treturn require(\"pnpapi\"); // eslint-disable-line node/no-missing-require\n\t}\n\n\treturn option || null;\n}\n\n/**\n * @param {AliasOptions | AliasOptionEntry[] | undefined} alias alias\n * @returns {AliasOptionEntry[]} normalized aliases\n */\nfunction normalizeAlias(alias) {\n\treturn typeof alias === \"object\" && !Array.isArray(alias) && alias !== null\n\t\t? Object.keys(alias).map(key => {\n\t\t\t\t/** @type {AliasOptionEntry} */\n\t\t\t\tconst obj = { name: key, onlyModule: false, alias: alias[key] };\n\n\t\t\t\tif (/\\$$/.test(key)) {\n\t\t\t\t\tobj.onlyModule = true;\n\t\t\t\t\tobj.name = key.substr(0, key.length - 1);\n\t\t\t\t}\n\n\t\t\t\treturn obj;\n\t\t  })\n\t\t: /** @type {Array<AliasOptionEntry>} */ (alias) || [];\n}\n\n/**\n * @param {UserResolveOptions} options input options\n * @returns {ResolveOptions} output options\n */\nfunction createOptions(options) {\n\tconst mainFieldsSet = new Set(options.mainFields || [\"main\"]);\n\tconst mainFields = [];\n\n\tfor (const item of mainFieldsSet) {\n\t\tif (typeof item === \"string\") {\n\t\t\tmainFields.push({\n\t\t\t\tname: [item],\n\t\t\t\tforceRelative: true\n\t\t\t});\n\t\t} else if (Array.isArray(item)) {\n\t\t\tmainFields.push({\n\t\t\t\tname: item,\n\t\t\t\tforceRelative: true\n\t\t\t});\n\t\t} else {\n\t\t\tmainFields.push({\n\t\t\t\tname: Array.isArray(item.name) ? item.name : [item.name],\n\t\t\t\tforceRelative: item.forceRelative\n\t\t\t});\n\t\t}\n\t}\n\n\treturn {\n\t\talias: normalizeAlias(options.alias),\n\t\tfallback: normalizeAlias(options.fallback),\n\t\taliasFields: new Set(options.aliasFields),\n\t\tcachePredicate:\n\t\t\toptions.cachePredicate ||\n\t\t\tfunction () {\n\t\t\t\treturn true;\n\t\t\t},\n\t\tcacheWithContext:\n\t\t\ttypeof options.cacheWithContext !== \"undefined\"\n\t\t\t\t? options.cacheWithContext\n\t\t\t\t: true,\n\t\texportsFields: new Set(options.exportsFields || [\"exports\"]),\n\t\timportsFields: new Set(options.importsFields || [\"imports\"]),\n\t\tconditionNames: new Set(options.conditionNames),\n\t\tdescriptionFiles: Array.from(\n\t\t\tnew Set(options.descriptionFiles || [\"package.json\"])\n\t\t),\n\t\tenforceExtension: options.enforceExtension || false,\n\t\textensions: new Set(options.extensions || [\".js\", \".json\", \".node\"]),\n\t\tfileSystem: options.useSyncFileSystemCalls\n\t\t\t? new SyncAsyncFileSystemDecorator(\n\t\t\t\t\t/** @type {SyncFileSystem} */ (\n\t\t\t\t\t\t/** @type {unknown} */ (options.fileSystem)\n\t\t\t\t\t)\n\t\t\t  )\n\t\t\t: options.fileSystem,\n\t\tunsafeCache:\n\t\t\toptions.unsafeCache && typeof options.unsafeCache !== \"object\"\n\t\t\t\t? {}\n\t\t\t\t: options.unsafeCache || false,\n\t\tsymlinks: typeof options.symlinks !== \"undefined\" ? options.symlinks : true,\n\t\tresolver: options.resolver,\n\t\tmodules: mergeFilteredToArray(\n\t\t\tArray.isArray(options.modules)\n\t\t\t\t? options.modules\n\t\t\t\t: options.modules\n\t\t\t\t? [options.modules]\n\t\t\t\t: [\"node_modules\"],\n\t\t\titem => {\n\t\t\t\tconst type = getType(item);\n\t\t\t\treturn type === PathType.Normal || type === PathType.Relative;\n\t\t\t}\n\t\t),\n\t\tmainFields,\n\t\tmainFiles: new Set(options.mainFiles || [\"index\"]),\n\t\tplugins: options.plugins || [],\n\t\tpnpApi: processPnpApiOption(options.pnpApi),\n\t\troots: new Set(options.roots || undefined),\n\t\tfullySpecified: options.fullySpecified || false,\n\t\tresolveToContext: options.resolveToContext || false,\n\t\tpreferRelative: options.preferRelative || false,\n\t\trestrictions: new Set(options.restrictions)\n\t};\n}\n\n/**\n * @param {UserResolveOptions} options resolve options\n * @returns {Resolver} created resolver\n */\nexports.createResolver = function (options) {\n\tconst normalizedOptions = createOptions(options);\n\n\tconst {\n\t\talias,\n\t\tfallback,\n\t\taliasFields,\n\t\tcachePredicate,\n\t\tcacheWithContext,\n\t\tconditionNames,\n\t\tdescriptionFiles,\n\t\tenforceExtension,\n\t\texportsFields,\n\t\timportsFields,\n\t\textensions,\n\t\tfileSystem,\n\t\tfullySpecified,\n\t\tmainFields,\n\t\tmainFiles,\n\t\tmodules,\n\t\tplugins: userPlugins,\n\t\tpnpApi,\n\t\tresolveToContext,\n\t\tpreferRelative,\n\t\tsymlinks,\n\t\tunsafeCache,\n\t\tresolver: customResolver,\n\t\trestrictions,\n\t\troots\n\t} = normalizedOptions;\n\n\tconst plugins = userPlugins.slice();\n\n\tconst resolver = customResolver\n\t\t? customResolver\n\t\t: new Resolver(fileSystem, normalizedOptions);\n\n\t//// pipeline ////\n\n\tresolver.ensureHook(\"resolve\");\n\tresolver.ensureHook(\"internalResolve\");\n\tresolver.ensureHook(\"newInteralResolve\");\n\tresolver.ensureHook(\"parsedResolve\");\n\tresolver.ensureHook(\"describedResolve\");\n\tresolver.ensureHook(\"internal\");\n\tresolver.ensureHook(\"rawModule\");\n\tresolver.ensureHook(\"module\");\n\tresolver.ensureHook(\"resolveAsModule\");\n\tresolver.ensureHook(\"undescribedResolveInPackage\");\n\tresolver.ensureHook(\"resolveInPackage\");\n\tresolver.ensureHook(\"resolveInExistingDirectory\");\n\tresolver.ensureHook(\"relative\");\n\tresolver.ensureHook(\"describedRelative\");\n\tresolver.ensureHook(\"directory\");\n\tresolver.ensureHook(\"undescribedExistingDirectory\");\n\tresolver.ensureHook(\"existingDirectory\");\n\tresolver.ensureHook(\"undescribedRawFile\");\n\tresolver.ensureHook(\"rawFile\");\n\tresolver.ensureHook(\"file\");\n\tresolver.ensureHook(\"finalFile\");\n\tresolver.ensureHook(\"existingFile\");\n\tresolver.ensureHook(\"resolved\");\n\n\t// resolve\n\tfor (const { source, resolveOptions } of [\n\t\t{ source: \"resolve\", resolveOptions: { fullySpecified } },\n\t\t{ source: \"internal-resolve\", resolveOptions: { fullySpecified: false } }\n\t]) {\n\t\tif (unsafeCache) {\n\t\t\tplugins.push(\n\t\t\t\tnew UnsafeCachePlugin(\n\t\t\t\t\tsource,\n\t\t\t\t\tcachePredicate,\n\t\t\t\t\tunsafeCache,\n\t\t\t\t\tcacheWithContext,\n\t\t\t\t\t`new-${source}`\n\t\t\t\t)\n\t\t\t);\n\t\t\tplugins.push(\n\t\t\t\tnew ParsePlugin(`new-${source}`, resolveOptions, \"parsed-resolve\")\n\t\t\t);\n\t\t} else {\n\t\t\tplugins.push(new ParsePlugin(source, resolveOptions, \"parsed-resolve\"));\n\t\t}\n\t}\n\n\t// parsed-resolve\n\tplugins.push(\n\t\tnew DescriptionFilePlugin(\n\t\t\t\"parsed-resolve\",\n\t\t\tdescriptionFiles,\n\t\t\tfalse,\n\t\t\t\"described-resolve\"\n\t\t)\n\t);\n\tplugins.push(new NextPlugin(\"after-parsed-resolve\", \"described-resolve\"));\n\n\t// described-resolve\n\tplugins.push(new NextPlugin(\"described-resolve\", \"normal-resolve\"));\n\tif (fallback.length > 0) {\n\t\tplugins.push(\n\t\t\tnew AliasPlugin(\"described-resolve\", fallback, \"internal-resolve\")\n\t\t);\n\t}\n\n\t// normal-resolve\n\tif (alias.length > 0)\n\t\tplugins.push(new AliasPlugin(\"normal-resolve\", alias, \"internal-resolve\"));\n\taliasFields.forEach(item => {\n\t\tplugins.push(\n\t\t\tnew AliasFieldPlugin(\"normal-resolve\", item, \"internal-resolve\")\n\t\t);\n\t});\n\tif (preferRelative) {\n\t\tplugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n\t}\n\tplugins.push(\n\t\tnew ConditionalPlugin(\n\t\t\t\"after-normal-resolve\",\n\t\t\t{ module: true },\n\t\t\t\"resolve as module\",\n\t\t\tfalse,\n\t\t\t\"raw-module\"\n\t\t)\n\t);\n\tplugins.push(\n\t\tnew ConditionalPlugin(\n\t\t\t\"after-normal-resolve\",\n\t\t\t{ internal: true },\n\t\t\t\"resolve as internal import\",\n\t\t\tfalse,\n\t\t\t\"internal\"\n\t\t)\n\t);\n\tif (roots.size > 0) {\n\t\tplugins.push(new RootsPlugin(\"after-normal-resolve\", roots, \"relative\"));\n\t}\n\tif (!preferRelative) {\n\t\tplugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n\t}\n\n\t// internal\n\timportsFields.forEach(importsField => {\n\t\tplugins.push(\n\t\t\tnew ImportsFieldPlugin(\n\t\t\t\t\"internal\",\n\t\t\t\tconditionNames,\n\t\t\t\timportsField,\n\t\t\t\t\"relative\",\n\t\t\t\t\"internal-resolve\"\n\t\t\t)\n\t\t);\n\t});\n\n\t// raw-module\n\texportsFields.forEach(exportsField => {\n\t\tplugins.push(\n\t\t\tnew SelfReferencePlugin(\"raw-module\", exportsField, \"resolve-as-module\")\n\t\t);\n\t});\n\tmodules.forEach(item => {\n\t\tif (Array.isArray(item)) {\n\t\t\tplugins.push(\n\t\t\t\tnew ModulesInHierachicDirectoriesPlugin(\"raw-module\", item, \"module\")\n\t\t\t);\n\t\t\tif (item.includes(\"node_modules\") && pnpApi) {\n\t\t\t\tplugins.push(new PnpPlugin(\"raw-module\", pnpApi, \"relative\"));\n\t\t\t}\n\t\t} else {\n\t\t\tplugins.push(new ModulesInRootPlugin(\"raw-module\", item, \"module\"));\n\t\t}\n\t});\n\n\t// module\n\tplugins.push(new JoinRequestPartPlugin(\"module\", \"resolve-as-module\"));\n\n\t// resolve-as-module\n\tif (!resolveToContext) {\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"resolve-as-module\",\n\t\t\t\t{ directory: false, request: \".\" },\n\t\t\t\t\"single file module\",\n\t\t\t\ttrue,\n\t\t\t\t\"undescribed-raw-file\"\n\t\t\t)\n\t\t);\n\t}\n\tplugins.push(\n\t\tnew DirectoryExistsPlugin(\n\t\t\t\"resolve-as-module\",\n\t\t\t\"undescribed-resolve-in-package\"\n\t\t)\n\t);\n\n\t// undescribed-resolve-in-package\n\tplugins.push(\n\t\tnew DescriptionFilePlugin(\n\t\t\t\"undescribed-resolve-in-package\",\n\t\t\tdescriptionFiles,\n\t\t\tfalse,\n\t\t\t\"resolve-in-package\"\n\t\t)\n\t);\n\tplugins.push(\n\t\tnew NextPlugin(\"after-undescribed-resolve-in-package\", \"resolve-in-package\")\n\t);\n\n\t// resolve-in-package\n\texportsFields.forEach(exportsField => {\n\t\tplugins.push(\n\t\t\tnew ExportsFieldPlugin(\n\t\t\t\t\"resolve-in-package\",\n\t\t\t\tconditionNames,\n\t\t\t\texportsField,\n\t\t\t\t\"relative\"\n\t\t\t)\n\t\t);\n\t});\n\tplugins.push(\n\t\tnew NextPlugin(\"resolve-in-package\", \"resolve-in-existing-directory\")\n\t);\n\n\t// resolve-in-existing-directory\n\tplugins.push(\n\t\tnew JoinRequestPlugin(\"resolve-in-existing-directory\", \"relative\")\n\t);\n\n\t// relative\n\tplugins.push(\n\t\tnew DescriptionFilePlugin(\n\t\t\t\"relative\",\n\t\t\tdescriptionFiles,\n\t\t\ttrue,\n\t\t\t\"described-relative\"\n\t\t)\n\t);\n\tplugins.push(new NextPlugin(\"after-relative\", \"described-relative\"));\n\n\t// described-relative\n\tif (resolveToContext) {\n\t\tplugins.push(new NextPlugin(\"described-relative\", \"directory\"));\n\t} else {\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"described-relative\",\n\t\t\t\t{ directory: false },\n\t\t\t\tnull,\n\t\t\t\ttrue,\n\t\t\t\t\"raw-file\"\n\t\t\t)\n\t\t);\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"described-relative\",\n\t\t\t\t{ fullySpecified: false },\n\t\t\t\t\"as directory\",\n\t\t\t\ttrue,\n\t\t\t\t\"directory\"\n\t\t\t)\n\t\t);\n\t}\n\n\t// directory\n\tplugins.push(\n\t\tnew DirectoryExistsPlugin(\"directory\", \"undescribed-existing-directory\")\n\t);\n\n\tif (resolveToContext) {\n\t\t// undescribed-existing-directory\n\t\tplugins.push(new NextPlugin(\"undescribed-existing-directory\", \"resolved\"));\n\t} else {\n\t\t// undescribed-existing-directory\n\t\tplugins.push(\n\t\t\tnew DescriptionFilePlugin(\n\t\t\t\t\"undescribed-existing-directory\",\n\t\t\t\tdescriptionFiles,\n\t\t\t\tfalse,\n\t\t\t\t\"existing-directory\"\n\t\t\t)\n\t\t);\n\t\tmainFiles.forEach(item => {\n\t\t\tplugins.push(\n\t\t\t\tnew UseFilePlugin(\n\t\t\t\t\t\"undescribed-existing-directory\",\n\t\t\t\t\titem,\n\t\t\t\t\t\"undescribed-raw-file\"\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\n\t\t// described-existing-directory\n\t\tmainFields.forEach(item => {\n\t\t\tplugins.push(\n\t\t\t\tnew MainFieldPlugin(\n\t\t\t\t\t\"existing-directory\",\n\t\t\t\t\titem,\n\t\t\t\t\t\"resolve-in-existing-directory\"\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t\tmainFiles.forEach(item => {\n\t\t\tplugins.push(\n\t\t\t\tnew UseFilePlugin(\"existing-directory\", item, \"undescribed-raw-file\")\n\t\t\t);\n\t\t});\n\n\t\t// undescribed-raw-file\n\t\tplugins.push(\n\t\t\tnew DescriptionFilePlugin(\n\t\t\t\t\"undescribed-raw-file\",\n\t\t\t\tdescriptionFiles,\n\t\t\t\ttrue,\n\t\t\t\t\"raw-file\"\n\t\t\t)\n\t\t);\n\t\tplugins.push(new NextPlugin(\"after-undescribed-raw-file\", \"raw-file\"));\n\n\t\t// raw-file\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"raw-file\",\n\t\t\t\t{ fullySpecified: true },\n\t\t\t\tnull,\n\t\t\t\tfalse,\n\t\t\t\t\"file\"\n\t\t\t)\n\t\t);\n\t\tif (!enforceExtension) {\n\t\t\tplugins.push(new TryNextPlugin(\"raw-file\", \"no extension\", \"file\"));\n\t\t}\n\t\textensions.forEach(item => {\n\t\t\tplugins.push(new AppendPlugin(\"raw-file\", item, \"file\"));\n\t\t});\n\n\t\t// file\n\t\tif (alias.length > 0)\n\t\t\tplugins.push(new AliasPlugin(\"file\", alias, \"internal-resolve\"));\n\t\taliasFields.forEach(item => {\n\t\t\tplugins.push(new AliasFieldPlugin(\"file\", item, \"internal-resolve\"));\n\t\t});\n\t\tplugins.push(new NextPlugin(\"file\", \"final-file\"));\n\n\t\t// final-file\n\t\tplugins.push(new FileExistsPlugin(\"final-file\", \"existing-file\"));\n\n\t\t// existing-file\n\t\tif (symlinks)\n\t\t\tplugins.push(new SymlinkPlugin(\"existing-file\", \"existing-file\"));\n\t\tplugins.push(new NextPlugin(\"existing-file\", \"resolved\"));\n\t}\n\n\t// resolved\n\tif (restrictions.size > 0) {\n\t\tplugins.push(new RestrictionsPlugin(resolver.hooks.resolved, restrictions));\n\t}\n\tplugins.push(new ResultPlugin(resolver.hooks.resolved));\n\n\t//// RESOLVER ////\n\n\tfor (const plugin of plugins) {\n\t\tif (typeof plugin === \"function\") {\n\t\t\tplugin.call(resolver, resolver);\n\t\t} else {\n\t\t\tplugin.apply(resolver);\n\t\t}\n\t}\n\n\treturn resolver;\n};\n\n/**\n * Merging filtered elements\n * @param {string[]} array source array\n * @param {function(string): boolean} filter predicate\n * @returns {Array<string | string[]>} merge result\n */\nfunction mergeFilteredToArray(array, filter) {\n\t/** @type {Array<string | string[]>} */\n\tconst result = [];\n\tconst set = new Set(array);\n\n\tfor (const item of set) {\n\t\tif (filter(item)) {\n\t\t\tconst lastElement =\n\t\t\t\tresult.length > 0 ? result[result.length - 1] : undefined;\n\t\t\tif (Array.isArray(lastElement)) {\n\t\t\t\tlastElement.push(item);\n\t\t\t} else {\n\t\t\t\tresult.push([item]);\n\t\t\t}\n\t\t} else {\n\t\t\tresult.push(item);\n\t\t}\n\t}\n\n\treturn result;\n}\n"]},"metadata":{},"sourceType":"script"}