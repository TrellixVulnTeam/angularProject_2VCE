{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Template = require(\"../Template\");\n\nvar WebWorkerMainTemplatePlugin = /*#__PURE__*/function () {\n  function WebWorkerMainTemplatePlugin() {\n    _classCallCheck(this, WebWorkerMainTemplatePlugin);\n  }\n\n  _createClass(WebWorkerMainTemplatePlugin, [{\n    key: \"apply\",\n    value: function apply(mainTemplate) {\n      var needChunkOnDemandLoadingCode = function needChunkOnDemandLoadingCode(chunk) {\n        var _iterator = _createForOfIteratorHelper(chunk.groupsIterable),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var chunkGroup = _step.value;\n            if (chunkGroup.getNumberOfChildren() > 0) return true;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        return false;\n      };\n\n      mainTemplate.hooks.localVars.tap(\"WebWorkerMainTemplatePlugin\", function (source, chunk) {\n        if (needChunkOnDemandLoadingCode(chunk)) {\n          return Template.asString([source, \"\", \"// object to store loaded chunks\", '// \"1\" means \"already loaded\"', \"var installedChunks = {\", Template.indent(chunk.ids.map(function (id) {\n            return \"\".concat(JSON.stringify(id), \": 1\");\n          }).join(\",\\n\")), \"};\"]);\n        }\n\n        return source;\n      });\n      mainTemplate.hooks.requireEnsure.tap(\"WebWorkerMainTemplatePlugin\", function (_, chunk, hash) {\n        var chunkFilename = mainTemplate.outputOptions.chunkFilename;\n        var chunkMaps = chunk.getChunkMaps();\n        return Template.asString([\"promises.push(Promise.resolve().then(function() {\", Template.indent(['// \"1\" is the signal for \"already loaded\"', \"if(!installedChunks[chunkId]) {\", Template.indent([\"importScripts(\" + \"__webpack_require__.p + \" + mainTemplate.getAssetPath(JSON.stringify(chunkFilename), {\n          hash: \"\\\" + \".concat(mainTemplate.renderCurrentHashCode(hash), \" + \\\"\"),\n          hashWithLength: function hashWithLength(length) {\n            return \"\\\" + \".concat(mainTemplate.renderCurrentHashCode(hash, length), \" + \\\"\");\n          },\n          chunk: {\n            id: '\" + chunkId + \"',\n            hash: \"\\\" + \".concat(JSON.stringify(chunkMaps.hash), \"[chunkId] + \\\"\"),\n            hashWithLength: function hashWithLength(length) {\n              var shortChunkHashMap = Object.create(null);\n\n              for (var _i = 0, _Object$keys = Object.keys(chunkMaps.hash); _i < _Object$keys.length; _i++) {\n                var chunkId = _Object$keys[_i];\n\n                if (typeof chunkMaps.hash[chunkId] === \"string\") {\n                  shortChunkHashMap[chunkId] = chunkMaps.hash[chunkId].substr(0, length);\n                }\n              }\n\n              return \"\\\" + \".concat(JSON.stringify(shortChunkHashMap), \"[chunkId] + \\\"\");\n            },\n            contentHash: {\n              javascript: \"\\\" + \".concat(JSON.stringify(chunkMaps.contentHash.javascript), \"[chunkId] + \\\"\")\n            },\n            contentHashWithLength: {\n              javascript: function javascript(length) {\n                var shortContentHashMap = {};\n                var contentHash = chunkMaps.contentHash.javascript;\n\n                for (var _i2 = 0, _Object$keys2 = Object.keys(contentHash); _i2 < _Object$keys2.length; _i2++) {\n                  var chunkId = _Object$keys2[_i2];\n\n                  if (typeof contentHash[chunkId] === \"string\") {\n                    shortContentHashMap[chunkId] = contentHash[chunkId].substr(0, length);\n                  }\n                }\n\n                return \"\\\" + \".concat(JSON.stringify(shortContentHashMap), \"[chunkId] + \\\"\");\n              }\n            },\n            name: \"\\\" + (\".concat(JSON.stringify(chunkMaps.name), \"[chunkId]||chunkId) + \\\"\")\n          },\n          contentHashType: \"javascript\"\n        }) + \");\"]), \"}\"]), \"}));\"]);\n      });\n      mainTemplate.hooks.bootstrap.tap(\"WebWorkerMainTemplatePlugin\", function (source, chunk, hash) {\n        if (needChunkOnDemandLoadingCode(chunk)) {\n          var chunkCallbackName = mainTemplate.outputOptions.chunkCallbackName;\n          var globalObject = mainTemplate.outputOptions.globalObject;\n          return Template.asString([source, \"\".concat(globalObject, \"[\").concat(JSON.stringify(chunkCallbackName), \"] = function webpackChunkCallback(chunkIds, moreModules) {\"), Template.indent([\"for(var moduleId in moreModules) {\", Template.indent(mainTemplate.renderAddModule(hash, chunk, \"moduleId\", \"moreModules[moduleId]\")), \"}\", \"while(chunkIds.length)\", Template.indent(\"installedChunks[chunkIds.pop()] = 1;\")]), \"};\"]);\n        }\n\n        return source;\n      });\n      mainTemplate.hooks.hotBootstrap.tap(\"WebWorkerMainTemplatePlugin\", function (source, chunk, hash) {\n        var hotUpdateChunkFilename = mainTemplate.outputOptions.hotUpdateChunkFilename;\n        var hotUpdateMainFilename = mainTemplate.outputOptions.hotUpdateMainFilename;\n        var hotUpdateFunction = mainTemplate.outputOptions.hotUpdateFunction;\n        var globalObject = mainTemplate.outputOptions.globalObject;\n        var currentHotUpdateChunkFilename = mainTemplate.getAssetPath(JSON.stringify(hotUpdateChunkFilename), {\n          hash: \"\\\" + \".concat(mainTemplate.renderCurrentHashCode(hash), \" + \\\"\"),\n          hashWithLength: function hashWithLength(length) {\n            return \"\\\" + \".concat(mainTemplate.renderCurrentHashCode(hash, length), \" + \\\"\");\n          },\n          chunk: {\n            id: '\" + chunkId + \"'\n          }\n        });\n        var currentHotUpdateMainFilename = mainTemplate.getAssetPath(JSON.stringify(hotUpdateMainFilename), {\n          hash: \"\\\" + \".concat(mainTemplate.renderCurrentHashCode(hash), \" + \\\"\"),\n          hashWithLength: function hashWithLength(length) {\n            return \"\\\" + \".concat(mainTemplate.renderCurrentHashCode(hash, length), \" + \\\"\");\n          }\n        });\n        return source + \"\\n\" + \"var parentHotUpdateCallback = \".concat(globalObject, \"[\").concat(JSON.stringify(hotUpdateFunction), \"];\\n\") + \"\".concat(globalObject, \"[\").concat(JSON.stringify(hotUpdateFunction), \"] = \") + Template.getFunctionContent(require(\"./WebWorkerMainTemplate.runtime\")).replace(/\\/\\/\\$semicolon/g, \";\").replace(/\\$require\\$/g, mainTemplate.requireFn).replace(/\\$hotMainFilename\\$/g, currentHotUpdateMainFilename).replace(/\\$hotChunkFilename\\$/g, currentHotUpdateChunkFilename).replace(/\\$hash\\$/g, JSON.stringify(hash));\n      });\n      mainTemplate.hooks.hash.tap(\"WebWorkerMainTemplatePlugin\", function (hash) {\n        hash.update(\"webworker\");\n        hash.update(\"4\");\n      });\n    }\n  }]);\n\n  return WebWorkerMainTemplatePlugin;\n}();\n\nmodule.exports = WebWorkerMainTemplatePlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/webworker/WebWorkerMainTemplatePlugin.js"],"names":["Template","require","WebWorkerMainTemplatePlugin","mainTemplate","needChunkOnDemandLoadingCode","chunk","groupsIterable","chunkGroup","getNumberOfChildren","hooks","localVars","tap","source","asString","indent","ids","map","id","JSON","stringify","join","requireEnsure","_","hash","chunkFilename","outputOptions","chunkMaps","getChunkMaps","getAssetPath","renderCurrentHashCode","hashWithLength","length","shortChunkHashMap","Object","create","keys","chunkId","substr","contentHash","javascript","contentHashWithLength","shortContentHashMap","name","contentHashType","bootstrap","chunkCallbackName","globalObject","renderAddModule","hotBootstrap","hotUpdateChunkFilename","hotUpdateMainFilename","hotUpdateFunction","currentHotUpdateChunkFilename","currentHotUpdateMainFilename","getFunctionContent","replace","requireFn","update","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"../Template\");\n\nclass WebWorkerMainTemplatePlugin {\n\tapply(mainTemplate) {\n\t\tconst needChunkOnDemandLoadingCode = chunk => {\n\t\t\tfor (const chunkGroup of chunk.groupsIterable) {\n\t\t\t\tif (chunkGroup.getNumberOfChildren() > 0) return true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tmainTemplate.hooks.localVars.tap(\n\t\t\t\"WebWorkerMainTemplatePlugin\",\n\t\t\t(source, chunk) => {\n\t\t\t\tif (needChunkOnDemandLoadingCode(chunk)) {\n\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\"// object to store loaded chunks\",\n\t\t\t\t\t\t'// \"1\" means \"already loaded\"',\n\t\t\t\t\t\t\"var installedChunks = {\",\n\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\tchunk.ids.map(id => `${JSON.stringify(id)}: 1`).join(\",\\n\")\n\t\t\t\t\t\t),\n\t\t\t\t\t\t\"};\"\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.requireEnsure.tap(\n\t\t\t\"WebWorkerMainTemplatePlugin\",\n\t\t\t(_, chunk, hash) => {\n\t\t\t\tconst chunkFilename = mainTemplate.outputOptions.chunkFilename;\n\t\t\t\tconst chunkMaps = chunk.getChunkMaps();\n\t\t\t\treturn Template.asString([\n\t\t\t\t\t\"promises.push(Promise.resolve().then(function() {\",\n\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t'// \"1\" is the signal for \"already loaded\"',\n\t\t\t\t\t\t\"if(!installedChunks[chunkId]) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"importScripts(\" +\n\t\t\t\t\t\t\t\t\"__webpack_require__.p + \" +\n\t\t\t\t\t\t\t\tmainTemplate.getAssetPath(JSON.stringify(chunkFilename), {\n\t\t\t\t\t\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n\t\t\t\t\t\t\t\t\thashWithLength: length =>\n\t\t\t\t\t\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(\n\t\t\t\t\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\t\t\t\t\tlength\n\t\t\t\t\t\t\t\t\t\t)} + \"`,\n\t\t\t\t\t\t\t\t\tchunk: {\n\t\t\t\t\t\t\t\t\t\tid: '\" + chunkId + \"',\n\t\t\t\t\t\t\t\t\t\thash: `\" + ${JSON.stringify(chunkMaps.hash)}[chunkId] + \"`,\n\t\t\t\t\t\t\t\t\t\thashWithLength(length) {\n\t\t\t\t\t\t\t\t\t\t\tconst shortChunkHashMap = Object.create(null);\n\t\t\t\t\t\t\t\t\t\t\tfor (const chunkId of Object.keys(chunkMaps.hash)) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (typeof chunkMaps.hash[chunkId] === \"string\") {\n\t\t\t\t\t\t\t\t\t\t\t\t\tshortChunkHashMap[chunkId] = chunkMaps.hash[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchunkId\n\t\t\t\t\t\t\t\t\t\t\t\t\t].substr(0, length);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\tshortChunkHashMap\n\t\t\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`;\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tcontentHash: {\n\t\t\t\t\t\t\t\t\t\t\tjavascript: `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\tchunkMaps.contentHash.javascript\n\t\t\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tcontentHashWithLength: {\n\t\t\t\t\t\t\t\t\t\t\tjavascript: length => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst shortContentHashMap = {};\n\t\t\t\t\t\t\t\t\t\t\t\tconst contentHash = chunkMaps.contentHash.javascript;\n\t\t\t\t\t\t\t\t\t\t\t\tfor (const chunkId of Object.keys(contentHash)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (typeof contentHash[chunkId] === \"string\") {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshortContentHashMap[chunkId] = contentHash[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchunkId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t].substr(0, length);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\treturn `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\tshortContentHashMap\n\t\t\t\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tname: `\" + (${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\tchunkMaps.name\n\t\t\t\t\t\t\t\t\t\t)}[chunkId]||chunkId) + \"`\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t\t\t}) +\n\t\t\t\t\t\t\t\t\");\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t\t]),\n\t\t\t\t\t\"}));\"\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.bootstrap.tap(\n\t\t\t\"WebWorkerMainTemplatePlugin\",\n\t\t\t(source, chunk, hash) => {\n\t\t\t\tif (needChunkOnDemandLoadingCode(chunk)) {\n\t\t\t\t\tconst chunkCallbackName =\n\t\t\t\t\t\tmainTemplate.outputOptions.chunkCallbackName;\n\t\t\t\t\tconst globalObject = mainTemplate.outputOptions.globalObject;\n\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\t`${globalObject}[${JSON.stringify(\n\t\t\t\t\t\t\tchunkCallbackName\n\t\t\t\t\t\t)}] = function webpackChunkCallback(chunkIds, moreModules) {`,\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"for(var moduleId in moreModules) {\",\n\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\tmainTemplate.renderAddModule(\n\t\t\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\t\"moduleId\",\n\t\t\t\t\t\t\t\t\t\"moreModules[moduleId]\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\"while(chunkIds.length)\",\n\t\t\t\t\t\t\tTemplate.indent(\"installedChunks[chunkIds.pop()] = 1;\")\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"};\"\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.hotBootstrap.tap(\n\t\t\t\"WebWorkerMainTemplatePlugin\",\n\t\t\t(source, chunk, hash) => {\n\t\t\t\tconst hotUpdateChunkFilename =\n\t\t\t\t\tmainTemplate.outputOptions.hotUpdateChunkFilename;\n\t\t\t\tconst hotUpdateMainFilename =\n\t\t\t\t\tmainTemplate.outputOptions.hotUpdateMainFilename;\n\t\t\t\tconst hotUpdateFunction = mainTemplate.outputOptions.hotUpdateFunction;\n\t\t\t\tconst globalObject = mainTemplate.outputOptions.globalObject;\n\t\t\t\tconst currentHotUpdateChunkFilename = mainTemplate.getAssetPath(\n\t\t\t\t\tJSON.stringify(hotUpdateChunkFilename),\n\t\t\t\t\t{\n\t\t\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n\t\t\t\t\t\thashWithLength: length =>\n\t\t\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`,\n\t\t\t\t\t\tchunk: {\n\t\t\t\t\t\t\tid: '\" + chunkId + \"'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst currentHotUpdateMainFilename = mainTemplate.getAssetPath(\n\t\t\t\t\tJSON.stringify(hotUpdateMainFilename),\n\t\t\t\t\t{\n\t\t\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n\t\t\t\t\t\thashWithLength: length =>\n\t\t\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\treturn (\n\t\t\t\t\tsource +\n\t\t\t\t\t\"\\n\" +\n\t\t\t\t\t`var parentHotUpdateCallback = ${globalObject}[${JSON.stringify(\n\t\t\t\t\t\thotUpdateFunction\n\t\t\t\t\t)}];\\n` +\n\t\t\t\t\t`${globalObject}[${JSON.stringify(hotUpdateFunction)}] = ` +\n\t\t\t\t\tTemplate.getFunctionContent(\n\t\t\t\t\t\trequire(\"./WebWorkerMainTemplate.runtime\")\n\t\t\t\t\t)\n\t\t\t\t\t\t.replace(/\\/\\/\\$semicolon/g, \";\")\n\t\t\t\t\t\t.replace(/\\$require\\$/g, mainTemplate.requireFn)\n\t\t\t\t\t\t.replace(/\\$hotMainFilename\\$/g, currentHotUpdateMainFilename)\n\t\t\t\t\t\t.replace(/\\$hotChunkFilename\\$/g, currentHotUpdateChunkFilename)\n\t\t\t\t\t\t.replace(/\\$hash\\$/g, JSON.stringify(hash))\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.hash.tap(\"WebWorkerMainTemplatePlugin\", hash => {\n\t\t\thash.update(\"webworker\");\n\t\t\thash.update(\"4\");\n\t\t});\n\t}\n}\nmodule.exports = WebWorkerMainTemplatePlugin;\n"]},"metadata":{},"sourceType":"script"}