{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nmodule.exports = /*#__PURE__*/function () {\n  function ParsePlugin(source, target) {\n    _classCallCheck(this, ParsePlugin);\n\n    this.source = source;\n    this.target = target;\n  }\n\n  _createClass(ParsePlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"ParsePlugin\", function (request, resolveContext, callback) {\n        var parsed = resolver.parse(request.request);\n        var obj = Object.assign({}, request, parsed);\n\n        if (request.query && !parsed.query) {\n          obj.query = request.query;\n        }\n\n        if (parsed && resolveContext.log) {\n          if (parsed.module) resolveContext.log(\"Parsed request is a module\");\n          if (parsed.directory) resolveContext.log(\"Parsed request is a directory\");\n        }\n\n        resolver.doResolve(target, obj, null, resolveContext, callback);\n      });\n    }\n  }]);\n\n  return ParsePlugin;\n}();","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/node_modules/enhanced-resolve/lib/ParsePlugin.js"],"names":["module","exports","source","target","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","parsed","parse","obj","Object","assign","query","log","directory","doResolve"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AAEAA,MAAM,CAACC,OAAP;AACC,uBAAYC,MAAZ,EAAoBC,MAApB,EAA4B;AAAA;;AAC3B,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA;;AAJF;AAAA;AAAA,WAMC,eAAMC,QAAN,EAAgB;AACf,UAAMD,MAAM,GAAGC,QAAQ,CAACC,UAAT,CAAoB,KAAKF,MAAzB,CAAf;AACAC,MAAAA,QAAQ,CACNE,OADF,CACU,KAAKJ,MADf,EAEEK,QAFF,CAEW,aAFX,EAE0B,UAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,EAAuC;AAC/D,YAAMC,MAAM,GAAGP,QAAQ,CAACQ,KAAT,CAAeJ,OAAO,CAACA,OAAvB,CAAf;AACA,YAAMK,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,OAAlB,EAA2BG,MAA3B,CAAZ;;AACA,YAAIH,OAAO,CAACQ,KAAR,IAAiB,CAACL,MAAM,CAACK,KAA7B,EAAoC;AACnCH,UAAAA,GAAG,CAACG,KAAJ,GAAYR,OAAO,CAACQ,KAApB;AACA;;AACD,YAAIL,MAAM,IAAIF,cAAc,CAACQ,GAA7B,EAAkC;AACjC,cAAIN,MAAM,CAACX,MAAX,EAAmBS,cAAc,CAACQ,GAAf,CAAmB,4BAAnB;AACnB,cAAIN,MAAM,CAACO,SAAX,EACCT,cAAc,CAACQ,GAAf,CAAmB,+BAAnB;AACD;;AACDb,QAAAA,QAAQ,CAACe,SAAT,CAAmBhB,MAAnB,EAA2BU,GAA3B,EAAgC,IAAhC,EAAsCJ,cAAtC,EAAsDC,QAAtD;AACA,OAdF;AAeA;AAvBF;;AAAA;AAAA","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = class ParsePlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"ParsePlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst parsed = resolver.parse(request.request);\n\t\t\t\tconst obj = Object.assign({}, request, parsed);\n\t\t\t\tif (request.query && !parsed.query) {\n\t\t\t\t\tobj.query = request.query;\n\t\t\t\t}\n\t\t\t\tif (parsed && resolveContext.log) {\n\t\t\t\t\tif (parsed.module) resolveContext.log(\"Parsed request is a module\");\n\t\t\t\t\tif (parsed.directory)\n\t\t\t\t\t\tresolveContext.log(\"Parsed request is a directory\");\n\t\t\t\t}\n\t\t\t\tresolver.doResolve(target, obj, null, resolveContext, callback);\n\t\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}