{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nmodule.exports = /*#__PURE__*/function () {\n  function UseFilePlugin(source, filename, target) {\n    _classCallCheck(this, UseFilePlugin);\n\n    this.source = source;\n    this.filename = filename;\n    this.target = target;\n  }\n\n  _createClass(UseFilePlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"UseFilePlugin\", function (request, resolveContext, callback) {\n        var filePath = resolver.join(request.path, _this.filename);\n        var obj = Object.assign({}, request, {\n          path: filePath,\n          relativePath: request.relativePath && resolver.join(request.relativePath, _this.filename)\n        });\n        resolver.doResolve(target, obj, \"using path: \" + filePath, resolveContext, callback);\n      });\n    }\n  }]);\n\n  return UseFilePlugin;\n}();","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/node_modules/enhanced-resolve/lib/UseFilePlugin.js"],"names":["module","exports","source","filename","target","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","filePath","join","path","obj","Object","assign","relativePath","doResolve"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AAEAA,MAAM,CAACC,OAAP;AACC,yBAAYC,MAAZ,EAAoBC,QAApB,EAA8BC,MAA9B,EAAsC;AAAA;;AACrC,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA;;AALF;AAAA;AAAA,WAOC,eAAMC,QAAN,EAAgB;AAAA;;AACf,UAAMD,MAAM,GAAGC,QAAQ,CAACC,UAAT,CAAoB,KAAKF,MAAzB,CAAf;AACAC,MAAAA,QAAQ,CACNE,OADF,CACU,KAAKL,MADf,EAEEM,QAFF,CAEW,eAFX,EAE4B,UAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,EAAuC;AACjE,YAAMC,QAAQ,GAAGP,QAAQ,CAACQ,IAAT,CAAcJ,OAAO,CAACK,IAAtB,EAA4B,KAAI,CAACX,QAAjC,CAAjB;AACA,YAAMY,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,OAAlB,EAA2B;AACtCK,UAAAA,IAAI,EAAEF,QADgC;AAEtCM,UAAAA,YAAY,EACXT,OAAO,CAACS,YAAR,IACAb,QAAQ,CAACQ,IAAT,CAAcJ,OAAO,CAACS,YAAtB,EAAoC,KAAI,CAACf,QAAzC;AAJqC,SAA3B,CAAZ;AAMAE,QAAAA,QAAQ,CAACc,SAAT,CACCf,MADD,EAECW,GAFD,EAGC,iBAAiBH,QAHlB,EAICF,cAJD,EAKCC,QALD;AAOA,OAjBF;AAkBA;AA3BF;;AAAA;AAAA","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = class UseFilePlugin {\n\tconstructor(source, filename, target) {\n\t\tthis.source = source;\n\t\tthis.filename = filename;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"UseFilePlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst filePath = resolver.join(request.path, this.filename);\n\t\t\t\tconst obj = Object.assign({}, request, {\n\t\t\t\t\tpath: filePath,\n\t\t\t\t\trelativePath:\n\t\t\t\t\t\trequest.relativePath &&\n\t\t\t\t\t\tresolver.join(request.relativePath, this.filename)\n\t\t\t\t});\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"using path: \" + filePath,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}