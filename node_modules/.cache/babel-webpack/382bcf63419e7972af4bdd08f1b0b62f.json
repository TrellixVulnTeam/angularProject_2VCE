{"ast":null,"code":"var _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar path = require('path');\n\nvar extend = require('util')._extend;\n\nvar BASE_ERROR = 'Circular dependency detected:\\r\\n';\nvar PluginTitle = 'CircularDependencyPlugin';\n\nvar CircularDependencyPlugin = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function CircularDependencyPlugin(options) {\n    _classCallCheck(this, CircularDependencyPlugin);\n\n    this.options = extend({\n      exclude: new RegExp('$^'),\n      include: new RegExp('.*'),\n      failOnError: false,\n      allowAsyncCycles: false,\n      onDetected: false,\n      cwd: process.cwd()\n    }, options);\n  }\n\n  _createClass(CircularDependencyPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      var plugin = this;\n      var cwd = this.options.cwd;\n      compiler.hooks.compilation.tap(PluginTitle, function (compilation) {\n        compilation.hooks.optimizeModules.tap(PluginTitle, function (modules) {\n          if (plugin.options.onStart) {\n            plugin.options.onStart({\n              compilation: compilation\n            });\n          }\n\n          var _iterator = _createForOfIteratorHelper(modules),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _module = _step.value;\n              var shouldSkip = _module.resource == null || plugin.options.exclude.test(_module.resource) || !plugin.options.include.test(_module.resource); // skip the module if it matches the exclude pattern\n\n              if (shouldSkip) {\n                continue;\n              }\n\n              var maybeCyclicalPathsList = _this.isCyclic(_module, _module, {}, compilation);\n\n              if (maybeCyclicalPathsList) {\n                // allow consumers to override all behavior with onDetected\n                if (plugin.options.onDetected) {\n                  try {\n                    plugin.options.onDetected({\n                      module: _module,\n                      paths: maybeCyclicalPathsList,\n                      compilation: compilation\n                    });\n                  } catch (err) {\n                    compilation.errors.push(err);\n                  }\n\n                  continue;\n                } // mark warnings or errors on webpack compilation\n\n\n                var error = new Error(BASE_ERROR.concat(maybeCyclicalPathsList.join(' -> ')));\n\n                if (plugin.options.failOnError) {\n                  compilation.errors.push(error);\n                } else {\n                  compilation.warnings.push(error);\n                }\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          if (plugin.options.onEnd) {\n            plugin.options.onEnd({\n              compilation: compilation\n            });\n          }\n        });\n      });\n    }\n  }, {\n    key: \"isCyclic\",\n    value: function isCyclic(initialModule, currentModule, seenModules, compilation) {\n      var cwd = this.options.cwd; // Add the current module to the seen modules cache\n\n      seenModules[currentModule.debugId] = true; // If the modules aren't associated to resources\n      // it's not possible to display how they are cyclical\n\n      if (!currentModule.resource || !initialModule.resource) {\n        return false;\n      } // Iterate over the current modules dependencies\n\n\n      var _iterator2 = _createForOfIteratorHelper(currentModule.dependencies),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var dependency = _step2.value;\n          var depModule = null;\n\n          if (compilation.moduleGraph) {\n            // handle getting a module for webpack 5\n            depModule = compilation.moduleGraph.getModule(dependency);\n          } else {\n            // handle getting a module for webpack 4\n            depModule = dependency.module;\n          }\n\n          if (!depModule) {\n            continue;\n          } // ignore dependencies that don't have an associated resource\n\n\n          if (!depModule.resource) {\n            continue;\n          } // ignore dependencies that are resolved asynchronously\n\n\n          if (this.options.allowAsyncCycles && dependency.weak) {\n            continue;\n          }\n\n          if (depModule.debugId in seenModules) {\n            if (depModule.debugId === initialModule.debugId) {\n              // Initial module has a circular dependency\n              return [path.relative(cwd, currentModule.resource), path.relative(cwd, depModule.resource)];\n            } // Found a cycle, but not for this module\n\n\n            continue;\n          }\n\n          var maybeCyclicalPathsList = this.isCyclic(initialModule, depModule, seenModules, compilation);\n\n          if (maybeCyclicalPathsList) {\n            maybeCyclicalPathsList.unshift(path.relative(cwd, currentModule.resource));\n            return maybeCyclicalPathsList;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return false;\n    }\n  }]);\n\n  return CircularDependencyPlugin;\n}();\n\nmodule.exports = CircularDependencyPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/circular-dependency-plugin/index.js"],"names":["path","require","extend","_extend","BASE_ERROR","PluginTitle","CircularDependencyPlugin","options","exclude","RegExp","include","failOnError","allowAsyncCycles","onDetected","cwd","process","compiler","plugin","hooks","compilation","tap","optimizeModules","modules","onStart","module","shouldSkip","resource","test","maybeCyclicalPathsList","isCyclic","paths","err","errors","push","error","Error","concat","join","warnings","onEnd","initialModule","currentModule","seenModules","debugId","dependencies","dependency","depModule","moduleGraph","getModule","weak","relative","unshift","exports"],"mappings":"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","sourcesContent":["let path = require('path')\nlet extend = require('util')._extend\nlet BASE_ERROR = 'Circular dependency detected:\\r\\n'\nlet PluginTitle = 'CircularDependencyPlugin'\n\nclass CircularDependencyPlugin {\n  constructor(options) {\n    this.options = extend({\n      exclude: new RegExp('$^'),\n      include: new RegExp('.*'),\n      failOnError: false,\n      allowAsyncCycles: false,\n      onDetected: false,\n      cwd: process.cwd()\n    }, options)\n  }\n\n  apply(compiler) {\n    let plugin = this\n    let cwd = this.options.cwd\n\n    compiler.hooks.compilation.tap(PluginTitle, (compilation) => {\n      compilation.hooks.optimizeModules.tap(PluginTitle, (modules) => {\n        if (plugin.options.onStart) {\n          plugin.options.onStart({ compilation });\n        }\n        for (let module of modules) {\n          const shouldSkip = (\n            module.resource == null ||\n            plugin.options.exclude.test(module.resource) ||\n            !plugin.options.include.test(module.resource)\n          )\n          // skip the module if it matches the exclude pattern\n          if (shouldSkip) {\n            continue\n          }\n\n          let maybeCyclicalPathsList = this.isCyclic(module, module, {}, compilation)\n          if (maybeCyclicalPathsList) {\n            // allow consumers to override all behavior with onDetected\n            if (plugin.options.onDetected) {\n              try {\n                plugin.options.onDetected({\n                  module: module,\n                  paths: maybeCyclicalPathsList,\n                  compilation: compilation\n                })\n              } catch(err) {\n                compilation.errors.push(err)\n              }\n              continue\n            }\n\n            // mark warnings or errors on webpack compilation\n            let error = new Error(BASE_ERROR.concat(maybeCyclicalPathsList.join(' -> ')))\n            if (plugin.options.failOnError) {\n              compilation.errors.push(error)\n            } else {\n              compilation.warnings.push(error)\n            }\n          }\n        }\n        if (plugin.options.onEnd) {\n          plugin.options.onEnd({ compilation });\n        }\n      })\n    })\n  }\n\n  isCyclic(initialModule, currentModule, seenModules, compilation) {\n    let cwd = this.options.cwd\n\n    // Add the current module to the seen modules cache\n    seenModules[currentModule.debugId] = true\n\n    // If the modules aren't associated to resources\n    // it's not possible to display how they are cyclical\n    if (!currentModule.resource || !initialModule.resource) {\n      return false\n    }\n\n    // Iterate over the current modules dependencies\n    for (let dependency of currentModule.dependencies) {\n      let depModule = null\n      if (compilation.moduleGraph) {\n        // handle getting a module for webpack 5\n        depModule = compilation.moduleGraph.getModule(dependency)\n      } else {\n        // handle getting a module for webpack 4\n        depModule = dependency.module\n      }\n\n      if (!depModule) { continue }\n      // ignore dependencies that don't have an associated resource\n      if (!depModule.resource) { continue }\n      // ignore dependencies that are resolved asynchronously\n      if (this.options.allowAsyncCycles && dependency.weak) { continue }\n\n      if (depModule.debugId in seenModules) {\n        if (depModule.debugId === initialModule.debugId) {\n          // Initial module has a circular dependency\n          return [\n            path.relative(cwd, currentModule.resource),\n            path.relative(cwd, depModule.resource)\n          ]\n        }\n        // Found a cycle, but not for this module\n        continue\n      }\n\n      let maybeCyclicalPathsList = this.isCyclic(initialModule, depModule, seenModules, compilation)\n      if (maybeCyclicalPathsList) {\n        maybeCyclicalPathsList.unshift(path.relative(cwd, currentModule.resource))\n        return maybeCyclicalPathsList\n      }\n    }\n\n    return false\n  }\n}\n\nmodule.exports = CircularDependencyPlugin\n"]},"metadata":{},"sourceType":"script"}