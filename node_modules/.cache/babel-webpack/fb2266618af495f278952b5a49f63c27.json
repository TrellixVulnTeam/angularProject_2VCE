{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _toArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/toArray\");\n\nvar _regeneratorRuntime = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/regenerator\");\n\nvar _toConsumableArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _asyncToGenerator = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLessOptions = getLessOptions;\nexports.isUnsupportedUrl = isUnsupportedUrl;\nexports.normalizeSourceMap = normalizeSourceMap;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _less = _interopRequireDefault(require(\"less\"));\n\nvar _full = require(\"klona/full\");\n\nvar _loaderUtils = require(\"loader-utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/* eslint-disable class-methods-use-this */\n\n\nvar trailingSlash = /[/\\\\]$/; // This somewhat changed in Less 3.x. Now the file name comes without the\n// automatically added extension whereas the extension is passed in as `options.ext`.\n// So, if the file name matches this regexp, we simply ignore the proposed extension.\n\nvar IS_SPECIAL_MODULE_IMPORT = /^~[^/]+$/; // `[drive_letter]:\\` + `\\\\[server]\\[sharename]\\`\n\nvar IS_NATIVE_WIN32_PATH = /^[a-z]:[/\\\\]|^\\\\\\\\/i;\n/**\n * Creates a Less plugin that uses webpack's resolving engine that is provided by the loaderContext.\n *\n * @param {LoaderContext} loaderContext\n * @returns {LessPlugin}\n */\n\nfunction createWebpackLessPlugin(loaderContext) {\n  var resolve = loaderContext.getResolve({\n    conditionNames: ['less', 'style'],\n    mainFields: ['less', 'style', 'main', '...'],\n    mainFiles: ['index', '...'],\n    extensions: ['.less', '.css']\n  });\n\n  var WebpackFileManager = /*#__PURE__*/function (_less$default$FileMan) {\n    _inherits(WebpackFileManager, _less$default$FileMan);\n\n    var _super = _createSuper(WebpackFileManager);\n\n    function WebpackFileManager() {\n      _classCallCheck(this, WebpackFileManager);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(WebpackFileManager, [{\n      key: \"supports\",\n      value: function supports(filename) {\n        if (filename[0] === '/' || IS_NATIVE_WIN32_PATH.test(filename)) {\n          return true;\n        }\n\n        if (this.isPathAbsolute(filename)) {\n          return false;\n        }\n\n        return true;\n      } // Sync resolving is used at least by the `data-uri` function.\n      // This file manager doesn't know how to do it, so let's delegate it\n      // to the default file manager of Less.\n      // We could probably use loaderContext.resolveSync, but it's deprecated,\n      // see https://webpack.js.org/api/loaders/#this-resolvesync\n\n    }, {\n      key: \"supportsSync\",\n      value: function supportsSync() {\n        return false;\n      }\n    }, {\n      key: \"resolveFilename\",\n      value: function () {\n        var _resolveFilename = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(filename, currentDirectory) {\n          var context, request;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  // Less is giving us trailing slashes, but the context should have no trailing slash\n                  context = currentDirectory.replace(trailingSlash, '');\n                  request = (0, _loaderUtils.urlToRequest)(filename, // eslint-disable-next-line no-undefined\n                  filename.charAt(0) === '/' ? loaderContext.rootContext : undefined);\n                  return _context.abrupt(\"return\", this.resolveRequests(context, _toConsumableArray(new Set([request, filename]))));\n\n                case 3:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function resolveFilename(_x, _x2) {\n          return _resolveFilename.apply(this, arguments);\n        }\n\n        return resolveFilename;\n      }()\n    }, {\n      key: \"resolveRequests\",\n      value: function resolveRequests(context, possibleRequests) {\n        var _this = this;\n\n        if (possibleRequests.length === 0) {\n          return Promise.reject();\n        }\n\n        return resolve(context, possibleRequests[0]).then(function (result) {\n          return result;\n        }).catch(function (error) {\n          var _possibleRequests = _toArray(possibleRequests),\n              tailPossibleRequests = _possibleRequests.slice(1);\n\n          if (tailPossibleRequests.length === 0) {\n            throw error;\n          }\n\n          return _this.resolveRequests(context, tailPossibleRequests);\n        });\n      }\n    }, {\n      key: \"loadFile\",\n      value: function () {\n        var _loadFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(filename) {\n          var result,\n              _len,\n              args,\n              _key,\n              _get2,\n              error,\n              _get3,\n              _args2 = arguments;\n\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  for (_len = _args2.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                    args[_key - 1] = _args2[_key];\n                  }\n\n                  _context2.prev = 1;\n\n                  if (!IS_SPECIAL_MODULE_IMPORT.test(filename)) {\n                    _context2.next = 6;\n                    break;\n                  }\n\n                  error = new Error();\n                  error.type = 'Next';\n                  throw error;\n\n                case 6:\n                  _context2.next = 8;\n                  return (_get2 = _get(_getPrototypeOf(WebpackFileManager.prototype), \"loadFile\", this)).call.apply(_get2, [this, filename].concat(args));\n\n                case 8:\n                  result = _context2.sent;\n                  _context2.next = 27;\n                  break;\n\n                case 11:\n                  _context2.prev = 11;\n                  _context2.t0 = _context2[\"catch\"](1);\n\n                  if (!(_context2.t0.type !== 'File' && _context2.t0.type !== 'Next')) {\n                    _context2.next = 15;\n                    break;\n                  }\n\n                  return _context2.abrupt(\"return\", Promise.reject(_context2.t0));\n\n                case 15:\n                  _context2.prev = 15;\n                  _context2.next = 18;\n                  return this.resolveFilename.apply(this, [filename].concat(args));\n\n                case 18:\n                  result = _context2.sent;\n                  _context2.next = 25;\n                  break;\n\n                case 21:\n                  _context2.prev = 21;\n                  _context2.t1 = _context2[\"catch\"](15);\n                  _context2.t0.message = \"Less resolver error:\\n\".concat(_context2.t0.message, \"\\n\\n\") + \"Webpack resolver error details:\\n\".concat(_context2.t1.details, \"\\n\\n\") + \"Webpack resolver error missing:\\n\".concat(_context2.t1.missing, \"\\n\\n\");\n                  return _context2.abrupt(\"return\", Promise.reject(_context2.t0));\n\n                case 25:\n                  loaderContext.addDependency(result);\n                  return _context2.abrupt(\"return\", (_get3 = _get(_getPrototypeOf(WebpackFileManager.prototype), \"loadFile\", this)).call.apply(_get3, [this, result].concat(args)));\n\n                case 27:\n                  loaderContext.addDependency(_path.default.normalize(result.filename));\n                  return _context2.abrupt(\"return\", result);\n\n                case 29:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this, [[1, 11], [15, 21]]);\n        }));\n\n        function loadFile(_x3) {\n          return _loadFile.apply(this, arguments);\n        }\n\n        return loadFile;\n      }()\n    }]);\n\n    return WebpackFileManager;\n  }(_less.default.FileManager);\n\n  return {\n    install: function install(lessInstance, pluginManager) {\n      pluginManager.addFileManager(new WebpackFileManager());\n    },\n    minVersion: [3, 0, 0]\n  };\n}\n/**\n * Get the less options from the loader context and normalizes its values\n *\n * @param {object} loaderContext\n * @param {object} loaderOptions\n * @returns {Object}\n */\n\n\nfunction getLessOptions(loaderContext, loaderOptions) {\n  var options = (0, _full.klona)(typeof loaderOptions.lessOptions === 'function' ? loaderOptions.lessOptions(loaderContext) || {} : loaderOptions.lessOptions || {});\n\n  var lessOptions = _objectSpread({\n    plugins: [],\n    relativeUrls: true,\n    // We need to set the filename because otherwise our WebpackFileManager will receive an undefined path for the entry\n    filename: loaderContext.resourcePath\n  }, options);\n\n  var shouldUseWebpackImporter = typeof loaderOptions.webpackImporter === 'boolean' ? loaderOptions.webpackImporter : true;\n\n  if (shouldUseWebpackImporter) {\n    lessOptions.plugins.unshift(createWebpackLessPlugin(loaderContext));\n  }\n\n  lessOptions.plugins.unshift({\n    install: function install(lessProcessor) {\n      // eslint-disable-next-line no-param-reassign\n      lessProcessor.webpackLoaderContext = loaderContext;\n    }\n  });\n  return lessOptions;\n}\n\nfunction isUnsupportedUrl(url) {\n  // Is Windows path\n  if (IS_NATIVE_WIN32_PATH.test(url)) {\n    return false;\n  } // Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n  // Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n\n\n  return /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(url);\n}\n\nfunction normalizeSourceMap(map) {\n  var newMap = map; // map.file is an optional property that provides the output filename.\n  // Since we don't know the final filename in the webpack build chain yet, it makes no sense to have it.\n  // eslint-disable-next-line no-param-reassign\n\n  delete newMap.file; // eslint-disable-next-line no-param-reassign\n\n  newMap.sourceRoot = ''; // `less` returns POSIX paths, that's why we need to transform them back to native paths.\n  // eslint-disable-next-line no-param-reassign\n\n  newMap.sources = newMap.sources.map(function (source) {\n    return _path.default.normalize(source);\n  });\n  return newMap;\n}","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/less-loader/dist/utils.js"],"names":["Object","defineProperty","exports","value","getLessOptions","isUnsupportedUrl","normalizeSourceMap","_path","_interopRequireDefault","require","_less","_full","_loaderUtils","obj","__esModule","default","trailingSlash","IS_SPECIAL_MODULE_IMPORT","IS_NATIVE_WIN32_PATH","createWebpackLessPlugin","loaderContext","resolve","getResolve","conditionNames","mainFields","mainFiles","extensions","WebpackFileManager","filename","test","isPathAbsolute","currentDirectory","context","replace","request","urlToRequest","charAt","rootContext","undefined","resolveRequests","Set","possibleRequests","length","Promise","reject","then","result","catch","error","tailPossibleRequests","args","Error","type","resolveFilename","message","details","missing","addDependency","normalize","FileManager","install","lessInstance","pluginManager","addFileManager","minVersion","loaderOptions","options","klona","lessOptions","plugins","relativeUrls","resourcePath","shouldUseWebpackImporter","webpackImporter","unshift","lessProcessor","webpackLoaderContext","url","map","newMap","file","sourceRoot","sources","source"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLessOptions = getLessOptions;\nexports.isUnsupportedUrl = isUnsupportedUrl;\nexports.normalizeSourceMap = normalizeSourceMap;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _less = _interopRequireDefault(require(\"less\"));\n\nvar _full = require(\"klona/full\");\n\nvar _loaderUtils = require(\"loader-utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable class-methods-use-this */\nconst trailingSlash = /[/\\\\]$/; // This somewhat changed in Less 3.x. Now the file name comes without the\n// automatically added extension whereas the extension is passed in as `options.ext`.\n// So, if the file name matches this regexp, we simply ignore the proposed extension.\n\nconst IS_SPECIAL_MODULE_IMPORT = /^~[^/]+$/; // `[drive_letter]:\\` + `\\\\[server]\\[sharename]\\`\n\nconst IS_NATIVE_WIN32_PATH = /^[a-z]:[/\\\\]|^\\\\\\\\/i;\n/**\n * Creates a Less plugin that uses webpack's resolving engine that is provided by the loaderContext.\n *\n * @param {LoaderContext} loaderContext\n * @returns {LessPlugin}\n */\n\nfunction createWebpackLessPlugin(loaderContext) {\n  const resolve = loaderContext.getResolve({\n    conditionNames: ['less', 'style'],\n    mainFields: ['less', 'style', 'main', '...'],\n    mainFiles: ['index', '...'],\n    extensions: ['.less', '.css']\n  });\n\n  class WebpackFileManager extends _less.default.FileManager {\n    supports(filename) {\n      if (filename[0] === '/' || IS_NATIVE_WIN32_PATH.test(filename)) {\n        return true;\n      }\n\n      if (this.isPathAbsolute(filename)) {\n        return false;\n      }\n\n      return true;\n    } // Sync resolving is used at least by the `data-uri` function.\n    // This file manager doesn't know how to do it, so let's delegate it\n    // to the default file manager of Less.\n    // We could probably use loaderContext.resolveSync, but it's deprecated,\n    // see https://webpack.js.org/api/loaders/#this-resolvesync\n\n\n    supportsSync() {\n      return false;\n    }\n\n    async resolveFilename(filename, currentDirectory) {\n      // Less is giving us trailing slashes, but the context should have no trailing slash\n      const context = currentDirectory.replace(trailingSlash, '');\n      const request = (0, _loaderUtils.urlToRequest)(filename, // eslint-disable-next-line no-undefined\n      filename.charAt(0) === '/' ? loaderContext.rootContext : undefined);\n      return this.resolveRequests(context, [...new Set([request, filename])]);\n    }\n\n    resolveRequests(context, possibleRequests) {\n      if (possibleRequests.length === 0) {\n        return Promise.reject();\n      }\n\n      return resolve(context, possibleRequests[0]).then(result => {\n        return result;\n      }).catch(error => {\n        const [, ...tailPossibleRequests] = possibleRequests;\n\n        if (tailPossibleRequests.length === 0) {\n          throw error;\n        }\n\n        return this.resolveRequests(context, tailPossibleRequests);\n      });\n    }\n\n    async loadFile(filename, ...args) {\n      let result;\n\n      try {\n        if (IS_SPECIAL_MODULE_IMPORT.test(filename)) {\n          const error = new Error();\n          error.type = 'Next';\n          throw error;\n        }\n\n        result = await super.loadFile(filename, ...args);\n      } catch (error) {\n        if (error.type !== 'File' && error.type !== 'Next') {\n          return Promise.reject(error);\n        }\n\n        try {\n          result = await this.resolveFilename(filename, ...args);\n        } catch (webpackResolveError) {\n          error.message = `Less resolver error:\\n${error.message}\\n\\n` + `Webpack resolver error details:\\n${webpackResolveError.details}\\n\\n` + `Webpack resolver error missing:\\n${webpackResolveError.missing}\\n\\n`;\n          return Promise.reject(error);\n        }\n\n        loaderContext.addDependency(result);\n        return super.loadFile(result, ...args);\n      }\n\n      loaderContext.addDependency(_path.default.normalize(result.filename));\n      return result;\n    }\n\n  }\n\n  return {\n    install(lessInstance, pluginManager) {\n      pluginManager.addFileManager(new WebpackFileManager());\n    },\n\n    minVersion: [3, 0, 0]\n  };\n}\n/**\n * Get the less options from the loader context and normalizes its values\n *\n * @param {object} loaderContext\n * @param {object} loaderOptions\n * @returns {Object}\n */\n\n\nfunction getLessOptions(loaderContext, loaderOptions) {\n  const options = (0, _full.klona)(typeof loaderOptions.lessOptions === 'function' ? loaderOptions.lessOptions(loaderContext) || {} : loaderOptions.lessOptions || {});\n  const lessOptions = {\n    plugins: [],\n    relativeUrls: true,\n    // We need to set the filename because otherwise our WebpackFileManager will receive an undefined path for the entry\n    filename: loaderContext.resourcePath,\n    ...options\n  };\n  const shouldUseWebpackImporter = typeof loaderOptions.webpackImporter === 'boolean' ? loaderOptions.webpackImporter : true;\n\n  if (shouldUseWebpackImporter) {\n    lessOptions.plugins.unshift(createWebpackLessPlugin(loaderContext));\n  }\n\n  lessOptions.plugins.unshift({\n    install(lessProcessor) {\n      // eslint-disable-next-line no-param-reassign\n      lessProcessor.webpackLoaderContext = loaderContext;\n    }\n\n  });\n  return lessOptions;\n}\n\nfunction isUnsupportedUrl(url) {\n  // Is Windows path\n  if (IS_NATIVE_WIN32_PATH.test(url)) {\n    return false;\n  } // Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n  // Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n\n\n  return /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(url);\n}\n\nfunction normalizeSourceMap(map) {\n  const newMap = map; // map.file is an optional property that provides the output filename.\n  // Since we don't know the final filename in the webpack build chain yet, it makes no sense to have it.\n  // eslint-disable-next-line no-param-reassign\n\n  delete newMap.file; // eslint-disable-next-line no-param-reassign\n\n  newMap.sourceRoot = ''; // `less` returns POSIX paths, that's why we need to transform them back to native paths.\n  // eslint-disable-next-line no-param-reassign\n\n  newMap.sources = newMap.sources.map(source => {\n    return _path.default.normalize(source);\n  });\n  return newMap;\n}"]},"metadata":{},"sourceType":"script"}