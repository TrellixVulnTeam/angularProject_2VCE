{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler/src/config\", [\"require\", \"exports\", \"@angular/compiler/src/core\", \"@angular/compiler/src/util\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.preserveWhitespacesDefault = exports.CompilerConfig = void 0;\n\n  var core_1 = require(\"@angular/compiler/src/core\");\n\n  var util_1 = require(\"@angular/compiler/src/util\");\n\n  var CompilerConfig =\n  /** @class */\n  function () {\n    function CompilerConfig(_a) {\n      var _b = _a === void 0 ? {} : _a,\n          _c = _b.defaultEncapsulation,\n          defaultEncapsulation = _c === void 0 ? core_1.ViewEncapsulation.Emulated : _c,\n          _d = _b.useJit,\n          useJit = _d === void 0 ? true : _d,\n          _e = _b.jitDevMode,\n          jitDevMode = _e === void 0 ? false : _e,\n          _f = _b.missingTranslation,\n          missingTranslation = _f === void 0 ? null : _f,\n          preserveWhitespaces = _b.preserveWhitespaces,\n          strictInjectionParameters = _b.strictInjectionParameters;\n\n      this.defaultEncapsulation = defaultEncapsulation;\n      this.useJit = !!useJit;\n      this.jitDevMode = !!jitDevMode;\n      this.missingTranslation = missingTranslation;\n      this.preserveWhitespaces = preserveWhitespacesDefault(util_1.noUndefined(preserveWhitespaces));\n      this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n\n    return CompilerConfig;\n  }();\n\n  exports.CompilerConfig = CompilerConfig;\n\n  function preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) {\n      defaultSetting = false;\n    }\n\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n  }\n\n  exports.preserveWhitespacesDefault = preserveWhitespacesDefault;\n});","map":{"version":3,"sources":["../../../../../../packages/compiler/src/config.ts"],"names":[],"mappings":"AAAA;;;;;;AAMG;;;;;;;;;;;;;;;;AAEH,MAAA,MAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;AAEA,MAAA,cAAA;AAAA;AAAA,cAAA;AAQE,aAAA,cAAA,CAAY,EAAZ,EAcM;UAdM,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAcR,EAdQ,GAcN,E;UAbJ,EAAA,GAAA,EAAA,CAAA,oB;UAAA,oBAAoB,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,MAAA,CAAA,iBAAA,CAAkB,QAArB,GAA6B,E;UACjD,EAAA,GAAA,EAAA,CAAA,M;UAAA,MAAM,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,E;UACb,EAAA,GAAA,EAAA,CAAA,U;UAAA,UAAU,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,E;UAClB,EAAA,GAAA,EAAA,CAAA,kB;UAAA,kBAAkB,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,E;UACzB,mBAAmB,GAAA,EAAA,CAAA,mB;UACnB,yBAAyB,GAAA,EAAA,CAAA,yB;;AASzB,WAAK,oBAAL,GAA4B,oBAA5B;AACA,WAAK,MAAL,GAAc,CAAC,CAAC,MAAhB;AACA,WAAK,UAAL,GAAkB,CAAC,CAAC,UAApB;AACA,WAAK,kBAAL,GAA0B,kBAA1B;AACA,WAAK,mBAAL,GAA2B,0BAA0B,CAAC,MAAA,CAAA,WAAA,CAAY,mBAAZ,CAAD,CAArD;AACA,WAAK,yBAAL,GAAiC,yBAAyB,KAAK,IAA/D;AACD;;AACH,WAAA,cAAA;AAAC,GA9BD,EAAA;;AAAa,EAAA,OAAA,CAAA,cAAA,GAAA,cAAA;;AAgCb,WAAgB,0BAAhB,CACI,yBADJ,EAC6C,cAD7C,EACmE;AAAtB,QAAA,cAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,cAAA,GAAA,KAAA;AAAsB;;AACjE,WAAO,yBAAyB,KAAK,IAA9B,GAAqC,cAArC,GAAsD,yBAA7D;AACD;;AAHD,EAAA,OAAA,CAAA,0BAAA,GAAA,0BAAA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MissingTranslationStrategy, ViewEncapsulation} from './core';\nimport {noUndefined} from './util';\n\nexport class CompilerConfig {\n  public defaultEncapsulation: ViewEncapsulation|null;\n  public useJit: boolean;\n  public jitDevMode: boolean;\n  public missingTranslation: MissingTranslationStrategy|null;\n  public preserveWhitespaces: boolean;\n  public strictInjectionParameters: boolean;\n\n  constructor({\n    defaultEncapsulation = ViewEncapsulation.Emulated,\n    useJit = true,\n    jitDevMode = false,\n    missingTranslation = null,\n    preserveWhitespaces,\n    strictInjectionParameters\n  }: {\n    defaultEncapsulation?: ViewEncapsulation,\n    useJit?: boolean,\n    jitDevMode?: boolean,\n    missingTranslation?: MissingTranslationStrategy|null,\n    preserveWhitespaces?: boolean,\n    strictInjectionParameters?: boolean,\n  } = {}) {\n    this.defaultEncapsulation = defaultEncapsulation;\n    this.useJit = !!useJit;\n    this.jitDevMode = !!jitDevMode;\n    this.missingTranslation = missingTranslation;\n    this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n    this.strictInjectionParameters = strictInjectionParameters === true;\n  }\n}\n\nexport function preserveWhitespacesDefault(\n    preserveWhitespacesOption: boolean|null, defaultSetting = false): boolean {\n  return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}