{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.profilingEnabled = exports.cachingBasePath = exports.cachingDisabled = exports.allowMinify = exports.shouldBeautify = exports.allowMangle = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar path = require(\"path\");\n\nfunction isDisabled(variable) {\n  return variable === '0' || variable.toLowerCase() === 'false';\n}\n\nfunction isEnabled(variable) {\n  return variable === '1' || variable.toLowerCase() === 'true';\n}\n\nfunction isPresent(variable) {\n  return typeof variable === 'string' && variable !== '';\n} // Optimization and mangling\n\n\nvar debugOptimizeVariable = process.env['NG_BUILD_DEBUG_OPTIMIZE'];\n\nvar debugOptimize = function () {\n  if (!isPresent(debugOptimizeVariable) || isDisabled(debugOptimizeVariable)) {\n    return {\n      mangle: true,\n      minify: true,\n      beautify: false\n    };\n  }\n\n  var debugValue = {\n    mangle: false,\n    minify: false,\n    beautify: true\n  };\n\n  if (isEnabled(debugOptimizeVariable)) {\n    return debugValue;\n  }\n\n  var _iterator = _createForOfIteratorHelper(debugOptimizeVariable.split(',')),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var part = _step.value;\n\n      switch (part.trim().toLowerCase()) {\n        case 'mangle':\n          debugValue.mangle = true;\n          break;\n\n        case 'minify':\n          debugValue.minify = true;\n          break;\n\n        case 'beautify':\n          debugValue.beautify = true;\n          break;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return debugValue;\n}();\n\nvar mangleVariable = process.env['NG_BUILD_MANGLE'];\nexports.allowMangle = isPresent(mangleVariable) ? !isDisabled(mangleVariable) : debugOptimize.mangle;\nexports.shouldBeautify = debugOptimize.beautify;\nexports.allowMinify = debugOptimize.minify; // Build cache\n\nvar cacheVariable = process.env['NG_BUILD_CACHE'];\nexports.cachingDisabled = isPresent(cacheVariable) && isDisabled(cacheVariable);\n\nexports.cachingBasePath = function () {\n  if (exports.cachingDisabled || !isPresent(cacheVariable) || isEnabled(cacheVariable)) {\n    return null;\n  }\n\n  if (!path.isAbsolute(cacheVariable)) {\n    throw new Error('NG_BUILD_CACHE path value must be absolute.');\n  }\n\n  return cacheVariable;\n}(); // Build profiling\n\n\nvar profilingVariable = process.env['NG_BUILD_PROFILING'];\nexports.profilingEnabled = isPresent(profilingVariable) && isEnabled(profilingVariable);","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/src/utils/environment-options.js"],"names":["Object","defineProperty","exports","value","profilingEnabled","cachingBasePath","cachingDisabled","allowMinify","shouldBeautify","allowMangle","path","require","isDisabled","variable","toLowerCase","isEnabled","isPresent","debugOptimizeVariable","process","env","debugOptimize","mangle","minify","beautify","debugValue","split","part","trim","mangleVariable","cacheVariable","isAbsolute","Error","profilingVariable"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.profilingEnabled = exports.cachingBasePath = exports.cachingDisabled = exports.allowMinify = exports.shouldBeautify = exports.allowMangle = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst path = require(\"path\");\nfunction isDisabled(variable) {\n    return variable === '0' || variable.toLowerCase() === 'false';\n}\nfunction isEnabled(variable) {\n    return variable === '1' || variable.toLowerCase() === 'true';\n}\nfunction isPresent(variable) {\n    return typeof variable === 'string' && variable !== '';\n}\n// Optimization and mangling\nconst debugOptimizeVariable = process.env['NG_BUILD_DEBUG_OPTIMIZE'];\nconst debugOptimize = (() => {\n    if (!isPresent(debugOptimizeVariable) || isDisabled(debugOptimizeVariable)) {\n        return {\n            mangle: true,\n            minify: true,\n            beautify: false,\n        };\n    }\n    const debugValue = {\n        mangle: false,\n        minify: false,\n        beautify: true,\n    };\n    if (isEnabled(debugOptimizeVariable)) {\n        return debugValue;\n    }\n    for (const part of debugOptimizeVariable.split(',')) {\n        switch (part.trim().toLowerCase()) {\n            case 'mangle':\n                debugValue.mangle = true;\n                break;\n            case 'minify':\n                debugValue.minify = true;\n                break;\n            case 'beautify':\n                debugValue.beautify = true;\n                break;\n        }\n    }\n    return debugValue;\n})();\nconst mangleVariable = process.env['NG_BUILD_MANGLE'];\nexports.allowMangle = isPresent(mangleVariable)\n    ? !isDisabled(mangleVariable)\n    : debugOptimize.mangle;\nexports.shouldBeautify = debugOptimize.beautify;\nexports.allowMinify = debugOptimize.minify;\n// Build cache\nconst cacheVariable = process.env['NG_BUILD_CACHE'];\nexports.cachingDisabled = isPresent(cacheVariable) && isDisabled(cacheVariable);\nexports.cachingBasePath = (() => {\n    if (exports.cachingDisabled || !isPresent(cacheVariable) || isEnabled(cacheVariable)) {\n        return null;\n    }\n    if (!path.isAbsolute(cacheVariable)) {\n        throw new Error('NG_BUILD_CACHE path value must be absolute.');\n    }\n    return cacheVariable;\n})();\n// Build profiling\nconst profilingVariable = process.env['NG_BUILD_PROFILING'];\nexports.profilingEnabled = isPresent(profilingVariable) && isEnabled(profilingVariable);\n"]},"metadata":{},"sourceType":"script"}