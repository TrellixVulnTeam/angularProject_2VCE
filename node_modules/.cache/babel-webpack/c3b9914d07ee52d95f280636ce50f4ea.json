{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeAnimation;\n\nvar _postcssValueParser = require('postcss-value-parser');\n\nvar _cssnanoUtilGetArguments = require('cssnano-util-get-arguments');\n\nvar _cssnanoUtilGetArguments2 = _interopRequireDefault(_cssnanoUtilGetArguments);\n\nvar _addSpace = require('../lib/addSpace');\n\nvar _addSpace2 = _interopRequireDefault(_addSpace);\n\nvar _getValue = require('../lib/getValue');\n\nvar _getValue2 = _interopRequireDefault(_getValue);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // animation: [ none | <keyframes-name> ] || <time> || <single-timing-function> || <time> || <single-animation-iteration-count> || <single-animation-direction> || <single-animation-fill-mode> || <single-animation-play-state>\n\n\nvar isTimingFunction = function isTimingFunction(value, type) {\n  var functions = ['steps', 'cubic-bezier', 'frames'];\n  var keywords = ['ease', 'ease-in', 'ease-in-out', 'ease-out', 'linear', 'step-end', 'step-start'];\n  return type === 'function' && functions.includes(value) || keywords.includes(value);\n};\n\nvar isDirection = function isDirection(value) {\n  return ['normal', 'reverse', 'alternate', 'alternate-reverse'].includes(value);\n};\n\nvar isFillMode = function isFillMode(value) {\n  return ['none', 'forwards', 'backwards', 'both'].includes(value);\n};\n\nvar isPlayState = function isPlayState(value) {\n  return ['running', 'paused'].includes(value);\n};\n\nvar isTime = function isTime(value) {\n  var quantity = (0, _postcssValueParser.unit)(value);\n  return quantity && ['ms', 's'].includes(quantity.unit);\n};\n\nvar isIterationCount = function isIterationCount(value) {\n  var quantity = (0, _postcssValueParser.unit)(value);\n  return value === 'infinite' || quantity && !quantity.unit;\n};\n\nfunction normalizeAnimation(parsed) {\n  var args = (0, _cssnanoUtilGetArguments2.default)(parsed);\n  var values = args.reduce(function (list, arg) {\n    var state = {\n      name: [],\n      duration: [],\n      timingFunction: [],\n      delay: [],\n      iterationCount: [],\n      direction: [],\n      fillMode: [],\n      playState: []\n    };\n    var stateConditions = [{\n      property: 'duration',\n      delegate: isTime\n    }, {\n      property: 'timingFunction',\n      delegate: isTimingFunction\n    }, {\n      property: 'delay',\n      delegate: isTime\n    }, {\n      property: 'iterationCount',\n      delegate: isIterationCount\n    }, {\n      property: 'direction',\n      delegate: isDirection\n    }, {\n      property: 'fillMode',\n      delegate: isFillMode\n    }, {\n      property: 'playState',\n      delegate: isPlayState\n    }];\n    arg.forEach(function (node) {\n      var type = node.type,\n          value = node.value;\n\n      if (type === 'space') {\n        return;\n      }\n\n      value = value.toLowerCase();\n      var hasMatch = stateConditions.some(function (_ref) {\n        var property = _ref.property,\n            delegate = _ref.delegate;\n\n        if (delegate(value, type) && !state[property].length) {\n          state[property] = [node, (0, _addSpace2.default)()];\n          return true;\n        }\n      });\n\n      if (!hasMatch) {\n        state.name = [].concat(_toConsumableArray(state.name), [node, (0, _addSpace2.default)()]);\n      }\n    });\n    return [].concat(_toConsumableArray(list), [[].concat(_toConsumableArray(state.name), _toConsumableArray(state.duration), _toConsumableArray(state.timingFunction), _toConsumableArray(state.delay), _toConsumableArray(state.iterationCount), _toConsumableArray(state.direction), _toConsumableArray(state.fillMode), _toConsumableArray(state.playState))]);\n  }, []);\n  return (0, _getValue2.default)(values);\n}\n\n;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/postcss-ordered-values/dist/rules/animation.js"],"names":["Object","defineProperty","exports","value","default","normalizeAnimation","_postcssValueParser","require","_cssnanoUtilGetArguments","_cssnanoUtilGetArguments2","_interopRequireDefault","_addSpace","_addSpace2","_getValue","_getValue2","obj","__esModule","isTimingFunction","type","functions","keywords","includes","isDirection","isFillMode","isPlayState","isTime","quantity","unit","isIterationCount","parsed","args","values","reduce","list","arg","state","name","duration","timingFunction","delay","iterationCount","direction","fillMode","playState","stateConditions","property","delegate","forEach","node","toLowerCase","hasMatch","some","length","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = normalizeAnimation;\n\nvar _postcssValueParser = require('postcss-value-parser');\n\nvar _cssnanoUtilGetArguments = require('cssnano-util-get-arguments');\n\nvar _cssnanoUtilGetArguments2 = _interopRequireDefault(_cssnanoUtilGetArguments);\n\nvar _addSpace = require('../lib/addSpace');\n\nvar _addSpace2 = _interopRequireDefault(_addSpace);\n\nvar _getValue = require('../lib/getValue');\n\nvar _getValue2 = _interopRequireDefault(_getValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// animation: [ none | <keyframes-name> ] || <time> || <single-timing-function> || <time> || <single-animation-iteration-count> || <single-animation-direction> || <single-animation-fill-mode> || <single-animation-play-state>\n\nconst isTimingFunction = (value, type) => {\n    const functions = ['steps', 'cubic-bezier', 'frames'];\n    const keywords = ['ease', 'ease-in', 'ease-in-out', 'ease-out', 'linear', 'step-end', 'step-start'];\n\n    return type === 'function' && functions.includes(value) || keywords.includes(value);\n};\n\nconst isDirection = value => {\n    return ['normal', 'reverse', 'alternate', 'alternate-reverse'].includes(value);\n};\n\nconst isFillMode = value => {\n    return ['none', 'forwards', 'backwards', 'both'].includes(value);\n};\n\nconst isPlayState = value => {\n    return ['running', 'paused'].includes(value);\n};\n\nconst isTime = value => {\n    const quantity = (0, _postcssValueParser.unit)(value);\n\n    return quantity && ['ms', 's'].includes(quantity.unit);\n};\n\nconst isIterationCount = value => {\n    const quantity = (0, _postcssValueParser.unit)(value);\n\n    return value === 'infinite' || quantity && !quantity.unit;\n};\n\nfunction normalizeAnimation(parsed) {\n    const args = (0, _cssnanoUtilGetArguments2.default)(parsed);\n\n    const values = args.reduce((list, arg) => {\n        const state = {\n            name: [],\n            duration: [],\n            timingFunction: [],\n            delay: [],\n            iterationCount: [],\n            direction: [],\n            fillMode: [],\n            playState: []\n        };\n        const stateConditions = [{ property: 'duration', delegate: isTime }, { property: 'timingFunction', delegate: isTimingFunction }, { property: 'delay', delegate: isTime }, { property: 'iterationCount', delegate: isIterationCount }, { property: 'direction', delegate: isDirection }, { property: 'fillMode', delegate: isFillMode }, { property: 'playState', delegate: isPlayState }];\n\n        arg.forEach(node => {\n            let { type, value } = node;\n\n            if (type === 'space') {\n                return;\n            }\n\n            value = value.toLowerCase();\n\n            const hasMatch = stateConditions.some(({ property, delegate }) => {\n                if (delegate(value, type) && !state[property].length) {\n                    state[property] = [node, (0, _addSpace2.default)()];\n                    return true;\n                }\n            });\n\n            if (!hasMatch) {\n                state.name = [...state.name, node, (0, _addSpace2.default)()];\n            }\n        });\n        return [...list, [...state.name, ...state.duration, ...state.timingFunction, ...state.delay, ...state.iterationCount, ...state.direction, ...state.fillMode, ...state.playState]];\n    }, []);\n\n    return (0, _getValue2.default)(values);\n};\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}