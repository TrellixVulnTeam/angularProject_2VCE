{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler-cli/src/ngtsc/metadata\", [\"require\", \"exports\", \"tslib\", \"@angular/compiler-cli/src/ngtsc/metadata/src/api\", \"@angular/compiler-cli/src/ngtsc/metadata/src/dts\", \"@angular/compiler-cli/src/ngtsc/metadata/src/inheritance\", \"@angular/compiler-cli/src/ngtsc/metadata/src/registry\", \"@angular/compiler-cli/src/ngtsc/metadata/src/resource_registry\", \"@angular/compiler-cli/src/ngtsc/metadata/src/util\", \"@angular/compiler-cli/src/ngtsc/metadata/src/property_mapping\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ClassPropertyMapping = exports.CompoundMetadataReader = exports.extractDirectiveTypeCheckMeta = exports.isExternalResource = exports.ResourceRegistry = exports.InjectableClassRegistry = exports.LocalMetadataRegistry = exports.CompoundMetadataRegistry = exports.flattenInheritedDirectiveMetadata = exports.DtsMetadataReader = void 0;\n\n  var tslib_1 = require(\"tslib\");\n\n  tslib_1.__exportStar(require(\"@angular/compiler-cli/src/ngtsc/metadata/src/api\"), exports);\n\n  var dts_1 = require(\"@angular/compiler-cli/src/ngtsc/metadata/src/dts\");\n\n  Object.defineProperty(exports, \"DtsMetadataReader\", {\n    enumerable: true,\n    get: function get() {\n      return dts_1.DtsMetadataReader;\n    }\n  });\n\n  var inheritance_1 = require(\"@angular/compiler-cli/src/ngtsc/metadata/src/inheritance\");\n\n  Object.defineProperty(exports, \"flattenInheritedDirectiveMetadata\", {\n    enumerable: true,\n    get: function get() {\n      return inheritance_1.flattenInheritedDirectiveMetadata;\n    }\n  });\n\n  var registry_1 = require(\"@angular/compiler-cli/src/ngtsc/metadata/src/registry\");\n\n  Object.defineProperty(exports, \"CompoundMetadataRegistry\", {\n    enumerable: true,\n    get: function get() {\n      return registry_1.CompoundMetadataRegistry;\n    }\n  });\n  Object.defineProperty(exports, \"LocalMetadataRegistry\", {\n    enumerable: true,\n    get: function get() {\n      return registry_1.LocalMetadataRegistry;\n    }\n  });\n  Object.defineProperty(exports, \"InjectableClassRegistry\", {\n    enumerable: true,\n    get: function get() {\n      return registry_1.InjectableClassRegistry;\n    }\n  });\n\n  var resource_registry_1 = require(\"@angular/compiler-cli/src/ngtsc/metadata/src/resource_registry\");\n\n  Object.defineProperty(exports, \"ResourceRegistry\", {\n    enumerable: true,\n    get: function get() {\n      return resource_registry_1.ResourceRegistry;\n    }\n  });\n  Object.defineProperty(exports, \"isExternalResource\", {\n    enumerable: true,\n    get: function get() {\n      return resource_registry_1.isExternalResource;\n    }\n  });\n\n  var util_1 = require(\"@angular/compiler-cli/src/ngtsc/metadata/src/util\");\n\n  Object.defineProperty(exports, \"extractDirectiveTypeCheckMeta\", {\n    enumerable: true,\n    get: function get() {\n      return util_1.extractDirectiveTypeCheckMeta;\n    }\n  });\n  Object.defineProperty(exports, \"CompoundMetadataReader\", {\n    enumerable: true,\n    get: function get() {\n      return util_1.CompoundMetadataReader;\n    }\n  });\n\n  var property_mapping_1 = require(\"@angular/compiler-cli/src/ngtsc/metadata/src/property_mapping\");\n\n  Object.defineProperty(exports, \"ClassPropertyMapping\", {\n    enumerable: true,\n    get: function get() {\n      return property_mapping_1.ClassPropertyMapping;\n    }\n  });\n});","map":{"version":3,"sources":["../../../../../../../../packages/compiler-cli/src/ngtsc/metadata/index.ts"],"names":[],"mappings":"AAAA;;;;;;AAMG;;;;;;;;;;;;;;;;;;AAEH,EAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,kDAAA,CAAA,EAAA,OAAA;;AACA,MAAA,KAAA,GAAA,OAAA,CAAA,kDAAA,CAAA;;AAAQ,EAAA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,mBAAA,EAAA;AAAA,IAAA,UAAA,EAAA,IAAA;AAAA,IAAA,GAAA,EAAA,eAAA;AAAA,aAAA,KAAA,CAAA,iBAAA;AAAiB;AAAjB,GAAA;;AACR,MAAA,aAAA,GAAA,OAAA,CAAA,0DAAA,CAAA;;AAAQ,EAAA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,mCAAA,EAAA;AAAA,IAAA,UAAA,EAAA,IAAA;AAAA,IAAA,GAAA,EAAA,eAAA;AAAA,aAAA,aAAA,CAAA,iCAAA;AAAiC;AAAjC,GAAA;;AACR,MAAA,UAAA,GAAA,OAAA,CAAA,uDAAA,CAAA;;AAAQ,EAAA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,0BAAA,EAAA;AAAA,IAAA,UAAA,EAAA,IAAA;AAAA,IAAA,GAAA,EAAA,eAAA;AAAA,aAAA,UAAA,CAAA,wBAAA;AAAwB;AAAxB,GAAA;AAA0B,EAAA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,uBAAA,EAAA;AAAA,IAAA,UAAA,EAAA,IAAA;AAAA,IAAA,GAAA,EAAA,eAAA;AAAA,aAAA,UAAA,CAAA,qBAAA;AAAqB;AAArB,GAAA;AAAuB,EAAA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,yBAAA,EAAA;AAAA,IAAA,UAAA,EAAA,IAAA;AAAA,IAAA,GAAA,EAAA,eAAA;AAAA,aAAA,UAAA,CAAA,uBAAA;AAAuB;AAAvB,GAAA;;AACzD,MAAA,mBAAA,GAAA,OAAA,CAAA,gEAAA,CAAA;;AAAQ,EAAA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,kBAAA,EAAA;AAAA,IAAA,UAAA,EAAA,IAAA;AAAA,IAAA,GAAA,EAAA,eAAA;AAAA,aAAA,mBAAA,CAAA,gBAAA;AAAgB;AAAhB,GAAA;AAAgD,EAAA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,oBAAA,EAAA;AAAA,IAAA,UAAA,EAAA,IAAA;AAAA,IAAA,GAAA,EAAA,eAAA;AAAA,aAAA,mBAAA,CAAA,kBAAA;AAAkB;AAAlB,GAAA;;AACxD,MAAA,MAAA,GAAA,OAAA,CAAA,mDAAA,CAAA;;AAAQ,EAAA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,+BAAA,EAAA;AAAA,IAAA,UAAA,EAAA,IAAA;AAAA,IAAA,GAAA,EAAA,eAAA;AAAA,aAAA,MAAA,CAAA,6BAAA;AAA6B;AAA7B,GAAA;AAA+B,EAAA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,wBAAA,EAAA;AAAA,IAAA,UAAA,EAAA,IAAA;AAAA,IAAA,GAAA,EAAA,eAAA;AAAA,aAAA,MAAA,CAAA,sBAAA;AAAsB;AAAtB,GAAA;;AACvC,MAAA,kBAAA,GAAA,OAAA,CAAA,+DAAA,CAAA;;AAA6B,EAAA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,sBAAA,EAAA;AAAA,IAAA,UAAA,EAAA,IAAA;AAAA,IAAA,GAAA,EAAA,eAAA;AAAA,aAAA,kBAAA,CAAA,oBAAA;AAAoB;AAApB,GAAA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './src/api';\nexport {DtsMetadataReader} from './src/dts';\nexport {flattenInheritedDirectiveMetadata} from './src/inheritance';\nexport {CompoundMetadataRegistry, LocalMetadataRegistry, InjectableClassRegistry} from './src/registry';\nexport {ResourceRegistry, Resource, ComponentResources, isExternalResource, ExternalResource} from './src/resource_registry';\nexport {extractDirectiveTypeCheckMeta, CompoundMetadataReader} from './src/util';\nexport {BindingPropertyName, ClassPropertyMapping, ClassPropertyName, InputOrOutput} from './src/property_mapping';\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}