{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar stream_1 = require(\"stream\");\n\nvar stream_2 = require(\"../readers/stream\");\n\nvar provider_1 = require(\"./provider\");\n\nvar ProviderStream = /*#__PURE__*/function (_provider_1$default) {\n  _inherits(ProviderStream, _provider_1$default);\n\n  var _super = _createSuper(ProviderStream);\n\n  function ProviderStream() {\n    var _this;\n\n    _classCallCheck(this, ProviderStream);\n\n    _this = _super.apply(this, arguments);\n    _this._reader = new stream_2.default(_this._settings);\n    return _this;\n  }\n\n  _createClass(ProviderStream, [{\n    key: \"read\",\n    value: function read(task) {\n      var root = this._getRootDirectory(task);\n\n      var options = this._getReaderOptions(task);\n\n      var source = this.api(root, task, options);\n      var destination = new stream_1.Readable({\n        objectMode: true,\n        read: function read() {}\n      });\n      source.once('error', function (error) {\n        return destination.emit('error', error);\n      }).on('data', function (entry) {\n        return destination.emit('data', options.transform(entry));\n      }).once('end', function () {\n        return destination.emit('end');\n      });\n      destination.once('close', function () {\n        return source.destroy();\n      });\n      return destination;\n    }\n  }, {\n    key: \"api\",\n    value: function api(root, task, options) {\n      if (task.dynamic) {\n        return this._reader.dynamic(root, options);\n      }\n\n      return this._reader.static(task.patterns, options);\n    }\n  }]);\n\n  return ProviderStream;\n}(provider_1.default);\n\nexports.default = ProviderStream;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/fast-glob/out/providers/stream.js"],"names":["Object","defineProperty","exports","value","stream_1","require","stream_2","provider_1","ProviderStream","arguments","_reader","default","_settings","task","root","_getRootDirectory","options","_getReaderOptions","source","api","destination","Readable","objectMode","read","once","error","emit","on","entry","transform","destroy","dynamic","static","patterns"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,mBAAD,CAAxB;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B;;IACMG,c;;;;;AACF,4BAAc;AAAA;;AAAA;;AACV,+BAASC,SAAT;AACA,UAAKC,OAAL,GAAe,IAAIJ,QAAQ,CAACK,OAAb,CAAqB,MAAKC,SAA1B,CAAf;AAFU;AAGb;;;;WACD,cAAKC,IAAL,EAAW;AACP,UAAMC,IAAI,GAAG,KAAKC,iBAAL,CAAuBF,IAAvB,CAAb;;AACA,UAAMG,OAAO,GAAG,KAAKC,iBAAL,CAAuBJ,IAAvB,CAAhB;;AACA,UAAMK,MAAM,GAAG,KAAKC,GAAL,CAASL,IAAT,EAAeD,IAAf,EAAqBG,OAArB,CAAf;AACA,UAAMI,WAAW,GAAG,IAAIhB,QAAQ,CAACiB,QAAb,CAAsB;AAAEC,QAAAA,UAAU,EAAE,IAAd;AAAoBC,QAAAA,IAAI,EAAE,gBAAM,CAAG;AAAnC,OAAtB,CAApB;AACAL,MAAAA,MAAM,CACDM,IADL,CACU,OADV,EACmB,UAACC,KAAD;AAAA,eAAWL,WAAW,CAACM,IAAZ,CAAiB,OAAjB,EAA0BD,KAA1B,CAAX;AAAA,OADnB,EAEKE,EAFL,CAEQ,MAFR,EAEgB,UAACC,KAAD;AAAA,eAAWR,WAAW,CAACM,IAAZ,CAAiB,MAAjB,EAAyBV,OAAO,CAACa,SAAR,CAAkBD,KAAlB,CAAzB,CAAX;AAAA,OAFhB,EAGKJ,IAHL,CAGU,KAHV,EAGiB;AAAA,eAAMJ,WAAW,CAACM,IAAZ,CAAiB,KAAjB,CAAN;AAAA,OAHjB;AAIAN,MAAAA,WAAW,CACNI,IADL,CACU,OADV,EACmB;AAAA,eAAMN,MAAM,CAACY,OAAP,EAAN;AAAA,OADnB;AAEA,aAAOV,WAAP;AACH;;;WACD,aAAIN,IAAJ,EAAUD,IAAV,EAAgBG,OAAhB,EAAyB;AACrB,UAAIH,IAAI,CAACkB,OAAT,EAAkB;AACd,eAAO,KAAKrB,OAAL,CAAaqB,OAAb,CAAqBjB,IAArB,EAA2BE,OAA3B,CAAP;AACH;;AACD,aAAO,KAAKN,OAAL,CAAasB,MAAb,CAAoBnB,IAAI,CAACoB,QAAzB,EAAmCjB,OAAnC,CAAP;AACH;;;;EAvBwBT,UAAU,CAACI,O;;AAyBxCT,OAAO,CAACS,OAAR,GAAkBH,cAAlB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst stream_1 = require(\"stream\");\r\nconst stream_2 = require(\"../readers/stream\");\r\nconst provider_1 = require(\"./provider\");\r\nclass ProviderStream extends provider_1.default {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._reader = new stream_2.default(this._settings);\r\n    }\r\n    read(task) {\r\n        const root = this._getRootDirectory(task);\r\n        const options = this._getReaderOptions(task);\r\n        const source = this.api(root, task, options);\r\n        const destination = new stream_1.Readable({ objectMode: true, read: () => { } });\r\n        source\r\n            .once('error', (error) => destination.emit('error', error))\r\n            .on('data', (entry) => destination.emit('data', options.transform(entry)))\r\n            .once('end', () => destination.emit('end'));\r\n        destination\r\n            .once('close', () => source.destroy());\r\n        return destination;\r\n    }\r\n    api(root, task, options) {\r\n        if (task.dynamic) {\r\n            return this._reader.dynamic(root, options);\r\n        }\r\n        return this._reader.static(task.patterns, options);\r\n    }\r\n}\r\nexports.default = ProviderStream;\r\n"]},"metadata":{},"sourceType":"script"}