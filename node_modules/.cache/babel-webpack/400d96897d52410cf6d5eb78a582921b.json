{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler/src/render3/view/i18n/get_msg_utils\", [\"require\", \"exports\", \"@angular/compiler/src/output/map_util\", \"@angular/compiler/src/output/output_ast\", \"@angular/compiler/src/render3/view/i18n/icu_serializer\", \"@angular/compiler/src/render3/view/i18n/meta\", \"@angular/compiler/src/render3/view/i18n/util\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.serializeI18nMessageForGetMsg = exports.createGoogleGetMsgStatements = void 0;\n\n  var map_util_1 = require(\"@angular/compiler/src/output/map_util\");\n\n  var o = require(\"@angular/compiler/src/output/output_ast\");\n\n  var icu_serializer_1 = require(\"@angular/compiler/src/render3/view/i18n/icu_serializer\");\n\n  var meta_1 = require(\"@angular/compiler/src/render3/view/i18n/meta\");\n\n  var util_1 = require(\"@angular/compiler/src/render3/view/i18n/util\");\n  /** Closure uses `goog.getMsg(message)` to lookup translations */\n\n\n  var GOOG_GET_MSG = 'goog.getMsg';\n\n  function createGoogleGetMsgStatements(variable, message, closureVar, params) {\n    var messageString = serializeI18nMessageForGetMsg(message);\n    var args = [o.literal(messageString)];\n\n    if (Object.keys(params).length) {\n      args.push(map_util_1.mapLiteral(params, true));\n    } // /**\n    //  * @desc description of message\n    //  * @meaning meaning of message\n    //  */\n    // const MSG_... = goog.getMsg(..);\n    // I18N_X = MSG_...;\n\n\n    var googGetMsgStmt = closureVar.set(o.variable(GOOG_GET_MSG).callFn(args)).toConstDecl();\n    var metaComment = meta_1.i18nMetaToJSDoc(message);\n\n    if (metaComment !== null) {\n      googGetMsgStmt.addLeadingComment(metaComment);\n    }\n\n    var i18nAssignmentStmt = new o.ExpressionStatement(variable.set(closureVar));\n    return [googGetMsgStmt, i18nAssignmentStmt];\n  }\n\n  exports.createGoogleGetMsgStatements = createGoogleGetMsgStatements;\n  /**\n   * This visitor walks over i18n tree and generates its string representation, including ICUs and\n   * placeholders in `{$placeholder}` (for plain messages) or `{PLACEHOLDER}` (inside ICUs) format.\n   */\n\n  var GetMsgSerializerVisitor =\n  /** @class */\n  function () {\n    function GetMsgSerializerVisitor() {}\n\n    GetMsgSerializerVisitor.prototype.formatPh = function (value) {\n      return \"{$\" + util_1.formatI18nPlaceholderName(value) + \"}\";\n    };\n\n    GetMsgSerializerVisitor.prototype.visitText = function (text) {\n      return text.value;\n    };\n\n    GetMsgSerializerVisitor.prototype.visitContainer = function (container) {\n      var _this = this;\n\n      return container.children.map(function (child) {\n        return child.visit(_this);\n      }).join('');\n    };\n\n    GetMsgSerializerVisitor.prototype.visitIcu = function (icu) {\n      return icu_serializer_1.serializeIcuNode(icu);\n    };\n\n    GetMsgSerializerVisitor.prototype.visitTagPlaceholder = function (ph) {\n      var _this = this;\n\n      return ph.isVoid ? this.formatPh(ph.startName) : \"\" + this.formatPh(ph.startName) + ph.children.map(function (child) {\n        return child.visit(_this);\n      }).join('') + this.formatPh(ph.closeName);\n    };\n\n    GetMsgSerializerVisitor.prototype.visitPlaceholder = function (ph) {\n      return this.formatPh(ph.name);\n    };\n\n    GetMsgSerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n      return this.formatPh(ph.name);\n    };\n\n    return GetMsgSerializerVisitor;\n  }();\n\n  var serializerVisitor = new GetMsgSerializerVisitor();\n\n  function serializeI18nMessageForGetMsg(message) {\n    return message.nodes.map(function (node) {\n      return node.visit(serializerVisitor, null);\n    }).join('');\n  }\n\n  exports.serializeI18nMessageForGetMsg = serializeI18nMessageForGetMsg;\n});","map":{"version":3,"sources":["../../../../../../../../../packages/compiler/src/render3/view/i18n/get_msg_utils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAQA,MAAA,UAAA,GAAA,OAAA,CAAA,uCAAA,CAAA;;AACA,MAAA,CAAA,GAAA,OAAA,CAAA,yCAAA,CAAA;;AAEA,MAAA,gBAAA,GAAA,OAAA,CAAA,wDAAA,CAAA;;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,8CAAA,CAAA;;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,8CAAA,CAAA;AAEA;;;AACA,MAAM,YAAY,GAAG,aAArB;;AAEA,WAAgB,4BAAhB,CACI,QADJ,EAC6B,OAD7B,EACoD,UADpD,EAEI,MAFJ,EAE0C;AACxC,QAAM,aAAa,GAAG,6BAA6B,CAAC,OAAD,CAAnD;AACA,QAAM,IAAI,GAAG,CAAC,CAAC,CAAC,OAAF,CAAU,aAAV,CAAD,CAAb;;AACA,QAAI,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,MAAxB,EAAgC;AAC9B,MAAA,IAAI,CAAC,IAAL,CAAU,UAAA,CAAA,UAAA,CAAW,MAAX,EAAmB,IAAnB,CAAV;AACD,KALuC,CAOxC;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAM,cAAc,GAAG,UAAU,CAAC,GAAX,CAAe,CAAC,CAAC,QAAF,CAAW,YAAX,EAAyB,MAAzB,CAAgC,IAAhC,CAAf,EAAsD,WAAtD,EAAvB;AACA,QAAM,WAAW,GAAG,MAAA,CAAA,eAAA,CAAgB,OAAhB,CAApB;;AACA,QAAI,WAAW,KAAK,IAApB,EAA0B;AACxB,MAAA,cAAc,CAAC,iBAAf,CAAiC,WAAjC;AACD;;AACD,QAAM,kBAAkB,GAAG,IAAI,CAAC,CAAC,mBAAN,CAA0B,QAAQ,CAAC,GAAT,CAAa,UAAb,CAA1B,CAA3B;AACA,WAAO,CAAC,cAAD,EAAiB,kBAAjB,CAAP;AACD;;AAtBD,EAAA,OAAA,CAAA,4BAAA,GAAA,4BAAA;AAwBA;;;AAGG;;AACH,MAAA,uBAAA;AAAA;AAAA,cAAA;AAAA,aAAA,uBAAA,GAAA,CA+BC;;AA9BS,IAAA,uBAAA,CAAA,SAAA,CAAA,QAAA,GAAR,UAAiB,KAAjB,EAA8B;AAC5B,aAAO,OAAK,MAAA,CAAA,yBAAA,CAA0B,KAA1B,CAAL,GAAqC,GAA5C;AACD,KAFO;;AAIR,IAAA,uBAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,IAAV,EAAyB;AACvB,aAAO,IAAI,CAAC,KAAZ;AACD,KAFD;;AAIA,IAAA,uBAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAe,SAAf,EAAwC;AAAxC,UAAA,KAAA,GAAA,IAAA;;AACE,aAAO,SAAS,CAAC,QAAV,CAAmB,GAAnB,CAAuB,UAAA,KAAA,EAAK;AAAI,eAAA,KAAK,CAAC,KAAN,CAAA,KAAA,CAAA;AAAiB,OAAjD,EAAmD,IAAnD,CAAwD,EAAxD,CAAP;AACD,KAFD;;AAIA,IAAA,uBAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,GAAT,EAAsB;AACpB,aAAO,gBAAA,CAAA,gBAAA,CAAiB,GAAjB,CAAP;AACD,KAFD;;AAIA,IAAA,uBAAA,CAAA,SAAA,CAAA,mBAAA,GAAA,UAAoB,EAApB,EAA2C;AAA3C,UAAA,KAAA,GAAA,IAAA;;AACE,aAAO,EAAE,CAAC,MAAH,GACH,KAAK,QAAL,CAAc,EAAE,CAAC,SAAjB,CADG,GAEH,KAAG,KAAK,QAAL,CAAc,EAAE,CAAC,SAAjB,CAAH,GAAiC,EAAE,CAAC,QAAH,CAAY,GAAZ,CAAgB,UAAA,KAAA,EAAK;AAAI,eAAA,KAAK,CAAC,KAAN,CAAA,KAAA,CAAA;AAAiB,OAA1C,EAA4C,IAA5C,CAAiD,EAAjD,CAAjC,GACI,KAAK,QAAL,CAAc,EAAE,CAAC,SAAjB,CAHR;AAID,KALD;;AAOA,IAAA,uBAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,UAAiB,EAAjB,EAAqC;AACnC,aAAO,KAAK,QAAL,CAAc,EAAE,CAAC,IAAjB,CAAP;AACD,KAFD;;AAIA,IAAA,uBAAA,CAAA,SAAA,CAAA,mBAAA,GAAA,UAAoB,EAApB,EAA6C,OAA7C,EAA0D;AACxD,aAAO,KAAK,QAAL,CAAc,EAAE,CAAC,IAAjB,CAAP;AACD,KAFD;;AAGF,WAAA,uBAAA;AAAC,GA/BD,EAAA;;AAiCA,MAAM,iBAAiB,GAAG,IAAI,uBAAJ,EAA1B;;AAEA,WAAgB,6BAAhB,CAA8C,OAA9C,EAAmE;AACjE,WAAO,OAAO,CAAC,KAAR,CAAc,GAAd,CAAkB,UAAA,IAAA,EAAI;AAAI,aAAA,IAAI,CAAC,KAAL,CAAW,iBAAX,EAAA,IAAA,CAAA;AAAmC,KAA7D,EAA+D,IAA/D,CAAoE,EAApE,CAAP;AACD;;AAFD,EAAA,OAAA,CAAA,6BAAA,GAAA,6BAAA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as i18n from '../../../i18n/i18n_ast';\nimport {mapLiteral} from '../../../output/map_util';\nimport * as o from '../../../output/output_ast';\n\nimport {serializeIcuNode} from './icu_serializer';\nimport {i18nMetaToJSDoc} from './meta';\nimport {formatI18nPlaceholderName} from './util';\n\n/** Closure uses `goog.getMsg(message)` to lookup translations */\nconst GOOG_GET_MSG = 'goog.getMsg';\n\nexport function createGoogleGetMsgStatements(\n    variable: o.ReadVarExpr, message: i18n.Message, closureVar: o.ReadVarExpr,\n    params: {[name: string]: o.Expression}): o.Statement[] {\n  const messageString = serializeI18nMessageForGetMsg(message);\n  const args = [o.literal(messageString) as o.Expression];\n  if (Object.keys(params).length) {\n    args.push(mapLiteral(params, true));\n  }\n\n  // /**\n  //  * @desc description of message\n  //  * @meaning meaning of message\n  //  */\n  // const MSG_... = goog.getMsg(..);\n  // I18N_X = MSG_...;\n  const googGetMsgStmt = closureVar.set(o.variable(GOOG_GET_MSG).callFn(args)).toConstDecl();\n  const metaComment = i18nMetaToJSDoc(message);\n  if (metaComment !== null) {\n    googGetMsgStmt.addLeadingComment(metaComment);\n  }\n  const i18nAssignmentStmt = new o.ExpressionStatement(variable.set(closureVar));\n  return [googGetMsgStmt, i18nAssignmentStmt];\n}\n\n/**\n * This visitor walks over i18n tree and generates its string representation, including ICUs and\n * placeholders in `{$placeholder}` (for plain messages) or `{PLACEHOLDER}` (inside ICUs) format.\n */\nclass GetMsgSerializerVisitor implements i18n.Visitor {\n  private formatPh(value: string): string {\n    return `{$${formatI18nPlaceholderName(value)}}`;\n  }\n\n  visitText(text: i18n.Text): any {\n    return text.value;\n  }\n\n  visitContainer(container: i18n.Container): any {\n    return container.children.map(child => child.visit(this)).join('');\n  }\n\n  visitIcu(icu: i18n.Icu): any {\n    return serializeIcuNode(icu);\n  }\n\n  visitTagPlaceholder(ph: i18n.TagPlaceholder): any {\n    return ph.isVoid ?\n        this.formatPh(ph.startName) :\n        `${this.formatPh(ph.startName)}${ph.children.map(child => child.visit(this)).join('')}${\n            this.formatPh(ph.closeName)}`;\n  }\n\n  visitPlaceholder(ph: i18n.Placeholder): any {\n    return this.formatPh(ph.name);\n  }\n\n  visitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): any {\n    return this.formatPh(ph.name);\n  }\n}\n\nconst serializerVisitor = new GetMsgSerializerVisitor();\n\nexport function serializeI18nMessageForGetMsg(message: i18n.Message): string {\n  return message.nodes.map(node => node.visit(serializerVisitor, null)).join('');\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}