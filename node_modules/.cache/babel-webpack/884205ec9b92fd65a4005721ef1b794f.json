{"ast":null,"code":"\"use strict\";\n/**\n * **PostCSS Plugin Warning**\n *\n * Loader wrapper for postcss plugin warnings (`root.messages`)\n *\n * @class Warning\n * @extends Error\n *\n * @param {Object} warning PostCSS Warning\n */\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar Warning = /*#__PURE__*/function (_Error) {\n  _inherits(Warning, _Error);\n\n  var _super = _createSuper(Warning);\n\n  function Warning(warning) {\n    var _this;\n\n    _classCallCheck(this, Warning);\n\n    _this = _super.call(this, warning);\n    var text = warning.text,\n        line = warning.line,\n        column = warning.column,\n        plugin = warning.plugin;\n    _this.name = 'Warning';\n    _this.message = \"\".concat(_this.name, \"\\n\\n\");\n\n    if (typeof line !== 'undefined') {\n      _this.message += \"(\".concat(line, \":\").concat(column, \") \");\n    }\n\n    _this.message += plugin ? \"\".concat(plugin, \": \") : '';\n    _this.message += \"\".concat(text);\n    _this.stack = false;\n    return _this;\n  }\n\n  return Warning;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nmodule.exports = Warning;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/postcss-loader/dist/Warning.js"],"names":["Warning","warning","text","line","column","plugin","name","message","stack","Error","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;IACMA,O;;;;;AACJ,mBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,8BAAMA,OAAN;AACA,QACEC,IADF,GAKID,OALJ,CACEC,IADF;AAAA,QAEEC,IAFF,GAKIF,OALJ,CAEEE,IAFF;AAAA,QAGEC,MAHF,GAKIH,OALJ,CAGEG,MAHF;AAAA,QAIEC,MAJF,GAKIJ,OALJ,CAIEI,MAJF;AAMA,UAAKC,IAAL,GAAY,SAAZ;AACA,UAAKC,OAAL,aAAkB,MAAKD,IAAvB;;AAEA,QAAI,OAAOH,IAAP,KAAgB,WAApB,EAAiC;AAC/B,YAAKI,OAAL,eAAoBJ,IAApB,cAA4BC,MAA5B;AACD;;AAED,UAAKG,OAAL,IAAgBF,MAAM,aAAMA,MAAN,UAAmB,EAAzC;AACA,UAAKE,OAAL,cAAmBL,IAAnB;AACA,UAAKM,KAAL,GAAa,KAAb;AAjBmB;AAkBpB;;;iCAnBmBC,K;;AAuBtBC,MAAM,CAACC,OAAP,GAAiBX,OAAjB","sourcesContent":["\"use strict\";\n\n/**\n * **PostCSS Plugin Warning**\n *\n * Loader wrapper for postcss plugin warnings (`root.messages`)\n *\n * @class Warning\n * @extends Error\n *\n * @param {Object} warning PostCSS Warning\n */\nclass Warning extends Error {\n  constructor(warning) {\n    super(warning);\n    const {\n      text,\n      line,\n      column,\n      plugin\n    } = warning;\n    this.name = 'Warning';\n    this.message = `${this.name}\\n\\n`;\n\n    if (typeof line !== 'undefined') {\n      this.message += `(${line}:${column}) `;\n    }\n\n    this.message += plugin ? `${plugin}: ` : '';\n    this.message += `${text}`;\n    this.stack = false;\n  }\n\n}\n\nmodule.exports = Warning;"]},"metadata":{},"sourceType":"script"}