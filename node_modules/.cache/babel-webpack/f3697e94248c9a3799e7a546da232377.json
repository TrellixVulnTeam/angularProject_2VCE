{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Hook = require(\"./Hook\");\n\nvar HookCodeFactory = require(\"./HookCodeFactory\");\n\nvar AsyncSeriesHookCodeFactory = /*#__PURE__*/function (_HookCodeFactory) {\n  _inherits(AsyncSeriesHookCodeFactory, _HookCodeFactory);\n\n  var _super = _createSuper(AsyncSeriesHookCodeFactory);\n\n  function AsyncSeriesHookCodeFactory() {\n    _classCallCheck(this, AsyncSeriesHookCodeFactory);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AsyncSeriesHookCodeFactory, [{\n    key: \"content\",\n    value: function content(_ref) {\n      var _onError = _ref.onError,\n          onDone = _ref.onDone;\n      return this.callTapsSeries({\n        onError: function onError(i, err, next, doneBreak) {\n          return _onError(err) + doneBreak(true);\n        },\n        onDone: onDone\n      });\n    }\n  }]);\n\n  return AsyncSeriesHookCodeFactory;\n}(HookCodeFactory);\n\nvar factory = new AsyncSeriesHookCodeFactory();\n\nvar AsyncSeriesHook = /*#__PURE__*/function (_Hook) {\n  _inherits(AsyncSeriesHook, _Hook);\n\n  var _super2 = _createSuper(AsyncSeriesHook);\n\n  function AsyncSeriesHook() {\n    _classCallCheck(this, AsyncSeriesHook);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(AsyncSeriesHook, [{\n    key: \"compile\",\n    value: function compile(options) {\n      factory.setup(this, options);\n      return factory.create(options);\n    }\n  }]);\n\n  return AsyncSeriesHook;\n}(Hook);\n\nObject.defineProperties(AsyncSeriesHook.prototype, {\n  _call: {\n    value: undefined,\n    configurable: true,\n    writable: true\n  }\n});\nmodule.exports = AsyncSeriesHook;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/tapable/lib/AsyncSeriesHook.js"],"names":["Hook","require","HookCodeFactory","AsyncSeriesHookCodeFactory","onError","onDone","callTapsSeries","i","err","next","doneBreak","factory","AsyncSeriesHook","options","setup","create","Object","defineProperties","prototype","_call","value","undefined","configurable","writable","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;IAEME,0B;;;;;;;;;;;;;WACL,uBAA6B;AAAA,UAAnBC,QAAmB,QAAnBA,OAAmB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AAC5B,aAAO,KAAKC,cAAL,CAAoB;AAC1BF,QAAAA,OAAO,EAAE,iBAACG,CAAD,EAAIC,GAAJ,EAASC,IAAT,EAAeC,SAAf;AAAA,iBAA6BN,QAAO,CAACI,GAAD,CAAP,GAAeE,SAAS,CAAC,IAAD,CAArD;AAAA,SADiB;AAE1BL,QAAAA,MAAM,EAANA;AAF0B,OAApB,CAAP;AAIA;;;;EANuCH,e;;AASzC,IAAMS,OAAO,GAAG,IAAIR,0BAAJ,EAAhB;;IAEMS,e;;;;;;;;;;;;;WACL,iBAAQC,OAAR,EAAiB;AAChBF,MAAAA,OAAO,CAACG,KAAR,CAAc,IAAd,EAAoBD,OAApB;AACA,aAAOF,OAAO,CAACI,MAAR,CAAeF,OAAf,CAAP;AACA;;;;EAJ4Bb,I;;AAO9BgB,MAAM,CAACC,gBAAP,CAAwBL,eAAe,CAACM,SAAxC,EAAmD;AAClDC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAEC,SAAT;AAAoBC,IAAAA,YAAY,EAAE,IAAlC;AAAwCC,IAAAA,QAAQ,EAAE;AAAlD;AAD2C,CAAnD;AAIAC,MAAM,CAACC,OAAP,GAAiBb,eAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncSeriesHookCodeFactory extends HookCodeFactory {\n\tcontent({ onError, onDone }) {\n\t\treturn this.callTapsSeries({\n\t\t\tonError: (i, err, next, doneBreak) => onError(err) + doneBreak(true),\n\t\t\tonDone\n\t\t});\n\t}\n}\n\nconst factory = new AsyncSeriesHookCodeFactory();\n\nclass AsyncSeriesHook extends Hook {\n\tcompile(options) {\n\t\tfactory.setup(this, options);\n\t\treturn factory.create(options);\n\t}\n}\n\nObject.defineProperties(AsyncSeriesHook.prototype, {\n\t_call: { value: undefined, configurable: true, writable: true }\n});\n\nmodule.exports = AsyncSeriesHook;\n"]},"metadata":{},"sourceType":"script"}