{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Florent Cailhol @ooflorent\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar ConstDependency = require(\"./ConstDependency\");\n\nvar HarmonyTopLevelThisParserPlugin = /*#__PURE__*/function () {\n  function HarmonyTopLevelThisParserPlugin() {\n    _classCallCheck(this, HarmonyTopLevelThisParserPlugin);\n  }\n\n  _createClass(HarmonyTopLevelThisParserPlugin, [{\n    key: \"apply\",\n    value: function apply(parser) {\n      parser.hooks.expression.for(\"this\").tap(\"HarmonyTopLevelThisParserPlugin\", function (node) {\n        if (!parser.scope.topLevelScope) return;\n        var module = parser.state.module;\n        var isHarmony = !!(module.buildMeta && module.buildMeta.exportsType);\n\n        if (isHarmony) {\n          var dep = new ConstDependency(\"undefined\", node.range, false);\n          dep.loc = node.loc;\n          parser.state.current.addDependency(dep);\n        }\n      });\n    }\n  }]);\n\n  return HarmonyTopLevelThisParserPlugin;\n}();\n\nmodule.exports = HarmonyTopLevelThisParserPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/dependencies/HarmonyTopLevelThisParserPlugin.js"],"names":["ConstDependency","require","HarmonyTopLevelThisParserPlugin","parser","hooks","expression","for","tap","node","scope","topLevelScope","module","state","isHarmony","buildMeta","exportsType","dep","range","loc","current","addDependency","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,IAAMA,eAAe,GAAGC,OAAO,CAAC,mBAAD,CAA/B;;IAEMC,+B;;;;;;;WACL,eAAMC,MAAN,EAAc;AACbA,MAAAA,MAAM,CAACC,KAAP,CAAaC,UAAb,CACEC,GADF,CACM,MADN,EAEEC,GAFF,CAEM,iCAFN,EAEyC,UAAAC,IAAI,EAAI;AAC/C,YAAI,CAACL,MAAM,CAACM,KAAP,CAAaC,aAAlB,EAAiC;AACjC,YAAMC,MAAM,GAAGR,MAAM,CAACS,KAAP,CAAaD,MAA5B;AACA,YAAME,SAAS,GAAG,CAAC,EAAEF,MAAM,CAACG,SAAP,IAAoBH,MAAM,CAACG,SAAP,CAAiBC,WAAvC,CAAnB;;AACA,YAAIF,SAAJ,EAAe;AACd,cAAMG,GAAG,GAAG,IAAIhB,eAAJ,CAAoB,WAApB,EAAiCQ,IAAI,CAACS,KAAtC,EAA6C,KAA7C,CAAZ;AACAD,UAAAA,GAAG,CAACE,GAAJ,GAAUV,IAAI,CAACU,GAAf;AACAf,UAAAA,MAAM,CAACS,KAAP,CAAaO,OAAb,CAAqBC,aAArB,CAAmCJ,GAAnC;AACA;AACD,OAXF;AAYA;;;;;;AAGFL,MAAM,CAACU,OAAP,GAAiBnB,+BAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Florent Cailhol @ooflorent\n*/\n\"use strict\";\n\nconst ConstDependency = require(\"./ConstDependency\");\n\nclass HarmonyTopLevelThisParserPlugin {\n\tapply(parser) {\n\t\tparser.hooks.expression\n\t\t\t.for(\"this\")\n\t\t\t.tap(\"HarmonyTopLevelThisParserPlugin\", node => {\n\t\t\t\tif (!parser.scope.topLevelScope) return;\n\t\t\t\tconst module = parser.state.module;\n\t\t\t\tconst isHarmony = !!(module.buildMeta && module.buildMeta.exportsType);\n\t\t\t\tif (isHarmony) {\n\t\t\t\t\tconst dep = new ConstDependency(\"undefined\", node.range, false);\n\t\t\t\t\tdep.loc = node.loc;\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n\nmodule.exports = HarmonyTopLevelThisParserPlugin;\n"]},"metadata":{},"sourceType":"script"}