{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Template = require(\"./Template\");\n\nvar ConstDependency = require(\"./dependencies/ConstDependency\");\n\nvar ParserHelpers = require(\"./ParserHelpers\");\n\nvar NullFactory = require(\"./NullFactory\");\n\nvar REPLACEMENTS = {\n  // eslint-disable-next-line camelcase\n  __webpack_hash__: \"__webpack_require__.h\",\n  // eslint-disable-next-line camelcase\n  __webpack_chunkname__: \"__webpack_require__.cn\"\n};\nvar REPLACEMENT_TYPES = {\n  // eslint-disable-next-line camelcase\n  __webpack_hash__: \"string\",\n  // eslint-disable-next-line camelcase\n  __webpack_chunkname__: \"string\"\n};\n\nvar ExtendedAPIPlugin = /*#__PURE__*/function () {\n  function ExtendedAPIPlugin() {\n    _classCallCheck(this, ExtendedAPIPlugin);\n  }\n\n  _createClass(ExtendedAPIPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.compilation.tap(\"ExtendedAPIPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(ConstDependency, new NullFactory());\n        compilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\n        var mainTemplate = compilation.mainTemplate;\n        mainTemplate.hooks.requireExtensions.tap(\"ExtendedAPIPlugin\", function (source, chunk, hash) {\n          var buf = [source];\n          buf.push(\"\");\n          buf.push(\"// __webpack_hash__\");\n          buf.push(\"\".concat(mainTemplate.requireFn, \".h = \").concat(JSON.stringify(hash), \";\"));\n          buf.push(\"\");\n          buf.push(\"// __webpack_chunkname__\");\n          buf.push(\"\".concat(mainTemplate.requireFn, \".cn = \").concat(JSON.stringify(chunk.name), \";\"));\n          return Template.asString(buf);\n        });\n        mainTemplate.hooks.globalHash.tap(\"ExtendedAPIPlugin\", function () {\n          return true;\n        });\n\n        var handler = function handler(parser, parserOptions) {\n          Object.keys(REPLACEMENTS).forEach(function (key) {\n            parser.hooks.expression.for(key).tap(\"ExtendedAPIPlugin\", ParserHelpers.toConstantDependencyWithWebpackRequire(parser, REPLACEMENTS[key]));\n            parser.hooks.evaluateTypeof.for(key).tap(\"ExtendedAPIPlugin\", ParserHelpers.evaluateToString(REPLACEMENT_TYPES[key]));\n          });\n        };\n\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"ExtendedAPIPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"ExtendedAPIPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"ExtendedAPIPlugin\", handler);\n      });\n    }\n  }]);\n\n  return ExtendedAPIPlugin;\n}();\n\nmodule.exports = ExtendedAPIPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/ExtendedAPIPlugin.js"],"names":["Template","require","ConstDependency","ParserHelpers","NullFactory","REPLACEMENTS","__webpack_hash__","__webpack_chunkname__","REPLACEMENT_TYPES","ExtendedAPIPlugin","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","dependencyTemplates","mainTemplate","requireExtensions","source","chunk","hash","buf","push","requireFn","JSON","stringify","name","asString","globalHash","handler","parser","parserOptions","Object","keys","forEach","key","expression","for","toConstantDependencyWithWebpackRequire","evaluateTypeof","evaluateToString","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"./Template\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst ParserHelpers = require(\"./ParserHelpers\");\nconst NullFactory = require(\"./NullFactory\");\n\nconst REPLACEMENTS = {\n\t// eslint-disable-next-line camelcase\n\t__webpack_hash__: \"__webpack_require__.h\",\n\t// eslint-disable-next-line camelcase\n\t__webpack_chunkname__: \"__webpack_require__.cn\"\n};\nconst REPLACEMENT_TYPES = {\n\t// eslint-disable-next-line camelcase\n\t__webpack_hash__: \"string\",\n\t// eslint-disable-next-line camelcase\n\t__webpack_chunkname__: \"string\"\n};\n\nclass ExtendedAPIPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ExtendedAPIPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst mainTemplate = compilation.mainTemplate;\n\t\t\t\tmainTemplate.hooks.requireExtensions.tap(\n\t\t\t\t\t\"ExtendedAPIPlugin\",\n\t\t\t\t\t(source, chunk, hash) => {\n\t\t\t\t\t\tconst buf = [source];\n\t\t\t\t\t\tbuf.push(\"\");\n\t\t\t\t\t\tbuf.push(\"// __webpack_hash__\");\n\t\t\t\t\t\tbuf.push(`${mainTemplate.requireFn}.h = ${JSON.stringify(hash)};`);\n\t\t\t\t\t\tbuf.push(\"\");\n\t\t\t\t\t\tbuf.push(\"// __webpack_chunkname__\");\n\t\t\t\t\t\tbuf.push(\n\t\t\t\t\t\t\t`${mainTemplate.requireFn}.cn = ${JSON.stringify(chunk.name)};`\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn Template.asString(buf);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tmainTemplate.hooks.globalHash.tap(\"ExtendedAPIPlugin\", () => true);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tObject.keys(REPLACEMENTS).forEach(key => {\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"ExtendedAPIPlugin\",\n\t\t\t\t\t\t\t\tParserHelpers.toConstantDependencyWithWebpackRequire(\n\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\tREPLACEMENTS[key]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"ExtendedAPIPlugin\",\n\t\t\t\t\t\t\t\tParserHelpers.evaluateToString(REPLACEMENT_TYPES[key])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ExtendedAPIPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"ExtendedAPIPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"ExtendedAPIPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ExtendedAPIPlugin;\n"]},"metadata":{},"sourceType":"script"}