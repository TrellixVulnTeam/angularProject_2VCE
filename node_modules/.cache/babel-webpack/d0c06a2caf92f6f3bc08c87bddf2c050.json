{"ast":null,"code":"'use strict';\n/**\n * `rawlist` type prompt\n */\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _ = {\n  extend: require('lodash/extend'),\n  isNumber: require('lodash/isNumber'),\n  findIndex: require('lodash/findIndex')\n};\n\nvar chalk = require('chalk');\n\nvar _require = require('rxjs/operators'),\n    map = _require.map,\n    takeUntil = _require.takeUntil;\n\nvar Base = require('./base');\n\nvar Separator = require('../objects/separator');\n\nvar observe = require('../utils/events');\n\nvar Paginator = require('../utils/paginator');\n\nvar incrementListIndex = require('../utils/incrementListIndex');\n\nvar RawListPrompt = /*#__PURE__*/function (_Base) {\n  _inherits(RawListPrompt, _Base);\n\n  var _super = _createSuper(RawListPrompt);\n\n  function RawListPrompt(questions, rl, answers) {\n    var _this;\n\n    _classCallCheck(this, RawListPrompt);\n\n    _this = _super.call(this, questions, rl, answers);\n\n    if (!_this.opt.choices) {\n      _this.throwParamError('choices');\n    }\n\n    _this.opt.validChoices = _this.opt.choices.filter(Separator.exclude);\n    _this.selected = 0;\n    _this.rawDefault = 0;\n\n    _.extend(_this.opt, {\n      validate: function validate(val) {\n        return val != null;\n      }\n    });\n\n    var def = _this.opt.default;\n\n    if (_.isNumber(def) && def >= 0 && def < _this.opt.choices.realLength) {\n      _this.selected = def;\n      _this.rawDefault = def;\n    } else if (!_.isNumber(def) && def != null) {\n      var index = _.findIndex(_this.opt.choices.realChoices, function (_ref) {\n        var value = _ref.value;\n        return value === def;\n      });\n\n      var safeIndex = Math.max(index, 0);\n      _this.selected = safeIndex;\n      _this.rawDefault = safeIndex;\n    } // Make sure no default is set (so it won't be printed)\n\n\n    _this.opt.default = null;\n    var shouldLoop = _this.opt.loop === undefined ? true : _this.opt.loop;\n    _this.paginator = new Paginator(undefined, {\n      isInfinite: shouldLoop\n    });\n    return _this;\n  }\n  /**\n   * Start the Inquiry session\n   * @param  {Function} cb      Callback when prompt is done\n   * @return {this}\n   */\n\n\n  _createClass(RawListPrompt, [{\n    key: \"_run\",\n    value: function _run(cb) {\n      this.done = cb; // Once user confirm (enter key)\n\n      var events = observe(this.rl);\n      var submit = events.line.pipe(map(this.getCurrentValue.bind(this)));\n      var validation = this.handleSubmitEvents(submit);\n      validation.success.forEach(this.onEnd.bind(this));\n      validation.error.forEach(this.onError.bind(this));\n      events.normalizedUpKey.pipe(takeUntil(events.line)).forEach(this.onUpKey.bind(this));\n      events.normalizedDownKey.pipe(takeUntil(events.line)).forEach(this.onDownKey.bind(this));\n      events.keypress.pipe(takeUntil(validation.success)).forEach(this.onKeypress.bind(this)); // Init the prompt\n\n      this.render();\n      return this;\n    }\n    /**\n     * Render the prompt to screen\n     * @return {RawListPrompt} self\n     */\n\n  }, {\n    key: \"render\",\n    value: function render(error) {\n      // Render question\n      var message = this.getQuestion();\n      var bottomContent = '';\n\n      if (this.status === 'answered') {\n        message += chalk.cyan(this.answer);\n      } else {\n        var choicesStr = renderChoices(this.opt.choices, this.selected);\n        message += '\\n' + this.paginator.paginate(choicesStr, this.selected, this.opt.pageSize);\n        message += '\\n  Answer: ';\n      }\n\n      message += this.rl.line;\n\n      if (error) {\n        bottomContent = '\\n' + chalk.red('>> ') + error;\n      }\n\n      this.screen.render(message, bottomContent);\n    }\n    /**\n     * When user press `enter` key\n     */\n\n  }, {\n    key: \"getCurrentValue\",\n    value: function getCurrentValue(index) {\n      if (index == null) {\n        index = this.rawDefault;\n      } else if (index === '') {\n        index = this.selected;\n      } else {\n        index -= 1;\n      }\n\n      var choice = this.opt.choices.getChoice(index);\n      return choice ? choice.value : null;\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd(state) {\n      this.status = 'answered';\n      this.answer = state.value; // Re-render prompt\n\n      this.render();\n      this.screen.done();\n      this.done(state.value);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError() {\n      this.render('Please enter a valid index');\n    }\n    /**\n     * When user press a key\n     */\n\n  }, {\n    key: \"onKeypress\",\n    value: function onKeypress() {\n      var index = this.rl.line.length ? Number(this.rl.line) - 1 : 0;\n\n      if (this.opt.choices.getChoice(index)) {\n        this.selected = index;\n      } else {\n        this.selected = undefined;\n      }\n\n      this.render();\n    }\n    /**\n     * When user press up key\n     */\n\n  }, {\n    key: \"onUpKey\",\n    value: function onUpKey() {\n      this.onArrowKey('up');\n    }\n    /**\n     * When user press down key\n     */\n\n  }, {\n    key: \"onDownKey\",\n    value: function onDownKey() {\n      this.onArrowKey('down');\n    }\n    /**\n     * When user press up or down key\n     * @param {String} type Arrow type: up or down\n     */\n\n  }, {\n    key: \"onArrowKey\",\n    value: function onArrowKey(type) {\n      this.selected = incrementListIndex(this.selected, type, this.opt);\n      this.rl.line = String(this.selected + 1);\n    }\n  }]);\n\n  return RawListPrompt;\n}(Base);\n/**\n * Function for rendering list choices\n * @param  {Number} pointer Position of the pointer\n * @return {String}         Rendered content\n */\n\n\nfunction renderChoices(choices, pointer) {\n  var output = '';\n  var separatorOffset = 0;\n  choices.forEach(function (choice, i) {\n    output += '\\n  ';\n\n    if (choice.type === 'separator') {\n      separatorOffset++;\n      output += ' ' + choice;\n      return;\n    }\n\n    var index = i - separatorOffset;\n    var display = index + 1 + ') ' + choice.name;\n\n    if (index === pointer) {\n      display = chalk.cyan(display);\n    }\n\n    output += display;\n  });\n  return output;\n}\n\nmodule.exports = RawListPrompt;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/inquirer/lib/prompts/rawlist.js"],"names":["_","extend","require","isNumber","findIndex","chalk","map","takeUntil","Base","Separator","observe","Paginator","incrementListIndex","RawListPrompt","questions","rl","answers","opt","choices","throwParamError","validChoices","filter","exclude","selected","rawDefault","validate","val","def","default","realLength","index","realChoices","value","safeIndex","Math","max","shouldLoop","loop","undefined","paginator","isInfinite","cb","done","events","submit","line","pipe","getCurrentValue","bind","validation","handleSubmitEvents","success","forEach","onEnd","error","onError","normalizedUpKey","onUpKey","normalizedDownKey","onDownKey","keypress","onKeypress","render","message","getQuestion","bottomContent","status","cyan","answer","choicesStr","renderChoices","paginate","pageSize","red","screen","choice","getChoice","state","length","Number","onArrowKey","type","String","pointer","output","separatorOffset","i","display","name","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n/**\n * `rawlist` type prompt\n */\n\nvar _ = {\n  extend: require('lodash/extend'),\n  isNumber: require('lodash/isNumber'),\n  findIndex: require('lodash/findIndex'),\n};\nvar chalk = require('chalk');\nvar { map, takeUntil } = require('rxjs/operators');\nvar Base = require('./base');\nvar Separator = require('../objects/separator');\nvar observe = require('../utils/events');\nvar Paginator = require('../utils/paginator');\nvar incrementListIndex = require('../utils/incrementListIndex');\n\nclass RawListPrompt extends Base {\n  constructor(questions, rl, answers) {\n    super(questions, rl, answers);\n\n    if (!this.opt.choices) {\n      this.throwParamError('choices');\n    }\n\n    this.opt.validChoices = this.opt.choices.filter(Separator.exclude);\n\n    this.selected = 0;\n    this.rawDefault = 0;\n\n    _.extend(this.opt, {\n      validate: function (val) {\n        return val != null;\n      },\n    });\n\n    var def = this.opt.default;\n    if (_.isNumber(def) && def >= 0 && def < this.opt.choices.realLength) {\n      this.selected = def;\n      this.rawDefault = def;\n    } else if (!_.isNumber(def) && def != null) {\n      let index = _.findIndex(this.opt.choices.realChoices, ({ value }) => value === def);\n      let safeIndex = Math.max(index, 0);\n      this.selected = safeIndex;\n      this.rawDefault = safeIndex;\n    }\n\n    // Make sure no default is set (so it won't be printed)\n    this.opt.default = null;\n\n    const shouldLoop = this.opt.loop === undefined ? true : this.opt.loop;\n    this.paginator = new Paginator(undefined, { isInfinite: shouldLoop });\n  }\n\n  /**\n   * Start the Inquiry session\n   * @param  {Function} cb      Callback when prompt is done\n   * @return {this}\n   */\n\n  _run(cb) {\n    this.done = cb;\n\n    // Once user confirm (enter key)\n    var events = observe(this.rl);\n    var submit = events.line.pipe(map(this.getCurrentValue.bind(this)));\n\n    var validation = this.handleSubmitEvents(submit);\n    validation.success.forEach(this.onEnd.bind(this));\n    validation.error.forEach(this.onError.bind(this));\n\n    events.normalizedUpKey.pipe(takeUntil(events.line)).forEach(this.onUpKey.bind(this));\n    events.normalizedDownKey\n      .pipe(takeUntil(events.line))\n      .forEach(this.onDownKey.bind(this));\n    events.keypress\n      .pipe(takeUntil(validation.success))\n      .forEach(this.onKeypress.bind(this));\n    // Init the prompt\n    this.render();\n\n    return this;\n  }\n\n  /**\n   * Render the prompt to screen\n   * @return {RawListPrompt} self\n   */\n\n  render(error) {\n    // Render question\n    var message = this.getQuestion();\n    var bottomContent = '';\n\n    if (this.status === 'answered') {\n      message += chalk.cyan(this.answer);\n    } else {\n      var choicesStr = renderChoices(this.opt.choices, this.selected);\n      message +=\n        '\\n' + this.paginator.paginate(choicesStr, this.selected, this.opt.pageSize);\n      message += '\\n  Answer: ';\n    }\n    message += this.rl.line;\n\n    if (error) {\n      bottomContent = '\\n' + chalk.red('>> ') + error;\n    }\n\n    this.screen.render(message, bottomContent);\n  }\n\n  /**\n   * When user press `enter` key\n   */\n\n  getCurrentValue(index) {\n    if (index == null) {\n      index = this.rawDefault;\n    } else if (index === '') {\n      index = this.selected;\n    } else {\n      index -= 1;\n    }\n\n    var choice = this.opt.choices.getChoice(index);\n    return choice ? choice.value : null;\n  }\n\n  onEnd(state) {\n    this.status = 'answered';\n    this.answer = state.value;\n\n    // Re-render prompt\n    this.render();\n\n    this.screen.done();\n    this.done(state.value);\n  }\n\n  onError() {\n    this.render('Please enter a valid index');\n  }\n\n  /**\n   * When user press a key\n   */\n\n  onKeypress() {\n    var index = this.rl.line.length ? Number(this.rl.line) - 1 : 0;\n\n    if (this.opt.choices.getChoice(index)) {\n      this.selected = index;\n    } else {\n      this.selected = undefined;\n    }\n    this.render();\n  }\n\n  /**\n   * When user press up key\n   */\n\n  onUpKey() {\n    this.onArrowKey('up');\n  }\n\n  /**\n   * When user press down key\n   */\n\n  onDownKey() {\n    this.onArrowKey('down');\n  }\n\n  /**\n   * When user press up or down key\n   * @param {String} type Arrow type: up or down\n   */\n\n  onArrowKey(type) {\n    this.selected = incrementListIndex(this.selected, type, this.opt);\n    this.rl.line = String(this.selected + 1);\n  }\n}\n\n/**\n * Function for rendering list choices\n * @param  {Number} pointer Position of the pointer\n * @return {String}         Rendered content\n */\n\nfunction renderChoices(choices, pointer) {\n  var output = '';\n  var separatorOffset = 0;\n\n  choices.forEach(function (choice, i) {\n    output += '\\n  ';\n\n    if (choice.type === 'separator') {\n      separatorOffset++;\n      output += ' ' + choice;\n      return;\n    }\n\n    var index = i - separatorOffset;\n    var display = index + 1 + ') ' + choice.name;\n    if (index === pointer) {\n      display = chalk.cyan(display);\n    }\n\n    output += display;\n  });\n\n  return output;\n}\n\nmodule.exports = RawListPrompt;\n"]},"metadata":{},"sourceType":"script"}