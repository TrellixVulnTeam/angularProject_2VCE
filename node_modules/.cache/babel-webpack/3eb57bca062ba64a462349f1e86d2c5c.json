{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar SourceNode = require(\"source-map\").SourceNode;\n\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\n\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\n\nvar Source = require(\"./Source\");\n\nvar LineToLineMappedSource = /*#__PURE__*/function (_Source) {\n  _inherits(LineToLineMappedSource, _Source);\n\n  var _super = _createSuper(LineToLineMappedSource);\n\n  function LineToLineMappedSource(value, name, originalSource) {\n    var _this;\n\n    _classCallCheck(this, LineToLineMappedSource);\n\n    _this = _super.call(this);\n    _this._value = value;\n    _this._name = name;\n    _this._originalSource = originalSource;\n    return _this;\n  }\n\n  _createClass(LineToLineMappedSource, [{\n    key: \"source\",\n    value: function source() {\n      return this._value;\n    }\n  }, {\n    key: \"node\",\n    value: function node(options) {\n      var value = this._value;\n      var name = this._name;\n      var lines = value.split(\"\\n\");\n      var node = new SourceNode(null, null, null, lines.map(function (line, idx) {\n        return new SourceNode(idx + 1, 0, name, line + (idx != lines.length - 1 ? \"\\n\" : \"\"));\n      }));\n      node.setSourceContent(name, this._originalSource);\n      return node;\n    }\n  }, {\n    key: \"listMap\",\n    value: function listMap(options) {\n      return new SourceListMap(this._value, this._name, this._originalSource);\n    }\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash) {\n      hash.update(this._value);\n      hash.update(this._originalSource);\n    }\n  }]);\n\n  return LineToLineMappedSource;\n}(Source);\n\nrequire(\"./SourceAndMapMixin\")(LineToLineMappedSource.prototype);\n\nmodule.exports = LineToLineMappedSource;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack-sources/lib/LineToLineMappedSource.js"],"names":["SourceNode","require","SourceMapConsumer","SourceListMap","Source","LineToLineMappedSource","value","name","originalSource","_value","_name","_originalSource","options","lines","split","node","map","line","idx","length","setSourceContent","hash","update","prototype","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBD,UAAvC;;AACA,IAAIE,iBAAiB,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBC,iBAA9C;;AACA,IAAIC,aAAa,GAAGF,OAAO,CAAC,iBAAD,CAAP,CAA2BE,aAA/C;;AACA,IAAIC,MAAM,GAAGH,OAAO,CAAC,UAAD,CAApB;;IAEMI,sB;;;;;AACL,kCAAYC,KAAZ,EAAmBC,IAAnB,EAAyBC,cAAzB,EAAyC;AAAA;;AAAA;;AACxC;AACA,UAAKC,MAAL,GAAcH,KAAd;AACA,UAAKI,KAAL,GAAaH,IAAb;AACA,UAAKI,eAAL,GAAuBH,cAAvB;AAJwC;AAKxC;;;;WAED,kBAAS;AACR,aAAO,KAAKC,MAAZ;AACA;;;WAED,cAAKG,OAAL,EAAc;AACb,UAAIN,KAAK,GAAG,KAAKG,MAAjB;AACA,UAAIF,IAAI,GAAG,KAAKG,KAAhB;AACA,UAAIG,KAAK,GAAGP,KAAK,CAACQ,KAAN,CAAY,IAAZ,CAAZ;AACA,UAAIC,IAAI,GAAG,IAAIf,UAAJ,CAAe,IAAf,EAAqB,IAArB,EAA2B,IAA3B,EACVa,KAAK,CAACG,GAAN,CAAU,UAASC,IAAT,EAAeC,GAAf,EAAoB;AAC7B,eAAO,IAAIlB,UAAJ,CAAekB,GAAG,GAAG,CAArB,EAAwB,CAAxB,EAA2BX,IAA3B,EAAkCU,IAAI,IAAIC,GAAG,IAAIL,KAAK,CAACM,MAAN,GAAe,CAAtB,GAA0B,IAA1B,GAAiC,EAArC,CAAtC,CAAP;AACA,OAFD,CADU,CAAX;AAKAJ,MAAAA,IAAI,CAACK,gBAAL,CAAsBb,IAAtB,EAA4B,KAAKI,eAAjC;AACA,aAAOI,IAAP;AACA;;;WAED,iBAAQH,OAAR,EAAiB;AAChB,aAAO,IAAIT,aAAJ,CAAkB,KAAKM,MAAvB,EAA+B,KAAKC,KAApC,EAA2C,KAAKC,eAAhD,CAAP;AACA;;;WAED,oBAAWU,IAAX,EAAiB;AAChBA,MAAAA,IAAI,CAACC,MAAL,CAAY,KAAKb,MAAjB;AACAY,MAAAA,IAAI,CAACC,MAAL,CAAY,KAAKX,eAAjB;AACA;;;;EAhCmCP,M;;AAmCrCH,OAAO,CAAC,qBAAD,CAAP,CAA+BI,sBAAsB,CAACkB,SAAtD;;AAEAC,MAAM,CAACC,OAAP,GAAiBpB,sBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar SourceNode = require(\"source-map\").SourceNode;\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\nvar Source = require(\"./Source\");\n\nclass LineToLineMappedSource extends Source {\n\tconstructor(value, name, originalSource) {\n\t\tsuper();\n\t\tthis._value = value;\n\t\tthis._name = name;\n\t\tthis._originalSource = originalSource;\n\t}\n\n\tsource() {\n\t\treturn this._value;\n\t}\n\n\tnode(options) {\n\t\tvar value = this._value;\n\t\tvar name = this._name;\n\t\tvar lines = value.split(\"\\n\");\n\t\tvar node = new SourceNode(null, null, null,\n\t\t\tlines.map(function(line, idx) {\n\t\t\t\treturn new SourceNode(idx + 1, 0, name, (line + (idx != lines.length - 1 ? \"\\n\" : \"\")));\n\t\t\t})\n\t\t);\n\t\tnode.setSourceContent(name, this._originalSource);\n\t\treturn node;\n\t}\n\n\tlistMap(options) {\n\t\treturn new SourceListMap(this._value, this._name, this._originalSource)\n\t}\n\n\tupdateHash(hash) {\n\t\thash.update(this._value);\n\t\thash.update(this._originalSource);\n\t}\n}\n\nrequire(\"./SourceAndMapMixin\")(LineToLineMappedSource.prototype);\n\nmodule.exports = LineToLineMappedSource;\n"]},"metadata":{},"sourceType":"script"}