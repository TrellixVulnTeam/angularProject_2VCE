{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar RequireIncludeDependency = require(\"./RequireIncludeDependency\");\n\nvar RequireIncludeDependencyParserPlugin = require(\"./RequireIncludeDependencyParserPlugin\");\n\nvar ParserHelpers = require(\"../ParserHelpers\");\n\nvar RequireIncludePlugin = /*#__PURE__*/function () {\n  function RequireIncludePlugin() {\n    _classCallCheck(this, RequireIncludePlugin);\n  }\n\n  _createClass(RequireIncludePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.compilation.tap(\"RequireIncludePlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(RequireIncludeDependency, normalModuleFactory);\n        compilation.dependencyTemplates.set(RequireIncludeDependency, new RequireIncludeDependency.Template());\n\n        var handler = function handler(parser, parserOptions) {\n          if (parserOptions.requireInclude !== undefined && !parserOptions.requireInclude) return;\n          new RequireIncludeDependencyParserPlugin().apply(parser);\n          parser.hooks.evaluateTypeof.for(\"require.include\").tap(\"RequireIncludePlugin\", ParserHelpers.evaluateToString(\"function\"));\n          parser.hooks.typeof.for(\"require.include\").tap(\"RequireIncludePlugin\", ParserHelpers.toConstantDependency(parser, JSON.stringify(\"function\")));\n        };\n\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"RequireIncludePlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"RequireIncludePlugin\", handler);\n      });\n    }\n  }]);\n\n  return RequireIncludePlugin;\n}();\n\nmodule.exports = RequireIncludePlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/dependencies/RequireIncludePlugin.js"],"names":["RequireIncludeDependency","require","RequireIncludeDependencyParserPlugin","ParserHelpers","RequireIncludePlugin","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","requireInclude","undefined","apply","evaluateTypeof","for","evaluateToString","typeof","toConstantDependency","JSON","stringify","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,IAAMA,wBAAwB,GAAGC,OAAO,CAAC,4BAAD,CAAxC;;AACA,IAAMC,oCAAoC,GAAGD,OAAO,CAAC,wCAAD,CAApD;;AAEA,IAAME,aAAa,GAAGF,OAAO,CAAC,kBAAD,CAA7B;;IAEMG,oB;;;;;;;WACL,eAAMC,QAAN,EAAgB;AACfA,MAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,sBADD,EAEC,UAACD,WAAD,QAA0C;AAAA,YAA1BE,mBAA0B,QAA1BA,mBAA0B;AACzCF,QAAAA,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CACCX,wBADD,EAECS,mBAFD;AAIAF,QAAAA,WAAW,CAACK,mBAAZ,CAAgCD,GAAhC,CACCX,wBADD,EAEC,IAAIA,wBAAwB,CAACa,QAA7B,EAFD;;AAKA,YAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAASC,aAAT,EAA2B;AAC1C,cACCA,aAAa,CAACC,cAAd,KAAiCC,SAAjC,IACA,CAACF,aAAa,CAACC,cAFhB,EAIC;AAED,cAAIf,oCAAJ,GAA2CiB,KAA3C,CAAiDJ,MAAjD;AACAA,UAAAA,MAAM,CAACT,KAAP,CAAac,cAAb,CACEC,GADF,CACM,iBADN,EAEEb,GAFF,CAGE,sBAHF,EAIEL,aAAa,CAACmB,gBAAd,CAA+B,UAA/B,CAJF;AAMAP,UAAAA,MAAM,CAACT,KAAP,CAAaiB,MAAb,CACEF,GADF,CACM,iBADN,EAEEb,GAFF,CAGE,sBAHF,EAIEL,aAAa,CAACqB,oBAAd,CACCT,MADD,EAECU,IAAI,CAACC,SAAL,CAAe,UAAf,CAFD,CAJF;AASA,SAvBD;;AAyBAjB,QAAAA,mBAAmB,CAACH,KAApB,CAA0BS,MAA1B,CACEM,GADF,CACM,iBADN,EAEEb,GAFF,CAEM,sBAFN,EAE8BM,OAF9B;AAGAL,QAAAA,mBAAmB,CAACH,KAApB,CAA0BS,MAA1B,CACEM,GADF,CACM,oBADN,EAEEb,GAFF,CAEM,sBAFN,EAE8BM,OAF9B;AAGA,OA3CF;AA6CA;;;;;;AAEFa,MAAM,CAACC,OAAP,GAAiBxB,oBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireIncludeDependency = require(\"./RequireIncludeDependency\");\nconst RequireIncludeDependencyParserPlugin = require(\"./RequireIncludeDependencyParserPlugin\");\n\nconst ParserHelpers = require(\"../ParserHelpers\");\n\nclass RequireIncludePlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"RequireIncludePlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRequireIncludeDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireIncludeDependency,\n\t\t\t\t\tnew RequireIncludeDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tparserOptions.requireInclude !== undefined &&\n\t\t\t\t\t\t!parserOptions.requireInclude\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew RequireIncludeDependencyParserPlugin().apply(parser);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"require.include\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"RequireIncludePlugin\",\n\t\t\t\t\t\t\tParserHelpers.evaluateToString(\"function\")\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"require.include\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"RequireIncludePlugin\",\n\t\t\t\t\t\t\tParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tJSON.stringify(\"function\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"RequireIncludePlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"RequireIncludePlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = RequireIncludePlugin;\n"]},"metadata":{},"sourceType":"script"}