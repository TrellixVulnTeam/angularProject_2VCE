{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _toConsumableArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _objectSpread = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OptimizeCssWebpackPlugin = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar cssNano = require(\"cssnano\");\n\nvar webpack_sources_1 = require(\"webpack-sources\");\n\nvar webpack_diagnostics_1 = require(\"../../utils/webpack-diagnostics\");\n\nvar webpack_version_1 = require(\"../../utils/webpack-version\");\n\nvar PLUGIN_NAME = 'optimize-css-webpack-plugin';\n\nfunction hook(compiler, action) {\n  compiler.hooks.compilation.tap(PLUGIN_NAME, function (compilation) {\n    if (webpack_version_1.isWebpackFiveOrHigher()) {\n      // webpack 5 migration \"guide\"\n      // https://github.com/webpack/webpack/blob/07fc554bef5930f8577f91c91a8b81791fc29746/lib/Compilation.js#L527-L532\n      // TODO_WEBPACK_5 const stage = Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE;\n      var stage = 100; // tslint:disable-next-line: no-any\n\n      compilation.hooks.processAssets.tapPromise({\n        name: PLUGIN_NAME,\n        stage: stage\n      }, function (assets) {\n        return action(compilation, Object.keys(assets));\n      });\n    } else {\n      compilation.hooks.optimizeChunkAssets.tapPromise(PLUGIN_NAME, function (chunks) {\n        var files = [];\n\n        var _iterator = _createForOfIteratorHelper(chunks),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var chunk = _step.value;\n\n            if (!chunk.files) {\n              continue;\n            }\n\n            var _iterator2 = _createForOfIteratorHelper(chunk.files),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var file = _step2.value;\n                files.push(file);\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        return action(compilation, files);\n      });\n    }\n  });\n}\n\nvar OptimizeCssWebpackPlugin = /*#__PURE__*/function () {\n  function OptimizeCssWebpackPlugin(options) {\n    _classCallCheck(this, OptimizeCssWebpackPlugin);\n\n    this._options = _objectSpread({\n      sourceMap: false,\n      test: function test(file) {\n        return file.endsWith('.css');\n      }\n    }, options);\n  }\n\n  _createClass(OptimizeCssWebpackPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      hook(compiler, function (compilation, assetsURI) {\n        var files = [].concat(_toConsumableArray(compilation.additionalChunkAssets), _toConsumableArray(assetsURI));\n        var actions = files.filter(function (file) {\n          return _this._options.test(file);\n        }).map( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file) {\n            var asset, content, map, sourceAndMap, cssNanoOptions, postCssOptions, output, _iterator3, _step3, text, newSource;\n\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    asset = compilation.assets[file];\n\n                    if (asset) {\n                      _context.next = 3;\n                      break;\n                    }\n\n                    return _context.abrupt(\"return\");\n\n                  case 3:\n                    if (_this._options.sourceMap && asset.sourceAndMap) {\n                      sourceAndMap = asset.sourceAndMap({});\n                      content = sourceAndMap.source;\n                      map = sourceAndMap.map;\n                    } else {\n                      content = asset.source();\n                    }\n\n                    if (typeof content !== 'string') {\n                      content = content.toString();\n                    }\n\n                    if (!(content.length === 0)) {\n                      _context.next = 7;\n                      break;\n                    }\n\n                    return _context.abrupt(\"return\");\n\n                  case 7:\n                    cssNanoOptions = {\n                      preset: ['default', {\n                        // Disable SVG optimizations, as this can cause optimizations which are not compatible in all browsers.\n                        svgo: false,\n                        // Disable `calc` optimizations, due to several issues. #16910, #16875, #17890\n                        calc: false\n                      }]\n                    };\n                    postCssOptions = {\n                      from: file,\n                      map: map && {\n                        annotation: false,\n                        prev: map\n                      }\n                    };\n                    _context.next = 11;\n                    return new Promise(function (resolve, reject) {\n                      // the last parameter is not in the typings\n                      // tslint:disable-next-line: no-any\n                      cssNano.process(content, postCssOptions, cssNanoOptions).then(resolve).catch(function (err) {\n                        return reject(new Error(\"\".concat(file, \" \").concat(err.message)));\n                      });\n                    });\n\n                  case 11:\n                    output = _context.sent;\n                    _iterator3 = _createForOfIteratorHelper(output.warnings());\n\n                    try {\n                      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                        text = _step3.value.text;\n                        webpack_diagnostics_1.addWarning(compilation, text);\n                      }\n                    } catch (err) {\n                      _iterator3.e(err);\n                    } finally {\n                      _iterator3.f();\n                    }\n\n                    if (output.map) {\n                      newSource = new webpack_sources_1.SourceMapSource(output.css, file, // tslint:disable-next-line: no-any\n                      output.map.toString(), content, map);\n                    } else {\n                      newSource = new webpack_sources_1.RawSource(output.css);\n                    }\n\n                    compilation.assets[file] = newSource;\n\n                  case 16:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n        return Promise.all(actions).then(function () {});\n      });\n    }\n  }]);\n\n  return OptimizeCssWebpackPlugin;\n}();\n\nexports.OptimizeCssWebpackPlugin = OptimizeCssWebpackPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/src/webpack/plugins/optimize-css-webpack-plugin.js"],"names":["Object","defineProperty","exports","value","OptimizeCssWebpackPlugin","cssNano","require","webpack_sources_1","webpack_diagnostics_1","webpack_version_1","PLUGIN_NAME","hook","compiler","action","hooks","compilation","tap","isWebpackFiveOrHigher","stage","processAssets","tapPromise","name","assets","keys","optimizeChunkAssets","chunks","files","chunk","file","push","options","_options","sourceMap","test","endsWith","assetsURI","additionalChunkAssets","actions","filter","map","asset","sourceAndMap","content","source","toString","length","cssNanoOptions","preset","svgo","calc","postCssOptions","from","annotation","prev","Promise","resolve","reject","process","then","catch","err","Error","message","output","warnings","text","addWarning","newSource","SourceMapSource","css","RawSource","all"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptimizeCssWebpackPlugin = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst cssNano = require(\"cssnano\");\nconst webpack_sources_1 = require(\"webpack-sources\");\nconst webpack_diagnostics_1 = require(\"../../utils/webpack-diagnostics\");\nconst webpack_version_1 = require(\"../../utils/webpack-version\");\nconst PLUGIN_NAME = 'optimize-css-webpack-plugin';\nfunction hook(compiler, action) {\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation) => {\n        if (webpack_version_1.isWebpackFiveOrHigher()) {\n            // webpack 5 migration \"guide\"\n            // https://github.com/webpack/webpack/blob/07fc554bef5930f8577f91c91a8b81791fc29746/lib/Compilation.js#L527-L532\n            // TODO_WEBPACK_5 const stage = Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE;\n            const stage = 100;\n            // tslint:disable-next-line: no-any\n            compilation.hooks\n                .processAssets.tapPromise({ name: PLUGIN_NAME, stage }, (assets) => {\n                return action(compilation, Object.keys(assets));\n            });\n        }\n        else {\n            compilation.hooks.optimizeChunkAssets\n                .tapPromise(PLUGIN_NAME, (chunks) => {\n                const files = [];\n                for (const chunk of chunks) {\n                    if (!chunk.files) {\n                        continue;\n                    }\n                    for (const file of chunk.files) {\n                        files.push(file);\n                    }\n                }\n                return action(compilation, files);\n            });\n        }\n    });\n}\nclass OptimizeCssWebpackPlugin {\n    constructor(options) {\n        this._options = {\n            sourceMap: false,\n            test: file => file.endsWith('.css'),\n            ...options,\n        };\n    }\n    apply(compiler) {\n        hook(compiler, (compilation, assetsURI) => {\n            const files = [...compilation.additionalChunkAssets, ...assetsURI];\n            const actions = files\n                .filter(file => this._options.test(file))\n                .map(async (file) => {\n                const asset = compilation.assets[file];\n                if (!asset) {\n                    return;\n                }\n                let content;\n                // tslint:disable-next-line: no-any\n                let map;\n                if (this._options.sourceMap && asset.sourceAndMap) {\n                    const sourceAndMap = asset.sourceAndMap({});\n                    content = sourceAndMap.source;\n                    map = sourceAndMap.map;\n                }\n                else {\n                    content = asset.source();\n                }\n                if (typeof content !== 'string') {\n                    content = content.toString();\n                }\n                if (content.length === 0) {\n                    return;\n                }\n                const cssNanoOptions = {\n                    preset: ['default', {\n                            // Disable SVG optimizations, as this can cause optimizations which are not compatible in all browsers.\n                            svgo: false,\n                            // Disable `calc` optimizations, due to several issues. #16910, #16875, #17890\n                            calc: false,\n                        }],\n                };\n                const postCssOptions = {\n                    from: file,\n                    map: map && { annotation: false, prev: map },\n                };\n                const output = await new Promise((resolve, reject) => {\n                    // the last parameter is not in the typings\n                    // tslint:disable-next-line: no-any\n                    cssNano.process(content, postCssOptions, cssNanoOptions)\n                        .then(resolve)\n                        .catch((err) => reject(new Error(`${file} ${err.message}`)));\n                });\n                for (const { text } of output.warnings()) {\n                    webpack_diagnostics_1.addWarning(compilation, text);\n                }\n                let newSource;\n                if (output.map) {\n                    newSource = new webpack_sources_1.SourceMapSource(output.css, file, \n                    // tslint:disable-next-line: no-any\n                    output.map.toString(), content, map);\n                }\n                else {\n                    newSource = new webpack_sources_1.RawSource(output.css);\n                }\n                compilation.assets[file] = newSource;\n            });\n            return Promise.all(actions).then(() => { });\n        });\n    }\n}\nexports.OptimizeCssWebpackPlugin = OptimizeCssWebpackPlugin;\n"]},"metadata":{},"sourceType":"script"}