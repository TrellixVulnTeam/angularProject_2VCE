{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findAllNodeModules = exports.findUp = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar fs_1 = require(\"fs\");\n\nvar path = require(\"path\");\n\nvar is_directory_1 = require(\"./is-directory\");\n\nfunction findUp(names, from) {\n  var stopOnNodeModules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (!Array.isArray(names)) {\n    names = [names];\n  }\n\n  var root = path.parse(from).root;\n  var currentDir = from;\n\n  while (currentDir && currentDir !== root) {\n    var _iterator = _createForOfIteratorHelper(names),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var name = _step.value;\n        var p = path.join(currentDir, name);\n\n        if (fs_1.existsSync(p)) {\n          return p;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (stopOnNodeModules) {\n      var nodeModuleP = path.join(currentDir, 'node_modules');\n\n      if (fs_1.existsSync(nodeModuleP)) {\n        return null;\n      }\n    }\n\n    currentDir = path.dirname(currentDir);\n  }\n\n  return null;\n}\n\nexports.findUp = findUp;\n\nfunction findAllNodeModules(from, root) {\n  var nodeModules = [];\n  var current = from;\n\n  while (current && current !== root) {\n    var potential = path.join(current, 'node_modules');\n\n    if (fs_1.existsSync(potential) && is_directory_1.isDirectory(potential)) {\n      nodeModules.push(potential);\n    }\n\n    var next = path.dirname(current);\n\n    if (next === current) {\n      break;\n    }\n\n    current = next;\n  }\n\n  return nodeModules;\n}\n\nexports.findAllNodeModules = findAllNodeModules;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/src/utils/find-up.js"],"names":["Object","defineProperty","exports","value","findAllNodeModules","findUp","fs_1","require","path","is_directory_1","names","from","stopOnNodeModules","Array","isArray","root","parse","currentDir","name","p","join","existsSync","nodeModuleP","dirname","nodeModules","current","potential","isDirectory","push","next"],"mappings":"AAAA;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6BF,OAAO,CAACG,MAAR,GAAiB,KAAK,CAAnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAAC,IAAD,CAApB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,cAAc,GAAGF,OAAO,CAAC,gBAAD,CAA9B;;AACA,SAASF,MAAT,CAAgBK,KAAhB,EAAuBC,IAAvB,EAAwD;AAAA,MAA3BC,iBAA2B,uEAAP,KAAO;;AACpD,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcJ,KAAd,CAAL,EAA2B;AACvBA,IAAAA,KAAK,GAAG,CAACA,KAAD,CAAR;AACH;;AACD,MAAMK,IAAI,GAAGP,IAAI,CAACQ,KAAL,CAAWL,IAAX,EAAiBI,IAA9B;AACA,MAAIE,UAAU,GAAGN,IAAjB;;AACA,SAAOM,UAAU,IAAIA,UAAU,KAAKF,IAApC,EAA0C;AAAA,+CACnBL,KADmB;AAAA;;AAAA;AACtC,0DAA0B;AAAA,YAAfQ,IAAe;AACtB,YAAMC,CAAC,GAAGX,IAAI,CAACY,IAAL,CAAUH,UAAV,EAAsBC,IAAtB,CAAV;;AACA,YAAIZ,IAAI,CAACe,UAAL,CAAgBF,CAAhB,CAAJ,EAAwB;AACpB,iBAAOA,CAAP;AACH;AACJ;AANqC;AAAA;AAAA;AAAA;AAAA;;AAOtC,QAAIP,iBAAJ,EAAuB;AACnB,UAAMU,WAAW,GAAGd,IAAI,CAACY,IAAL,CAAUH,UAAV,EAAsB,cAAtB,CAApB;;AACA,UAAIX,IAAI,CAACe,UAAL,CAAgBC,WAAhB,CAAJ,EAAkC;AAC9B,eAAO,IAAP;AACH;AACJ;;AACDL,IAAAA,UAAU,GAAGT,IAAI,CAACe,OAAL,CAAaN,UAAb,CAAb;AACH;;AACD,SAAO,IAAP;AACH;;AACDf,OAAO,CAACG,MAAR,GAAiBA,MAAjB;;AACA,SAASD,kBAAT,CAA4BO,IAA5B,EAAkCI,IAAlC,EAAwC;AACpC,MAAMS,WAAW,GAAG,EAApB;AACA,MAAIC,OAAO,GAAGd,IAAd;;AACA,SAAOc,OAAO,IAAIA,OAAO,KAAKV,IAA9B,EAAoC;AAChC,QAAMW,SAAS,GAAGlB,IAAI,CAACY,IAAL,CAAUK,OAAV,EAAmB,cAAnB,CAAlB;;AACA,QAAInB,IAAI,CAACe,UAAL,CAAgBK,SAAhB,KAA8BjB,cAAc,CAACkB,WAAf,CAA2BD,SAA3B,CAAlC,EAAyE;AACrEF,MAAAA,WAAW,CAACI,IAAZ,CAAiBF,SAAjB;AACH;;AACD,QAAMG,IAAI,GAAGrB,IAAI,CAACe,OAAL,CAAaE,OAAb,CAAb;;AACA,QAAII,IAAI,KAAKJ,OAAb,EAAsB;AAClB;AACH;;AACDA,IAAAA,OAAO,GAAGI,IAAV;AACH;;AACD,SAAOL,WAAP;AACH;;AACDtB,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findAllNodeModules = exports.findUp = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst fs_1 = require(\"fs\");\nconst path = require(\"path\");\nconst is_directory_1 = require(\"./is-directory\");\nfunction findUp(names, from, stopOnNodeModules = false) {\n    if (!Array.isArray(names)) {\n        names = [names];\n    }\n    const root = path.parse(from).root;\n    let currentDir = from;\n    while (currentDir && currentDir !== root) {\n        for (const name of names) {\n            const p = path.join(currentDir, name);\n            if (fs_1.existsSync(p)) {\n                return p;\n            }\n        }\n        if (stopOnNodeModules) {\n            const nodeModuleP = path.join(currentDir, 'node_modules');\n            if (fs_1.existsSync(nodeModuleP)) {\n                return null;\n            }\n        }\n        currentDir = path.dirname(currentDir);\n    }\n    return null;\n}\nexports.findUp = findUp;\nfunction findAllNodeModules(from, root) {\n    const nodeModules = [];\n    let current = from;\n    while (current && current !== root) {\n        const potential = path.join(current, 'node_modules');\n        if (fs_1.existsSync(potential) && is_directory_1.isDirectory(potential)) {\n            nodeModules.push(potential);\n        }\n        const next = path.dirname(current);\n        if (next === current) {\n            break;\n        }\n        current = next;\n    }\n    return nodeModules;\n}\nexports.findAllNodeModules = findAllNodeModules;\n"]},"metadata":{},"sourceType":"script"}