{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Dependency = require(\"../Dependency\");\n\nvar CriticalDependencyWarning = require(\"./CriticalDependencyWarning\");\n\nvar regExpToString = function regExpToString(r) {\n  return r ? r + \"\" : \"\";\n};\n\nvar ContextDependency = /*#__PURE__*/function (_Dependency) {\n  _inherits(ContextDependency, _Dependency);\n\n  var _super = _createSuper(ContextDependency);\n\n  // options: { request, recursive, regExp, include, exclude, mode, chunkName, groupOptions }\n  function ContextDependency(options) {\n    var _this;\n\n    _classCallCheck(this, ContextDependency);\n\n    _this = _super.call(this);\n    _this.options = options;\n    _this.userRequest = _this.options.request;\n    /** @type {false | string} */\n\n    _this.critical = false;\n    _this.hadGlobalOrStickyRegExp = false;\n\n    if (_this.options.regExp.global || _this.options.regExp.sticky) {\n      _this.options.regExp = null;\n      _this.hadGlobalOrStickyRegExp = true;\n    }\n\n    return _this;\n  }\n\n  _createClass(ContextDependency, [{\n    key: \"getResourceIdentifier\",\n    value: function getResourceIdentifier() {\n      return \"context\".concat(this.options.request, \" \").concat(this.options.recursive, \" \") + \"\".concat(regExpToString(this.options.regExp), \" \").concat(regExpToString(this.options.include), \" \").concat(regExpToString(this.options.exclude), \" \") + \"\".concat(this.options.mode, \" \").concat(this.options.chunkName, \" \") + \"\".concat(JSON.stringify(this.options.groupOptions));\n    }\n  }, {\n    key: \"getWarnings\",\n    value: function getWarnings() {\n      var warnings = _get(_getPrototypeOf(ContextDependency.prototype), \"getWarnings\", this).call(this) || [];\n\n      if (this.critical) {\n        warnings.push(new CriticalDependencyWarning(this.critical));\n      }\n\n      if (this.hadGlobalOrStickyRegExp) {\n        warnings.push(new CriticalDependencyWarning(\"Contexts can't use RegExps with the 'g' or 'y' flags.\"));\n      }\n\n      return warnings;\n    }\n  }]);\n\n  return ContextDependency;\n}(Dependency); // TODO remove in webpack 5\n\n\nObject.defineProperty(ContextDependency.prototype, \"async\", {\n  configurable: false,\n  get: function get() {\n    throw new Error(\"ContextDependency.async was removed. Use ContextDependency.options.mode instead.\");\n  },\n  set: function set() {\n    throw new Error(\"ContextDependency.async was removed. Pass options.mode to constructor instead\");\n  }\n});\nmodule.exports = ContextDependency;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/dependencies/ContextDependency.js"],"names":["Dependency","require","CriticalDependencyWarning","regExpToString","r","ContextDependency","options","userRequest","request","critical","hadGlobalOrStickyRegExp","regExp","global","sticky","recursive","include","exclude","mode","chunkName","JSON","stringify","groupOptions","warnings","push","Object","defineProperty","prototype","configurable","get","Error","set","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AACA,IAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMC,yBAAyB,GAAGD,OAAO,CAAC,6BAAD,CAAzC;;AAEA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,CAAC;AAAA,SAAKA,CAAC,GAAGA,CAAC,GAAG,EAAP,GAAY,EAAlB;AAAA,CAAxB;;IAEMC,iB;;;;;AACL;AACA,6BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACpB;AACA,UAAKA,OAAL,GAAeA,OAAf;AACA,UAAKC,WAAL,GAAmB,MAAKD,OAAL,CAAaE,OAAhC;AACA;;AACA,UAAKC,QAAL,GAAgB,KAAhB;AACA,UAAKC,uBAAL,GAA+B,KAA/B;;AACA,QAAI,MAAKJ,OAAL,CAAaK,MAAb,CAAoBC,MAApB,IAA8B,MAAKN,OAAL,CAAaK,MAAb,CAAoBE,MAAtD,EAA8D;AAC7D,YAAKP,OAAL,CAAaK,MAAb,GAAsB,IAAtB;AACA,YAAKD,uBAAL,GAA+B,IAA/B;AACA;;AAVmB;AAWpB;;;;WAED,iCAAwB;AACvB,aACC,iBAAU,KAAKJ,OAAL,CAAaE,OAAvB,cAAkC,KAAKF,OAAL,CAAaQ,SAA/C,mBACGX,cAAc,CAAC,KAAKG,OAAL,CAAaK,MAAd,CADjB,cAC0CR,cAAc,CACvD,KAAKG,OAAL,CAAaS,OAD0C,CADxD,cAGKZ,cAAc,CAAC,KAAKG,OAAL,CAAaU,OAAd,CAHnB,mBAIG,KAAKV,OAAL,CAAaW,IAJhB,cAIwB,KAAKX,OAAL,CAAaY,SAJrC,mBAKGC,IAAI,CAACC,SAAL,CAAe,KAAKd,OAAL,CAAae,YAA5B,CALH,CADD;AAQA;;;WAED,uBAAc;AACb,UAAIC,QAAQ,GAAG,sFAAuB,EAAtC;;AACA,UAAI,KAAKb,QAAT,EAAmB;AAClBa,QAAAA,QAAQ,CAACC,IAAT,CAAc,IAAIrB,yBAAJ,CAA8B,KAAKO,QAAnC,CAAd;AACA;;AACD,UAAI,KAAKC,uBAAT,EAAkC;AACjCY,QAAAA,QAAQ,CAACC,IAAT,CACC,IAAIrB,yBAAJ,CACC,uDADD,CADD;AAKA;;AACD,aAAOoB,QAAP;AACA;;;;EAvC8BtB,U,GA0ChC;;;AACAwB,MAAM,CAACC,cAAP,CAAsBpB,iBAAiB,CAACqB,SAAxC,EAAmD,OAAnD,EAA4D;AAC3DC,EAAAA,YAAY,EAAE,KAD6C;AAE3DC,EAAAA,GAF2D,iBAErD;AACL,UAAM,IAAIC,KAAJ,CACL,kFADK,CAAN;AAGA,GAN0D;AAO3DC,EAAAA,GAP2D,iBAOrD;AACL,UAAM,IAAID,KAAJ,CACL,+EADK,CAAN;AAGA;AAX0D,CAA5D;AAcAE,MAAM,CAACC,OAAP,GAAiB3B,iBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst Dependency = require(\"../Dependency\");\nconst CriticalDependencyWarning = require(\"./CriticalDependencyWarning\");\n\nconst regExpToString = r => (r ? r + \"\" : \"\");\n\nclass ContextDependency extends Dependency {\n\t// options: { request, recursive, regExp, include, exclude, mode, chunkName, groupOptions }\n\tconstructor(options) {\n\t\tsuper();\n\t\tthis.options = options;\n\t\tthis.userRequest = this.options.request;\n\t\t/** @type {false | string} */\n\t\tthis.critical = false;\n\t\tthis.hadGlobalOrStickyRegExp = false;\n\t\tif (this.options.regExp.global || this.options.regExp.sticky) {\n\t\t\tthis.options.regExp = null;\n\t\t\tthis.hadGlobalOrStickyRegExp = true;\n\t\t}\n\t}\n\n\tgetResourceIdentifier() {\n\t\treturn (\n\t\t\t`context${this.options.request} ${this.options.recursive} ` +\n\t\t\t`${regExpToString(this.options.regExp)} ${regExpToString(\n\t\t\t\tthis.options.include\n\t\t\t)} ${regExpToString(this.options.exclude)} ` +\n\t\t\t`${this.options.mode} ${this.options.chunkName} ` +\n\t\t\t`${JSON.stringify(this.options.groupOptions)}`\n\t\t);\n\t}\n\n\tgetWarnings() {\n\t\tlet warnings = super.getWarnings() || [];\n\t\tif (this.critical) {\n\t\t\twarnings.push(new CriticalDependencyWarning(this.critical));\n\t\t}\n\t\tif (this.hadGlobalOrStickyRegExp) {\n\t\t\twarnings.push(\n\t\t\t\tnew CriticalDependencyWarning(\n\t\t\t\t\t\"Contexts can't use RegExps with the 'g' or 'y' flags.\"\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\treturn warnings;\n\t}\n}\n\n// TODO remove in webpack 5\nObject.defineProperty(ContextDependency.prototype, \"async\", {\n\tconfigurable: false,\n\tget() {\n\t\tthrow new Error(\n\t\t\t\"ContextDependency.async was removed. Use ContextDependency.options.mode instead.\"\n\t\t);\n\t},\n\tset() {\n\t\tthrow new Error(\n\t\t\t\"ContextDependency.async was removed. Pass options.mode to constructor instead\"\n\t\t);\n\t}\n});\n\nmodule.exports = ContextDependency;\n"]},"metadata":{},"sourceType":"script"}