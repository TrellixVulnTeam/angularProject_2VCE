{"ast":null,"code":"var PERMANENT_MARKER = 2;\nvar TEMPORARY_MARKER = 1;\n\nfunction createError(node, graph) {\n  var er = new Error(\"Nondeterministic import's order\");\n  var related = graph[node];\n  var relatedNode = related.find(function (relatedNode) {\n    return graph[relatedNode].indexOf(node) > -1;\n  });\n  er.nodes = [node, relatedNode];\n  return er;\n}\n\nfunction walkGraph(node, graph, state, result, strict) {\n  if (state[node] === PERMANENT_MARKER) return;\n\n  if (state[node] === TEMPORARY_MARKER) {\n    if (strict) return createError(node, graph);\n    return;\n  }\n\n  state[node] = TEMPORARY_MARKER;\n  var children = graph[node];\n  var length = children.length;\n\n  for (var i = 0; i < length; ++i) {\n    var er = walkGraph(children[i], graph, state, result, strict);\n    if (er instanceof Error) return er;\n  }\n\n  state[node] = PERMANENT_MARKER;\n  result.push(node);\n}\n\nfunction topologicalSort(graph, strict) {\n  var result = [];\n  var state = {};\n  var nodes = Object.keys(graph);\n  var length = nodes.length;\n\n  for (var i = 0; i < length; ++i) {\n    var er = walkGraph(nodes[i], graph, state, result, strict);\n    if (er instanceof Error) return er;\n  }\n\n  return result;\n}\n\nmodule.exports = topologicalSort;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/postcss-modules-extract-imports/src/topologicalSort.js"],"names":["PERMANENT_MARKER","TEMPORARY_MARKER","createError","node","graph","er","Error","related","relatedNode","find","indexOf","nodes","walkGraph","state","result","strict","children","length","i","push","topologicalSort","Object","keys","module","exports"],"mappings":"AAAA,IAAMA,gBAAgB,GAAG,CAAzB;AACA,IAAMC,gBAAgB,GAAG,CAAzB;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,KAA3B,EAAkC;AAChC,MAAMC,EAAE,GAAG,IAAIC,KAAJ,CAAU,iCAAV,CAAX;AAEA,MAAMC,OAAO,GAAGH,KAAK,CAACD,IAAD,CAArB;AACA,MAAMK,WAAW,GAAGD,OAAO,CAACE,IAAR,CAClB,UAAAD,WAAW;AAAA,WAAIJ,KAAK,CAACI,WAAD,CAAL,CAAmBE,OAAnB,CAA2BP,IAA3B,IAAmC,CAAC,CAAxC;AAAA,GADO,CAApB;AAIAE,EAAAA,EAAE,CAACM,KAAH,GAAW,CAACR,IAAD,EAAOK,WAAP,CAAX;AAEA,SAAOH,EAAP;AACD;;AAED,SAASO,SAAT,CAAmBT,IAAnB,EAAyBC,KAAzB,EAAgCS,KAAhC,EAAuCC,MAAvC,EAA+CC,MAA/C,EAAuD;AACrD,MAAIF,KAAK,CAACV,IAAD,CAAL,KAAgBH,gBAApB,EAAsC;;AACtC,MAAIa,KAAK,CAACV,IAAD,CAAL,KAAgBF,gBAApB,EAAsC;AACpC,QAAIc,MAAJ,EAAY,OAAOb,WAAW,CAACC,IAAD,EAAOC,KAAP,CAAlB;AACZ;AACD;;AAEDS,EAAAA,KAAK,CAACV,IAAD,CAAL,GAAcF,gBAAd;AAEA,MAAMe,QAAQ,GAAGZ,KAAK,CAACD,IAAD,CAAtB;AACA,MAAMc,MAAM,GAAGD,QAAQ,CAACC,MAAxB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4B,EAAEC,CAA9B,EAAiC;AAC/B,QAAMb,EAAE,GAAGO,SAAS,CAACI,QAAQ,CAACE,CAAD,CAAT,EAAcd,KAAd,EAAqBS,KAArB,EAA4BC,MAA5B,EAAoCC,MAApC,CAApB;AACA,QAAIV,EAAE,YAAYC,KAAlB,EAAyB,OAAOD,EAAP;AAC1B;;AAEDQ,EAAAA,KAAK,CAACV,IAAD,CAAL,GAAcH,gBAAd;AAEAc,EAAAA,MAAM,CAACK,IAAP,CAAYhB,IAAZ;AACD;;AAED,SAASiB,eAAT,CAAyBhB,KAAzB,EAAgCW,MAAhC,EAAwC;AACtC,MAAMD,MAAM,GAAG,EAAf;AACA,MAAMD,KAAK,GAAG,EAAd;AAEA,MAAMF,KAAK,GAAGU,MAAM,CAACC,IAAP,CAAYlB,KAAZ,CAAd;AACA,MAAMa,MAAM,GAAGN,KAAK,CAACM,MAArB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4B,EAAEC,CAA9B,EAAiC;AAC/B,QAAMb,EAAE,GAAGO,SAAS,CAACD,KAAK,CAACO,CAAD,CAAN,EAAWd,KAAX,EAAkBS,KAAlB,EAAyBC,MAAzB,EAAiCC,MAAjC,CAApB;AACA,QAAIV,EAAE,YAAYC,KAAlB,EAAyB,OAAOD,EAAP;AAC1B;;AAED,SAAOS,MAAP;AACD;;AAEDS,MAAM,CAACC,OAAP,GAAiBJ,eAAjB","sourcesContent":["const PERMANENT_MARKER = 2\nconst TEMPORARY_MARKER = 1\n\nfunction createError(node, graph) {\n  const er = new Error(\"Nondeterministic import's order\")\n\n  const related = graph[node]\n  const relatedNode = related.find(\n    relatedNode => graph[relatedNode].indexOf(node) > -1\n  )\n\n  er.nodes = [node, relatedNode]\n\n  return er\n}\n\nfunction walkGraph(node, graph, state, result, strict) {\n  if (state[node] === PERMANENT_MARKER) return\n  if (state[node] === TEMPORARY_MARKER) {\n    if (strict) return createError(node, graph)\n    return\n  }\n\n  state[node] = TEMPORARY_MARKER\n\n  const children = graph[node]\n  const length = children.length\n\n  for (let i = 0; i < length; ++i) {\n    const er = walkGraph(children[i], graph, state, result, strict)\n    if (er instanceof Error) return er\n  }\n\n  state[node] = PERMANENT_MARKER\n\n  result.push(node)\n}\n\nfunction topologicalSort(graph, strict) {\n  const result = []\n  const state = {}\n\n  const nodes = Object.keys(graph)\n  const length = nodes.length\n\n  for (let i = 0; i < length; ++i) {\n    const er = walkGraph(nodes[i], graph, state, result, strict)\n    if (er instanceof Error) return er\n  }\n\n  return result\n}\n\nmodule.exports = topologicalSort\n"]},"metadata":{},"sourceType":"script"}