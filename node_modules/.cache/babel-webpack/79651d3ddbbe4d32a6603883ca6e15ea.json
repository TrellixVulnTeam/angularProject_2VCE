{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _assertThisInitialized = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar LoadingLoaderError = /*#__PURE__*/function (_Error) {\n  _inherits(LoadingLoaderError, _Error);\n\n  var _super = _createSuper(LoadingLoaderError);\n\n  function LoadingLoaderError(message) {\n    var _this;\n\n    _classCallCheck(this, LoadingLoaderError);\n\n    _this = _super.call(this, message);\n    _this.name = \"LoaderRunnerError\";\n    Error.captureStackTrace(_assertThisInitialized(_this), _this.constructor);\n    return _this;\n  }\n\n  return LoadingLoaderError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nmodule.exports = LoadingLoaderError;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/loader-runner/lib/LoaderLoadingError.js"],"names":["LoadingLoaderError","message","name","Error","captureStackTrace","constructor","module","exports"],"mappings":"AAAA;;;;;;;;;;;;IAEMA,kB;;;;;AACL,8BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACpB,8BAAMA,OAAN;AACA,UAAKC,IAAL,GAAY,mBAAZ;AACAC,IAAAA,KAAK,CAACC,iBAAN,gCAA8B,MAAKC,WAAnC;AAHoB;AAIpB;;;iCAL+BF,K;;AAQjCG,MAAM,CAACC,OAAP,GAAiBP,kBAAjB","sourcesContent":["\"use strict\";\n\nclass LoadingLoaderError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = \"LoaderRunnerError\";\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = LoadingLoaderError;\n"]},"metadata":{},"sourceType":"script"}