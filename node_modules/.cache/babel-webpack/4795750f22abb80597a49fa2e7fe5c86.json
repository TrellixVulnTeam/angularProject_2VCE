{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nvar _objectSpread = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {string | ResolveStepHook} target target\n   */\n  function JoinRequestPlugin(source, target) {\n    _classCallCheck(this, JoinRequestPlugin);\n\n    this.source = source;\n    this.target = target;\n  }\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n\n\n  _createClass(JoinRequestPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"JoinRequestPlugin\", function (request, resolveContext, callback) {\n        var obj = _objectSpread(_objectSpread({}, request), {}, {\n          path: resolver.join(request.path, request.request),\n          relativePath: request.relativePath && resolver.join(request.relativePath, request.request),\n          request: undefined\n        });\n\n        resolver.doResolve(target, obj, null, resolveContext, callback);\n      });\n    }\n  }]);\n\n  return JoinRequestPlugin;\n}();","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/enhanced-resolve/lib/JoinRequestPlugin.js"],"names":["module","exports","source","target","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","obj","path","join","relativePath","undefined","doResolve"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AACA;;;;;;;;AAEAA,MAAM,CAACC,OAAP;AACC;AACD;AACA;AACA;AACC,6BAAYC,MAAZ,EAAoBC,MAApB,EAA4B;AAAA;;AAC3B,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA;AAED;AACD;AACA;AACA;;;AAbA;AAAA;AAAA,WAcC,eAAMC,QAAN,EAAgB;AACf,UAAMD,MAAM,GAAGC,QAAQ,CAACC,UAAT,CAAoB,KAAKF,MAAzB,CAAf;AACAC,MAAAA,QAAQ,CACNE,OADF,CACU,KAAKJ,MADf,EAEEK,QAFF,CAEW,mBAFX,EAEgC,UAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,EAAuC;AACrE,YAAMC,GAAG,mCACLH,OADK;AAERI,UAAAA,IAAI,EAAER,QAAQ,CAACS,IAAT,CAAcL,OAAO,CAACI,IAAtB,EAA4BJ,OAAO,CAACA,OAApC,CAFE;AAGRM,UAAAA,YAAY,EACXN,OAAO,CAACM,YAAR,IACAV,QAAQ,CAACS,IAAT,CAAcL,OAAO,CAACM,YAAtB,EAAoCN,OAAO,CAACA,OAA5C,CALO;AAMRA,UAAAA,OAAO,EAAEO;AAND,UAAT;;AAQAX,QAAAA,QAAQ,CAACY,SAAT,CAAmBb,MAAnB,EAA2BQ,GAA3B,EAAgC,IAAhC,EAAsCF,cAAtC,EAAsDC,QAAtD;AACA,OAZF;AAaA;AA7BF;;AAAA;AAAA","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class JoinRequestPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"JoinRequestPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\tpath: resolver.join(request.path, request.request),\n\t\t\t\t\trelativePath:\n\t\t\t\t\t\trequest.relativePath &&\n\t\t\t\t\t\tresolver.join(request.relativePath, request.request),\n\t\t\t\t\trequest: undefined\n\t\t\t\t};\n\t\t\t\tresolver.doResolve(target, obj, null, resolveContext, callback);\n\t\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}