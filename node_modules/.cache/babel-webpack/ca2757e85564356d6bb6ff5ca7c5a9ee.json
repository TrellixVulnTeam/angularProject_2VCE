{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar EvalSourceMapDevToolModuleTemplatePlugin = require(\"./EvalSourceMapDevToolModuleTemplatePlugin\");\n\nvar SourceMapDevToolModuleOptionsPlugin = require(\"./SourceMapDevToolModuleOptionsPlugin\");\n\nvar EvalSourceMapDevToolPlugin = /*#__PURE__*/function () {\n  function EvalSourceMapDevToolPlugin(options) {\n    _classCallCheck(this, EvalSourceMapDevToolPlugin);\n\n    if (arguments.length > 1) {\n      throw new Error(\"EvalSourceMapDevToolPlugin only takes one argument (pass an options object)\");\n    }\n\n    if (typeof options === \"string\") {\n      options = {\n        append: options\n      };\n    }\n\n    if (!options) options = {};\n    this.options = options;\n  }\n\n  _createClass(EvalSourceMapDevToolPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var options = this.options;\n      compiler.hooks.compilation.tap(\"EvalSourceMapDevToolPlugin\", function (compilation) {\n        new SourceMapDevToolModuleOptionsPlugin(options).apply(compilation);\n        new EvalSourceMapDevToolModuleTemplatePlugin(compilation, options).apply(compilation.moduleTemplates.javascript);\n      });\n    }\n  }]);\n\n  return EvalSourceMapDevToolPlugin;\n}();\n\nmodule.exports = EvalSourceMapDevToolPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/EvalSourceMapDevToolPlugin.js"],"names":["EvalSourceMapDevToolModuleTemplatePlugin","require","SourceMapDevToolModuleOptionsPlugin","EvalSourceMapDevToolPlugin","options","arguments","length","Error","append","compiler","hooks","compilation","tap","apply","moduleTemplates","javascript","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,IAAMA,wCAAwC,GAAGC,OAAO,CAAC,4CAAD,CAAxD;;AACA,IAAMC,mCAAmC,GAAGD,OAAO,CAAC,uCAAD,CAAnD;;IAEME,0B;AACL,sCAAYC,OAAZ,EAAqB;AAAA;;AACpB,QAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACzB,YAAM,IAAIC,KAAJ,CACL,6EADK,CAAN;AAGA;;AACD,QAAI,OAAOH,OAAP,KAAmB,QAAvB,EAAiC;AAChCA,MAAAA,OAAO,GAAG;AACTI,QAAAA,MAAM,EAAEJ;AADC,OAAV;AAGA;;AACD,QAAI,CAACA,OAAL,EAAcA,OAAO,GAAG,EAAV;AACd,SAAKA,OAAL,GAAeA,OAAf;AACA;;;;WAED,eAAMK,QAAN,EAAgB;AACf,UAAML,OAAO,GAAG,KAAKA,OAArB;AACAK,MAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,4BADD,EAEC,UAAAD,WAAW,EAAI;AACd,YAAIT,mCAAJ,CAAwCE,OAAxC,EAAiDS,KAAjD,CAAuDF,WAAvD;AACA,YAAIX,wCAAJ,CACCW,WADD,EAECP,OAFD,EAGES,KAHF,CAGQF,WAAW,CAACG,eAAZ,CAA4BC,UAHpC;AAIA,OARF;AAUA;;;;;;AAGFC,MAAM,CAACC,OAAP,GAAiBd,0BAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst EvalSourceMapDevToolModuleTemplatePlugin = require(\"./EvalSourceMapDevToolModuleTemplatePlugin\");\nconst SourceMapDevToolModuleOptionsPlugin = require(\"./SourceMapDevToolModuleOptionsPlugin\");\n\nclass EvalSourceMapDevToolPlugin {\n\tconstructor(options) {\n\t\tif (arguments.length > 1) {\n\t\t\tthrow new Error(\n\t\t\t\t\"EvalSourceMapDevToolPlugin only takes one argument (pass an options object)\"\n\t\t\t);\n\t\t}\n\t\tif (typeof options === \"string\") {\n\t\t\toptions = {\n\t\t\t\tappend: options\n\t\t\t};\n\t\t}\n\t\tif (!options) options = {};\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"EvalSourceMapDevToolPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tnew SourceMapDevToolModuleOptionsPlugin(options).apply(compilation);\n\t\t\t\tnew EvalSourceMapDevToolModuleTemplatePlugin(\n\t\t\t\t\tcompilation,\n\t\t\t\t\toptions\n\t\t\t\t).apply(compilation.moduleTemplates.javascript);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = EvalSourceMapDevToolPlugin;\n"]},"metadata":{},"sourceType":"script"}