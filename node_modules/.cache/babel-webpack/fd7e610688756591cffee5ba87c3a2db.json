{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _objectSpread = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar readline = require('readline');\n\nvar chalk = require('chalk');\n\nvar cliCursor = require('cli-cursor');\n\nvar cliSpinners = require('cli-spinners');\n\nvar logSymbols = require('log-symbols');\n\nvar stripAnsi = require('strip-ansi');\n\nvar wcwidth = require('wcwidth');\n\nvar isInteractive = require('is-interactive');\n\nvar MuteStream = require('mute-stream');\n\nvar TEXT = Symbol('text');\nvar PREFIX_TEXT = Symbol('prefixText');\nvar ASCII_ETX_CODE = 0x03; // Ctrl+C emits this code\n\nvar StdinDiscarder = /*#__PURE__*/function () {\n  function StdinDiscarder() {\n    _classCallCheck(this, StdinDiscarder);\n\n    this.requests = 0;\n    this.mutedStream = new MuteStream();\n    this.mutedStream.pipe(process.stdout);\n    this.mutedStream.mute();\n    var self = this;\n\n    this.ourEmit = function (event, data) {\n      var _process = process,\n          stdin = _process.stdin;\n\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n\n      if (self.requests > 0 || stdin.emit === self.ourEmit) {\n        if (event === 'keypress') {\n          // Fixes readline behavior\n          return;\n        }\n\n        if (event === 'data' && data.includes(ASCII_ETX_CODE)) {\n          process.emit('SIGINT');\n        }\n\n        Reflect.apply(self.oldEmit, this, [event, data].concat(args));\n      } else {\n        Reflect.apply(process.stdin.emit, this, [event, data].concat(args));\n      }\n    };\n  }\n\n  _createClass(StdinDiscarder, [{\n    key: \"start\",\n    value: function start() {\n      this.requests++;\n\n      if (this.requests === 1) {\n        this.realStart();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.requests <= 0) {\n        throw new Error('`stop` called more times than `start`');\n      }\n\n      this.requests--;\n\n      if (this.requests === 0) {\n        this.realStop();\n      }\n    }\n  }, {\n    key: \"realStart\",\n    value: function realStart() {\n      var _this = this;\n\n      // No known way to make it work reliably on Windows\n      if (process.platform === 'win32') {\n        return;\n      }\n\n      this.rl = readline.createInterface({\n        input: process.stdin,\n        output: this.mutedStream\n      });\n      this.rl.on('SIGINT', function () {\n        if (process.listenerCount('SIGINT') === 0) {\n          process.emit('SIGINT');\n        } else {\n          _this.rl.close();\n\n          process.kill(process.pid, 'SIGINT');\n        }\n      });\n    }\n  }, {\n    key: \"realStop\",\n    value: function realStop() {\n      if (process.platform === 'win32') {\n        return;\n      }\n\n      this.rl.close();\n      this.rl = undefined;\n    }\n  }]);\n\n  return StdinDiscarder;\n}();\n\nvar stdinDiscarder;\n\nvar Ora = /*#__PURE__*/function () {\n  function Ora(options) {\n    _classCallCheck(this, Ora);\n\n    if (!stdinDiscarder) {\n      stdinDiscarder = new StdinDiscarder();\n    }\n\n    if (typeof options === 'string') {\n      options = {\n        text: options\n      };\n    }\n\n    this.options = _objectSpread({\n      text: '',\n      color: 'cyan',\n      stream: process.stderr,\n      discardStdin: true\n    }, options);\n    this.spinner = this.options.spinner;\n    this.color = this.options.color;\n    this.hideCursor = this.options.hideCursor !== false;\n    this.interval = this.options.interval || this.spinner.interval || 100;\n    this.stream = this.options.stream;\n    this.id = undefined;\n    this.isEnabled = typeof this.options.isEnabled === 'boolean' ? this.options.isEnabled : isInteractive({\n      stream: this.stream\n    });\n    this.isSilent = typeof this.options.isSilent === 'boolean' ? this.options.isSilent : false; // Set *after* `this.stream`\n\n    this.text = this.options.text;\n    this.prefixText = this.options.prefixText;\n    this.linesToClear = 0;\n    this.indent = this.options.indent;\n    this.discardStdin = this.options.discardStdin;\n    this.isDiscardingStdin = false;\n  }\n\n  _createClass(Ora, [{\n    key: \"indent\",\n    get: function get() {\n      return this._indent;\n    },\n    set: function set(indent) {\n      if (indent === void 0) {\n        indent = 0;\n      }\n\n      if (!(indent >= 0 && Number.isInteger(indent))) {\n        throw new Error('The `indent` option must be an integer from 0 and up');\n      }\n\n      this._indent = indent;\n    }\n  }, {\n    key: \"_updateInterval\",\n    value: function _updateInterval(interval) {\n      if (interval !== undefined) {\n        this.interval = interval;\n      }\n    }\n  }, {\n    key: \"spinner\",\n    get: function get() {\n      return this._spinner;\n    },\n    set: function set(spinner) {\n      this.frameIndex = 0;\n\n      if (typeof spinner === 'object') {\n        if (spinner.frames === undefined) {\n          throw new Error('The given spinner must have a `frames` property');\n        }\n\n        this._spinner = spinner;\n      } else if (process.platform === 'win32') {\n        this._spinner = cliSpinners.line;\n      } else if (spinner === undefined) {\n        // Set default spinner\n        this._spinner = cliSpinners.dots;\n      } else if (cliSpinners[spinner]) {\n        this._spinner = cliSpinners[spinner];\n      } else {\n        throw new Error(\"There is no built-in spinner named '\".concat(spinner, \"'. See https://github.com/sindresorhus/cli-spinners/blob/master/spinners.json for a full list.\"));\n      }\n\n      this._updateInterval(this._spinner.interval);\n    }\n  }, {\n    key: \"text\",\n    get: function get() {\n      return this[TEXT];\n    },\n    set: function set(value) {\n      this[TEXT] = value;\n      this.updateLineCount();\n    }\n  }, {\n    key: \"prefixText\",\n    get: function get() {\n      return this[PREFIX_TEXT];\n    },\n    set: function set(value) {\n      this[PREFIX_TEXT] = value;\n      this.updateLineCount();\n    }\n  }, {\n    key: \"isSpinning\",\n    get: function get() {\n      return this.id !== undefined;\n    }\n  }, {\n    key: \"getFullPrefixText\",\n    value: function getFullPrefixText() {\n      var prefixText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this[PREFIX_TEXT];\n      var postfix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';\n\n      if (typeof prefixText === 'string') {\n        return prefixText + postfix;\n      }\n\n      if (typeof prefixText === 'function') {\n        return prefixText() + postfix;\n      }\n\n      return '';\n    }\n  }, {\n    key: \"updateLineCount\",\n    value: function updateLineCount() {\n      var columns = this.stream.columns || 80;\n      var fullPrefixText = this.getFullPrefixText(this.prefixText, '-');\n      this.lineCount = stripAnsi(fullPrefixText + '--' + this[TEXT]).split('\\n').reduce(function (count, line) {\n        return count + Math.max(1, Math.ceil(wcwidth(line) / columns));\n      }, 0);\n    }\n  }, {\n    key: \"isEnabled\",\n    get: function get() {\n      return this._isEnabled && !this.isSilent;\n    },\n    set: function set(value) {\n      if (typeof value !== 'boolean') {\n        throw new TypeError('The `isEnabled` option must be a boolean');\n      }\n\n      this._isEnabled = value;\n    }\n  }, {\n    key: \"isSilent\",\n    get: function get() {\n      return this._isSilent;\n    },\n    set: function set(value) {\n      if (typeof value !== 'boolean') {\n        throw new TypeError('The `isSilent` option must be a boolean');\n      }\n\n      this._isSilent = value;\n    }\n  }, {\n    key: \"frame\",\n    value: function frame() {\n      var frames = this.spinner.frames;\n      var frame = frames[this.frameIndex];\n\n      if (this.color) {\n        frame = chalk[this.color](frame);\n      }\n\n      this.frameIndex = ++this.frameIndex % frames.length;\n      var fullPrefixText = typeof this.prefixText === 'string' && this.prefixText !== '' ? this.prefixText + ' ' : '';\n      var fullText = typeof this.text === 'string' ? ' ' + this.text : '';\n      return fullPrefixText + frame + fullText;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      if (!this.isEnabled || !this.stream.isTTY) {\n        return this;\n      }\n\n      for (var i = 0; i < this.linesToClear; i++) {\n        if (i > 0) {\n          this.stream.moveCursor(0, -1);\n        }\n\n        this.stream.clearLine();\n        this.stream.cursorTo(this.indent);\n      }\n\n      this.linesToClear = 0;\n      return this;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.isSilent) {\n        return this;\n      }\n\n      this.clear();\n      this.stream.write(this.frame());\n      this.linesToClear = this.lineCount;\n      return this;\n    }\n  }, {\n    key: \"start\",\n    value: function start(text) {\n      if (text) {\n        this.text = text;\n      }\n\n      if (this.isSilent) {\n        return this;\n      }\n\n      if (!this.isEnabled) {\n        if (this.text) {\n          this.stream.write(\"- \".concat(this.text, \"\\n\"));\n        }\n\n        return this;\n      }\n\n      if (this.isSpinning) {\n        return this;\n      }\n\n      if (this.hideCursor) {\n        cliCursor.hide(this.stream);\n      }\n\n      if (this.discardStdin && process.stdin.isTTY) {\n        this.isDiscardingStdin = true;\n        stdinDiscarder.start();\n      }\n\n      this.render();\n      this.id = setInterval(this.render.bind(this), this.interval);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (!this.isEnabled) {\n        return this;\n      }\n\n      clearInterval(this.id);\n      this.id = undefined;\n      this.frameIndex = 0;\n      this.clear();\n\n      if (this.hideCursor) {\n        cliCursor.show(this.stream);\n      }\n\n      if (this.discardStdin && process.stdin.isTTY && this.isDiscardingStdin) {\n        stdinDiscarder.stop();\n        this.isDiscardingStdin = false;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"succeed\",\n    value: function succeed(text) {\n      return this.stopAndPersist({\n        symbol: logSymbols.success,\n        text: text\n      });\n    }\n  }, {\n    key: \"fail\",\n    value: function fail(text) {\n      return this.stopAndPersist({\n        symbol: logSymbols.error,\n        text: text\n      });\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(text) {\n      return this.stopAndPersist({\n        symbol: logSymbols.warning,\n        text: text\n      });\n    }\n  }, {\n    key: \"info\",\n    value: function info(text) {\n      return this.stopAndPersist({\n        symbol: logSymbols.info,\n        text: text\n      });\n    }\n  }, {\n    key: \"stopAndPersist\",\n    value: function stopAndPersist() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (this.isSilent) {\n        return this;\n      }\n\n      var prefixText = options.prefixText || this.prefixText;\n      var text = options.text || this.text;\n      var fullText = typeof text === 'string' ? ' ' + text : '';\n      this.stop();\n      this.stream.write(\"\".concat(this.getFullPrefixText(prefixText, ' ')).concat(options.symbol || ' ').concat(fullText, \"\\n\"));\n      return this;\n    }\n  }]);\n\n  return Ora;\n}();\n\nvar oraFactory = function oraFactory(options) {\n  return new Ora(options);\n};\n\nmodule.exports = oraFactory;\n\nmodule.exports.promise = function (action, options) {\n  // eslint-disable-next-line promise/prefer-await-to-then\n  if (typeof action.then !== 'function') {\n    throw new TypeError('Parameter `action` must be a Promise');\n  }\n\n  var spinner = new Ora(options);\n  spinner.start();\n\n  _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return action;\n\n          case 3:\n            spinner.succeed();\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            spinner.fail();\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  }))();\n\n  return spinner;\n};","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/ora/index.js"],"names":["readline","require","chalk","cliCursor","cliSpinners","logSymbols","stripAnsi","wcwidth","isInteractive","MuteStream","TEXT","Symbol","PREFIX_TEXT","ASCII_ETX_CODE","StdinDiscarder","requests","mutedStream","pipe","process","stdout","mute","self","ourEmit","event","data","stdin","args","emit","includes","Reflect","apply","oldEmit","realStart","Error","realStop","platform","rl","createInterface","input","output","on","listenerCount","close","kill","pid","undefined","stdinDiscarder","Ora","options","text","color","stream","stderr","discardStdin","spinner","hideCursor","interval","id","isEnabled","isSilent","prefixText","linesToClear","indent","isDiscardingStdin","_indent","Number","isInteger","_spinner","frameIndex","frames","line","dots","_updateInterval","value","updateLineCount","postfix","columns","fullPrefixText","getFullPrefixText","lineCount","split","reduce","count","Math","max","ceil","_isEnabled","TypeError","_isSilent","frame","length","fullText","isTTY","i","moveCursor","clearLine","cursorTo","clear","write","isSpinning","hide","start","render","setInterval","bind","clearInterval","show","stop","stopAndPersist","symbol","success","error","warning","info","oraFactory","module","exports","promise","action","then","succeed","fail"],"mappings":"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","sourcesContent":["'use strict';\nconst readline = require('readline');\nconst chalk = require('chalk');\nconst cliCursor = require('cli-cursor');\nconst cliSpinners = require('cli-spinners');\nconst logSymbols = require('log-symbols');\nconst stripAnsi = require('strip-ansi');\nconst wcwidth = require('wcwidth');\nconst isInteractive = require('is-interactive');\nconst MuteStream = require('mute-stream');\n\nconst TEXT = Symbol('text');\nconst PREFIX_TEXT = Symbol('prefixText');\n\nconst ASCII_ETX_CODE = 0x03; // Ctrl+C emits this code\n\nclass StdinDiscarder {\n\tconstructor() {\n\t\tthis.requests = 0;\n\n\t\tthis.mutedStream = new MuteStream();\n\t\tthis.mutedStream.pipe(process.stdout);\n\t\tthis.mutedStream.mute();\n\n\t\tconst self = this;\n\t\tthis.ourEmit = function (event, data, ...args) {\n\t\t\tconst {stdin} = process;\n\t\t\tif (self.requests > 0 || stdin.emit === self.ourEmit) {\n\t\t\t\tif (event === 'keypress') { // Fixes readline behavior\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (event === 'data' && data.includes(ASCII_ETX_CODE)) {\n\t\t\t\t\tprocess.emit('SIGINT');\n\t\t\t\t}\n\n\t\t\t\tReflect.apply(self.oldEmit, this, [event, data, ...args]);\n\t\t\t} else {\n\t\t\t\tReflect.apply(process.stdin.emit, this, [event, data, ...args]);\n\t\t\t}\n\t\t};\n\t}\n\n\tstart() {\n\t\tthis.requests++;\n\n\t\tif (this.requests === 1) {\n\t\t\tthis.realStart();\n\t\t}\n\t}\n\n\tstop() {\n\t\tif (this.requests <= 0) {\n\t\t\tthrow new Error('`stop` called more times than `start`');\n\t\t}\n\n\t\tthis.requests--;\n\n\t\tif (this.requests === 0) {\n\t\t\tthis.realStop();\n\t\t}\n\t}\n\n\trealStart() {\n\t\t// No known way to make it work reliably on Windows\n\t\tif (process.platform === 'win32') {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.rl = readline.createInterface({\n\t\t\tinput: process.stdin,\n\t\t\toutput: this.mutedStream\n\t\t});\n\n\t\tthis.rl.on('SIGINT', () => {\n\t\t\tif (process.listenerCount('SIGINT') === 0) {\n\t\t\t\tprocess.emit('SIGINT');\n\t\t\t} else {\n\t\t\t\tthis.rl.close();\n\t\t\t\tprocess.kill(process.pid, 'SIGINT');\n\t\t\t}\n\t\t});\n\t}\n\n\trealStop() {\n\t\tif (process.platform === 'win32') {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.rl.close();\n\t\tthis.rl = undefined;\n\t}\n}\n\nlet stdinDiscarder;\n\nclass Ora {\n\tconstructor(options) {\n\t\tif (!stdinDiscarder) {\n\t\t\tstdinDiscarder = new StdinDiscarder();\n\t\t}\n\n\t\tif (typeof options === 'string') {\n\t\t\toptions = {\n\t\t\t\ttext: options\n\t\t\t};\n\t\t}\n\n\t\tthis.options = {\n\t\t\ttext: '',\n\t\t\tcolor: 'cyan',\n\t\t\tstream: process.stderr,\n\t\t\tdiscardStdin: true,\n\t\t\t...options\n\t\t};\n\n\t\tthis.spinner = this.options.spinner;\n\n\t\tthis.color = this.options.color;\n\t\tthis.hideCursor = this.options.hideCursor !== false;\n\t\tthis.interval = this.options.interval || this.spinner.interval || 100;\n\t\tthis.stream = this.options.stream;\n\t\tthis.id = undefined;\n\t\tthis.isEnabled = typeof this.options.isEnabled === 'boolean' ? this.options.isEnabled : isInteractive({stream: this.stream});\n\t\tthis.isSilent = typeof this.options.isSilent === 'boolean' ? this.options.isSilent : false;\n\n\t\t// Set *after* `this.stream`\n\t\tthis.text = this.options.text;\n\t\tthis.prefixText = this.options.prefixText;\n\t\tthis.linesToClear = 0;\n\t\tthis.indent = this.options.indent;\n\t\tthis.discardStdin = this.options.discardStdin;\n\t\tthis.isDiscardingStdin = false;\n\t}\n\n\tget indent() {\n\t\treturn this._indent;\n\t}\n\n\tset indent(indent = 0) {\n\t\tif (!(indent >= 0 && Number.isInteger(indent))) {\n\t\t\tthrow new Error('The `indent` option must be an integer from 0 and up');\n\t\t}\n\n\t\tthis._indent = indent;\n\t}\n\n\t_updateInterval(interval) {\n\t\tif (interval !== undefined) {\n\t\t\tthis.interval = interval;\n\t\t}\n\t}\n\n\tget spinner() {\n\t\treturn this._spinner;\n\t}\n\n\tset spinner(spinner) {\n\t\tthis.frameIndex = 0;\n\n\t\tif (typeof spinner === 'object') {\n\t\t\tif (spinner.frames === undefined) {\n\t\t\t\tthrow new Error('The given spinner must have a `frames` property');\n\t\t\t}\n\n\t\t\tthis._spinner = spinner;\n\t\t} else if (process.platform === 'win32') {\n\t\t\tthis._spinner = cliSpinners.line;\n\t\t} else if (spinner === undefined) {\n\t\t\t// Set default spinner\n\t\t\tthis._spinner = cliSpinners.dots;\n\t\t} else if (cliSpinners[spinner]) {\n\t\t\tthis._spinner = cliSpinners[spinner];\n\t\t} else {\n\t\t\tthrow new Error(`There is no built-in spinner named '${spinner}'. See https://github.com/sindresorhus/cli-spinners/blob/master/spinners.json for a full list.`);\n\t\t}\n\n\t\tthis._updateInterval(this._spinner.interval);\n\t}\n\n\tget text() {\n\t\treturn this[TEXT];\n\t}\n\n\tget prefixText() {\n\t\treturn this[PREFIX_TEXT];\n\t}\n\n\tget isSpinning() {\n\t\treturn this.id !== undefined;\n\t}\n\n\tgetFullPrefixText(prefixText = this[PREFIX_TEXT], postfix = ' ') {\n\t\tif (typeof prefixText === 'string') {\n\t\t\treturn prefixText + postfix;\n\t\t}\n\n\t\tif (typeof prefixText === 'function') {\n\t\t\treturn prefixText() + postfix;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tupdateLineCount() {\n\t\tconst columns = this.stream.columns || 80;\n\t\tconst fullPrefixText = this.getFullPrefixText(this.prefixText, '-');\n\t\tthis.lineCount = stripAnsi(fullPrefixText + '--' + this[TEXT]).split('\\n').reduce((count, line) => {\n\t\t\treturn count + Math.max(1, Math.ceil(wcwidth(line) / columns));\n\t\t}, 0);\n\t}\n\n\tset text(value) {\n\t\tthis[TEXT] = value;\n\t\tthis.updateLineCount();\n\t}\n\n\tset prefixText(value) {\n\t\tthis[PREFIX_TEXT] = value;\n\t\tthis.updateLineCount();\n\t}\n\n\tget isEnabled() {\n\t\treturn this._isEnabled && !this.isSilent;\n\t}\n\n\tset isEnabled(value) {\n\t\tif (typeof value !== 'boolean') {\n\t\t\tthrow new TypeError('The `isEnabled` option must be a boolean');\n\t\t}\n\n\t\tthis._isEnabled = value;\n\t}\n\n\tget isSilent() {\n\t\treturn this._isSilent;\n\t}\n\n\tset isSilent(value) {\n\t\tif (typeof value !== 'boolean') {\n\t\t\tthrow new TypeError('The `isSilent` option must be a boolean');\n\t\t}\n\n\t\tthis._isSilent = value;\n\t}\n\n\tframe() {\n\t\tconst {frames} = this.spinner;\n\t\tlet frame = frames[this.frameIndex];\n\n\t\tif (this.color) {\n\t\t\tframe = chalk[this.color](frame);\n\t\t}\n\n\t\tthis.frameIndex = ++this.frameIndex % frames.length;\n\t\tconst fullPrefixText = (typeof this.prefixText === 'string' && this.prefixText !== '') ? this.prefixText + ' ' : '';\n\t\tconst fullText = typeof this.text === 'string' ? ' ' + this.text : '';\n\n\t\treturn fullPrefixText + frame + fullText;\n\t}\n\n\tclear() {\n\t\tif (!this.isEnabled || !this.stream.isTTY) {\n\t\t\treturn this;\n\t\t}\n\n\t\tfor (let i = 0; i < this.linesToClear; i++) {\n\t\t\tif (i > 0) {\n\t\t\t\tthis.stream.moveCursor(0, -1);\n\t\t\t}\n\n\t\t\tthis.stream.clearLine();\n\t\t\tthis.stream.cursorTo(this.indent);\n\t\t}\n\n\t\tthis.linesToClear = 0;\n\n\t\treturn this;\n\t}\n\n\trender() {\n\t\tif (this.isSilent) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.clear();\n\t\tthis.stream.write(this.frame());\n\t\tthis.linesToClear = this.lineCount;\n\n\t\treturn this;\n\t}\n\n\tstart(text) {\n\t\tif (text) {\n\t\t\tthis.text = text;\n\t\t}\n\n\t\tif (this.isSilent) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (!this.isEnabled) {\n\t\t\tif (this.text) {\n\t\t\t\tthis.stream.write(`- ${this.text}\\n`);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tif (this.isSpinning) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (this.hideCursor) {\n\t\t\tcliCursor.hide(this.stream);\n\t\t}\n\n\t\tif (this.discardStdin && process.stdin.isTTY) {\n\t\t\tthis.isDiscardingStdin = true;\n\t\t\tstdinDiscarder.start();\n\t\t}\n\n\t\tthis.render();\n\t\tthis.id = setInterval(this.render.bind(this), this.interval);\n\n\t\treturn this;\n\t}\n\n\tstop() {\n\t\tif (!this.isEnabled) {\n\t\t\treturn this;\n\t\t}\n\n\t\tclearInterval(this.id);\n\t\tthis.id = undefined;\n\t\tthis.frameIndex = 0;\n\t\tthis.clear();\n\t\tif (this.hideCursor) {\n\t\t\tcliCursor.show(this.stream);\n\t\t}\n\n\t\tif (this.discardStdin && process.stdin.isTTY && this.isDiscardingStdin) {\n\t\t\tstdinDiscarder.stop();\n\t\t\tthis.isDiscardingStdin = false;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tsucceed(text) {\n\t\treturn this.stopAndPersist({symbol: logSymbols.success, text});\n\t}\n\n\tfail(text) {\n\t\treturn this.stopAndPersist({symbol: logSymbols.error, text});\n\t}\n\n\twarn(text) {\n\t\treturn this.stopAndPersist({symbol: logSymbols.warning, text});\n\t}\n\n\tinfo(text) {\n\t\treturn this.stopAndPersist({symbol: logSymbols.info, text});\n\t}\n\n\tstopAndPersist(options = {}) {\n\t\tif (this.isSilent) {\n\t\t\treturn this;\n\t\t}\n\n\t\tconst prefixText = options.prefixText || this.prefixText;\n\t\tconst text = options.text || this.text;\n\t\tconst fullText = (typeof text === 'string') ? ' ' + text : '';\n\n\t\tthis.stop();\n\t\tthis.stream.write(`${this.getFullPrefixText(prefixText, ' ')}${options.symbol || ' '}${fullText}\\n`);\n\n\t\treturn this;\n\t}\n}\n\nconst oraFactory = function (options) {\n\treturn new Ora(options);\n};\n\nmodule.exports = oraFactory;\n\nmodule.exports.promise = (action, options) => {\n\t// eslint-disable-next-line promise/prefer-await-to-then\n\tif (typeof action.then !== 'function') {\n\t\tthrow new TypeError('Parameter `action` must be a Promise');\n\t}\n\n\tconst spinner = new Ora(options);\n\tspinner.start();\n\n\t(async () => {\n\t\ttry {\n\t\t\tawait action;\n\t\t\tspinner.succeed();\n\t\t} catch (_) {\n\t\t\tspinner.fail();\n\t\t}\n\t})();\n\n\treturn spinner;\n};\n"]},"metadata":{},"sourceType":"script"}