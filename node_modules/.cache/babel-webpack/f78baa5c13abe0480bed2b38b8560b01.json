{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler/src/output/abstract_js_emitter\", [\"require\", \"exports\", \"tslib\", \"@angular/compiler/src/output/abstract_emitter\", \"@angular/compiler/src/output/output_ast\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.AbstractJsEmitterVisitor = void 0;\n\n  var tslib_1 = require(\"tslib\");\n\n  var abstract_emitter_1 = require(\"@angular/compiler/src/output/abstract_emitter\");\n\n  var o = require(\"@angular/compiler/src/output/output_ast\");\n  /**\n   * In TypeScript, tagged template functions expect a \"template object\", which is an array of\n   * \"cooked\" strings plus a `raw` property that contains an array of \"raw\" strings. This is\n   * typically constructed with a function called `__makeTemplateObject(cooked, raw)`, but it may not\n   * be available in all environments.\n   *\n   * This is a JavaScript polyfill that uses __makeTemplateObject when it's available, but otherwise\n   * creates an inline helper with the same functionality.\n   *\n   * In the inline function, if `Object.defineProperty` is available we use that to attach the `raw`\n   * array.\n   */\n\n\n  var makeTemplateObjectPolyfill = '(this&&this.__makeTemplateObject||function(e,t){return Object.defineProperty?Object.defineProperty(e,\"raw\",{value:t}):e.raw=t,e})';\n\n  var AbstractJsEmitterVisitor =\n  /** @class */\n  function (_super) {\n    tslib_1.__extends(AbstractJsEmitterVisitor, _super);\n\n    function AbstractJsEmitterVisitor() {\n      return _super.call(this, false) || this;\n    }\n\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n      var _this = this;\n\n      ctx.pushClass(stmt);\n\n      this._visitClassConstructor(stmt, ctx);\n\n      if (stmt.parent != null) {\n        ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n        stmt.parent.visitExpression(this, ctx);\n        ctx.println(stmt, \".prototype);\");\n      }\n\n      stmt.getters.forEach(function (getter) {\n        return _this._visitClassGetter(stmt, getter, ctx);\n      });\n      stmt.methods.forEach(function (method) {\n        return _this._visitClassMethod(stmt, method, ctx);\n      });\n      ctx.popClass();\n      return null;\n    };\n\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n      ctx.print(stmt, \"function \" + stmt.name + \"(\");\n\n      if (stmt.constructorMethod != null) {\n        this._visitParams(stmt.constructorMethod.params, ctx);\n      }\n\n      ctx.println(stmt, \") {\");\n      ctx.incIndent();\n\n      if (stmt.constructorMethod != null) {\n        if (stmt.constructorMethod.body.length > 0) {\n          ctx.println(stmt, \"var self = this;\");\n          this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        }\n      }\n\n      ctx.decIndent();\n      ctx.println(stmt, \"}\");\n    };\n\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n      ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n      ctx.incIndent();\n\n      if (getter.body.length > 0) {\n        ctx.println(stmt, \"var self = this;\");\n        this.visitAllStatements(getter.body, ctx);\n      }\n\n      ctx.decIndent();\n      ctx.println(stmt, \"}});\");\n    };\n\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n      ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n\n      this._visitParams(method.params, ctx);\n\n      ctx.println(stmt, \") {\");\n      ctx.incIndent();\n\n      if (method.body.length > 0) {\n        ctx.println(stmt, \"var self = this;\");\n        this.visitAllStatements(method.body, ctx);\n      }\n\n      ctx.decIndent();\n      ctx.println(stmt, \"};\");\n    };\n\n    AbstractJsEmitterVisitor.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n      throw new Error('Cannot emit a WrappedNodeExpr in Javascript.');\n    };\n\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n      if (ast.builtin === o.BuiltinVar.This) {\n        ctx.print(ast, 'self');\n      } else if (ast.builtin === o.BuiltinVar.Super) {\n        throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n      } else {\n        _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n      }\n\n      return null;\n    };\n\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n      ctx.print(stmt, \"var \" + stmt.name);\n\n      if (stmt.value) {\n        ctx.print(stmt, ' = ');\n        stmt.value.visitExpression(this, ctx);\n      }\n\n      ctx.println(stmt, \";\");\n      return null;\n    };\n\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n      ast.value.visitExpression(this, ctx);\n      return null;\n    };\n\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n      var fnExpr = expr.fn;\n\n      if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) {\n        ctx.currentClass.parent.visitExpression(this, ctx);\n        ctx.print(expr, \".call(this\");\n\n        if (expr.args.length > 0) {\n          ctx.print(expr, \", \");\n          this.visitAllExpressions(expr.args, ctx, ',');\n        }\n\n        ctx.print(expr, \")\");\n      } else {\n        _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n      }\n\n      return null;\n    };\n\n    AbstractJsEmitterVisitor.prototype.visitTaggedTemplateExpr = function (ast, ctx) {\n      var _this = this; // The following convoluted piece of code is effectively the downlevelled equivalent of\n      // ```\n      // tag`...`\n      // ```\n      // which is effectively like:\n      // ```\n      // tag(__makeTemplateObject(cooked, raw), expression1, expression2, ...);\n      // ```\n\n\n      var elements = ast.template.elements;\n      ast.tag.visitExpression(this, ctx);\n      ctx.print(ast, \"(\" + makeTemplateObjectPolyfill + \"(\");\n      ctx.print(ast, \"[\" + elements.map(function (part) {\n        return abstract_emitter_1.escapeIdentifier(part.text, false);\n      }).join(', ') + \"], \");\n      ctx.print(ast, \"[\" + elements.map(function (part) {\n        return abstract_emitter_1.escapeIdentifier(part.rawText, false);\n      }).join(', ') + \"])\");\n      ast.template.expressions.forEach(function (expression) {\n        ctx.print(ast, ', ');\n        expression.visitExpression(_this, ctx);\n      });\n      ctx.print(ast, ')');\n      return null;\n    };\n\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n      ctx.print(ast, \"function\" + (ast.name ? ' ' + ast.name : '') + \"(\");\n\n      this._visitParams(ast.params, ctx);\n\n      ctx.println(ast, \") {\");\n      ctx.incIndent();\n      this.visitAllStatements(ast.statements, ctx);\n      ctx.decIndent();\n      ctx.print(ast, \"}\");\n      return null;\n    };\n\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n      ctx.print(stmt, \"function \" + stmt.name + \"(\");\n\n      this._visitParams(stmt.params, ctx);\n\n      ctx.println(stmt, \") {\");\n      ctx.incIndent();\n      this.visitAllStatements(stmt.statements, ctx);\n      ctx.decIndent();\n      ctx.println(stmt, \"}\");\n      return null;\n    };\n\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n      ctx.println(stmt, \"try {\");\n      ctx.incIndent();\n      this.visitAllStatements(stmt.bodyStmts, ctx);\n      ctx.decIndent();\n      ctx.println(stmt, \"} catch (\" + abstract_emitter_1.CATCH_ERROR_VAR.name + \") {\");\n      ctx.incIndent();\n      var catchStmts = [abstract_emitter_1.CATCH_STACK_VAR.set(abstract_emitter_1.CATCH_ERROR_VAR.prop('stack')).toDeclStmt(null, [o.StmtModifier.Final])].concat(stmt.catchStmts);\n      this.visitAllStatements(catchStmts, ctx);\n      ctx.decIndent();\n      ctx.println(stmt, \"}\");\n      return null;\n    };\n\n    AbstractJsEmitterVisitor.prototype.visitLocalizedString = function (ast, ctx) {\n      var _this = this; // The following convoluted piece of code is effectively the downlevelled equivalent of\n      // ```\n      // $localize `...`\n      // ```\n      // which is effectively like:\n      // ```\n      // $localize(__makeTemplateObject(cooked, raw), expression1, expression2, ...);\n      // ```\n\n\n      ctx.print(ast, \"$localize(\" + makeTemplateObjectPolyfill + \"(\");\n      var parts = [ast.serializeI18nHead()];\n\n      for (var i = 1; i < ast.messageParts.length; i++) {\n        parts.push(ast.serializeI18nTemplatePart(i));\n      }\n\n      ctx.print(ast, \"[\" + parts.map(function (part) {\n        return abstract_emitter_1.escapeIdentifier(part.cooked, false);\n      }).join(', ') + \"], \");\n      ctx.print(ast, \"[\" + parts.map(function (part) {\n        return abstract_emitter_1.escapeIdentifier(part.raw, false);\n      }).join(', ') + \"])\");\n      ast.expressions.forEach(function (expression) {\n        ctx.print(ast, ', ');\n        expression.visitExpression(_this, ctx);\n      });\n      ctx.print(ast, ')');\n      return null;\n    };\n\n    AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n      this.visitAllObjects(function (param) {\n        return ctx.print(null, param.name);\n      }, params, ctx, ',');\n    };\n\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n      var name;\n\n      switch (method) {\n        case o.BuiltinMethod.ConcatArray:\n          name = 'concat';\n          break;\n\n        case o.BuiltinMethod.SubscribeObservable:\n          name = 'subscribe';\n          break;\n\n        case o.BuiltinMethod.Bind:\n          name = 'bind';\n          break;\n\n        default:\n          throw new Error(\"Unknown builtin method: \" + method);\n      }\n\n      return name;\n    };\n\n    return AbstractJsEmitterVisitor;\n  }(abstract_emitter_1.AbstractEmitterVisitor);\n\n  exports.AbstractJsEmitterVisitor = AbstractJsEmitterVisitor;\n});","map":{"version":3,"sources":["../../../../../../../packages/compiler/src/output/abstract_js_emitter.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {AbstractEmitterVisitor, CATCH_ERROR_VAR, CATCH_STACK_VAR, EmitterVisitorContext, escapeIdentifier} from './abstract_emitter';\nimport * as o from './output_ast';\n\n/**\n * In TypeScript, tagged template functions expect a \"template object\", which is an array of\n * \"cooked\" strings plus a `raw` property that contains an array of \"raw\" strings. This is\n * typically constructed with a function called `__makeTemplateObject(cooked, raw)`, but it may not\n * be available in all environments.\n *\n * This is a JavaScript polyfill that uses __makeTemplateObject when it's available, but otherwise\n * creates an inline helper with the same functionality.\n *\n * In the inline function, if `Object.defineProperty` is available we use that to attach the `raw`\n * array.\n */\nconst makeTemplateObjectPolyfill =\n    '(this&&this.__makeTemplateObject||function(e,t){return Object.defineProperty?Object.defineProperty(e,\"raw\",{value:t}):e.raw=t,e})';\n\nexport abstract class AbstractJsEmitterVisitor extends AbstractEmitterVisitor {\n  constructor() {\n    super(false);\n  }\n  visitDeclareClassStmt(stmt: o.ClassStmt, ctx: EmitterVisitorContext): any {\n    ctx.pushClass(stmt);\n    this._visitClassConstructor(stmt, ctx);\n\n    if (stmt.parent != null) {\n      ctx.print(stmt, `${stmt.name}.prototype = Object.create(`);\n      stmt.parent.visitExpression(this, ctx);\n      ctx.println(stmt, `.prototype);`);\n    }\n    stmt.getters.forEach((getter) => this._visitClassGetter(stmt, getter, ctx));\n    stmt.methods.forEach((method) => this._visitClassMethod(stmt, method, ctx));\n    ctx.popClass();\n    return null;\n  }\n\n  private _visitClassConstructor(stmt: o.ClassStmt, ctx: EmitterVisitorContext) {\n    ctx.print(stmt, `function ${stmt.name}(`);\n    if (stmt.constructorMethod != null) {\n      this._visitParams(stmt.constructorMethod.params, ctx);\n    }\n    ctx.println(stmt, `) {`);\n    ctx.incIndent();\n    if (stmt.constructorMethod != null) {\n      if (stmt.constructorMethod.body.length > 0) {\n        ctx.println(stmt, `var self = this;`);\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n      }\n    }\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n  }\n\n  private _visitClassGetter(stmt: o.ClassStmt, getter: o.ClassGetter, ctx: EmitterVisitorContext) {\n    ctx.println(\n        stmt,\n        `Object.defineProperty(${stmt.name}.prototype, '${getter.name}', { get: function() {`);\n    ctx.incIndent();\n    if (getter.body.length > 0) {\n      ctx.println(stmt, `var self = this;`);\n      this.visitAllStatements(getter.body, ctx);\n    }\n    ctx.decIndent();\n    ctx.println(stmt, `}});`);\n  }\n\n  private _visitClassMethod(stmt: o.ClassStmt, method: o.ClassMethod, ctx: EmitterVisitorContext) {\n    ctx.print(stmt, `${stmt.name}.prototype.${method.name} = function(`);\n    this._visitParams(method.params, ctx);\n    ctx.println(stmt, `) {`);\n    ctx.incIndent();\n    if (method.body.length > 0) {\n      ctx.println(stmt, `var self = this;`);\n      this.visitAllStatements(method.body, ctx);\n    }\n    ctx.decIndent();\n    ctx.println(stmt, `};`);\n  }\n\n  visitWrappedNodeExpr(ast: o.WrappedNodeExpr<any>, ctx: EmitterVisitorContext): any {\n    throw new Error('Cannot emit a WrappedNodeExpr in Javascript.');\n  }\n\n  visitReadVarExpr(ast: o.ReadVarExpr, ctx: EmitterVisitorContext): string|null {\n    if (ast.builtin === o.BuiltinVar.This) {\n      ctx.print(ast, 'self');\n    } else if (ast.builtin === o.BuiltinVar.Super) {\n      throw new Error(\n          `'super' needs to be handled at a parent ast node, not at the variable level!`);\n    } else {\n      super.visitReadVarExpr(ast, ctx);\n    }\n    return null;\n  }\n  visitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: EmitterVisitorContext): any {\n    ctx.print(stmt, `var ${stmt.name}`);\n    if (stmt.value) {\n      ctx.print(stmt, ' = ');\n      stmt.value.visitExpression(this, ctx);\n    }\n    ctx.println(stmt, `;`);\n    return null;\n  }\n  visitCastExpr(ast: o.CastExpr, ctx: EmitterVisitorContext): any {\n    ast.value.visitExpression(this, ctx);\n    return null;\n  }\n  visitInvokeFunctionExpr(expr: o.InvokeFunctionExpr, ctx: EmitterVisitorContext): string|null {\n    const fnExpr = expr.fn;\n    if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) {\n      ctx.currentClass!.parent!.visitExpression(this, ctx);\n      ctx.print(expr, `.call(this`);\n      if (expr.args.length > 0) {\n        ctx.print(expr, `, `);\n        this.visitAllExpressions(expr.args, ctx, ',');\n      }\n      ctx.print(expr, `)`);\n    } else {\n      super.visitInvokeFunctionExpr(expr, ctx);\n    }\n    return null;\n  }\n  visitTaggedTemplateExpr(ast: o.TaggedTemplateExpr, ctx: EmitterVisitorContext): any {\n    // The following convoluted piece of code is effectively the downlevelled equivalent of\n    // ```\n    // tag`...`\n    // ```\n    // which is effectively like:\n    // ```\n    // tag(__makeTemplateObject(cooked, raw), expression1, expression2, ...);\n    // ```\n    const elements = ast.template.elements;\n    ast.tag.visitExpression(this, ctx);\n    ctx.print(ast, `(${makeTemplateObjectPolyfill}(`);\n    ctx.print(ast, `[${elements.map(part => escapeIdentifier(part.text, false)).join(', ')}], `);\n    ctx.print(ast, `[${elements.map(part => escapeIdentifier(part.rawText, false)).join(', ')}])`);\n    ast.template.expressions.forEach(expression => {\n      ctx.print(ast, ', ');\n      expression.visitExpression(this, ctx);\n    });\n    ctx.print(ast, ')');\n    return null;\n  }\n  visitFunctionExpr(ast: o.FunctionExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `function${ast.name ? ' ' + ast.name : ''}(`);\n    this._visitParams(ast.params, ctx);\n    ctx.println(ast, `) {`);\n    ctx.incIndent();\n    this.visitAllStatements(ast.statements, ctx);\n    ctx.decIndent();\n    ctx.print(ast, `}`);\n    return null;\n  }\n  visitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, ctx: EmitterVisitorContext): any {\n    ctx.print(stmt, `function ${stmt.name}(`);\n    this._visitParams(stmt.params, ctx);\n    ctx.println(stmt, `) {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.statements, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    return null;\n  }\n  visitTryCatchStmt(stmt: o.TryCatchStmt, ctx: EmitterVisitorContext): any {\n    ctx.println(stmt, `try {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.bodyStmts, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `} catch (${CATCH_ERROR_VAR.name}) {`);\n    ctx.incIndent();\n    const catchStmts =\n        [<o.Statement>CATCH_STACK_VAR.set(CATCH_ERROR_VAR.prop('stack')).toDeclStmt(null, [\n          o.StmtModifier.Final\n        ])].concat(stmt.catchStmts);\n    this.visitAllStatements(catchStmts, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    return null;\n  }\n\n  visitLocalizedString(ast: o.LocalizedString, ctx: EmitterVisitorContext): any {\n    // The following convoluted piece of code is effectively the downlevelled equivalent of\n    // ```\n    // $localize `...`\n    // ```\n    // which is effectively like:\n    // ```\n    // $localize(__makeTemplateObject(cooked, raw), expression1, expression2, ...);\n    // ```\n    ctx.print(ast, `$localize(${makeTemplateObjectPolyfill}(`);\n    const parts = [ast.serializeI18nHead()];\n    for (let i = 1; i < ast.messageParts.length; i++) {\n      parts.push(ast.serializeI18nTemplatePart(i));\n    }\n    ctx.print(ast, `[${parts.map(part => escapeIdentifier(part.cooked, false)).join(', ')}], `);\n    ctx.print(ast, `[${parts.map(part => escapeIdentifier(part.raw, false)).join(', ')}])`);\n    ast.expressions.forEach(expression => {\n      ctx.print(ast, ', ');\n      expression.visitExpression(this, ctx);\n    });\n    ctx.print(ast, ')');\n    return null;\n  }\n\n  private _visitParams(params: o.FnParam[], ctx: EmitterVisitorContext): void {\n    this.visitAllObjects(param => ctx.print(null, param.name), params, ctx, ',');\n  }\n\n  getBuiltinMethodName(method: o.BuiltinMethod): string {\n    let name: string;\n    switch (method) {\n      case o.BuiltinMethod.ConcatArray:\n        name = 'concat';\n        break;\n      case o.BuiltinMethod.SubscribeObservable:\n        name = 'subscribe';\n        break;\n      case o.BuiltinMethod.Bind:\n        name = 'bind';\n        break;\n      default:\n        throw new Error(`Unknown builtin method: ${method}`);\n    }\n    return name;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}