{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require(\"webpack-sources\"),\n    ConcatSource = _require.ConcatSource;\n\nvar JsonpExportMainTemplatePlugin = /*#__PURE__*/function () {\n  /**\n   * @param {string} name jsonp function name\n   */\n  function JsonpExportMainTemplatePlugin(name) {\n    _classCallCheck(this, JsonpExportMainTemplatePlugin);\n\n    this.name = name;\n  }\n\n  _createClass(JsonpExportMainTemplatePlugin, [{\n    key: \"apply\",\n    value: function apply(compilation) {\n      var _this = this;\n\n      var mainTemplate = compilation.mainTemplate,\n          chunkTemplate = compilation.chunkTemplate;\n\n      var onRenderWithEntry = function onRenderWithEntry(source, chunk, hash) {\n        var name = mainTemplate.getAssetPath(_this.name || \"\", {\n          hash: hash,\n          chunk: chunk\n        });\n        return new ConcatSource(\"\".concat(name, \"(\"), source, \");\");\n      };\n\n      for (var _i = 0, _arr = [mainTemplate, chunkTemplate]; _i < _arr.length; _i++) {\n        var template = _arr[_i];\n        template.hooks.renderWithEntry.tap(\"JsonpExportMainTemplatePlugin\", onRenderWithEntry);\n      }\n\n      mainTemplate.hooks.globalHashPaths.tap(\"JsonpExportMainTemplatePlugin\", function (paths) {\n        if (_this.name) paths.push(_this.name);\n        return paths;\n      });\n      mainTemplate.hooks.hash.tap(\"JsonpExportMainTemplatePlugin\", function (hash) {\n        hash.update(\"jsonp export\");\n        hash.update(\"\".concat(_this.name));\n      });\n    }\n  }]);\n\n  return JsonpExportMainTemplatePlugin;\n}();\n\nmodule.exports = JsonpExportMainTemplatePlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/web/JsonpExportMainTemplatePlugin.js"],"names":["require","ConcatSource","JsonpExportMainTemplatePlugin","name","compilation","mainTemplate","chunkTemplate","onRenderWithEntry","source","chunk","hash","getAssetPath","template","hooks","renderWithEntry","tap","globalHashPaths","paths","push","update","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,eAAyBA,OAAO,CAAC,iBAAD,CAAhC;AAAA,IAAQC,YAAR,YAAQA,YAAR;;IAEMC,6B;AACL;AACD;AACA;AACC,yCAAYC,IAAZ,EAAkB;AAAA;;AACjB,SAAKA,IAAL,GAAYA,IAAZ;AACA;;;;WAED,eAAMC,WAAN,EAAmB;AAAA;;AAClB,UAAQC,YAAR,GAAwCD,WAAxC,CAAQC,YAAR;AAAA,UAAsBC,aAAtB,GAAwCF,WAAxC,CAAsBE,aAAtB;;AAEA,UAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAASC,KAAT,EAAgBC,IAAhB,EAAyB;AAClD,YAAMP,IAAI,GAAGE,YAAY,CAACM,YAAb,CAA0B,KAAI,CAACR,IAAL,IAAa,EAAvC,EAA2C;AACvDO,UAAAA,IAAI,EAAJA,IADuD;AAEvDD,UAAAA,KAAK,EAALA;AAFuD,SAA3C,CAAb;AAIA,eAAO,IAAIR,YAAJ,WAAoBE,IAApB,QAA6BK,MAA7B,EAAqC,IAArC,CAAP;AACA,OAND;;AAQA,8BAAuB,CAACH,YAAD,EAAeC,aAAf,CAAvB,0BAAsD;AAAjD,YAAMM,QAAQ,WAAd;AACJA,QAAAA,QAAQ,CAACC,KAAT,CAAeC,eAAf,CAA+BC,GAA/B,CACC,+BADD,EAECR,iBAFD;AAIA;;AAEDF,MAAAA,YAAY,CAACQ,KAAb,CAAmBG,eAAnB,CAAmCD,GAAnC,CACC,+BADD,EAEC,UAAAE,KAAK,EAAI;AACR,YAAI,KAAI,CAACd,IAAT,EAAec,KAAK,CAACC,IAAN,CAAW,KAAI,CAACf,IAAhB;AACf,eAAOc,KAAP;AACA,OALF;AAQAZ,MAAAA,YAAY,CAACQ,KAAb,CAAmBH,IAAnB,CAAwBK,GAAxB,CAA4B,+BAA5B,EAA6D,UAAAL,IAAI,EAAI;AACpEA,QAAAA,IAAI,CAACS,MAAL,CAAY,cAAZ;AACAT,QAAAA,IAAI,CAACS,MAAL,WAAe,KAAI,CAAChB,IAApB;AACA,OAHD;AAIA;;;;;;AAGFiB,MAAM,CAACC,OAAP,GAAiBnB,6BAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\n\nclass JsonpExportMainTemplatePlugin {\n\t/**\n\t * @param {string} name jsonp function name\n\t */\n\tconstructor(name) {\n\t\tthis.name = name;\n\t}\n\n\tapply(compilation) {\n\t\tconst { mainTemplate, chunkTemplate } = compilation;\n\n\t\tconst onRenderWithEntry = (source, chunk, hash) => {\n\t\t\tconst name = mainTemplate.getAssetPath(this.name || \"\", {\n\t\t\t\thash,\n\t\t\t\tchunk\n\t\t\t});\n\t\t\treturn new ConcatSource(`${name}(`, source, \");\");\n\t\t};\n\n\t\tfor (const template of [mainTemplate, chunkTemplate]) {\n\t\t\ttemplate.hooks.renderWithEntry.tap(\n\t\t\t\t\"JsonpExportMainTemplatePlugin\",\n\t\t\t\tonRenderWithEntry\n\t\t\t);\n\t\t}\n\n\t\tmainTemplate.hooks.globalHashPaths.tap(\n\t\t\t\"JsonpExportMainTemplatePlugin\",\n\t\t\tpaths => {\n\t\t\t\tif (this.name) paths.push(this.name);\n\t\t\t\treturn paths;\n\t\t\t}\n\t\t);\n\n\t\tmainTemplate.hooks.hash.tap(\"JsonpExportMainTemplatePlugin\", hash => {\n\t\t\thash.update(\"jsonp export\");\n\t\t\thash.update(`${this.name}`);\n\t\t});\n\t}\n}\n\nmodule.exports = JsonpExportMainTemplatePlugin;\n"]},"metadata":{},"sourceType":"script"}