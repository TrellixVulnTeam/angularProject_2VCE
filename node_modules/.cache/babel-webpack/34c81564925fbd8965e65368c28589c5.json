{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar slashCode = \"/\".charCodeAt(0);\nvar backslashCode = \"\\\\\".charCodeAt(0);\n\nvar isInside = function isInside(path, parent) {\n  if (!path.startsWith(parent)) return false;\n  if (path.length === parent.length) return true;\n  var charCode = path.charCodeAt(parent.length);\n  return charCode === slashCode || charCode === backslashCode;\n};\n\nmodule.exports = /*#__PURE__*/function () {\n  function RestrictionsPlugin(source, restrictions) {\n    _classCallCheck(this, RestrictionsPlugin);\n\n    this.source = source;\n    this.restrictions = restrictions;\n  }\n\n  _createClass(RestrictionsPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n\n      resolver.getHook(this.source).tapAsync(\"RestrictionsPlugin\", function (request, resolveContext, callback) {\n        if (typeof request.path === \"string\") {\n          var path = request.path;\n\n          for (var i = 0; i < _this.restrictions.length; i++) {\n            var rule = _this.restrictions[i];\n\n            if (typeof rule === \"string\") {\n              if (!isInside(path, rule)) {\n                if (resolveContext.log) {\n                  resolveContext.log(\"\".concat(path, \" is not inside of the restriction \").concat(rule));\n                }\n\n                return callback(null, null);\n              }\n            } else if (!rule.test(path)) {\n              if (resolveContext.log) {\n                resolveContext.log(\"\".concat(path, \" doesn't match the restriction \").concat(rule));\n              }\n\n              return callback(null, null);\n            }\n          }\n        }\n\n        callback();\n      });\n    }\n  }]);\n\n  return RestrictionsPlugin;\n}();","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/node_modules/enhanced-resolve/lib/RestrictionsPlugin.js"],"names":["slashCode","charCodeAt","backslashCode","isInside","path","parent","startsWith","length","charCode","module","exports","source","restrictions","resolver","getHook","tapAsync","request","resolveContext","callback","i","rule","log","test"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;;;;;AAEA,IAAMA,SAAS,GAAG,IAAIC,UAAJ,CAAe,CAAf,CAAlB;AACA,IAAMC,aAAa,GAAG,KAAKD,UAAL,CAAgB,CAAhB,CAAtB;;AAEA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAOC,MAAP,EAAkB;AAClC,MAAI,CAACD,IAAI,CAACE,UAAL,CAAgBD,MAAhB,CAAL,EAA8B,OAAO,KAAP;AAC9B,MAAID,IAAI,CAACG,MAAL,KAAgBF,MAAM,CAACE,MAA3B,EAAmC,OAAO,IAAP;AACnC,MAAMC,QAAQ,GAAGJ,IAAI,CAACH,UAAL,CAAgBI,MAAM,CAACE,MAAvB,CAAjB;AACA,SAAOC,QAAQ,KAAKR,SAAb,IAA0BQ,QAAQ,KAAKN,aAA9C;AACA,CALD;;AAOAO,MAAM,CAACC,OAAP;AACC,8BAAYC,MAAZ,EAAoBC,YAApB,EAAkC;AAAA;;AACjC,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA;;AAJF;AAAA;AAAA,WAMC,eAAMC,QAAN,EAAgB;AAAA;;AACfA,MAAAA,QAAQ,CACNC,OADF,CACU,KAAKH,MADf,EAEEI,QAFF,CAEW,oBAFX,EAEiC,UAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,EAAuC;AACtE,YAAI,OAAOF,OAAO,CAACZ,IAAf,KAAwB,QAA5B,EAAsC;AACrC,cAAMA,IAAI,GAAGY,OAAO,CAACZ,IAArB;;AAEA,eAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAI,CAACP,YAAL,CAAkBL,MAAtC,EAA8CY,CAAC,EAA/C,EAAmD;AAClD,gBAAMC,IAAI,GAAG,KAAI,CAACR,YAAL,CAAkBO,CAAlB,CAAb;;AACA,gBAAI,OAAOC,IAAP,KAAgB,QAApB,EAA8B;AAC7B,kBAAI,CAACjB,QAAQ,CAACC,IAAD,EAAOgB,IAAP,CAAb,EAA2B;AAC1B,oBAAIH,cAAc,CAACI,GAAnB,EAAwB;AACvBJ,kBAAAA,cAAc,CAACI,GAAf,WACIjB,IADJ,+CAC6CgB,IAD7C;AAGA;;AACD,uBAAOF,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAf;AACA;AACD,aATD,MASO,IAAI,CAACE,IAAI,CAACE,IAAL,CAAUlB,IAAV,CAAL,EAAsB;AAC5B,kBAAIa,cAAc,CAACI,GAAnB,EAAwB;AACvBJ,gBAAAA,cAAc,CAACI,GAAf,WACIjB,IADJ,4CAC0CgB,IAD1C;AAGA;;AACD,qBAAOF,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAf;AACA;AACD;AACD;;AAEDA,QAAAA,QAAQ;AACR,OA7BF;AA8BA;AArCF;;AAAA;AAAA","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst slashCode = \"/\".charCodeAt(0);\nconst backslashCode = \"\\\\\".charCodeAt(0);\n\nconst isInside = (path, parent) => {\n\tif (!path.startsWith(parent)) return false;\n\tif (path.length === parent.length) return true;\n\tconst charCode = path.charCodeAt(parent.length);\n\treturn charCode === slashCode || charCode === backslashCode;\n};\n\nmodule.exports = class RestrictionsPlugin {\n\tconstructor(source, restrictions) {\n\t\tthis.source = source;\n\t\tthis.restrictions = restrictions;\n\t}\n\n\tapply(resolver) {\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"RestrictionsPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (typeof request.path === \"string\") {\n\t\t\t\t\tconst path = request.path;\n\n\t\t\t\t\tfor (let i = 0; i < this.restrictions.length; i++) {\n\t\t\t\t\t\tconst rule = this.restrictions[i];\n\t\t\t\t\t\tif (typeof rule === \"string\") {\n\t\t\t\t\t\t\tif (!isInside(path, rule)) {\n\t\t\t\t\t\t\t\tif (resolveContext.log) {\n\t\t\t\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\t\t\t`${path} is not inside of the restriction ${rule}`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (!rule.test(path)) {\n\t\t\t\t\t\t\tif (resolveContext.log) {\n\t\t\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\t\t`${path} doesn't match the restriction ${rule}`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback();\n\t\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}