{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require(\"tapable\"),\n    SyncBailHook = _require.SyncBailHook;\n\nvar _require2 = require(\"webpack-sources\"),\n    RawSource = _require2.RawSource;\n\nvar Template = require(\"./Template\");\n\nvar ModuleHotAcceptDependency = require(\"./dependencies/ModuleHotAcceptDependency\");\n\nvar ModuleHotDeclineDependency = require(\"./dependencies/ModuleHotDeclineDependency\");\n\nvar ConstDependency = require(\"./dependencies/ConstDependency\");\n\nvar NullFactory = require(\"./NullFactory\");\n\nvar ParserHelpers = require(\"./ParserHelpers\");\n\nmodule.exports = /*#__PURE__*/function () {\n  function HotModuleReplacementPlugin(options) {\n    _classCallCheck(this, HotModuleReplacementPlugin);\n\n    this.options = options || {};\n    this.multiStep = this.options.multiStep;\n    this.fullBuildTimeout = this.options.fullBuildTimeout || 200;\n    this.requestTimeout = this.options.requestTimeout || 10000;\n  }\n\n  _createClass(HotModuleReplacementPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var multiStep = this.multiStep;\n      var fullBuildTimeout = this.fullBuildTimeout;\n      var requestTimeout = this.requestTimeout;\n      var hotUpdateChunkFilename = compiler.options.output.hotUpdateChunkFilename;\n      var hotUpdateMainFilename = compiler.options.output.hotUpdateMainFilename;\n      compiler.hooks.additionalPass.tapAsync(\"HotModuleReplacementPlugin\", function (callback) {\n        if (multiStep) return setTimeout(callback, fullBuildTimeout);\n        return callback();\n      });\n\n      var addParserPlugins = function addParserPlugins(parser, parserOptions) {\n        parser.hooks.expression.for(\"__webpack_hash__\").tap(\"HotModuleReplacementPlugin\", ParserHelpers.toConstantDependencyWithWebpackRequire(parser, \"__webpack_require__.h()\"));\n        parser.hooks.evaluateTypeof.for(\"__webpack_hash__\").tap(\"HotModuleReplacementPlugin\", ParserHelpers.evaluateToString(\"string\"));\n        parser.hooks.evaluateIdentifier.for(\"module.hot\").tap({\n          name: \"HotModuleReplacementPlugin\",\n          before: \"NodeStuffPlugin\"\n        }, function (expr) {\n          return ParserHelpers.evaluateToIdentifier(\"module.hot\", !!parser.state.compilation.hotUpdateChunkTemplate)(expr);\n        }); // TODO webpack 5: refactor this, no custom hooks\n\n        if (!parser.hooks.hotAcceptCallback) {\n          parser.hooks.hotAcceptCallback = new SyncBailHook([\"expression\", \"requests\"]);\n        }\n\n        if (!parser.hooks.hotAcceptWithoutCallback) {\n          parser.hooks.hotAcceptWithoutCallback = new SyncBailHook([\"expression\", \"requests\"]);\n        }\n\n        parser.hooks.call.for(\"module.hot.accept\").tap(\"HotModuleReplacementPlugin\", function (expr) {\n          if (!parser.state.compilation.hotUpdateChunkTemplate) {\n            return false;\n          }\n\n          if (expr.arguments.length >= 1) {\n            var arg = parser.evaluateExpression(expr.arguments[0]);\n            var params = [];\n            var requests = [];\n\n            if (arg.isString()) {\n              params = [arg];\n            } else if (arg.isArray()) {\n              params = arg.items.filter(function (param) {\n                return param.isString();\n              });\n            }\n\n            if (params.length > 0) {\n              params.forEach(function (param, idx) {\n                var request = param.string;\n                var dep = new ModuleHotAcceptDependency(request, param.range);\n                dep.optional = true;\n                dep.loc = Object.create(expr.loc);\n                dep.loc.index = idx;\n                parser.state.module.addDependency(dep);\n                requests.push(request);\n              });\n\n              if (expr.arguments.length > 1) {\n                parser.hooks.hotAcceptCallback.call(expr.arguments[1], requests);\n                parser.walkExpression(expr.arguments[1]); // other args are ignored\n\n                return true;\n              } else {\n                parser.hooks.hotAcceptWithoutCallback.call(expr, requests);\n                return true;\n              }\n            }\n          }\n        });\n        parser.hooks.call.for(\"module.hot.decline\").tap(\"HotModuleReplacementPlugin\", function (expr) {\n          if (!parser.state.compilation.hotUpdateChunkTemplate) {\n            return false;\n          }\n\n          if (expr.arguments.length === 1) {\n            var arg = parser.evaluateExpression(expr.arguments[0]);\n            var params = [];\n\n            if (arg.isString()) {\n              params = [arg];\n            } else if (arg.isArray()) {\n              params = arg.items.filter(function (param) {\n                return param.isString();\n              });\n            }\n\n            params.forEach(function (param, idx) {\n              var dep = new ModuleHotDeclineDependency(param.string, param.range);\n              dep.optional = true;\n              dep.loc = Object.create(expr.loc);\n              dep.loc.index = idx;\n              parser.state.module.addDependency(dep);\n            });\n          }\n        });\n        parser.hooks.expression.for(\"module.hot\").tap(\"HotModuleReplacementPlugin\", ParserHelpers.skipTraversal);\n      };\n\n      compiler.hooks.compilation.tap(\"HotModuleReplacementPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        // This applies the HMR plugin only to the targeted compiler\n        // It should not affect child compilations\n        if (compilation.compiler !== compiler) return;\n        var hotUpdateChunkTemplate = compilation.hotUpdateChunkTemplate;\n        if (!hotUpdateChunkTemplate) return;\n        compilation.dependencyFactories.set(ConstDependency, new NullFactory());\n        compilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\n        compilation.dependencyFactories.set(ModuleHotAcceptDependency, normalModuleFactory);\n        compilation.dependencyTemplates.set(ModuleHotAcceptDependency, new ModuleHotAcceptDependency.Template());\n        compilation.dependencyFactories.set(ModuleHotDeclineDependency, normalModuleFactory);\n        compilation.dependencyTemplates.set(ModuleHotDeclineDependency, new ModuleHotDeclineDependency.Template());\n        compilation.hooks.record.tap(\"HotModuleReplacementPlugin\", function (compilation, records) {\n          if (records.hash === compilation.hash) return;\n          records.hash = compilation.hash;\n          records.moduleHashs = {};\n\n          var _iterator = _createForOfIteratorHelper(compilation.modules),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _module = _step.value;\n\n              var identifier = _module.identifier();\n\n              records.moduleHashs[identifier] = _module.hash;\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          records.chunkHashs = {};\n\n          var _iterator2 = _createForOfIteratorHelper(compilation.chunks),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var chunk = _step2.value;\n              records.chunkHashs[chunk.id] = chunk.hash;\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          records.chunkModuleIds = {};\n\n          var _iterator3 = _createForOfIteratorHelper(compilation.chunks),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var _chunk = _step3.value;\n              records.chunkModuleIds[_chunk.id] = Array.from(_chunk.modulesIterable, function (m) {\n                return m.id;\n              });\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        });\n        var initialPass = false;\n        var recompilation = false;\n        compilation.hooks.afterHash.tap(\"HotModuleReplacementPlugin\", function () {\n          var records = compilation.records;\n\n          if (!records) {\n            initialPass = true;\n            return;\n          }\n\n          if (!records.hash) initialPass = true;\n          var preHash = records.preHash || \"x\";\n          var prepreHash = records.prepreHash || \"x\";\n\n          if (preHash === compilation.hash) {\n            recompilation = true;\n            compilation.modifyHash(prepreHash);\n            return;\n          }\n\n          records.prepreHash = records.hash || \"x\";\n          records.preHash = compilation.hash;\n          compilation.modifyHash(records.prepreHash);\n        });\n        compilation.hooks.shouldGenerateChunkAssets.tap(\"HotModuleReplacementPlugin\", function () {\n          if (multiStep && !recompilation && !initialPass) return false;\n        });\n        compilation.hooks.needAdditionalPass.tap(\"HotModuleReplacementPlugin\", function () {\n          if (multiStep && !recompilation && !initialPass) return true;\n        });\n        compilation.hooks.additionalChunkAssets.tap(\"HotModuleReplacementPlugin\", function () {\n          var records = compilation.records;\n          if (records.hash === compilation.hash) return;\n          if (!records.moduleHashs || !records.chunkHashs || !records.chunkModuleIds) return;\n\n          var _iterator4 = _createForOfIteratorHelper(compilation.modules),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var _module3 = _step4.value;\n\n              var identifier = _module3.identifier();\n\n              var hash = _module3.hash;\n              _module3.hotUpdate = records.moduleHashs[identifier] !== hash;\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n\n          var hotUpdateMainContent = {\n            h: compilation.hash,\n            c: {}\n          };\n\n          var _loop = function _loop() {\n            var key = _Object$keys[_i];\n            var chunkId = isNaN(+key) ? key : +key;\n            var currentChunk = compilation.chunks.find(function (chunk) {\n              return \"\".concat(chunk.id) === key;\n            });\n\n            if (currentChunk) {\n              var newModules = currentChunk.getModules().filter(function (module) {\n                return module.hotUpdate;\n              });\n              var allModules = new Set();\n\n              var _iterator5 = _createForOfIteratorHelper(currentChunk.modulesIterable),\n                  _step5;\n\n              try {\n                for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                  var _module2 = _step5.value;\n                  allModules.add(_module2.id);\n                }\n              } catch (err) {\n                _iterator5.e(err);\n              } finally {\n                _iterator5.f();\n              }\n\n              var removedModules = records.chunkModuleIds[chunkId].filter(function (id) {\n                return !allModules.has(id);\n              });\n\n              if (newModules.length > 0 || removedModules.length > 0) {\n                var _source = hotUpdateChunkTemplate.render(chunkId, newModules, removedModules, compilation.hash, compilation.moduleTemplates.javascript, compilation.dependencyTemplates);\n\n                var _compilation$getPathW = compilation.getPathWithInfo(hotUpdateChunkFilename, {\n                  hash: records.hash,\n                  chunk: currentChunk\n                }),\n                    _filename = _compilation$getPathW.path,\n                    _assetInfo = _compilation$getPathW.info;\n\n                compilation.additionalChunkAssets.push(_filename);\n                compilation.emitAsset(_filename, _source, Object.assign({\n                  hotModuleReplacement: true\n                }, _assetInfo));\n                hotUpdateMainContent.c[chunkId] = true;\n                currentChunk.files.push(_filename);\n                compilation.hooks.chunkAsset.call(currentChunk, _filename);\n              }\n            } else {\n              hotUpdateMainContent.c[chunkId] = false;\n            }\n          };\n\n          for (var _i = 0, _Object$keys = Object.keys(records.chunkHashs); _i < _Object$keys.length; _i++) {\n            _loop();\n          }\n\n          var source = new RawSource(JSON.stringify(hotUpdateMainContent));\n\n          var _compilation$getPathW2 = compilation.getPathWithInfo(hotUpdateMainFilename, {\n            hash: records.hash\n          }),\n              filename = _compilation$getPathW2.path,\n              assetInfo = _compilation$getPathW2.info;\n\n          compilation.emitAsset(filename, source, Object.assign({\n            hotModuleReplacement: true\n          }, assetInfo));\n        });\n        var mainTemplate = compilation.mainTemplate;\n        mainTemplate.hooks.hash.tap(\"HotModuleReplacementPlugin\", function (hash) {\n          hash.update(\"HotMainTemplateDecorator\");\n        });\n        mainTemplate.hooks.moduleRequire.tap(\"HotModuleReplacementPlugin\", function (_, chunk, hash, varModuleId) {\n          return \"hotCreateRequire(\".concat(varModuleId, \")\");\n        });\n        mainTemplate.hooks.requireExtensions.tap(\"HotModuleReplacementPlugin\", function (source) {\n          var buf = [source];\n          buf.push(\"\");\n          buf.push(\"// __webpack_hash__\");\n          buf.push(mainTemplate.requireFn + \".h = function() { return hotCurrentHash; };\");\n          return Template.asString(buf);\n        });\n\n        var needChunkLoadingCode = function needChunkLoadingCode(chunk) {\n          var _iterator6 = _createForOfIteratorHelper(chunk.groupsIterable),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var chunkGroup = _step6.value;\n              if (chunkGroup.chunks.length > 1) return true;\n              if (chunkGroup.getNumberOfChildren() > 0) return true;\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n\n          return false;\n        };\n\n        mainTemplate.hooks.bootstrap.tap(\"HotModuleReplacementPlugin\", function (source, chunk, hash) {\n          source = mainTemplate.hooks.hotBootstrap.call(source, chunk, hash);\n          return Template.asString([source, \"\", hotInitCode.replace(/\\$require\\$/g, mainTemplate.requireFn).replace(/\\$hash\\$/g, JSON.stringify(hash)).replace(/\\$requestTimeout\\$/g, requestTimeout).replace(/\\/\\*foreachInstalledChunks\\*\\//g, needChunkLoadingCode(chunk) ? \"for(var chunkId in installedChunks)\" : \"var chunkId = \".concat(JSON.stringify(chunk.id), \";\"))]);\n        });\n        mainTemplate.hooks.globalHash.tap(\"HotModuleReplacementPlugin\", function () {\n          return true;\n        });\n        mainTemplate.hooks.currentHash.tap(\"HotModuleReplacementPlugin\", function (_, length) {\n          if (isFinite(length)) {\n            return \"hotCurrentHash.substr(0, \".concat(length, \")\");\n          } else {\n            return \"hotCurrentHash\";\n          }\n        });\n        mainTemplate.hooks.moduleObj.tap(\"HotModuleReplacementPlugin\", function (source, chunk, hash, varModuleId) {\n          return Template.asString([\"\".concat(source, \",\"), \"hot: hotCreateModule(\".concat(varModuleId, \"),\"), \"parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\", \"children: []\"]);\n        }); // TODO add HMR support for javascript/esm\n\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"HotModuleReplacementPlugin\", addParserPlugins);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"HotModuleReplacementPlugin\", addParserPlugins);\n        compilation.hooks.normalModuleLoader.tap(\"HotModuleReplacementPlugin\", function (context) {\n          context.hot = true;\n        });\n      });\n    }\n  }]);\n\n  return HotModuleReplacementPlugin;\n}();\n\nvar hotInitCode = Template.getFunctionContent(require(\"./HotModuleReplacement.runtime\"));","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/HotModuleReplacementPlugin.js"],"names":["require","SyncBailHook","RawSource","Template","ModuleHotAcceptDependency","ModuleHotDeclineDependency","ConstDependency","NullFactory","ParserHelpers","module","exports","options","multiStep","fullBuildTimeout","requestTimeout","compiler","hotUpdateChunkFilename","output","hotUpdateMainFilename","hooks","additionalPass","tapAsync","callback","setTimeout","addParserPlugins","parser","parserOptions","expression","for","tap","toConstantDependencyWithWebpackRequire","evaluateTypeof","evaluateToString","evaluateIdentifier","name","before","expr","evaluateToIdentifier","state","compilation","hotUpdateChunkTemplate","hotAcceptCallback","hotAcceptWithoutCallback","call","arguments","length","arg","evaluateExpression","params","requests","isString","isArray","items","filter","param","forEach","idx","request","string","dep","range","optional","loc","Object","create","index","addDependency","push","walkExpression","skipTraversal","normalModuleFactory","dependencyFactories","set","dependencyTemplates","record","records","hash","moduleHashs","modules","identifier","chunkHashs","chunks","chunk","id","chunkModuleIds","Array","from","modulesIterable","m","initialPass","recompilation","afterHash","preHash","prepreHash","modifyHash","shouldGenerateChunkAssets","needAdditionalPass","additionalChunkAssets","hotUpdate","hotUpdateMainContent","h","c","key","chunkId","isNaN","currentChunk","find","newModules","getModules","allModules","Set","add","removedModules","has","source","render","moduleTemplates","javascript","getPathWithInfo","filename","path","assetInfo","info","emitAsset","assign","hotModuleReplacement","files","chunkAsset","keys","JSON","stringify","mainTemplate","update","moduleRequire","_","varModuleId","requireExtensions","buf","requireFn","asString","needChunkLoadingCode","groupsIterable","chunkGroup","getNumberOfChildren","bootstrap","hotBootstrap","hotInitCode","replace","globalHash","currentHash","isFinite","moduleObj","normalModuleLoader","context","hot","getFunctionContent"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { SyncBailHook } = require(\"tapable\");\nconst { RawSource } = require(\"webpack-sources\");\nconst Template = require(\"./Template\");\nconst ModuleHotAcceptDependency = require(\"./dependencies/ModuleHotAcceptDependency\");\nconst ModuleHotDeclineDependency = require(\"./dependencies/ModuleHotDeclineDependency\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst NullFactory = require(\"./NullFactory\");\nconst ParserHelpers = require(\"./ParserHelpers\");\n\nmodule.exports = class HotModuleReplacementPlugin {\n\tconstructor(options) {\n\t\tthis.options = options || {};\n\t\tthis.multiStep = this.options.multiStep;\n\t\tthis.fullBuildTimeout = this.options.fullBuildTimeout || 200;\n\t\tthis.requestTimeout = this.options.requestTimeout || 10000;\n\t}\n\n\tapply(compiler) {\n\t\tconst multiStep = this.multiStep;\n\t\tconst fullBuildTimeout = this.fullBuildTimeout;\n\t\tconst requestTimeout = this.requestTimeout;\n\t\tconst hotUpdateChunkFilename =\n\t\t\tcompiler.options.output.hotUpdateChunkFilename;\n\t\tconst hotUpdateMainFilename = compiler.options.output.hotUpdateMainFilename;\n\t\tcompiler.hooks.additionalPass.tapAsync(\n\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\tcallback => {\n\t\t\t\tif (multiStep) return setTimeout(callback, fullBuildTimeout);\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t);\n\n\t\tconst addParserPlugins = (parser, parserOptions) => {\n\t\t\tparser.hooks.expression\n\t\t\t\t.for(\"__webpack_hash__\")\n\t\t\t\t.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\tParserHelpers.toConstantDependencyWithWebpackRequire(\n\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\"__webpack_require__.h()\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t.for(\"__webpack_hash__\")\n\t\t\t\t.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\tParserHelpers.evaluateToString(\"string\")\n\t\t\t\t);\n\t\t\tparser.hooks.evaluateIdentifier.for(\"module.hot\").tap(\n\t\t\t\t{\n\t\t\t\t\tname: \"HotModuleReplacementPlugin\",\n\t\t\t\t\tbefore: \"NodeStuffPlugin\"\n\t\t\t\t},\n\t\t\t\texpr => {\n\t\t\t\t\treturn ParserHelpers.evaluateToIdentifier(\n\t\t\t\t\t\t\"module.hot\",\n\t\t\t\t\t\t!!parser.state.compilation.hotUpdateChunkTemplate\n\t\t\t\t\t)(expr);\n\t\t\t\t}\n\t\t\t);\n\t\t\t// TODO webpack 5: refactor this, no custom hooks\n\t\t\tif (!parser.hooks.hotAcceptCallback) {\n\t\t\t\tparser.hooks.hotAcceptCallback = new SyncBailHook([\n\t\t\t\t\t\"expression\",\n\t\t\t\t\t\"requests\"\n\t\t\t\t]);\n\t\t\t}\n\t\t\tif (!parser.hooks.hotAcceptWithoutCallback) {\n\t\t\t\tparser.hooks.hotAcceptWithoutCallback = new SyncBailHook([\n\t\t\t\t\t\"expression\",\n\t\t\t\t\t\"requests\"\n\t\t\t\t]);\n\t\t\t}\n\t\t\tparser.hooks.call\n\t\t\t\t.for(\"module.hot.accept\")\n\t\t\t\t.tap(\"HotModuleReplacementPlugin\", expr => {\n\t\t\t\t\tif (!parser.state.compilation.hotUpdateChunkTemplate) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (expr.arguments.length >= 1) {\n\t\t\t\t\t\tconst arg = parser.evaluateExpression(expr.arguments[0]);\n\t\t\t\t\t\tlet params = [];\n\t\t\t\t\t\tlet requests = [];\n\t\t\t\t\t\tif (arg.isString()) {\n\t\t\t\t\t\t\tparams = [arg];\n\t\t\t\t\t\t} else if (arg.isArray()) {\n\t\t\t\t\t\t\tparams = arg.items.filter(param => param.isString());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (params.length > 0) {\n\t\t\t\t\t\t\tparams.forEach((param, idx) => {\n\t\t\t\t\t\t\t\tconst request = param.string;\n\t\t\t\t\t\t\t\tconst dep = new ModuleHotAcceptDependency(request, param.range);\n\t\t\t\t\t\t\t\tdep.optional = true;\n\t\t\t\t\t\t\t\tdep.loc = Object.create(expr.loc);\n\t\t\t\t\t\t\t\tdep.loc.index = idx;\n\t\t\t\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\t\t\t\trequests.push(request);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (expr.arguments.length > 1) {\n\t\t\t\t\t\t\t\tparser.hooks.hotAcceptCallback.call(\n\t\t\t\t\t\t\t\t\texpr.arguments[1],\n\t\t\t\t\t\t\t\t\trequests\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tparser.walkExpression(expr.arguments[1]); // other args are ignored\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tparser.hooks.hotAcceptWithoutCallback.call(expr, requests);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tparser.hooks.call\n\t\t\t\t.for(\"module.hot.decline\")\n\t\t\t\t.tap(\"HotModuleReplacementPlugin\", expr => {\n\t\t\t\t\tif (!parser.state.compilation.hotUpdateChunkTemplate) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (expr.arguments.length === 1) {\n\t\t\t\t\t\tconst arg = parser.evaluateExpression(expr.arguments[0]);\n\t\t\t\t\t\tlet params = [];\n\t\t\t\t\t\tif (arg.isString()) {\n\t\t\t\t\t\t\tparams = [arg];\n\t\t\t\t\t\t} else if (arg.isArray()) {\n\t\t\t\t\t\t\tparams = arg.items.filter(param => param.isString());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparams.forEach((param, idx) => {\n\t\t\t\t\t\t\tconst dep = new ModuleHotDeclineDependency(\n\t\t\t\t\t\t\t\tparam.string,\n\t\t\t\t\t\t\t\tparam.range\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.optional = true;\n\t\t\t\t\t\t\tdep.loc = Object.create(expr.loc);\n\t\t\t\t\t\t\tdep.loc.index = idx;\n\t\t\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tparser.hooks.expression\n\t\t\t\t.for(\"module.hot\")\n\t\t\t\t.tap(\"HotModuleReplacementPlugin\", ParserHelpers.skipTraversal);\n\t\t};\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\t// This applies the HMR plugin only to the targeted compiler\n\t\t\t\t// It should not affect child compilations\n\t\t\t\tif (compilation.compiler !== compiler) return;\n\n\t\t\t\tconst hotUpdateChunkTemplate = compilation.hotUpdateChunkTemplate;\n\t\t\t\tif (!hotUpdateChunkTemplate) return;\n\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tModuleHotAcceptDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tModuleHotAcceptDependency,\n\t\t\t\t\tnew ModuleHotAcceptDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tModuleHotDeclineDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tModuleHotDeclineDependency,\n\t\t\t\t\tnew ModuleHotDeclineDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.hooks.record.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(compilation, records) => {\n\t\t\t\t\t\tif (records.hash === compilation.hash) return;\n\t\t\t\t\t\trecords.hash = compilation.hash;\n\t\t\t\t\t\trecords.moduleHashs = {};\n\t\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\t\tconst identifier = module.identifier();\n\t\t\t\t\t\t\trecords.moduleHashs[identifier] = module.hash;\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecords.chunkHashs = {};\n\t\t\t\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\t\t\t\trecords.chunkHashs[chunk.id] = chunk.hash;\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecords.chunkModuleIds = {};\n\t\t\t\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\t\t\t\trecords.chunkModuleIds[chunk.id] = Array.from(\n\t\t\t\t\t\t\t\tchunk.modulesIterable,\n\t\t\t\t\t\t\t\tm => m.id\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tlet initialPass = false;\n\t\t\t\tlet recompilation = false;\n\t\t\t\tcompilation.hooks.afterHash.tap(\"HotModuleReplacementPlugin\", () => {\n\t\t\t\t\tlet records = compilation.records;\n\t\t\t\t\tif (!records) {\n\t\t\t\t\t\tinitialPass = true;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (!records.hash) initialPass = true;\n\t\t\t\t\tconst preHash = records.preHash || \"x\";\n\t\t\t\t\tconst prepreHash = records.prepreHash || \"x\";\n\t\t\t\t\tif (preHash === compilation.hash) {\n\t\t\t\t\t\trecompilation = true;\n\t\t\t\t\t\tcompilation.modifyHash(prepreHash);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\trecords.prepreHash = records.hash || \"x\";\n\t\t\t\t\trecords.preHash = compilation.hash;\n\t\t\t\t\tcompilation.modifyHash(records.prepreHash);\n\t\t\t\t});\n\t\t\t\tcompilation.hooks.shouldGenerateChunkAssets.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t() => {\n\t\t\t\t\t\tif (multiStep && !recompilation && !initialPass) return false;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.needAdditionalPass.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t() => {\n\t\t\t\t\t\tif (multiStep && !recompilation && !initialPass) return true;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.additionalChunkAssets.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t() => {\n\t\t\t\t\t\tconst records = compilation.records;\n\t\t\t\t\t\tif (records.hash === compilation.hash) return;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!records.moduleHashs ||\n\t\t\t\t\t\t\t!records.chunkHashs ||\n\t\t\t\t\t\t\t!records.chunkModuleIds\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\t\tconst identifier = module.identifier();\n\t\t\t\t\t\t\tlet hash = module.hash;\n\t\t\t\t\t\t\tmodule.hotUpdate = records.moduleHashs[identifier] !== hash;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst hotUpdateMainContent = {\n\t\t\t\t\t\t\th: compilation.hash,\n\t\t\t\t\t\t\tc: {}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tfor (const key of Object.keys(records.chunkHashs)) {\n\t\t\t\t\t\t\tconst chunkId = isNaN(+key) ? key : +key;\n\t\t\t\t\t\t\tconst currentChunk = compilation.chunks.find(\n\t\t\t\t\t\t\t\tchunk => `${chunk.id}` === key\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (currentChunk) {\n\t\t\t\t\t\t\t\tconst newModules = currentChunk\n\t\t\t\t\t\t\t\t\t.getModules()\n\t\t\t\t\t\t\t\t\t.filter(module => module.hotUpdate);\n\t\t\t\t\t\t\t\tconst allModules = new Set();\n\t\t\t\t\t\t\t\tfor (const module of currentChunk.modulesIterable) {\n\t\t\t\t\t\t\t\t\tallModules.add(module.id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst removedModules = records.chunkModuleIds[chunkId].filter(\n\t\t\t\t\t\t\t\t\tid => !allModules.has(id)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (newModules.length > 0 || removedModules.length > 0) {\n\t\t\t\t\t\t\t\t\tconst source = hotUpdateChunkTemplate.render(\n\t\t\t\t\t\t\t\t\t\tchunkId,\n\t\t\t\t\t\t\t\t\t\tnewModules,\n\t\t\t\t\t\t\t\t\t\tremovedModules,\n\t\t\t\t\t\t\t\t\t\tcompilation.hash,\n\t\t\t\t\t\t\t\t\t\tcompilation.moduleTemplates.javascript,\n\t\t\t\t\t\t\t\t\t\tcompilation.dependencyTemplates\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\tpath: filename,\n\t\t\t\t\t\t\t\t\t\tinfo: assetInfo\n\t\t\t\t\t\t\t\t\t} = compilation.getPathWithInfo(hotUpdateChunkFilename, {\n\t\t\t\t\t\t\t\t\t\thash: records.hash,\n\t\t\t\t\t\t\t\t\t\tchunk: currentChunk\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tcompilation.additionalChunkAssets.push(filename);\n\t\t\t\t\t\t\t\t\tcompilation.emitAsset(\n\t\t\t\t\t\t\t\t\t\tfilename,\n\t\t\t\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\t\t\t\tObject.assign({ hotModuleReplacement: true }, assetInfo)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\thotUpdateMainContent.c[chunkId] = true;\n\t\t\t\t\t\t\t\t\tcurrentChunk.files.push(filename);\n\t\t\t\t\t\t\t\t\tcompilation.hooks.chunkAsset.call(currentChunk, filename);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\thotUpdateMainContent.c[chunkId] = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst source = new RawSource(JSON.stringify(hotUpdateMainContent));\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tpath: filename,\n\t\t\t\t\t\t\tinfo: assetInfo\n\t\t\t\t\t\t} = compilation.getPathWithInfo(hotUpdateMainFilename, {\n\t\t\t\t\t\t\thash: records.hash\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcompilation.emitAsset(\n\t\t\t\t\t\t\tfilename,\n\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\tObject.assign({ hotModuleReplacement: true }, assetInfo)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tconst mainTemplate = compilation.mainTemplate;\n\n\t\t\t\tmainTemplate.hooks.hash.tap(\"HotModuleReplacementPlugin\", hash => {\n\t\t\t\t\thash.update(\"HotMainTemplateDecorator\");\n\t\t\t\t});\n\n\t\t\t\tmainTemplate.hooks.moduleRequire.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(_, chunk, hash, varModuleId) => {\n\t\t\t\t\t\treturn `hotCreateRequire(${varModuleId})`;\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tmainTemplate.hooks.requireExtensions.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\tsource => {\n\t\t\t\t\t\tconst buf = [source];\n\t\t\t\t\t\tbuf.push(\"\");\n\t\t\t\t\t\tbuf.push(\"// __webpack_hash__\");\n\t\t\t\t\t\tbuf.push(\n\t\t\t\t\t\t\tmainTemplate.requireFn +\n\t\t\t\t\t\t\t\t\".h = function() { return hotCurrentHash; };\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn Template.asString(buf);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tconst needChunkLoadingCode = chunk => {\n\t\t\t\t\tfor (const chunkGroup of chunk.groupsIterable) {\n\t\t\t\t\t\tif (chunkGroup.chunks.length > 1) return true;\n\t\t\t\t\t\tif (chunkGroup.getNumberOfChildren() > 0) return true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\n\t\t\t\tmainTemplate.hooks.bootstrap.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(source, chunk, hash) => {\n\t\t\t\t\t\tsource = mainTemplate.hooks.hotBootstrap.call(source, chunk, hash);\n\t\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\thotInitCode\n\t\t\t\t\t\t\t\t.replace(/\\$require\\$/g, mainTemplate.requireFn)\n\t\t\t\t\t\t\t\t.replace(/\\$hash\\$/g, JSON.stringify(hash))\n\t\t\t\t\t\t\t\t.replace(/\\$requestTimeout\\$/g, requestTimeout)\n\t\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t\t/\\/\\*foreachInstalledChunks\\*\\//g,\n\t\t\t\t\t\t\t\t\tneedChunkLoadingCode(chunk)\n\t\t\t\t\t\t\t\t\t\t? \"for(var chunkId in installedChunks)\"\n\t\t\t\t\t\t\t\t\t\t: `var chunkId = ${JSON.stringify(chunk.id)};`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tmainTemplate.hooks.globalHash.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t() => true\n\t\t\t\t);\n\n\t\t\t\tmainTemplate.hooks.currentHash.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(_, length) => {\n\t\t\t\t\t\tif (isFinite(length)) {\n\t\t\t\t\t\t\treturn `hotCurrentHash.substr(0, ${length})`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn \"hotCurrentHash\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tmainTemplate.hooks.moduleObj.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(source, chunk, hash, varModuleId) => {\n\t\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\t\t`${source},`,\n\t\t\t\t\t\t\t`hot: hotCreateModule(${varModuleId}),`,\n\t\t\t\t\t\t\t\"parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\",\n\t\t\t\t\t\t\t\"children: []\"\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// TODO add HMR support for javascript/esm\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"HotModuleReplacementPlugin\", addParserPlugins);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"HotModuleReplacementPlugin\", addParserPlugins);\n\n\t\t\t\tcompilation.hooks.normalModuleLoader.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\tcontext => {\n\t\t\t\t\t\tcontext.hot = true;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n};\n\nconst hotInitCode = Template.getFunctionContent(\n\trequire(\"./HotModuleReplacement.runtime\")\n);\n"]},"metadata":{},"sourceType":"script"}