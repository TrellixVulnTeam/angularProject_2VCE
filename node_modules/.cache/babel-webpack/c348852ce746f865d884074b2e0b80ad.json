{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Hook = require(\"./Hook\");\n\nvar HookCodeFactory = require(\"./HookCodeFactory\");\n\nvar AsyncParallelHookCodeFactory = /*#__PURE__*/function (_HookCodeFactory) {\n  _inherits(AsyncParallelHookCodeFactory, _HookCodeFactory);\n\n  var _super = _createSuper(AsyncParallelHookCodeFactory);\n\n  function AsyncParallelHookCodeFactory() {\n    _classCallCheck(this, AsyncParallelHookCodeFactory);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AsyncParallelHookCodeFactory, [{\n    key: \"content\",\n    value: function content(_ref) {\n      var _onError = _ref.onError,\n          onDone = _ref.onDone;\n      return this.callTapsParallel({\n        onError: function onError(i, err, done, doneBreak) {\n          return _onError(err) + doneBreak(true);\n        },\n        onDone: onDone\n      });\n    }\n  }]);\n\n  return AsyncParallelHookCodeFactory;\n}(HookCodeFactory);\n\nvar factory = new AsyncParallelHookCodeFactory();\n\nvar AsyncParallelHook = /*#__PURE__*/function (_Hook) {\n  _inherits(AsyncParallelHook, _Hook);\n\n  var _super2 = _createSuper(AsyncParallelHook);\n\n  function AsyncParallelHook() {\n    _classCallCheck(this, AsyncParallelHook);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(AsyncParallelHook, [{\n    key: \"compile\",\n    value: function compile(options) {\n      factory.setup(this, options);\n      return factory.create(options);\n    }\n  }]);\n\n  return AsyncParallelHook;\n}(Hook);\n\nObject.defineProperties(AsyncParallelHook.prototype, {\n  _call: {\n    value: undefined,\n    configurable: true,\n    writable: true\n  }\n});\nmodule.exports = AsyncParallelHook;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/tapable/lib/AsyncParallelHook.js"],"names":["Hook","require","HookCodeFactory","AsyncParallelHookCodeFactory","onError","onDone","callTapsParallel","i","err","done","doneBreak","factory","AsyncParallelHook","options","setup","create","Object","defineProperties","prototype","_call","value","undefined","configurable","writable","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;IAEME,4B;;;;;;;;;;;;;WACL,uBAA6B;AAAA,UAAnBC,QAAmB,QAAnBA,OAAmB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AAC5B,aAAO,KAAKC,gBAAL,CAAsB;AAC5BF,QAAAA,OAAO,EAAE,iBAACG,CAAD,EAAIC,GAAJ,EAASC,IAAT,EAAeC,SAAf;AAAA,iBAA6BN,QAAO,CAACI,GAAD,CAAP,GAAeE,SAAS,CAAC,IAAD,CAArD;AAAA,SADmB;AAE5BL,QAAAA,MAAM,EAANA;AAF4B,OAAtB,CAAP;AAIA;;;;EANyCH,e;;AAS3C,IAAMS,OAAO,GAAG,IAAIR,4BAAJ,EAAhB;;IAEMS,iB;;;;;;;;;;;;;WACL,iBAAQC,OAAR,EAAiB;AAChBF,MAAAA,OAAO,CAACG,KAAR,CAAc,IAAd,EAAoBD,OAApB;AACA,aAAOF,OAAO,CAACI,MAAR,CAAeF,OAAf,CAAP;AACA;;;;EAJ8Bb,I;;AAOhCgB,MAAM,CAACC,gBAAP,CAAwBL,iBAAiB,CAACM,SAA1C,EAAqD;AACpDC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAEC,SAAT;AAAoBC,IAAAA,YAAY,EAAE,IAAlC;AAAwCC,IAAAA,QAAQ,EAAE;AAAlD;AAD6C,CAArD;AAIAC,MAAM,CAACC,OAAP,GAAiBb,iBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncParallelHookCodeFactory extends HookCodeFactory {\n\tcontent({ onError, onDone }) {\n\t\treturn this.callTapsParallel({\n\t\t\tonError: (i, err, done, doneBreak) => onError(err) + doneBreak(true),\n\t\t\tonDone\n\t\t});\n\t}\n}\n\nconst factory = new AsyncParallelHookCodeFactory();\n\nclass AsyncParallelHook extends Hook {\n\tcompile(options) {\n\t\tfactory.setup(this, options);\n\t\treturn factory.create(options);\n\t}\n}\n\nObject.defineProperties(AsyncParallelHook.prototype, {\n\t_call: { value: undefined, configurable: true, writable: true }\n});\n\nmodule.exports = AsyncParallelHook;\n"]},"metadata":{},"sourceType":"script"}