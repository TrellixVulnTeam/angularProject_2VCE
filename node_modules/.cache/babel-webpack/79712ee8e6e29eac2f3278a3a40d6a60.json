{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\n\nvar HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\n\nvar HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\n\nvar HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\n\nvar HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\n\nvar ConstDependency = require(\"./ConstDependency\");\n\nmodule.exports = /*#__PURE__*/function () {\n  function HarmonyExportDependencyParserPlugin(moduleOptions) {\n    _classCallCheck(this, HarmonyExportDependencyParserPlugin);\n\n    this.strictExportPresence = moduleOptions.strictExportPresence;\n  }\n\n  _createClass(HarmonyExportDependencyParserPlugin, [{\n    key: \"apply\",\n    value: function apply(parser) {\n      var _this = this;\n\n      parser.hooks.export.tap(\"HarmonyExportDependencyParserPlugin\", function (statement) {\n        var dep = new HarmonyExportHeaderDependency(statement.declaration && statement.declaration.range, statement.range);\n        dep.loc = Object.create(statement.loc);\n        dep.loc.index = -1;\n        parser.state.current.addDependency(dep);\n        return true;\n      });\n      parser.hooks.exportImport.tap(\"HarmonyExportDependencyParserPlugin\", function (statement, source) {\n        parser.state.lastHarmonyImportOrder = (parser.state.lastHarmonyImportOrder || 0) + 1;\n        var clearDep = new ConstDependency(\"\", statement.range);\n        clearDep.loc = Object.create(statement.loc);\n        clearDep.loc.index = -1;\n        parser.state.current.addDependency(clearDep);\n        var sideEffectDep = new HarmonyImportSideEffectDependency(source, parser.state.module, parser.state.lastHarmonyImportOrder, parser.state.harmonyParserScope);\n        sideEffectDep.loc = Object.create(statement.loc);\n        sideEffectDep.loc.index = -1;\n        parser.state.current.addDependency(sideEffectDep);\n        return true;\n      });\n      parser.hooks.exportExpression.tap(\"HarmonyExportDependencyParserPlugin\", function (statement, expr) {\n        var comments = parser.getComments([statement.range[0], expr.range[0]]);\n        var dep = new HarmonyExportExpressionDependency(parser.state.module, expr.range, statement.range, comments.map(function (c) {\n          switch (c.type) {\n            case \"Block\":\n              return \"/*\".concat(c.value, \"*/\");\n\n            case \"Line\":\n              return \"//\".concat(c.value, \"\\n\");\n          }\n\n          return \"\";\n        }).join(\"\"));\n        dep.loc = Object.create(statement.loc);\n        dep.loc.index = -1;\n        parser.state.current.addDependency(dep);\n        return true;\n      });\n      parser.hooks.exportDeclaration.tap(\"HarmonyExportDependencyParserPlugin\", function (statement) {});\n      parser.hooks.exportSpecifier.tap(\"HarmonyExportDependencyParserPlugin\", function (statement, id, name, idx) {\n        var rename = parser.scope.renames.get(id);\n        var dep;\n        var harmonyNamedExports = parser.state.harmonyNamedExports = parser.state.harmonyNamedExports || new Set();\n        harmonyNamedExports.add(name);\n\n        if (rename === \"imported var\") {\n          var settings = parser.state.harmonySpecifier.get(id);\n          dep = new HarmonyExportImportedSpecifierDependency(settings.source, parser.state.module, settings.sourceOrder, parser.state.harmonyParserScope, settings.id, name, harmonyNamedExports, null, _this.strictExportPresence);\n        } else {\n          dep = new HarmonyExportSpecifierDependency(parser.state.module, id, name);\n        }\n\n        dep.loc = Object.create(statement.loc);\n        dep.loc.index = idx;\n        parser.state.current.addDependency(dep);\n        return true;\n      });\n      parser.hooks.exportImportSpecifier.tap(\"HarmonyExportDependencyParserPlugin\", function (statement, source, id, name, idx) {\n        var harmonyNamedExports = parser.state.harmonyNamedExports = parser.state.harmonyNamedExports || new Set();\n        var harmonyStarExports = null;\n\n        if (name) {\n          harmonyNamedExports.add(name);\n        } else {\n          harmonyStarExports = parser.state.harmonyStarExports = parser.state.harmonyStarExports || [];\n        }\n\n        var dep = new HarmonyExportImportedSpecifierDependency(source, parser.state.module, parser.state.lastHarmonyImportOrder, parser.state.harmonyParserScope, id, name, harmonyNamedExports, harmonyStarExports && harmonyStarExports.slice(), _this.strictExportPresence);\n\n        if (harmonyStarExports) {\n          harmonyStarExports.push(dep);\n        }\n\n        dep.loc = Object.create(statement.loc);\n        dep.loc.index = idx;\n        parser.state.current.addDependency(dep);\n        return true;\n      });\n    }\n  }]);\n\n  return HarmonyExportDependencyParserPlugin;\n}();","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/dependencies/HarmonyExportDependencyParserPlugin.js"],"names":["HarmonyExportExpressionDependency","require","HarmonyImportSideEffectDependency","HarmonyExportHeaderDependency","HarmonyExportSpecifierDependency","HarmonyExportImportedSpecifierDependency","ConstDependency","module","exports","moduleOptions","strictExportPresence","parser","hooks","export","tap","statement","dep","declaration","range","loc","Object","create","index","state","current","addDependency","exportImport","source","lastHarmonyImportOrder","clearDep","sideEffectDep","harmonyParserScope","exportExpression","expr","comments","getComments","map","c","type","value","join","exportDeclaration","exportSpecifier","id","name","idx","rename","scope","renames","get","harmonyNamedExports","Set","add","settings","harmonySpecifier","sourceOrder","exportImportSpecifier","harmonyStarExports","slice","push"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\nconst HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\nconst HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\nconst ConstDependency = require(\"./ConstDependency\");\n\nmodule.exports = class HarmonyExportDependencyParserPlugin {\n\tconstructor(moduleOptions) {\n\t\tthis.strictExportPresence = moduleOptions.strictExportPresence;\n\t}\n\n\tapply(parser) {\n\t\tparser.hooks.export.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\tstatement => {\n\t\t\t\tconst dep = new HarmonyExportHeaderDependency(\n\t\t\t\t\tstatement.declaration && statement.declaration.range,\n\t\t\t\t\tstatement.range\n\t\t\t\t);\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportImport.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, source) => {\n\t\t\t\tparser.state.lastHarmonyImportOrder =\n\t\t\t\t\t(parser.state.lastHarmonyImportOrder || 0) + 1;\n\t\t\t\tconst clearDep = new ConstDependency(\"\", statement.range);\n\t\t\t\tclearDep.loc = Object.create(statement.loc);\n\t\t\t\tclearDep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(clearDep);\n\t\t\t\tconst sideEffectDep = new HarmonyImportSideEffectDependency(\n\t\t\t\t\tsource,\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tparser.state.harmonyParserScope\n\t\t\t\t);\n\t\t\t\tsideEffectDep.loc = Object.create(statement.loc);\n\t\t\t\tsideEffectDep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(sideEffectDep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportExpression.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, expr) => {\n\t\t\t\tconst comments = parser.getComments([\n\t\t\t\t\tstatement.range[0],\n\t\t\t\t\texpr.range[0]\n\t\t\t\t]);\n\t\t\t\tconst dep = new HarmonyExportExpressionDependency(\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\texpr.range,\n\t\t\t\t\tstatement.range,\n\t\t\t\t\tcomments\n\t\t\t\t\t\t.map(c => {\n\t\t\t\t\t\t\tswitch (c.type) {\n\t\t\t\t\t\t\t\tcase \"Block\":\n\t\t\t\t\t\t\t\t\treturn `/*${c.value}*/`;\n\t\t\t\t\t\t\t\tcase \"Line\":\n\t\t\t\t\t\t\t\t\treturn `//${c.value}\\n`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join(\"\")\n\t\t\t\t);\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportDeclaration.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\tstatement => {}\n\t\t);\n\t\tparser.hooks.exportSpecifier.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, id, name, idx) => {\n\t\t\t\tconst rename = parser.scope.renames.get(id);\n\t\t\t\tlet dep;\n\t\t\t\tconst harmonyNamedExports = (parser.state.harmonyNamedExports =\n\t\t\t\t\tparser.state.harmonyNamedExports || new Set());\n\t\t\t\tharmonyNamedExports.add(name);\n\t\t\t\tif (rename === \"imported var\") {\n\t\t\t\t\tconst settings = parser.state.harmonySpecifier.get(id);\n\t\t\t\t\tdep = new HarmonyExportImportedSpecifierDependency(\n\t\t\t\t\t\tsettings.source,\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\t\tparser.state.harmonyParserScope,\n\t\t\t\t\t\tsettings.id,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tharmonyNamedExports,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tthis.strictExportPresence\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdep = new HarmonyExportSpecifierDependency(\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tname\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = idx;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportImportSpecifier.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, source, id, name, idx) => {\n\t\t\t\tconst harmonyNamedExports = (parser.state.harmonyNamedExports =\n\t\t\t\t\tparser.state.harmonyNamedExports || new Set());\n\t\t\t\tlet harmonyStarExports = null;\n\t\t\t\tif (name) {\n\t\t\t\t\tharmonyNamedExports.add(name);\n\t\t\t\t} else {\n\t\t\t\t\tharmonyStarExports = parser.state.harmonyStarExports =\n\t\t\t\t\t\tparser.state.harmonyStarExports || [];\n\t\t\t\t}\n\t\t\t\tconst dep = new HarmonyExportImportedSpecifierDependency(\n\t\t\t\t\tsource,\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tparser.state.harmonyParserScope,\n\t\t\t\t\tid,\n\t\t\t\t\tname,\n\t\t\t\t\tharmonyNamedExports,\n\t\t\t\t\tharmonyStarExports && harmonyStarExports.slice(),\n\t\t\t\t\tthis.strictExportPresence\n\t\t\t\t);\n\t\t\t\tif (harmonyStarExports) {\n\t\t\t\t\tharmonyStarExports.push(dep);\n\t\t\t\t}\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = idx;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}