{"ast":null,"code":"'use strict';\n\nvar util = require('util');\n\nvar index = require('./lib/entry-index');\n\nvar memo = require('./lib/memoization');\n\nvar path = require('path');\n\nvar rimraf = util.promisify(require('rimraf'));\n\nvar rmContent = require('./lib/content/rm');\n\nmodule.exports = entry;\nmodule.exports.entry = entry;\n\nfunction entry(cache, key, opts) {\n  memo.clearMemoized();\n  return index.delete(cache, key, opts);\n}\n\nmodule.exports.content = content;\n\nfunction content(cache, integrity) {\n  memo.clearMemoized();\n  return rmContent(cache, integrity);\n}\n\nmodule.exports.all = all;\n\nfunction all(cache) {\n  memo.clearMemoized();\n  return rimraf(path.join(cache, '*(content-*|index-*)'));\n}","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/cacache/rm.js"],"names":["util","require","index","memo","path","rimraf","promisify","rmContent","module","exports","entry","cache","key","opts","clearMemoized","delete","content","integrity","all","join"],"mappings":"AAAA;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMC,KAAK,GAAGD,OAAO,CAAC,mBAAD,CAArB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,mBAAD,CAApB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMI,MAAM,GAAGL,IAAI,CAACM,SAAL,CAAeL,OAAO,CAAC,QAAD,CAAtB,CAAf;;AACA,IAAMM,SAAS,GAAGN,OAAO,CAAC,kBAAD,CAAzB;;AAEAO,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AACAF,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuBA,KAAvB;;AAEA,SAASA,KAAT,CAAgBC,KAAhB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkC;AAChCV,EAAAA,IAAI,CAACW,aAAL;AACA,SAAOZ,KAAK,CAACa,MAAN,CAAaJ,KAAb,EAAoBC,GAApB,EAAyBC,IAAzB,CAAP;AACD;;AAEDL,MAAM,CAACC,OAAP,CAAeO,OAAf,GAAyBA,OAAzB;;AAEA,SAASA,OAAT,CAAkBL,KAAlB,EAAyBM,SAAzB,EAAoC;AAClCd,EAAAA,IAAI,CAACW,aAAL;AACA,SAAOP,SAAS,CAACI,KAAD,EAAQM,SAAR,CAAhB;AACD;;AAEDT,MAAM,CAACC,OAAP,CAAeS,GAAf,GAAqBA,GAArB;;AAEA,SAASA,GAAT,CAAcP,KAAd,EAAqB;AACnBR,EAAAA,IAAI,CAACW,aAAL;AACA,SAAOT,MAAM,CAACD,IAAI,CAACe,IAAL,CAAUR,KAAV,EAAiB,sBAAjB,CAAD,CAAb;AACD","sourcesContent":["'use strict'\n\nconst util = require('util')\n\nconst index = require('./lib/entry-index')\nconst memo = require('./lib/memoization')\nconst path = require('path')\nconst rimraf = util.promisify(require('rimraf'))\nconst rmContent = require('./lib/content/rm')\n\nmodule.exports = entry\nmodule.exports.entry = entry\n\nfunction entry (cache, key, opts) {\n  memo.clearMemoized()\n  return index.delete(cache, key, opts)\n}\n\nmodule.exports.content = content\n\nfunction content (cache, integrity) {\n  memo.clearMemoized()\n  return rmContent(cache, integrity)\n}\n\nmodule.exports.all = all\n\nfunction all (cache) {\n  memo.clearMemoized()\n  return rimraf(path.join(cache, '*(content-*|index-*)'))\n}\n"]},"metadata":{},"sourceType":"script"}