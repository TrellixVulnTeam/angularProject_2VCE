{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Source = require(\"./Source\");\n\nvar mapToBufferedMap = function mapToBufferedMap(map) {\n  if (typeof map !== \"object\" || !map) return map;\n  var bufferedMap = Object.assign({}, map);\n\n  if (map.mappings) {\n    bufferedMap.mappings = Buffer.from(map.mappings, \"utf-8\");\n  }\n\n  if (map.sourcesContent) {\n    bufferedMap.sourcesContent = map.sourcesContent.map(function (str) {\n      return str && Buffer.from(str, \"utf-8\");\n    });\n  }\n\n  return bufferedMap;\n};\n\nvar bufferedMapToMap = function bufferedMapToMap(bufferedMap) {\n  if (typeof bufferedMap !== \"object\" || !bufferedMap) return bufferedMap;\n  var map = Object.assign({}, bufferedMap);\n\n  if (bufferedMap.mappings) {\n    map.mappings = bufferedMap.mappings.toString(\"utf-8\");\n  }\n\n  if (bufferedMap.sourcesContent) {\n    map.sourcesContent = bufferedMap.sourcesContent.map(function (buffer) {\n      return buffer && buffer.toString(\"utf-8\");\n    });\n  }\n\n  return map;\n};\n\nvar CachedSource = /*#__PURE__*/function (_Source) {\n  _inherits(CachedSource, _Source);\n\n  var _super = _createSuper(CachedSource);\n\n  function CachedSource(source, cachedData) {\n    var _this;\n\n    _classCallCheck(this, CachedSource);\n\n    _this = _super.call(this);\n    _this._source = source;\n    _this._cachedSourceType = cachedData ? cachedData.source : undefined;\n    _this._cachedSource = undefined;\n    _this._cachedBuffer = cachedData ? cachedData.buffer : undefined;\n    _this._cachedSize = cachedData ? cachedData.size : undefined;\n    _this._cachedMaps = cachedData ? cachedData.maps : new Map();\n    return _this;\n  }\n\n  _createClass(CachedSource, [{\n    key: \"getCachedData\",\n    value: function getCachedData() {\n      // We don't want to cache strings\n      // So if we have a caches sources\n      // create a buffer from it and only store\n      // if it was a Buffer or string\n      if (this._cachedSource) {\n        this.buffer();\n      }\n\n      var bufferedMaps = new Map();\n\n      var _iterator = _createForOfIteratorHelper(this._cachedMaps),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var pair = _step.value;\n\n          if (pair[1].bufferedMap === undefined) {\n            pair[1].bufferedMap = mapToBufferedMap(pair[1].map);\n          }\n\n          bufferedMaps.set(pair[0], {\n            map: undefined,\n            bufferedMap: pair[1].bufferedMap\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return {\n        buffer: this._cachedBuffer,\n        source: this._cachedSourceType !== undefined ? this._cachedSourceType : typeof this._cachedSource === \"string\" ? true : Buffer.isBuffer(this._cachedSource) ? false : undefined,\n        size: this._cachedSize,\n        maps: bufferedMaps\n      };\n    }\n  }, {\n    key: \"originalLazy\",\n    value: function originalLazy() {\n      return this._source;\n    }\n  }, {\n    key: \"original\",\n    value: function original() {\n      if (typeof this._source === \"function\") this._source = this._source();\n      return this._source;\n    }\n  }, {\n    key: \"source\",\n    value: function source() {\n      if (this._cachedSource !== undefined) return this._cachedSource;\n\n      if (this._cachedBuffer && this._cachedSourceType !== undefined) {\n        return this._cachedSource = this._cachedSourceType ? this._cachedBuffer.toString(\"utf-8\") : this._cachedBuffer;\n      } else {\n        return this._cachedSource = this.original().source();\n      }\n    }\n  }, {\n    key: \"buffer\",\n    value: function buffer() {\n      if (typeof this._cachedBuffer !== \"undefined\") return this._cachedBuffer;\n\n      if (typeof this._cachedSource !== \"undefined\") {\n        if (Buffer.isBuffer(this._cachedSource)) {\n          return this._cachedBuffer = this._cachedSource;\n        }\n\n        return this._cachedBuffer = Buffer.from(this._cachedSource, \"utf-8\");\n      }\n\n      if (typeof this.original().buffer === \"function\") {\n        return this._cachedBuffer = this.original().buffer();\n      }\n\n      var bufferOrString = this.source();\n\n      if (Buffer.isBuffer(bufferOrString)) {\n        return this._cachedBuffer = bufferOrString;\n      }\n\n      return this._cachedBuffer = Buffer.from(bufferOrString, \"utf-8\");\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      if (typeof this._cachedSize !== \"undefined\") return this._cachedSize;\n\n      if (typeof this._cachedSource !== \"undefined\") {\n        return this._cachedSize = Buffer.byteLength(this._cachedSource);\n      }\n\n      if (typeof this._cachedBuffer !== \"undefined\") {\n        return this._cachedSize = this._cachedBuffer.length;\n      }\n\n      return this._cachedSize = this.original().size();\n    }\n  }, {\n    key: \"sourceAndMap\",\n    value: function sourceAndMap(options) {\n      var key = options ? JSON.stringify(options) : \"{}\";\n\n      var cacheEntry = this._cachedMaps.get(key);\n\n      if (cacheEntry && cacheEntry.map === undefined) {\n        cacheEntry.map = bufferedMapToMap(cacheEntry.bufferedMap);\n      }\n\n      if (typeof this._cachedSource !== \"undefined\") {\n        if (cacheEntry === undefined) {\n          var map = this.original().map(options);\n\n          this._cachedMaps.set(key, {\n            map: map,\n            bufferedMap: undefined\n          });\n\n          return {\n            source: this._cachedSource,\n            map: map\n          };\n        } else {\n          return {\n            source: this._cachedSource,\n            map: cacheEntry.map\n          };\n        }\n      } else if (cacheEntry !== undefined) {\n        return {\n          source: this._cachedSource = this.original().source(),\n          map: cacheEntry.map\n        };\n      } else {\n        var result = this.original().sourceAndMap(options);\n        this._cachedSource = result.source;\n\n        this._cachedMaps.set(key, {\n          map: result.map,\n          bufferedMap: undefined\n        });\n\n        return result;\n      }\n    }\n  }, {\n    key: \"map\",\n    value: function map(options) {\n      var key = options ? JSON.stringify(options) : \"{}\";\n\n      var cacheEntry = this._cachedMaps.get(key);\n\n      if (cacheEntry !== undefined) {\n        if (cacheEntry.map === undefined) {\n          cacheEntry.map = bufferedMapToMap(cacheEntry.bufferedMap);\n        }\n\n        return cacheEntry.map;\n      }\n\n      var map = this.original().map(options);\n\n      this._cachedMaps.set(key, {\n        map: map,\n        bufferedMap: undefined\n      });\n\n      return map;\n    }\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash) {\n      this.original().updateHash(hash);\n    }\n  }]);\n\n  return CachedSource;\n}(Source);\n\nmodule.exports = CachedSource;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/webpack-sources/lib/CachedSource.js"],"names":["Source","require","mapToBufferedMap","map","bufferedMap","Object","assign","mappings","Buffer","from","sourcesContent","str","bufferedMapToMap","toString","buffer","CachedSource","source","cachedData","_source","_cachedSourceType","undefined","_cachedSource","_cachedBuffer","_cachedSize","size","_cachedMaps","maps","Map","bufferedMaps","pair","set","isBuffer","original","bufferOrString","byteLength","length","options","key","JSON","stringify","cacheEntry","get","result","sourceAndMap","hash","updateHash","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Source = require(\"./Source\");\n\nconst mapToBufferedMap = map => {\n\tif (typeof map !== \"object\" || !map) return map;\n\tconst bufferedMap = Object.assign({}, map);\n\tif (map.mappings) {\n\t\tbufferedMap.mappings = Buffer.from(map.mappings, \"utf-8\");\n\t}\n\tif (map.sourcesContent) {\n\t\tbufferedMap.sourcesContent = map.sourcesContent.map(\n\t\t\tstr => str && Buffer.from(str, \"utf-8\")\n\t\t);\n\t}\n\treturn bufferedMap;\n};\n\nconst bufferedMapToMap = bufferedMap => {\n\tif (typeof bufferedMap !== \"object\" || !bufferedMap) return bufferedMap;\n\tconst map = Object.assign({}, bufferedMap);\n\tif (bufferedMap.mappings) {\n\t\tmap.mappings = bufferedMap.mappings.toString(\"utf-8\");\n\t}\n\tif (bufferedMap.sourcesContent) {\n\t\tmap.sourcesContent = bufferedMap.sourcesContent.map(\n\t\t\tbuffer => buffer && buffer.toString(\"utf-8\")\n\t\t);\n\t}\n\treturn map;\n};\n\nclass CachedSource extends Source {\n\tconstructor(source, cachedData) {\n\t\tsuper();\n\t\tthis._source = source;\n\t\tthis._cachedSourceType = cachedData ? cachedData.source : undefined;\n\t\tthis._cachedSource = undefined;\n\t\tthis._cachedBuffer = cachedData ? cachedData.buffer : undefined;\n\t\tthis._cachedSize = cachedData ? cachedData.size : undefined;\n\t\tthis._cachedMaps = cachedData ? cachedData.maps : new Map();\n\t}\n\n\tgetCachedData() {\n\t\t// We don't want to cache strings\n\t\t// So if we have a caches sources\n\t\t// create a buffer from it and only store\n\t\t// if it was a Buffer or string\n\t\tif (this._cachedSource) {\n\t\t\tthis.buffer();\n\t\t}\n\t\tconst bufferedMaps = new Map();\n\t\tfor (const pair of this._cachedMaps) {\n\t\t\tif (pair[1].bufferedMap === undefined) {\n\t\t\t\tpair[1].bufferedMap = mapToBufferedMap(pair[1].map);\n\t\t\t}\n\t\t\tbufferedMaps.set(pair[0], {\n\t\t\t\tmap: undefined,\n\t\t\t\tbufferedMap: pair[1].bufferedMap\n\t\t\t});\n\t\t}\n\t\treturn {\n\t\t\tbuffer: this._cachedBuffer,\n\t\t\tsource:\n\t\t\t\tthis._cachedSourceType !== undefined\n\t\t\t\t\t? this._cachedSourceType\n\t\t\t\t\t: typeof this._cachedSource === \"string\"\n\t\t\t\t\t? true\n\t\t\t\t\t: Buffer.isBuffer(this._cachedSource)\n\t\t\t\t\t? false\n\t\t\t\t\t: undefined,\n\t\t\tsize: this._cachedSize,\n\t\t\tmaps: bufferedMaps\n\t\t};\n\t}\n\n\toriginalLazy() {\n\t\treturn this._source;\n\t}\n\n\toriginal() {\n\t\tif (typeof this._source === \"function\") this._source = this._source();\n\t\treturn this._source;\n\t}\n\n\tsource() {\n\t\tif (this._cachedSource !== undefined) return this._cachedSource;\n\t\tif (this._cachedBuffer && this._cachedSourceType !== undefined) {\n\t\t\treturn (this._cachedSource = this._cachedSourceType\n\t\t\t\t? this._cachedBuffer.toString(\"utf-8\")\n\t\t\t\t: this._cachedBuffer);\n\t\t} else {\n\t\t\treturn (this._cachedSource = this.original().source());\n\t\t}\n\t}\n\n\tbuffer() {\n\t\tif (typeof this._cachedBuffer !== \"undefined\") return this._cachedBuffer;\n\t\tif (typeof this._cachedSource !== \"undefined\") {\n\t\t\tif (Buffer.isBuffer(this._cachedSource)) {\n\t\t\t\treturn (this._cachedBuffer = this._cachedSource);\n\t\t\t}\n\t\t\treturn (this._cachedBuffer = Buffer.from(this._cachedSource, \"utf-8\"));\n\t\t}\n\t\tif (typeof this.original().buffer === \"function\") {\n\t\t\treturn (this._cachedBuffer = this.original().buffer());\n\t\t}\n\t\tconst bufferOrString = this.source();\n\t\tif (Buffer.isBuffer(bufferOrString)) {\n\t\t\treturn (this._cachedBuffer = bufferOrString);\n\t\t}\n\t\treturn (this._cachedBuffer = Buffer.from(bufferOrString, \"utf-8\"));\n\t}\n\n\tsize() {\n\t\tif (typeof this._cachedSize !== \"undefined\") return this._cachedSize;\n\t\tif (typeof this._cachedSource !== \"undefined\") {\n\t\t\treturn (this._cachedSize = Buffer.byteLength(this._cachedSource));\n\t\t}\n\t\tif (typeof this._cachedBuffer !== \"undefined\") {\n\t\t\treturn (this._cachedSize = this._cachedBuffer.length);\n\t\t}\n\t\treturn (this._cachedSize = this.original().size());\n\t}\n\n\tsourceAndMap(options) {\n\t\tconst key = options ? JSON.stringify(options) : \"{}\";\n\t\tlet cacheEntry = this._cachedMaps.get(key);\n\t\tif (cacheEntry && cacheEntry.map === undefined) {\n\t\t\tcacheEntry.map = bufferedMapToMap(cacheEntry.bufferedMap);\n\t\t}\n\t\tif (typeof this._cachedSource !== \"undefined\") {\n\t\t\tif (cacheEntry === undefined) {\n\t\t\t\tconst map = this.original().map(options);\n\t\t\t\tthis._cachedMaps.set(key, { map, bufferedMap: undefined });\n\t\t\t\treturn {\n\t\t\t\t\tsource: this._cachedSource,\n\t\t\t\t\tmap\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tsource: this._cachedSource,\n\t\t\t\t\tmap: cacheEntry.map\n\t\t\t\t};\n\t\t\t}\n\t\t} else if (cacheEntry !== undefined) {\n\t\t\treturn {\n\t\t\t\tsource: (this._cachedSource = this.original().source()),\n\t\t\t\tmap: cacheEntry.map\n\t\t\t};\n\t\t} else {\n\t\t\tconst result = this.original().sourceAndMap(options);\n\t\t\tthis._cachedSource = result.source;\n\t\t\tthis._cachedMaps.set(key, { map: result.map, bufferedMap: undefined });\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tmap(options) {\n\t\tconst key = options ? JSON.stringify(options) : \"{}\";\n\t\tlet cacheEntry = this._cachedMaps.get(key);\n\t\tif (cacheEntry !== undefined) {\n\t\t\tif (cacheEntry.map === undefined) {\n\t\t\t\tcacheEntry.map = bufferedMapToMap(cacheEntry.bufferedMap);\n\t\t\t}\n\t\t\treturn cacheEntry.map;\n\t\t}\n\t\tconst map = this.original().map(options);\n\t\tthis._cachedMaps.set(key, { map, bufferedMap: undefined });\n\t\treturn map;\n\t}\n\n\tupdateHash(hash) {\n\t\tthis.original().updateHash(hash);\n\t}\n}\n\nmodule.exports = CachedSource;\n"]},"metadata":{},"sourceType":"script"}