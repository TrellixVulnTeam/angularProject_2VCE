{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _sourceMap = require(\"source-map\");\n\nvar _webpackSources = require(\"webpack-sources\");\n\nvar _RequestShortener = _interopRequireDefault(require(\"webpack/lib/RequestShortener\"));\n\nvar _ModuleFilenameHelpers = _interopRequireDefault(require(\"webpack/lib/ModuleFilenameHelpers\"));\n\nvar _schemaUtils = _interopRequireDefault(require(\"schema-utils\"));\n\nvar _serializeJavascript = _interopRequireDefault(require(\"serialize-javascript\"));\n\nvar _package = _interopRequireDefault(require(\"terser/package.json\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _TaskRunner = _interopRequireDefault(require(\"./TaskRunner\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar warningRegex = /\\[.+:([0-9]+),([0-9]+)\\]/;\n\nvar TerserPlugin = /*#__PURE__*/function () {\n  function TerserPlugin() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, TerserPlugin);\n\n    (0, _schemaUtils.default)(_options.default, options, 'Terser Plugin');\n    var minify = options.minify,\n        _options$terserOption = options.terserOptions,\n        terserOptions = _options$terserOption === void 0 ? {} : _options$terserOption,\n        _options$test = options.test,\n        test = _options$test === void 0 ? /\\.m?js(\\?.*)?$/i : _options$test,\n        _options$chunkFilter = options.chunkFilter,\n        chunkFilter = _options$chunkFilter === void 0 ? function () {\n      return true;\n    } : _options$chunkFilter,\n        _options$warningsFilt = options.warningsFilter,\n        warningsFilter = _options$warningsFilt === void 0 ? function () {\n      return true;\n    } : _options$warningsFilt,\n        _options$extractComme = options.extractComments,\n        extractComments = _options$extractComme === void 0 ? false : _options$extractComme,\n        _options$sourceMap = options.sourceMap,\n        sourceMap = _options$sourceMap === void 0 ? false : _options$sourceMap,\n        _options$cache = options.cache,\n        cache = _options$cache === void 0 ? false : _options$cache,\n        _options$cacheKeys = options.cacheKeys,\n        cacheKeys = _options$cacheKeys === void 0 ? function (defaultCacheKeys) {\n      return defaultCacheKeys;\n    } : _options$cacheKeys,\n        _options$parallel = options.parallel,\n        parallel = _options$parallel === void 0 ? false : _options$parallel,\n        include = options.include,\n        exclude = options.exclude;\n    this.options = {\n      test: test,\n      chunkFilter: chunkFilter,\n      warningsFilter: warningsFilter,\n      extractComments: extractComments,\n      sourceMap: sourceMap,\n      cache: cache,\n      cacheKeys: cacheKeys,\n      parallel: parallel,\n      include: include,\n      exclude: exclude,\n      minify: minify,\n      terserOptions: _objectSpread({\n        output: {\n          comments: extractComments ? false : /^\\**!|@preserve|@license|@cc_on/i\n        }\n      }, terserOptions)\n    };\n  }\n\n  _createClass(TerserPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      var buildModuleFn = function buildModuleFn(moduleArg) {\n        // to get detailed location info about errors\n        moduleArg.useSourceMap = true;\n      };\n\n      var optimizeFn = function optimizeFn(compilation, chunks, callback) {\n        var taskRunner = new _TaskRunner.default({\n          cache: _this.options.cache,\n          parallel: _this.options.parallel\n        });\n        var processedAssets = new WeakSet();\n        var tasks = [];\n        var chunkFilter = _this.options.chunkFilter;\n        Array.from(chunks).filter(function (chunk) {\n          return chunkFilter && chunkFilter(chunk);\n        }).reduce(function (acc, chunk) {\n          return acc.concat(chunk.files || []);\n        }, []).concat(compilation.additionalChunkAssets || []).filter(_ModuleFilenameHelpers.default.matchObject.bind(null, _this.options)).forEach(function (file) {\n          var inputSourceMap;\n          var asset = compilation.assets[file];\n\n          if (processedAssets.has(asset)) {\n            return;\n          }\n\n          try {\n            var input;\n\n            if (_this.options.sourceMap && asset.sourceAndMap) {\n              var _asset$sourceAndMap = asset.sourceAndMap(),\n                  source = _asset$sourceAndMap.source,\n                  map = _asset$sourceAndMap.map;\n\n              input = source;\n\n              if (TerserPlugin.isSourceMap(map)) {\n                inputSourceMap = map;\n              } else {\n                inputSourceMap = map;\n                compilation.warnings.push(new Error(\"\".concat(file, \" contains invalid source map\")));\n              }\n            } else {\n              input = asset.source();\n              inputSourceMap = null;\n            } // Handling comment extraction\n\n\n            var commentsFile = false;\n\n            if (_this.options.extractComments) {\n              commentsFile = _this.options.extractComments.filename || \"\".concat(file, \".LICENSE\");\n\n              if (typeof commentsFile === 'function') {\n                commentsFile = commentsFile(file);\n              }\n            }\n\n            var task = {\n              file: file,\n              input: input,\n              inputSourceMap: inputSourceMap,\n              commentsFile: commentsFile,\n              extractComments: _this.options.extractComments,\n              terserOptions: _this.options.terserOptions,\n              minify: _this.options.minify\n            };\n\n            if (_this.options.cache) {\n              var defaultCacheKeys = {\n                terser: _package.default.version,\n                node_version: process.version,\n                // eslint-disable-next-line global-require\n                'terser-webpack-plugin': require('../package.json').version,\n                'terser-webpack-plugin-options': _this.options,\n                hash: _crypto.default.createHash('md4').update(input).digest('hex')\n              };\n              task.cacheKeys = _this.options.cacheKeys(defaultCacheKeys, file);\n            }\n\n            tasks.push(task);\n          } catch (error) {\n            compilation.errors.push(TerserPlugin.buildError(error, file, TerserPlugin.buildSourceMap(inputSourceMap), new _RequestShortener.default(compiler.context)));\n          }\n        });\n        taskRunner.run(tasks, function (tasksError, results) {\n          if (tasksError) {\n            compilation.errors.push(tasksError);\n            return;\n          }\n\n          results.forEach(function (data, index) {\n            var _tasks$index = tasks[index],\n                file = _tasks$index.file,\n                input = _tasks$index.input,\n                inputSourceMap = _tasks$index.inputSourceMap,\n                commentsFile = _tasks$index.commentsFile;\n            var error = data.error,\n                map = data.map,\n                code = data.code,\n                warnings = data.warnings;\n            var extractedComments = data.extractedComments;\n            var sourceMap = null;\n\n            if (error || warnings && warnings.length > 0) {\n              sourceMap = TerserPlugin.buildSourceMap(inputSourceMap);\n            } // Handling results\n            // Error case: add errors, and go to next file\n\n\n            if (error) {\n              compilation.errors.push(TerserPlugin.buildError(error, file, sourceMap, new _RequestShortener.default(compiler.context)));\n              return;\n            }\n\n            var outputSource;\n\n            if (map) {\n              outputSource = new _webpackSources.SourceMapSource(code, file, JSON.parse(map), input, inputSourceMap, true);\n            } else {\n              outputSource = new _webpackSources.RawSource(code);\n            } // Write extracted comments to commentsFile\n\n\n            if (commentsFile && extractedComments && extractedComments.length > 0) {\n              if (commentsFile in compilation.assets) {\n                var commentsFileSource = compilation.assets[commentsFile].source();\n                extractedComments = extractedComments.filter(function (comment) {\n                  return !commentsFileSource.includes(comment);\n                });\n              }\n\n              if (extractedComments.length > 0) {\n                // Add a banner to the original file\n                if (_this.options.extractComments.banner !== false) {\n                  var banner = _this.options.extractComments.banner || \"For license information please see \".concat(_path.default.posix.basename(commentsFile));\n\n                  if (typeof banner === 'function') {\n                    banner = banner(commentsFile);\n                  }\n\n                  if (banner) {\n                    outputSource = new _webpackSources.ConcatSource(\"/*! \".concat(banner, \" */\\n\"), outputSource);\n                  }\n                }\n\n                var commentsSource = new _webpackSources.RawSource(\"\".concat(extractedComments.join('\\n\\n'), \"\\n\"));\n\n                if (commentsFile in compilation.assets) {\n                  // commentsFile already exists, append new comments...\n                  if (compilation.assets[commentsFile] instanceof _webpackSources.ConcatSource) {\n                    compilation.assets[commentsFile].add('\\n');\n                    compilation.assets[commentsFile].add(commentsSource);\n                  } else {\n                    compilation.assets[commentsFile] = new _webpackSources.ConcatSource(compilation.assets[commentsFile], '\\n', commentsSource);\n                  }\n                } else {\n                  compilation.assets[commentsFile] = commentsSource;\n                }\n              }\n            } // Updating assets\n\n\n            processedAssets.add(compilation.assets[file] = outputSource); // Handling warnings\n\n            if (warnings && warnings.length > 0) {\n              warnings.forEach(function (warning) {\n                var builtWarning = TerserPlugin.buildWarning(warning, file, sourceMap, new _RequestShortener.default(compiler.context), _this.options.warningsFilter);\n\n                if (builtWarning) {\n                  compilation.warnings.push(builtWarning);\n                }\n              });\n            }\n          });\n          taskRunner.exit();\n          callback();\n        });\n      };\n\n      var plugin = {\n        name: this.constructor.name\n      };\n      compiler.hooks.compilation.tap(plugin, function (compilation) {\n        if (_this.options.sourceMap) {\n          compilation.hooks.buildModule.tap(plugin, buildModuleFn);\n        }\n\n        var mainTemplate = compilation.mainTemplate,\n            chunkTemplate = compilation.chunkTemplate; // Regenerate `contenthash` for minified assets\n\n        for (var _i = 0, _arr = [mainTemplate, chunkTemplate]; _i < _arr.length; _i++) {\n          var template = _arr[_i];\n          template.hooks.hashForChunk.tap(plugin, function (hash) {\n            var data = (0, _serializeJavascript.default)({\n              terser: _package.default.version,\n              terserOptions: _this.options.terserOptions\n            });\n            hash.update('TerserPlugin');\n            hash.update(data);\n          });\n        }\n\n        compilation.hooks.optimizeChunkAssets.tapAsync(plugin, optimizeFn.bind(_this, compilation));\n      });\n    }\n  }], [{\n    key: \"isSourceMap\",\n    value: function isSourceMap(input) {\n      // All required options for `new SourceMapConsumer(...options)`\n      // https://github.com/mozilla/source-map#new-sourcemapconsumerrawsourcemap\n      return Boolean(input && input.version && input.sources && Array.isArray(input.sources) && typeof input.mappings === 'string');\n    }\n  }, {\n    key: \"buildSourceMap\",\n    value: function buildSourceMap(inputSourceMap) {\n      if (!inputSourceMap || !TerserPlugin.isSourceMap(inputSourceMap)) {\n        return null;\n      }\n\n      return new _sourceMap.SourceMapConsumer(inputSourceMap);\n    }\n  }, {\n    key: \"buildError\",\n    value: function buildError(err, file, sourceMap, requestShortener) {\n      // Handling error which should have line, col, filename and message\n      if (err.line) {\n        var original = sourceMap && sourceMap.originalPositionFor({\n          line: err.line,\n          column: err.col\n        });\n\n        if (original && original.source && requestShortener) {\n          return new Error(\"\".concat(file, \" from Terser\\n\").concat(err.message, \" [\").concat(requestShortener.shorten(original.source), \":\").concat(original.line, \",\").concat(original.column, \"][\").concat(file, \":\").concat(err.line, \",\").concat(err.col, \"]\"));\n        }\n\n        return new Error(\"\".concat(file, \" from Terser\\n\").concat(err.message, \" [\").concat(file, \":\").concat(err.line, \",\").concat(err.col, \"]\"));\n      } else if (err.stack) {\n        return new Error(\"\".concat(file, \" from Terser\\n\").concat(err.stack));\n      }\n\n      return new Error(\"\".concat(file, \" from Terser\\n\").concat(err.message));\n    }\n  }, {\n    key: \"buildWarning\",\n    value: function buildWarning(warning, file, sourceMap, requestShortener, warningsFilter) {\n      var warningMessage = warning;\n      var locationMessage = '';\n      var source = null;\n\n      if (sourceMap) {\n        var match = warningRegex.exec(warning);\n\n        if (match) {\n          var line = +match[1];\n          var column = +match[2];\n          var original = sourceMap.originalPositionFor({\n            line: line,\n            column: column\n          });\n\n          if (original && original.source && original.source !== file && requestShortener) {\n            source = original.source;\n            warningMessage = \"\".concat(warningMessage.replace(warningRegex, ''));\n            locationMessage = \"[\".concat(requestShortener.shorten(original.source), \":\").concat(original.line, \",\").concat(original.column, \"]\");\n          }\n        }\n      }\n\n      if (warningsFilter && !warningsFilter(warning, source)) {\n        return null;\n      }\n\n      return \"Terser Plugin: \".concat(warningMessage).concat(locationMessage);\n    }\n  }]);\n\n  return TerserPlugin;\n}();\n\nvar _default = TerserPlugin;\nexports.default = _default;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/node_modules/terser-webpack-plugin/dist/index.js"],"names":["Object","defineProperty","exports","value","default","_crypto","_interopRequireDefault","require","_path","_sourceMap","_webpackSources","_RequestShortener","_ModuleFilenameHelpers","_schemaUtils","_serializeJavascript","_package","_options","_TaskRunner","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","warningRegex","TerserPlugin","options","minify","terserOptions","test","chunkFilter","warningsFilter","extractComments","sourceMap","cache","cacheKeys","defaultCacheKeys","parallel","include","exclude","output","comments","compiler","buildModuleFn","moduleArg","useSourceMap","optimizeFn","compilation","chunks","callback","taskRunner","processedAssets","WeakSet","tasks","Array","from","chunk","reduce","acc","concat","files","additionalChunkAssets","matchObject","bind","file","inputSourceMap","asset","assets","has","input","sourceAndMap","map","isSourceMap","warnings","Error","commentsFile","filename","task","terser","version","node_version","process","hash","createHash","update","digest","error","errors","buildError","buildSourceMap","context","run","tasksError","results","data","index","code","extractedComments","outputSource","SourceMapSource","JSON","parse","RawSource","commentsFileSource","comment","includes","banner","posix","basename","ConcatSource","commentsSource","join","add","warning","builtWarning","buildWarning","exit","plugin","name","constructor","hooks","tap","buildModule","mainTemplate","chunkTemplate","template","hashForChunk","optimizeChunkAssets","tapAsync","Boolean","sources","isArray","mappings","SourceMapConsumer","err","requestShortener","line","original","originalPositionFor","column","col","message","shorten","stack","warningMessage","locationMessage","match","exec","replace","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _sourceMap = require(\"source-map\");\n\nvar _webpackSources = require(\"webpack-sources\");\n\nvar _RequestShortener = _interopRequireDefault(require(\"webpack/lib/RequestShortener\"));\n\nvar _ModuleFilenameHelpers = _interopRequireDefault(require(\"webpack/lib/ModuleFilenameHelpers\"));\n\nvar _schemaUtils = _interopRequireDefault(require(\"schema-utils\"));\n\nvar _serializeJavascript = _interopRequireDefault(require(\"serialize-javascript\"));\n\nvar _package = _interopRequireDefault(require(\"terser/package.json\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _TaskRunner = _interopRequireDefault(require(\"./TaskRunner\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst warningRegex = /\\[.+:([0-9]+),([0-9]+)\\]/;\n\nclass TerserPlugin {\n  constructor(options = {}) {\n    (0, _schemaUtils.default)(_options.default, options, 'Terser Plugin');\n    const {\n      minify,\n      terserOptions = {},\n      test = /\\.m?js(\\?.*)?$/i,\n      chunkFilter = () => true,\n      warningsFilter = () => true,\n      extractComments = false,\n      sourceMap = false,\n      cache = false,\n      cacheKeys = defaultCacheKeys => defaultCacheKeys,\n      parallel = false,\n      include,\n      exclude\n    } = options;\n    this.options = {\n      test,\n      chunkFilter,\n      warningsFilter,\n      extractComments,\n      sourceMap,\n      cache,\n      cacheKeys,\n      parallel,\n      include,\n      exclude,\n      minify,\n      terserOptions: _objectSpread({\n        output: {\n          comments: extractComments ? false : /^\\**!|@preserve|@license|@cc_on/i\n        }\n      }, terserOptions)\n    };\n  }\n\n  static isSourceMap(input) {\n    // All required options for `new SourceMapConsumer(...options)`\n    // https://github.com/mozilla/source-map#new-sourcemapconsumerrawsourcemap\n    return Boolean(input && input.version && input.sources && Array.isArray(input.sources) && typeof input.mappings === 'string');\n  }\n\n  static buildSourceMap(inputSourceMap) {\n    if (!inputSourceMap || !TerserPlugin.isSourceMap(inputSourceMap)) {\n      return null;\n    }\n\n    return new _sourceMap.SourceMapConsumer(inputSourceMap);\n  }\n\n  static buildError(err, file, sourceMap, requestShortener) {\n    // Handling error which should have line, col, filename and message\n    if (err.line) {\n      const original = sourceMap && sourceMap.originalPositionFor({\n        line: err.line,\n        column: err.col\n      });\n\n      if (original && original.source && requestShortener) {\n        return new Error(`${file} from Terser\\n${err.message} [${requestShortener.shorten(original.source)}:${original.line},${original.column}][${file}:${err.line},${err.col}]`);\n      }\n\n      return new Error(`${file} from Terser\\n${err.message} [${file}:${err.line},${err.col}]`);\n    } else if (err.stack) {\n      return new Error(`${file} from Terser\\n${err.stack}`);\n    }\n\n    return new Error(`${file} from Terser\\n${err.message}`);\n  }\n\n  static buildWarning(warning, file, sourceMap, requestShortener, warningsFilter) {\n    let warningMessage = warning;\n    let locationMessage = '';\n    let source = null;\n\n    if (sourceMap) {\n      const match = warningRegex.exec(warning);\n\n      if (match) {\n        const line = +match[1];\n        const column = +match[2];\n        const original = sourceMap.originalPositionFor({\n          line,\n          column\n        });\n\n        if (original && original.source && original.source !== file && requestShortener) {\n          ({\n            source\n          } = original);\n          warningMessage = `${warningMessage.replace(warningRegex, '')}`;\n          locationMessage = `[${requestShortener.shorten(original.source)}:${original.line},${original.column}]`;\n        }\n      }\n    }\n\n    if (warningsFilter && !warningsFilter(warning, source)) {\n      return null;\n    }\n\n    return `Terser Plugin: ${warningMessage}${locationMessage}`;\n  }\n\n  apply(compiler) {\n    const buildModuleFn = moduleArg => {\n      // to get detailed location info about errors\n      moduleArg.useSourceMap = true;\n    };\n\n    const optimizeFn = (compilation, chunks, callback) => {\n      const taskRunner = new _TaskRunner.default({\n        cache: this.options.cache,\n        parallel: this.options.parallel\n      });\n      const processedAssets = new WeakSet();\n      const tasks = [];\n      const {\n        chunkFilter\n      } = this.options;\n      Array.from(chunks).filter(chunk => chunkFilter && chunkFilter(chunk)).reduce((acc, chunk) => acc.concat(chunk.files || []), []).concat(compilation.additionalChunkAssets || []).filter(_ModuleFilenameHelpers.default.matchObject.bind(null, this.options)).forEach(file => {\n        let inputSourceMap;\n        const asset = compilation.assets[file];\n\n        if (processedAssets.has(asset)) {\n          return;\n        }\n\n        try {\n          let input;\n\n          if (this.options.sourceMap && asset.sourceAndMap) {\n            const {\n              source,\n              map\n            } = asset.sourceAndMap();\n            input = source;\n\n            if (TerserPlugin.isSourceMap(map)) {\n              inputSourceMap = map;\n            } else {\n              inputSourceMap = map;\n              compilation.warnings.push(new Error(`${file} contains invalid source map`));\n            }\n          } else {\n            input = asset.source();\n            inputSourceMap = null;\n          } // Handling comment extraction\n\n\n          let commentsFile = false;\n\n          if (this.options.extractComments) {\n            commentsFile = this.options.extractComments.filename || `${file}.LICENSE`;\n\n            if (typeof commentsFile === 'function') {\n              commentsFile = commentsFile(file);\n            }\n          }\n\n          const task = {\n            file,\n            input,\n            inputSourceMap,\n            commentsFile,\n            extractComments: this.options.extractComments,\n            terserOptions: this.options.terserOptions,\n            minify: this.options.minify\n          };\n\n          if (this.options.cache) {\n            const defaultCacheKeys = {\n              terser: _package.default.version,\n              node_version: process.version,\n              // eslint-disable-next-line global-require\n              'terser-webpack-plugin': require('../package.json').version,\n              'terser-webpack-plugin-options': this.options,\n              hash: _crypto.default.createHash('md4').update(input).digest('hex')\n            };\n            task.cacheKeys = this.options.cacheKeys(defaultCacheKeys, file);\n          }\n\n          tasks.push(task);\n        } catch (error) {\n          compilation.errors.push(TerserPlugin.buildError(error, file, TerserPlugin.buildSourceMap(inputSourceMap), new _RequestShortener.default(compiler.context)));\n        }\n      });\n      taskRunner.run(tasks, (tasksError, results) => {\n        if (tasksError) {\n          compilation.errors.push(tasksError);\n          return;\n        }\n\n        results.forEach((data, index) => {\n          const {\n            file,\n            input,\n            inputSourceMap,\n            commentsFile\n          } = tasks[index];\n          const {\n            error,\n            map,\n            code,\n            warnings\n          } = data;\n          let {\n            extractedComments\n          } = data;\n          let sourceMap = null;\n\n          if (error || warnings && warnings.length > 0) {\n            sourceMap = TerserPlugin.buildSourceMap(inputSourceMap);\n          } // Handling results\n          // Error case: add errors, and go to next file\n\n\n          if (error) {\n            compilation.errors.push(TerserPlugin.buildError(error, file, sourceMap, new _RequestShortener.default(compiler.context)));\n            return;\n          }\n\n          let outputSource;\n\n          if (map) {\n            outputSource = new _webpackSources.SourceMapSource(code, file, JSON.parse(map), input, inputSourceMap, true);\n          } else {\n            outputSource = new _webpackSources.RawSource(code);\n          } // Write extracted comments to commentsFile\n\n\n          if (commentsFile && extractedComments && extractedComments.length > 0) {\n            if (commentsFile in compilation.assets) {\n              const commentsFileSource = compilation.assets[commentsFile].source();\n              extractedComments = extractedComments.filter(comment => !commentsFileSource.includes(comment));\n            }\n\n            if (extractedComments.length > 0) {\n              // Add a banner to the original file\n              if (this.options.extractComments.banner !== false) {\n                let banner = this.options.extractComments.banner || `For license information please see ${_path.default.posix.basename(commentsFile)}`;\n\n                if (typeof banner === 'function') {\n                  banner = banner(commentsFile);\n                }\n\n                if (banner) {\n                  outputSource = new _webpackSources.ConcatSource(`/*! ${banner} */\\n`, outputSource);\n                }\n              }\n\n              const commentsSource = new _webpackSources.RawSource(`${extractedComments.join('\\n\\n')}\\n`);\n\n              if (commentsFile in compilation.assets) {\n                // commentsFile already exists, append new comments...\n                if (compilation.assets[commentsFile] instanceof _webpackSources.ConcatSource) {\n                  compilation.assets[commentsFile].add('\\n');\n                  compilation.assets[commentsFile].add(commentsSource);\n                } else {\n                  compilation.assets[commentsFile] = new _webpackSources.ConcatSource(compilation.assets[commentsFile], '\\n', commentsSource);\n                }\n              } else {\n                compilation.assets[commentsFile] = commentsSource;\n              }\n            }\n          } // Updating assets\n\n\n          processedAssets.add(compilation.assets[file] = outputSource); // Handling warnings\n\n          if (warnings && warnings.length > 0) {\n            warnings.forEach(warning => {\n              const builtWarning = TerserPlugin.buildWarning(warning, file, sourceMap, new _RequestShortener.default(compiler.context), this.options.warningsFilter);\n\n              if (builtWarning) {\n                compilation.warnings.push(builtWarning);\n              }\n            });\n          }\n        });\n        taskRunner.exit();\n        callback();\n      });\n    };\n\n    const plugin = {\n      name: this.constructor.name\n    };\n    compiler.hooks.compilation.tap(plugin, compilation => {\n      if (this.options.sourceMap) {\n        compilation.hooks.buildModule.tap(plugin, buildModuleFn);\n      }\n\n      const {\n        mainTemplate,\n        chunkTemplate\n      } = compilation; // Regenerate `contenthash` for minified assets\n\n      for (const template of [mainTemplate, chunkTemplate]) {\n        template.hooks.hashForChunk.tap(plugin, hash => {\n          const data = (0, _serializeJavascript.default)({\n            terser: _package.default.version,\n            terserOptions: this.options.terserOptions\n          });\n          hash.update('TerserPlugin');\n          hash.update(data);\n        });\n      }\n\n      compilation.hooks.optimizeChunkAssets.tapAsync(plugin, optimizeFn.bind(this, compilation));\n    });\n  }\n\n}\n\nvar _default = TerserPlugin;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}