{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar NaturalChunkOrderPlugin = /*#__PURE__*/function () {\n  function NaturalChunkOrderPlugin() {\n    _classCallCheck(this, NaturalChunkOrderPlugin);\n  }\n\n  _createClass(NaturalChunkOrderPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * @param {Compiler} compiler webpack compiler\n     * @returns {void}\n     */\n    function apply(compiler) {\n      compiler.hooks.compilation.tap(\"NaturalChunkOrderPlugin\", function (compilation) {\n        compilation.hooks.optimizeChunkOrder.tap(\"NaturalChunkOrderPlugin\", function (chunks) {\n          chunks.sort(function (chunkA, chunkB) {\n            var a = chunkA.modulesIterable[Symbol.iterator]();\n            var b = chunkB.modulesIterable[Symbol.iterator](); // eslint-disable-next-line no-constant-condition\n\n            while (true) {\n              var aItem = a.next();\n              var bItem = b.next();\n              if (aItem.done && bItem.done) return 0;\n              if (aItem.done) return -1;\n              if (bItem.done) return 1;\n              var aModuleId = aItem.value.id;\n              var bModuleId = bItem.value.id;\n              if (aModuleId < bModuleId) return -1;\n              if (aModuleId > bModuleId) return 1;\n            }\n          });\n        });\n      });\n    }\n  }]);\n\n  return NaturalChunkOrderPlugin;\n}();\n\nmodule.exports = NaturalChunkOrderPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/optimize/NaturalChunkOrderPlugin.js"],"names":["NaturalChunkOrderPlugin","compiler","hooks","compilation","tap","optimizeChunkOrder","chunks","sort","chunkA","chunkB","a","modulesIterable","Symbol","iterator","b","aItem","next","bItem","done","aModuleId","value","id","bModuleId","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;IAEMA,uB;;;;;;;;AACL;AACD;AACA;AACA;AACC,mBAAMC,QAAN,EAAgB;AACfA,MAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CAA+B,yBAA/B,EAA0D,UAAAD,WAAW,EAAI;AACxEA,QAAAA,WAAW,CAACD,KAAZ,CAAkBG,kBAAlB,CAAqCD,GAArC,CACC,yBADD,EAEC,UAAAE,MAAM,EAAI;AACTA,UAAAA,MAAM,CAACC,IAAP,CAAY,UAACC,MAAD,EAASC,MAAT,EAAoB;AAC/B,gBAAMC,CAAC,GAAGF,MAAM,CAACG,eAAP,CAAuBC,MAAM,CAACC,QAA9B,GAAV;AACA,gBAAMC,CAAC,GAAGL,MAAM,CAACE,eAAP,CAAuBC,MAAM,CAACC,QAA9B,GAAV,CAF+B,CAG/B;;AACA,mBAAO,IAAP,EAAa;AACZ,kBAAME,KAAK,GAAGL,CAAC,CAACM,IAAF,EAAd;AACA,kBAAMC,KAAK,GAAGH,CAAC,CAACE,IAAF,EAAd;AACA,kBAAID,KAAK,CAACG,IAAN,IAAcD,KAAK,CAACC,IAAxB,EAA8B,OAAO,CAAP;AAC9B,kBAAIH,KAAK,CAACG,IAAV,EAAgB,OAAO,CAAC,CAAR;AAChB,kBAAID,KAAK,CAACC,IAAV,EAAgB,OAAO,CAAP;AAChB,kBAAMC,SAAS,GAAGJ,KAAK,CAACK,KAAN,CAAYC,EAA9B;AACA,kBAAMC,SAAS,GAAGL,KAAK,CAACG,KAAN,CAAYC,EAA9B;AACA,kBAAIF,SAAS,GAAGG,SAAhB,EAA2B,OAAO,CAAC,CAAR;AAC3B,kBAAIH,SAAS,GAAGG,SAAhB,EAA2B,OAAO,CAAP;AAC3B;AACD,WAfD;AAgBA,SAnBF;AAqBA,OAtBD;AAuBA;;;;;;AAGFC,MAAM,CAACC,OAAP,GAAiBxB,uBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass NaturalChunkOrderPlugin {\n\t/**\n\t * @param {Compiler} compiler webpack compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"NaturalChunkOrderPlugin\", compilation => {\n\t\t\tcompilation.hooks.optimizeChunkOrder.tap(\n\t\t\t\t\"NaturalChunkOrderPlugin\",\n\t\t\t\tchunks => {\n\t\t\t\t\tchunks.sort((chunkA, chunkB) => {\n\t\t\t\t\t\tconst a = chunkA.modulesIterable[Symbol.iterator]();\n\t\t\t\t\t\tconst b = chunkB.modulesIterable[Symbol.iterator]();\n\t\t\t\t\t\t// eslint-disable-next-line no-constant-condition\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\tconst aItem = a.next();\n\t\t\t\t\t\t\tconst bItem = b.next();\n\t\t\t\t\t\t\tif (aItem.done && bItem.done) return 0;\n\t\t\t\t\t\t\tif (aItem.done) return -1;\n\t\t\t\t\t\t\tif (bItem.done) return 1;\n\t\t\t\t\t\t\tconst aModuleId = aItem.value.id;\n\t\t\t\t\t\t\tconst bModuleId = bItem.value.id;\n\t\t\t\t\t\t\tif (aModuleId < bModuleId) return -1;\n\t\t\t\t\t\t\tif (aModuleId > bModuleId) return 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = NaturalChunkOrderPlugin;\n"]},"metadata":{},"sourceType":"script"}