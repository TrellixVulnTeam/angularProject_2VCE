{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction path() {\n  var data = _interopRequireWildcard(require('path'));\n\n  path = function path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _mergeStream() {\n  var data = _interopRequireDefault(require('merge-stream'));\n\n  _mergeStream = function _mergeStream() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _types() {\n  var data = require('../types');\n\n  _types = function _types() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== 'function') return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== 'object' && typeof obj !== 'function') {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // How long to wait for the child process to terminate\n// after CHILD_MESSAGE_END before sending force exiting.\n\n\nvar FORCE_EXIT_DELAY = 500;\n/* istanbul ignore next */\n\nvar emptyMethod = function emptyMethod() {};\n\nvar BaseWorkerPool = /*#__PURE__*/function () {\n  function BaseWorkerPool(workerPath, options) {\n    _classCallCheck(this, BaseWorkerPool);\n\n    _defineProperty(this, '_stderr', void 0);\n\n    _defineProperty(this, '_stdout', void 0);\n\n    _defineProperty(this, '_options', void 0);\n\n    _defineProperty(this, '_workers', void 0);\n\n    this._options = options;\n    this._workers = new Array(options.numWorkers);\n\n    if (!path().isAbsolute(workerPath)) {\n      workerPath = require.resolve(workerPath);\n    }\n\n    var stdout = (0, _mergeStream().default)();\n    var stderr = (0, _mergeStream().default)();\n    var forkOptions = options.forkOptions,\n        maxRetries = options.maxRetries,\n        resourceLimits = options.resourceLimits,\n        setupArgs = options.setupArgs;\n\n    for (var i = 0; i < options.numWorkers; i++) {\n      var workerOptions = {\n        forkOptions: forkOptions,\n        maxRetries: maxRetries,\n        resourceLimits: resourceLimits,\n        setupArgs: setupArgs,\n        workerId: i,\n        workerPath: workerPath\n      };\n      var worker = this.createWorker(workerOptions);\n      var workerStdout = worker.getStdout();\n      var workerStderr = worker.getStderr();\n\n      if (workerStdout) {\n        stdout.add(workerStdout);\n      }\n\n      if (workerStderr) {\n        stderr.add(workerStderr);\n      }\n\n      this._workers[i] = worker;\n    }\n\n    this._stdout = stdout;\n    this._stderr = stderr;\n  }\n\n  _createClass(BaseWorkerPool, [{\n    key: \"getStderr\",\n    value: function getStderr() {\n      return this._stderr;\n    }\n  }, {\n    key: \"getStdout\",\n    value: function getStdout() {\n      return this._stdout;\n    }\n  }, {\n    key: \"getWorkers\",\n    value: function getWorkers() {\n      return this._workers;\n    }\n  }, {\n    key: \"getWorkerById\",\n    value: function getWorkerById(workerId) {\n      return this._workers[workerId];\n    }\n  }, {\n    key: \"createWorker\",\n    value: function createWorker(_workerOptions) {\n      throw Error('Missing method createWorker in WorkerPool');\n    }\n  }, {\n    key: \"end\",\n    value: function () {\n      var _end = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var workerExitPromises, workerExits;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // We do not cache the request object here. If so, it would only be only\n                // processed by one of the workers, and we want them all to close.\n                workerExitPromises = this._workers.map( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(worker) {\n                    var forceExited, forceExitTimeout;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            worker.send([_types().CHILD_MESSAGE_END, false], emptyMethod, emptyMethod, emptyMethod); // Schedule a force exit in case worker fails to exit gracefully so\n                            // await worker.waitForExit() never takes longer than FORCE_EXIT_DELAY\n\n                            forceExited = false;\n                            forceExitTimeout = setTimeout(function () {\n                              worker.forceExit();\n                              forceExited = true;\n                            }, FORCE_EXIT_DELAY);\n                            _context.next = 5;\n                            return worker.waitForExit();\n\n                          case 5:\n                            // Worker ideally exited gracefully, don't send force exit then\n                            clearTimeout(forceExitTimeout);\n                            return _context.abrupt(\"return\", forceExited);\n\n                          case 7:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n                _context2.next = 3;\n                return Promise.all(workerExitPromises);\n\n              case 3:\n                workerExits = _context2.sent;\n                return _context2.abrupt(\"return\", workerExits.reduce(function (result, forceExited) {\n                  return {\n                    forceExited: result.forceExited || forceExited\n                  };\n                }, {\n                  forceExited: false\n                }));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function end() {\n        return _end.apply(this, arguments);\n      }\n\n      return end;\n    }()\n  }]);\n\n  return BaseWorkerPool;\n}();\n\nexports.default = BaseWorkerPool;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/jest-worker/build/base/BaseWorkerPool.js"],"names":["Object","defineProperty","exports","value","default","path","data","_interopRequireWildcard","require","_mergeStream","_interopRequireDefault","_types","obj","__esModule","_getRequireWildcardCache","WeakMap","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_defineProperty","enumerable","configurable","writable","FORCE_EXIT_DELAY","emptyMethod","BaseWorkerPool","workerPath","options","_options","_workers","Array","numWorkers","isAbsolute","resolve","stdout","stderr","forkOptions","maxRetries","resourceLimits","setupArgs","i","workerOptions","workerId","worker","createWorker","workerStdout","getStdout","workerStderr","getStderr","add","_stdout","_stderr","_workerOptions","Error","workerExitPromises","map","send","CHILD_MESSAGE_END","forceExited","forceExitTimeout","setTimeout","forceExit","waitForExit","clearTimeout","Promise","all","workerExits","reduce","result"],"mappings":"AAAA;;;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,SAASC,IAAT,GAAgB;AACd,MAAMC,IAAI,GAAGC,uBAAuB,CAACC,OAAO,CAAC,MAAD,CAAR,CAApC;;AAEAH,EAAAA,IAAI,GAAG,gBAAY;AACjB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASG,YAAT,GAAwB;AACtB,MAAMH,IAAI,GAAGI,sBAAsB,CAACF,OAAO,CAAC,cAAD,CAAR,CAAnC;;AAEAC,EAAAA,YAAY,GAAG,wBAAY;AACzB,WAAOH,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASK,MAAT,GAAkB;AAChB,MAAML,IAAI,GAAGE,OAAO,CAAC,UAAD,CAApB;;AAEAG,EAAAA,MAAM,GAAG,kBAAY;AACnB,WAAOL,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASI,sBAAT,CAAgCE,GAAhC,EAAqC;AACnC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAACR,IAAAA,OAAO,EAAEQ;AAAV,GAArC;AACD;;AAED,SAASE,wBAAT,GAAoC;AAClC,MAAI,OAAOC,OAAP,KAAmB,UAAvB,EAAmC,OAAO,IAAP;AACnC,MAAIC,KAAK,GAAG,IAAID,OAAJ,EAAZ;;AACAD,EAAAA,wBAAwB,GAAG,oCAAY;AACrC,WAAOE,KAAP;AACD,GAFD;;AAGA,SAAOA,KAAP;AACD;;AAED,SAAST,uBAAT,CAAiCK,GAAjC,EAAsC;AACpC,MAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B;AACzB,WAAOD,GAAP;AACD;;AACD,MAAIA,GAAG,KAAK,IAAR,IAAiB,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAA/D,EAA4E;AAC1E,WAAO;AAACR,MAAAA,OAAO,EAAEQ;AAAV,KAAP;AACD;;AACD,MAAII,KAAK,GAAGF,wBAAwB,EAApC;;AACA,MAAIE,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUL,GAAV,CAAb,EAA6B;AAC3B,WAAOI,KAAK,CAACE,GAAN,CAAUN,GAAV,CAAP;AACD;;AACD,MAAIO,MAAM,GAAG,EAAb;AACA,MAAIC,qBAAqB,GACvBpB,MAAM,CAACC,cAAP,IAAyBD,MAAM,CAACqB,wBADlC;;AAEA,OAAK,IAAIC,GAAT,IAAgBV,GAAhB,EAAqB;AACnB,QAAIZ,MAAM,CAACuB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCb,GAArC,EAA0CU,GAA1C,CAAJ,EAAoD;AAClD,UAAII,IAAI,GAAGN,qBAAqB,GAC5BpB,MAAM,CAACqB,wBAAP,CAAgCT,GAAhC,EAAqCU,GAArC,CAD4B,GAE5B,IAFJ;;AAGA,UAAII,IAAI,KAAKA,IAAI,CAACR,GAAL,IAAYQ,IAAI,CAACC,GAAtB,CAAR,EAAoC;AAClC3B,QAAAA,MAAM,CAACC,cAAP,CAAsBkB,MAAtB,EAA8BG,GAA9B,EAAmCI,IAAnC;AACD,OAFD,MAEO;AACLP,QAAAA,MAAM,CAACG,GAAD,CAAN,GAAcV,GAAG,CAACU,GAAD,CAAjB;AACD;AACF;AACF;;AACDH,EAAAA,MAAM,CAACf,OAAP,GAAiBQ,GAAjB;;AACA,MAAII,KAAJ,EAAW;AACTA,IAAAA,KAAK,CAACW,GAAN,CAAUf,GAAV,EAAeO,MAAf;AACD;;AACD,SAAOA,MAAP;AACD;;AAED,SAASS,eAAT,CAAyBhB,GAAzB,EAA8BU,GAA9B,EAAmCnB,KAAnC,EAA0C;AACxC,MAAImB,GAAG,IAAIV,GAAX,EAAgB;AACdZ,IAAAA,MAAM,CAACC,cAAP,CAAsBW,GAAtB,EAA2BU,GAA3B,EAAgC;AAC9BnB,MAAAA,KAAK,EAAEA,KADuB;AAE9B0B,MAAAA,UAAU,EAAE,IAFkB;AAG9BC,MAAAA,YAAY,EAAE,IAHgB;AAI9BC,MAAAA,QAAQ,EAAE;AAJoB,KAAhC;AAMD,GAPD,MAOO;AACLnB,IAAAA,GAAG,CAACU,GAAD,CAAH,GAAWnB,KAAX;AACD;;AACD,SAAOS,GAAP;AACD,C,CAED;AACA;;;AACA,IAAMoB,gBAAgB,GAAG,GAAzB;AACA;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM,CAAE,CAA5B;;IAEMC,c;AACJ,0BAAYC,UAAZ,EAAwBC,OAAxB,EAAiC;AAAA;;AAC/BR,IAAAA,eAAe,CAAC,IAAD,EAAO,SAAP,EAAkB,KAAK,CAAvB,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,SAAP,EAAkB,KAAK,CAAvB,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,KAAK,CAAxB,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,KAAK,CAAxB,CAAf;;AAEA,SAAKS,QAAL,GAAgBD,OAAhB;AACA,SAAKE,QAAL,GAAgB,IAAIC,KAAJ,CAAUH,OAAO,CAACI,UAAlB,CAAhB;;AAEA,QAAI,CAACnC,IAAI,GAAGoC,UAAP,CAAkBN,UAAlB,CAAL,EAAoC;AAClCA,MAAAA,UAAU,GAAG3B,OAAO,CAACkC,OAAR,CAAgBP,UAAhB,CAAb;AACD;;AAED,QAAMQ,MAAM,GAAG,CAAC,GAAGlC,YAAY,GAAGL,OAAnB,GAAf;AACA,QAAMwC,MAAM,GAAG,CAAC,GAAGnC,YAAY,GAAGL,OAAnB,GAAf;AACA,QAAOyC,WAAP,GAA6DT,OAA7D,CAAOS,WAAP;AAAA,QAAoBC,UAApB,GAA6DV,OAA7D,CAAoBU,UAApB;AAAA,QAAgCC,cAAhC,GAA6DX,OAA7D,CAAgCW,cAAhC;AAAA,QAAgDC,SAAhD,GAA6DZ,OAA7D,CAAgDY,SAAhD;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,OAAO,CAACI,UAA5B,EAAwCS,CAAC,EAAzC,EAA6C;AAC3C,UAAMC,aAAa,GAAG;AACpBL,QAAAA,WAAW,EAAXA,WADoB;AAEpBC,QAAAA,UAAU,EAAVA,UAFoB;AAGpBC,QAAAA,cAAc,EAAdA,cAHoB;AAIpBC,QAAAA,SAAS,EAATA,SAJoB;AAKpBG,QAAAA,QAAQ,EAAEF,CALU;AAMpBd,QAAAA,UAAU,EAAVA;AANoB,OAAtB;AAQA,UAAMiB,MAAM,GAAG,KAAKC,YAAL,CAAkBH,aAAlB,CAAf;AACA,UAAMI,YAAY,GAAGF,MAAM,CAACG,SAAP,EAArB;AACA,UAAMC,YAAY,GAAGJ,MAAM,CAACK,SAAP,EAArB;;AAEA,UAAIH,YAAJ,EAAkB;AAChBX,QAAAA,MAAM,CAACe,GAAP,CAAWJ,YAAX;AACD;;AAED,UAAIE,YAAJ,EAAkB;AAChBZ,QAAAA,MAAM,CAACc,GAAP,CAAWF,YAAX;AACD;;AAED,WAAKlB,QAAL,CAAcW,CAAd,IAAmBG,MAAnB;AACD;;AAED,SAAKO,OAAL,GAAehB,MAAf;AACA,SAAKiB,OAAL,GAAehB,MAAf;AACD;;;;WAED,qBAAY;AACV,aAAO,KAAKgB,OAAZ;AACD;;;WAED,qBAAY;AACV,aAAO,KAAKD,OAAZ;AACD;;;WAED,sBAAa;AACX,aAAO,KAAKrB,QAAZ;AACD;;;WAED,uBAAca,QAAd,EAAwB;AACtB,aAAO,KAAKb,QAAL,CAAca,QAAd,CAAP;AACD;;;WAED,sBAAaU,cAAb,EAA6B;AAC3B,YAAMC,KAAK,CAAC,2CAAD,CAAX;AACD;;;;0EAED;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AACA;AACMC,gBAAAA,kBAHR,GAG6B,KAAKzB,QAAL,CAAc0B,GAAd;AAAA,sFAAkB,iBAAMZ,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3CA,4BAAAA,MAAM,CAACa,IAAP,CACE,CAACtD,MAAM,GAAGuD,iBAAV,EAA6B,KAA7B,CADF,EAEEjC,WAFF,EAGEA,WAHF,EAIEA,WAJF,EAD2C,CAMxC;AACH;;AAEIkC,4BAAAA,WATuC,GASzB,KATyB;AAUrCC,4BAAAA,gBAVqC,GAUlBC,UAAU,CAAC,YAAM;AACxCjB,8BAAAA,MAAM,CAACkB,SAAP;AACAH,8BAAAA,WAAW,GAAG,IAAd;AACD,6BAHkC,EAGhCnC,gBAHgC,CAVQ;AAAA;AAAA,mCAcrCoB,MAAM,CAACmB,WAAP,EAdqC;;AAAA;AAcf;AAE5BC,4BAAAA,YAAY,CAACJ,gBAAD,CAAZ;AAhB2C,6DAiBpCD,WAjBoC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAlB;;AAAA;AAAA;AAAA;AAAA,oBAH7B;AAAA;AAAA,uBAuB4BM,OAAO,CAACC,GAAR,CAAYX,kBAAZ,CAvB5B;;AAAA;AAuBQY,gBAAAA,WAvBR;AAAA,kDAwBSA,WAAW,CAACC,MAAZ,CACL,UAACC,MAAD,EAASV,WAAT;AAAA,yBAA0B;AACxBA,oBAAAA,WAAW,EAAEU,MAAM,CAACV,WAAP,IAAsBA;AADX,mBAA1B;AAAA,iBADK,EAIL;AACEA,kBAAAA,WAAW,EAAE;AADf,iBAJK,CAxBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;AAmCFjE,OAAO,CAACE,OAAR,GAAkB8B,cAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n\n  path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _mergeStream() {\n  const data = _interopRequireDefault(require('merge-stream'));\n\n  _mergeStream = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _types() {\n  const data = require('../types');\n\n  _types = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== 'function') return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// How long to wait for the child process to terminate\n// after CHILD_MESSAGE_END before sending force exiting.\nconst FORCE_EXIT_DELAY = 500;\n/* istanbul ignore next */\n\nconst emptyMethod = () => {};\n\nclass BaseWorkerPool {\n  constructor(workerPath, options) {\n    _defineProperty(this, '_stderr', void 0);\n\n    _defineProperty(this, '_stdout', void 0);\n\n    _defineProperty(this, '_options', void 0);\n\n    _defineProperty(this, '_workers', void 0);\n\n    this._options = options;\n    this._workers = new Array(options.numWorkers);\n\n    if (!path().isAbsolute(workerPath)) {\n      workerPath = require.resolve(workerPath);\n    }\n\n    const stdout = (0, _mergeStream().default)();\n    const stderr = (0, _mergeStream().default)();\n    const {forkOptions, maxRetries, resourceLimits, setupArgs} = options;\n\n    for (let i = 0; i < options.numWorkers; i++) {\n      const workerOptions = {\n        forkOptions,\n        maxRetries,\n        resourceLimits,\n        setupArgs,\n        workerId: i,\n        workerPath\n      };\n      const worker = this.createWorker(workerOptions);\n      const workerStdout = worker.getStdout();\n      const workerStderr = worker.getStderr();\n\n      if (workerStdout) {\n        stdout.add(workerStdout);\n      }\n\n      if (workerStderr) {\n        stderr.add(workerStderr);\n      }\n\n      this._workers[i] = worker;\n    }\n\n    this._stdout = stdout;\n    this._stderr = stderr;\n  }\n\n  getStderr() {\n    return this._stderr;\n  }\n\n  getStdout() {\n    return this._stdout;\n  }\n\n  getWorkers() {\n    return this._workers;\n  }\n\n  getWorkerById(workerId) {\n    return this._workers[workerId];\n  }\n\n  createWorker(_workerOptions) {\n    throw Error('Missing method createWorker in WorkerPool');\n  }\n\n  async end() {\n    // We do not cache the request object here. If so, it would only be only\n    // processed by one of the workers, and we want them all to close.\n    const workerExitPromises = this._workers.map(async worker => {\n      worker.send(\n        [_types().CHILD_MESSAGE_END, false],\n        emptyMethod,\n        emptyMethod,\n        emptyMethod\n      ); // Schedule a force exit in case worker fails to exit gracefully so\n      // await worker.waitForExit() never takes longer than FORCE_EXIT_DELAY\n\n      let forceExited = false;\n      const forceExitTimeout = setTimeout(() => {\n        worker.forceExit();\n        forceExited = true;\n      }, FORCE_EXIT_DELAY);\n      await worker.waitForExit(); // Worker ideally exited gracefully, don't send force exit then\n\n      clearTimeout(forceExitTimeout);\n      return forceExited;\n    });\n\n    const workerExits = await Promise.all(workerExitPromises);\n    return workerExits.reduce(\n      (result, forceExited) => ({\n        forceExited: result.forceExited || forceExited\n      }),\n      {\n        forceExited: false\n      }\n    );\n  }\n}\n\nexports.default = BaseWorkerPool;\n"]},"metadata":{},"sourceType":"script"}