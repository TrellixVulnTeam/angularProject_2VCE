{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar path = require(\"path\");\n\nvar asyncLib = require(\"neo-async\");\n\nvar SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\n\nvar LibManifestPlugin = /*#__PURE__*/function () {\n  function LibManifestPlugin(options) {\n    _classCallCheck(this, LibManifestPlugin);\n\n    this.options = options;\n  }\n\n  _createClass(LibManifestPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.emit.tapAsync(\"LibManifestPlugin\", function (compilation, callback) {\n        asyncLib.forEach(compilation.chunks, function (chunk, callback) {\n          if (!chunk.isOnlyInitial()) {\n            callback();\n            return;\n          }\n\n          var targetPath = compilation.getPath(_this.options.path, {\n            hash: compilation.hash,\n            chunk: chunk\n          });\n          var name = _this.options.name && compilation.getPath(_this.options.name, {\n            hash: compilation.hash,\n            chunk: chunk\n          });\n          var manifest = {\n            name: name,\n            type: _this.options.type,\n            content: Array.from(chunk.modulesIterable, function (module) {\n              if (_this.options.entryOnly && !module.reasons.some(function (r) {\n                return r.dependency instanceof SingleEntryDependency;\n              })) {\n                return;\n              }\n\n              if (module.libIdent) {\n                var ident = module.libIdent({\n                  context: _this.options.context || compiler.options.context\n                });\n\n                if (ident) {\n                  return {\n                    ident: ident,\n                    data: {\n                      id: module.id,\n                      buildMeta: module.buildMeta\n                    }\n                  };\n                }\n              }\n            }).filter(Boolean).reduce(function (obj, item) {\n              obj[item.ident] = item.data;\n              return obj;\n            }, Object.create(null))\n          }; // Apply formatting to content if format flag is true;\n\n          var manifestContent = _this.options.format ? JSON.stringify(manifest, null, 2) : JSON.stringify(manifest);\n          var content = Buffer.from(manifestContent, \"utf8\");\n          compiler.outputFileSystem.mkdirp(path.dirname(targetPath), function (err) {\n            if (err) return callback(err);\n            compiler.outputFileSystem.writeFile(targetPath, content, callback);\n          });\n        }, callback);\n      });\n    }\n  }]);\n\n  return LibManifestPlugin;\n}();\n\nmodule.exports = LibManifestPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/LibManifestPlugin.js"],"names":["path","require","asyncLib","SingleEntryDependency","LibManifestPlugin","options","compiler","hooks","emit","tapAsync","compilation","callback","forEach","chunks","chunk","isOnlyInitial","targetPath","getPath","hash","name","manifest","type","content","Array","from","modulesIterable","module","entryOnly","reasons","some","r","dependency","libIdent","ident","context","data","id","buildMeta","filter","Boolean","reduce","obj","item","Object","create","manifestContent","format","JSON","stringify","Buffer","outputFileSystem","mkdirp","dirname","err","writeFile","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst asyncLib = require(\"neo-async\");\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\n\nclass LibManifestPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.emit.tapAsync(\n\t\t\t\"LibManifestPlugin\",\n\t\t\t(compilation, callback) => {\n\t\t\t\tasyncLib.forEach(\n\t\t\t\t\tcompilation.chunks,\n\t\t\t\t\t(chunk, callback) => {\n\t\t\t\t\t\tif (!chunk.isOnlyInitial()) {\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst targetPath = compilation.getPath(this.options.path, {\n\t\t\t\t\t\t\thash: compilation.hash,\n\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst name =\n\t\t\t\t\t\t\tthis.options.name &&\n\t\t\t\t\t\t\tcompilation.getPath(this.options.name, {\n\t\t\t\t\t\t\t\thash: compilation.hash,\n\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tconst manifest = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\ttype: this.options.type,\n\t\t\t\t\t\t\tcontent: Array.from(chunk.modulesIterable, module => {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tthis.options.entryOnly &&\n\t\t\t\t\t\t\t\t\t!module.reasons.some(\n\t\t\t\t\t\t\t\t\t\tr => r.dependency instanceof SingleEntryDependency\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (module.libIdent) {\n\t\t\t\t\t\t\t\t\tconst ident = module.libIdent({\n\t\t\t\t\t\t\t\t\t\tcontext: this.options.context || compiler.options.context\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (ident) {\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tident,\n\t\t\t\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\t\t\t\tid: module.id,\n\t\t\t\t\t\t\t\t\t\t\t\tbuildMeta: module.buildMeta\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t\t\t\t.reduce((obj, item) => {\n\t\t\t\t\t\t\t\t\tobj[item.ident] = item.data;\n\t\t\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t\t\t}, Object.create(null))\n\t\t\t\t\t\t};\n\t\t\t\t\t\t// Apply formatting to content if format flag is true;\n\t\t\t\t\t\tconst manifestContent = this.options.format\n\t\t\t\t\t\t\t? JSON.stringify(manifest, null, 2)\n\t\t\t\t\t\t\t: JSON.stringify(manifest);\n\t\t\t\t\t\tconst content = Buffer.from(manifestContent, \"utf8\");\n\t\t\t\t\t\tcompiler.outputFileSystem.mkdirp(path.dirname(targetPath), err => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tcompiler.outputFileSystem.writeFile(\n\t\t\t\t\t\t\t\ttargetPath,\n\t\t\t\t\t\t\t\tcontent,\n\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = LibManifestPlugin;\n"]},"metadata":{},"sourceType":"script"}