{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler-cli/src/ngtsc/diagnostics/src/error_code\", [\"require\", \"exports\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ngErrorCode = exports.COMPILER_ERRORS_WITH_GUIDES = exports.ERROR_DETAILS_PAGE_BASE_URL = exports.ErrorCode = void 0;\n  /**\n   * @publicApi\n   */\n\n  var ErrorCode;\n\n  (function (ErrorCode) {\n    ErrorCode[ErrorCode[\"DECORATOR_ARG_NOT_LITERAL\"] = 1001] = \"DECORATOR_ARG_NOT_LITERAL\";\n    ErrorCode[ErrorCode[\"DECORATOR_ARITY_WRONG\"] = 1002] = \"DECORATOR_ARITY_WRONG\";\n    ErrorCode[ErrorCode[\"DECORATOR_NOT_CALLED\"] = 1003] = \"DECORATOR_NOT_CALLED\";\n    ErrorCode[ErrorCode[\"DECORATOR_ON_ANONYMOUS_CLASS\"] = 1004] = \"DECORATOR_ON_ANONYMOUS_CLASS\";\n    ErrorCode[ErrorCode[\"DECORATOR_UNEXPECTED\"] = 1005] = \"DECORATOR_UNEXPECTED\";\n    /**\n     * This error code indicates that there are incompatible decorators on a type or a class field.\n     */\n\n    ErrorCode[ErrorCode[\"DECORATOR_COLLISION\"] = 1006] = \"DECORATOR_COLLISION\";\n    ErrorCode[ErrorCode[\"VALUE_HAS_WRONG_TYPE\"] = 1010] = \"VALUE_HAS_WRONG_TYPE\";\n    ErrorCode[ErrorCode[\"VALUE_NOT_LITERAL\"] = 1011] = \"VALUE_NOT_LITERAL\";\n    ErrorCode[ErrorCode[\"COMPONENT_MISSING_TEMPLATE\"] = 2001] = \"COMPONENT_MISSING_TEMPLATE\";\n    ErrorCode[ErrorCode[\"PIPE_MISSING_NAME\"] = 2002] = \"PIPE_MISSING_NAME\";\n    ErrorCode[ErrorCode[\"PARAM_MISSING_TOKEN\"] = 2003] = \"PARAM_MISSING_TOKEN\";\n    ErrorCode[ErrorCode[\"DIRECTIVE_MISSING_SELECTOR\"] = 2004] = \"DIRECTIVE_MISSING_SELECTOR\";\n    /** Raised when an undecorated class is passed in as a provider to a module or a directive. */\n\n    ErrorCode[ErrorCode[\"UNDECORATED_PROVIDER\"] = 2005] = \"UNDECORATED_PROVIDER\";\n    /**\n     * Raised when a Directive inherits its constructor from a base class without an Angular\n     * decorator.\n     */\n\n    ErrorCode[ErrorCode[\"DIRECTIVE_INHERITS_UNDECORATED_CTOR\"] = 2006] = \"DIRECTIVE_INHERITS_UNDECORATED_CTOR\";\n    /**\n     * Raised when an undecorated class that is using Angular features\n     * has been discovered.\n     */\n\n    ErrorCode[ErrorCode[\"UNDECORATED_CLASS_USING_ANGULAR_FEATURES\"] = 2007] = \"UNDECORATED_CLASS_USING_ANGULAR_FEATURES\";\n    /**\n     * Raised when an component cannot resolve an external resource, such as a template or a style\n     * sheet.\n     */\n\n    ErrorCode[ErrorCode[\"COMPONENT_RESOURCE_NOT_FOUND\"] = 2008] = \"COMPONENT_RESOURCE_NOT_FOUND\";\n    ErrorCode[ErrorCode[\"SYMBOL_NOT_EXPORTED\"] = 3001] = \"SYMBOL_NOT_EXPORTED\";\n    ErrorCode[ErrorCode[\"SYMBOL_EXPORTED_UNDER_DIFFERENT_NAME\"] = 3002] = \"SYMBOL_EXPORTED_UNDER_DIFFERENT_NAME\";\n    /**\n     * Raised when a relationship between directives and/or pipes would cause a cyclic import to be\n     * created that cannot be handled, such as in partial compilation mode.\n     */\n\n    ErrorCode[ErrorCode[\"IMPORT_CYCLE_DETECTED\"] = 3003] = \"IMPORT_CYCLE_DETECTED\";\n    ErrorCode[ErrorCode[\"CONFIG_FLAT_MODULE_NO_INDEX\"] = 4001] = \"CONFIG_FLAT_MODULE_NO_INDEX\";\n    ErrorCode[ErrorCode[\"CONFIG_STRICT_TEMPLATES_IMPLIES_FULL_TEMPLATE_TYPECHECK\"] = 4002] = \"CONFIG_STRICT_TEMPLATES_IMPLIES_FULL_TEMPLATE_TYPECHECK\";\n    /**\n     * Raised when a host expression has a parse error, such as a host listener or host binding\n     * expression containing a pipe.\n     */\n\n    ErrorCode[ErrorCode[\"HOST_BINDING_PARSE_ERROR\"] = 5001] = \"HOST_BINDING_PARSE_ERROR\";\n    /**\n     * Raised when the compiler cannot parse a component's template.\n     */\n\n    ErrorCode[ErrorCode[\"TEMPLATE_PARSE_ERROR\"] = 5002] = \"TEMPLATE_PARSE_ERROR\";\n    /**\n     * Raised when an NgModule contains an invalid reference in `declarations`.\n     */\n\n    ErrorCode[ErrorCode[\"NGMODULE_INVALID_DECLARATION\"] = 6001] = \"NGMODULE_INVALID_DECLARATION\";\n    /**\n     * Raised when an NgModule contains an invalid type in `imports`.\n     */\n\n    ErrorCode[ErrorCode[\"NGMODULE_INVALID_IMPORT\"] = 6002] = \"NGMODULE_INVALID_IMPORT\";\n    /**\n     * Raised when an NgModule contains an invalid type in `exports`.\n     */\n\n    ErrorCode[ErrorCode[\"NGMODULE_INVALID_EXPORT\"] = 6003] = \"NGMODULE_INVALID_EXPORT\";\n    /**\n     * Raised when an NgModule contains a type in `exports` which is neither in `declarations` nor\n     * otherwise imported.\n     */\n\n    ErrorCode[ErrorCode[\"NGMODULE_INVALID_REEXPORT\"] = 6004] = \"NGMODULE_INVALID_REEXPORT\";\n    /**\n     * Raised when a `ModuleWithProviders` with a missing\n     * generic type argument is passed into an `NgModule`.\n     */\n\n    ErrorCode[ErrorCode[\"NGMODULE_MODULE_WITH_PROVIDERS_MISSING_GENERIC\"] = 6005] = \"NGMODULE_MODULE_WITH_PROVIDERS_MISSING_GENERIC\";\n    /**\n     * Raised when an NgModule exports multiple directives/pipes of the same name and the compiler\n     * attempts to generate private re-exports within the NgModule file.\n     */\n\n    ErrorCode[ErrorCode[\"NGMODULE_REEXPORT_NAME_COLLISION\"] = 6006] = \"NGMODULE_REEXPORT_NAME_COLLISION\";\n    /**\n     * Raised when a directive/pipe is part of the declarations of two or more NgModules.\n     */\n\n    ErrorCode[ErrorCode[\"NGMODULE_DECLARATION_NOT_UNIQUE\"] = 6007] = \"NGMODULE_DECLARATION_NOT_UNIQUE\";\n    /**\n     * Not actually raised by the compiler, but reserved for documentation of a View Engine error when\n     * a View Engine build depends on an Ivy-compiled NgModule.\n     */\n\n    ErrorCode[ErrorCode[\"NGMODULE_VE_DEPENDENCY_ON_IVY_LIB\"] = 6999] = \"NGMODULE_VE_DEPENDENCY_ON_IVY_LIB\";\n    /**\n     * An element name failed validation against the DOM schema.\n     */\n\n    ErrorCode[ErrorCode[\"SCHEMA_INVALID_ELEMENT\"] = 8001] = \"SCHEMA_INVALID_ELEMENT\";\n    /**\n     * An element's attribute name failed validation against the DOM schema.\n     */\n\n    ErrorCode[ErrorCode[\"SCHEMA_INVALID_ATTRIBUTE\"] = 8002] = \"SCHEMA_INVALID_ATTRIBUTE\";\n    /**\n     * No matching directive was found for a `#ref=\"target\"` expression.\n     */\n\n    ErrorCode[ErrorCode[\"MISSING_REFERENCE_TARGET\"] = 8003] = \"MISSING_REFERENCE_TARGET\";\n    /**\n     * No matching pipe was found for a\n     */\n\n    ErrorCode[ErrorCode[\"MISSING_PIPE\"] = 8004] = \"MISSING_PIPE\";\n    /**\n     * The left-hand side of an assignment expression was a template variable. Effectively, the\n     * template looked like:\n     *\n     * ```\n     * <ng-template let-something>\n     *   <button (click)=\"something = ...\">...</button>\n     * </ng-template>\n     * ```\n     *\n     * Template variables are read-only.\n     */\n\n    ErrorCode[ErrorCode[\"WRITE_TO_READ_ONLY_VARIABLE\"] = 8005] = \"WRITE_TO_READ_ONLY_VARIABLE\";\n    /**\n     * A template variable was declared twice. For example:\n     *\n     * ```html\n     * <div *ngFor=\"let i of items; let i = index\">\n     * </div>\n     * ```\n     */\n\n    ErrorCode[ErrorCode[\"DUPLICATE_VARIABLE_DECLARATION\"] = 8006] = \"DUPLICATE_VARIABLE_DECLARATION\";\n    /**\n     * The template type-checking engine would need to generate an inline type check block for a\n     * component, but the current type-checking environment doesn't support it.\n     */\n\n    ErrorCode[ErrorCode[\"INLINE_TCB_REQUIRED\"] = 8900] = \"INLINE_TCB_REQUIRED\";\n    /**\n     * The template type-checking engine would need to generate an inline type constructor for a\n     * directive or component, but the current type-checking environment doesn't support it.\n     */\n\n    ErrorCode[ErrorCode[\"INLINE_TYPE_CTOR_REQUIRED\"] = 8901] = \"INLINE_TYPE_CTOR_REQUIRED\";\n    /**\n     * An injectable already has a `Éµprov` property.\n     */\n\n    ErrorCode[ErrorCode[\"INJECTABLE_DUPLICATE_PROV\"] = 9001] = \"INJECTABLE_DUPLICATE_PROV\"; // 10XXX error codes are reserved for diagnostics with categories other than\n    // `ts.DiagnosticCategory.Error`. These diagnostics are generated by the compiler when configured\n    // to do so by a tool such as the Language Service, or by the Language Service itself.\n\n    /**\n     * Suggest users to enable `strictTemplates` to make use of full capabilities\n     * provided by Angular language service.\n     */\n\n    ErrorCode[ErrorCode[\"SUGGEST_STRICT_TEMPLATES\"] = 10001] = \"SUGGEST_STRICT_TEMPLATES\";\n    /**\n     * Indicates that a particular structural directive provides advanced type narrowing\n     * functionality, but the current template type-checking configuration does not allow its usage in\n     * type inference.\n     */\n\n    ErrorCode[ErrorCode[\"SUGGEST_SUBOPTIMAL_TYPE_INFERENCE\"] = 10002] = \"SUGGEST_SUBOPTIMAL_TYPE_INFERENCE\";\n  })(ErrorCode = exports.ErrorCode || (exports.ErrorCode = {}));\n  /**\n   * @internal\n   * Base URL for the error details page.\n   * Keep this value in sync with a similar const in\n   * `packages/core/src/render3/error_code.ts`.\n   */\n\n\n  exports.ERROR_DETAILS_PAGE_BASE_URL = 'https://angular.io/errors';\n  /**\n   * @internal\n   * Contains a set of error messages that have detailed guides at angular.io.\n   * Full list of available error guides can be found at https://angular.io/errors\n   */\n\n  exports.COMPILER_ERRORS_WITH_GUIDES = new Set([ErrorCode.DECORATOR_ARG_NOT_LITERAL, ErrorCode.IMPORT_CYCLE_DETECTED, ErrorCode.PARAM_MISSING_TOKEN, ErrorCode.SCHEMA_INVALID_ELEMENT, ErrorCode.SCHEMA_INVALID_ATTRIBUTE, ErrorCode.MISSING_REFERENCE_TARGET]);\n  /**\n   * @internal\n   */\n\n  function ngErrorCode(code) {\n    return parseInt('-99' + code);\n  }\n\n  exports.ngErrorCode = ngErrorCode;\n});","map":{"version":3,"sources":["../../../../../../../../../packages/compiler-cli/src/ngtsc/diagnostics/src/error_code.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\nexport enum ErrorCode {\n  DECORATOR_ARG_NOT_LITERAL = 1001,\n  DECORATOR_ARITY_WRONG = 1002,\n  DECORATOR_NOT_CALLED = 1003,\n  DECORATOR_ON_ANONYMOUS_CLASS = 1004,\n  DECORATOR_UNEXPECTED = 1005,\n\n  /**\n   * This error code indicates that there are incompatible decorators on a type or a class field.\n   */\n  DECORATOR_COLLISION = 1006,\n\n  VALUE_HAS_WRONG_TYPE = 1010,\n  VALUE_NOT_LITERAL = 1011,\n\n  COMPONENT_MISSING_TEMPLATE = 2001,\n  PIPE_MISSING_NAME = 2002,\n  PARAM_MISSING_TOKEN = 2003,\n  DIRECTIVE_MISSING_SELECTOR = 2004,\n\n  /** Raised when an undecorated class is passed in as a provider to a module or a directive. */\n  UNDECORATED_PROVIDER = 2005,\n\n  /**\n   * Raised when a Directive inherits its constructor from a base class without an Angular\n   * decorator.\n   */\n  DIRECTIVE_INHERITS_UNDECORATED_CTOR = 2006,\n\n  /**\n   * Raised when an undecorated class that is using Angular features\n   * has been discovered.\n   */\n  UNDECORATED_CLASS_USING_ANGULAR_FEATURES = 2007,\n\n  /**\n   * Raised when an component cannot resolve an external resource, such as a template or a style\n   * sheet.\n   */\n  COMPONENT_RESOURCE_NOT_FOUND = 2008,\n\n  SYMBOL_NOT_EXPORTED = 3001,\n  SYMBOL_EXPORTED_UNDER_DIFFERENT_NAME = 3002,\n  /**\n   * Raised when a relationship between directives and/or pipes would cause a cyclic import to be\n   * created that cannot be handled, such as in partial compilation mode.\n   */\n  IMPORT_CYCLE_DETECTED = 3003,\n\n  CONFIG_FLAT_MODULE_NO_INDEX = 4001,\n  CONFIG_STRICT_TEMPLATES_IMPLIES_FULL_TEMPLATE_TYPECHECK = 4002,\n\n  /**\n   * Raised when a host expression has a parse error, such as a host listener or host binding\n   * expression containing a pipe.\n   */\n  HOST_BINDING_PARSE_ERROR = 5001,\n\n  /**\n   * Raised when the compiler cannot parse a component's template.\n   */\n  TEMPLATE_PARSE_ERROR = 5002,\n\n  /**\n   * Raised when an NgModule contains an invalid reference in `declarations`.\n   */\n  NGMODULE_INVALID_DECLARATION = 6001,\n\n  /**\n   * Raised when an NgModule contains an invalid type in `imports`.\n   */\n  NGMODULE_INVALID_IMPORT = 6002,\n\n  /**\n   * Raised when an NgModule contains an invalid type in `exports`.\n   */\n  NGMODULE_INVALID_EXPORT = 6003,\n\n  /**\n   * Raised when an NgModule contains a type in `exports` which is neither in `declarations` nor\n   * otherwise imported.\n   */\n  NGMODULE_INVALID_REEXPORT = 6004,\n\n  /**\n   * Raised when a `ModuleWithProviders` with a missing\n   * generic type argument is passed into an `NgModule`.\n   */\n  NGMODULE_MODULE_WITH_PROVIDERS_MISSING_GENERIC = 6005,\n\n  /**\n   * Raised when an NgModule exports multiple directives/pipes of the same name and the compiler\n   * attempts to generate private re-exports within the NgModule file.\n   */\n  NGMODULE_REEXPORT_NAME_COLLISION = 6006,\n\n  /**\n   * Raised when a directive/pipe is part of the declarations of two or more NgModules.\n   */\n  NGMODULE_DECLARATION_NOT_UNIQUE = 6007,\n\n  /**\n   * Not actually raised by the compiler, but reserved for documentation of a View Engine error when\n   * a View Engine build depends on an Ivy-compiled NgModule.\n   */\n  NGMODULE_VE_DEPENDENCY_ON_IVY_LIB = 6999,\n\n  /**\n   * An element name failed validation against the DOM schema.\n   */\n  SCHEMA_INVALID_ELEMENT = 8001,\n\n  /**\n   * An element's attribute name failed validation against the DOM schema.\n   */\n  SCHEMA_INVALID_ATTRIBUTE = 8002,\n\n  /**\n   * No matching directive was found for a `#ref=\"target\"` expression.\n   */\n  MISSING_REFERENCE_TARGET = 8003,\n\n  /**\n   * No matching pipe was found for a\n   */\n  MISSING_PIPE = 8004,\n\n  /**\n   * The left-hand side of an assignment expression was a template variable. Effectively, the\n   * template looked like:\n   *\n   * ```\n   * <ng-template let-something>\n   *   <button (click)=\"something = ...\">...</button>\n   * </ng-template>\n   * ```\n   *\n   * Template variables are read-only.\n   */\n  WRITE_TO_READ_ONLY_VARIABLE = 8005,\n\n  /**\n   * A template variable was declared twice. For example:\n   *\n   * ```html\n   * <div *ngFor=\"let i of items; let i = index\">\n   * </div>\n   * ```\n   */\n  DUPLICATE_VARIABLE_DECLARATION = 8006,\n\n  /**\n   * The template type-checking engine would need to generate an inline type check block for a\n   * component, but the current type-checking environment doesn't support it.\n   */\n  INLINE_TCB_REQUIRED = 8900,\n\n  /**\n   * The template type-checking engine would need to generate an inline type constructor for a\n   * directive or component, but the current type-checking environment doesn't support it.\n   */\n  INLINE_TYPE_CTOR_REQUIRED = 8901,\n\n  /**\n   * An injectable already has a `Éµprov` property.\n   */\n  INJECTABLE_DUPLICATE_PROV = 9001,\n\n  // 10XXX error codes are reserved for diagnostics with categories other than\n  // `ts.DiagnosticCategory.Error`. These diagnostics are generated by the compiler when configured\n  // to do so by a tool such as the Language Service, or by the Language Service itself.\n\n  /**\n   * Suggest users to enable `strictTemplates` to make use of full capabilities\n   * provided by Angular language service.\n   */\n  SUGGEST_STRICT_TEMPLATES = 10001,\n\n  /**\n   * Indicates that a particular structural directive provides advanced type narrowing\n   * functionality, but the current template type-checking configuration does not allow its usage in\n   * type inference.\n   */\n  SUGGEST_SUBOPTIMAL_TYPE_INFERENCE = 10002,\n}\n\n/**\n * @internal\n * Base URL for the error details page.\n * Keep this value in sync with a similar const in\n * `packages/core/src/render3/error_code.ts`.\n */\nexport const ERROR_DETAILS_PAGE_BASE_URL = 'https://angular.io/errors';\n\n/**\n * @internal\n * Contains a set of error messages that have detailed guides at angular.io.\n * Full list of available error guides can be found at https://angular.io/errors\n */\nexport const COMPILER_ERRORS_WITH_GUIDES = new Set([\n  ErrorCode.DECORATOR_ARG_NOT_LITERAL,\n  ErrorCode.IMPORT_CYCLE_DETECTED,\n  ErrorCode.PARAM_MISSING_TOKEN,\n  ErrorCode.SCHEMA_INVALID_ELEMENT,\n  ErrorCode.SCHEMA_INVALID_ATTRIBUTE,\n  ErrorCode.MISSING_REFERENCE_TARGET,\n]);\n\n/**\n * @internal\n */\nexport function ngErrorCode(code: ErrorCode): number {\n  return parseInt('-99' + code);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}