{"ast":null,"code":"\"use strict\";\n/**\n * @template T\n */\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Queue = /*#__PURE__*/function () {\n  /**\n   * @param {Iterable<T>=} items The initial elements.\n   */\n  function Queue(items) {\n    _classCallCheck(this, Queue);\n\n    /** @private @type {Set<T>} */\n    this.set = new Set(items);\n    /** @private @type {Iterator<T>} */\n\n    this.iterator = this.set[Symbol.iterator]();\n  }\n  /**\n   * Returns the number of elements in this queue.\n   * @returns {number} The number of elements in this queue.\n   */\n\n\n  _createClass(Queue, [{\n    key: \"length\",\n    get: function get() {\n      return this.set.size;\n    }\n    /**\n     * Appends the specified element to this queue.\n     * @param {T} item The element to add.\n     * @returns {void}\n     */\n\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(item) {\n      this.set.add(item);\n    }\n    /**\n     * Retrieves and removes the head of this queue.\n     * @returns {T | undefined} The head of the queue of `undefined` if this queue is empty.\n     */\n\n  }, {\n    key: \"dequeue\",\n    value: function dequeue() {\n      var result = this.iterator.next();\n      if (result.done) return undefined;\n      this.set.delete(result.value);\n      return result.value;\n    }\n  }]);\n\n  return Queue;\n}();\n\nmodule.exports = Queue;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/util/Queue.js"],"names":["Queue","items","set","Set","iterator","Symbol","size","item","add","result","next","done","undefined","delete","value","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;;;;;;IACMA,K;AACL;AACD;AACA;AACC,iBAAYC,KAAZ,EAAmB;AAAA;;AAClB;AACA,SAAKC,GAAL,GAAW,IAAIC,GAAJ,CAAQF,KAAR,CAAX;AACA;;AACA,SAAKG,QAAL,GAAgB,KAAKF,GAAL,CAASG,MAAM,CAACD,QAAhB,GAAhB;AACA;AAED;AACD;AACA;AACA;;;;;SACC,eAAa;AACZ,aAAO,KAAKF,GAAL,CAASI,IAAhB;AACA;AAED;AACD;AACA;AACA;AACA;;;;WACC,iBAAQC,IAAR,EAAc;AACb,WAAKL,GAAL,CAASM,GAAT,CAAaD,IAAb;AACA;AAED;AACD;AACA;AACA;;;;WACC,mBAAU;AACT,UAAME,MAAM,GAAG,KAAKL,QAAL,CAAcM,IAAd,EAAf;AACA,UAAID,MAAM,CAACE,IAAX,EAAiB,OAAOC,SAAP;AACjB,WAAKV,GAAL,CAASW,MAAT,CAAgBJ,MAAM,CAACK,KAAvB;AACA,aAAOL,MAAM,CAACK,KAAd;AACA;;;;;;AAGFC,MAAM,CAACC,OAAP,GAAiBhB,KAAjB","sourcesContent":["\"use strict\";\n\n/**\n * @template T\n */\nclass Queue {\n\t/**\n\t * @param {Iterable<T>=} items The initial elements.\n\t */\n\tconstructor(items) {\n\t\t/** @private @type {Set<T>} */\n\t\tthis.set = new Set(items);\n\t\t/** @private @type {Iterator<T>} */\n\t\tthis.iterator = this.set[Symbol.iterator]();\n\t}\n\n\t/**\n\t * Returns the number of elements in this queue.\n\t * @returns {number} The number of elements in this queue.\n\t */\n\tget length() {\n\t\treturn this.set.size;\n\t}\n\n\t/**\n\t * Appends the specified element to this queue.\n\t * @param {T} item The element to add.\n\t * @returns {void}\n\t */\n\tenqueue(item) {\n\t\tthis.set.add(item);\n\t}\n\n\t/**\n\t * Retrieves and removes the head of this queue.\n\t * @returns {T | undefined} The head of the queue of `undefined` if this queue is empty.\n\t */\n\tdequeue() {\n\t\tconst result = this.iterator.next();\n\t\tif (result.done) return undefined;\n\t\tthis.set.delete(result.value);\n\t\treturn result.value;\n\t}\n}\n\nmodule.exports = Queue;\n"]},"metadata":{},"sourceType":"script"}