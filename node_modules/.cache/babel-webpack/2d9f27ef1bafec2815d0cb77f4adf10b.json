{"ast":null,"code":"'use strict'; // eslint-disable-next-line node/no-deprecated-api\n\nvar resolve = require('url').resolve;\n\nvar SourceMapConsumer = require('source-map').SourceMapConsumer;\n\nvar _ = require('lodash');\n\nvar PathUtils = require('./utils/path-utils');\n\nvar log = require('./logger').create('reporter');\n\nvar MultiReporter = require('./reporters/multi');\n\nvar baseReporterDecoratorFactory = require('./reporters/base').decoratorFactory;\n\nfunction createErrorFormatter(config, emitter, SourceMapConsumer) {\n  var basePath = config.basePath;\n  var urlRoot = config.urlRoot === '/' ? '' : config.urlRoot || '';\n  var lastServedFiles = [];\n  emitter.on('file_list_modified', function (files) {\n    lastServedFiles = files.served;\n  });\n  var URL_REGEXP = new RegExp('(?:https?:\\\\/\\\\/' + config.hostname + '(?:\\\\:' + config.port + ')?' + ')?\\\\/?' + urlRoot + '\\\\/?' + '(base/|absolute)' + // prefix, including slash for base/ to create relative paths.\n  '((?:[A-z]\\\\:)?[^\\\\?\\\\s\\\\:]*)' + // path\n  '(\\\\?\\\\w*)?' + // sha\n  '(\\\\:(\\\\d+))?' + // line\n  '(\\\\:(\\\\d+))?' + // column\n  '', 'g');\n  var cache = new WeakMap();\n\n  function getSourceMapConsumer(sourceMap) {\n    if (!cache.has(sourceMap)) {\n      cache.set(sourceMap, new SourceMapConsumer(sourceMap));\n    }\n\n    return cache.get(sourceMap);\n  }\n\n  return function (input, indentation) {\n    indentation = _.isString(indentation) ? indentation : '';\n\n    if (_.isError(input)) {\n      input = input.message;\n    } else if (_.isEmpty(input)) {\n      input = '';\n    } else if (!_.isString(input)) {\n      input = JSON.stringify(input, null, indentation);\n    }\n\n    var msg = input.replace(URL_REGEXP, function (_, prefix, path, __, ___, line, ____, column) {\n      var normalizedPath = prefix === 'base/' ? \"\".concat(basePath, \"/\").concat(path) : path;\n      var file = lastServedFiles.find(function (file) {\n        return file.path === normalizedPath;\n      });\n\n      if (file && file.sourceMap && line) {\n        line = +line;\n        column = +column; // When no column is given and we default to 0, it doesn't make sense to only search for smaller\n        // or equal columns in the sourcemap, let's search for equal or greater columns.\n\n        var bias = column ? SourceMapConsumer.GREATEST_LOWER_BOUND : SourceMapConsumer.LEAST_UPPER_BOUND;\n\n        try {\n          var zeroBasedColumn = Math.max(0, (column || 1) - 1);\n          var original = getSourceMapConsumer(file.sourceMap).originalPositionFor({\n            line: line,\n            column: zeroBasedColumn,\n            bias: bias\n          }); // Source maps often only have a local file name, resolve to turn into a full path if\n          // the path is not absolute yet.\n\n          var oneBasedOriginalColumn = original.column == null ? original.column : original.column + 1;\n          return \"\".concat(PathUtils.formatPathMapping(resolve(path, original.source), original.line, oneBasedOriginalColumn), \" <- \").concat(PathUtils.formatPathMapping(path, line, column));\n        } catch (e) {\n          log.warn(\"SourceMap position not found for trace: \".concat(input));\n        }\n      }\n\n      return PathUtils.formatPathMapping(path, line, column) || prefix;\n    });\n\n    if (indentation) {\n      msg = indentation + msg.replace(/\\n/g, '\\n' + indentation);\n    }\n\n    return config.formatError ? config.formatError(msg) : msg + '\\n';\n  };\n}\n\nfunction createReporters(names, config, emitter, injector) {\n  var errorFormatter = createErrorFormatter(config, emitter, SourceMapConsumer);\n  var reporters = [];\n  names.forEach(function (name) {\n    if (['dots', 'progress'].includes(name)) {\n      [require(\"./reporters/\".concat(name)), require(\"./reporters/\".concat(name, \"_color\"))].forEach(function (Reporter) {\n        reporters.push(new Reporter(errorFormatter, config.reportSlowerThan, config.colors, config.browserConsoleLogOptions));\n      });\n      return;\n    }\n\n    var locals = {\n      baseReporterDecorator: ['factory', baseReporterDecoratorFactory],\n      formatError: ['value', errorFormatter]\n    };\n\n    try {\n      log.debug(\"Trying to load reporter: \".concat(name));\n      reporters.push(injector.createChild([locals], ['reporter:' + name]).get('reporter:' + name));\n    } catch (e) {\n      if (e.message.includes(\"No provider for \\\"reporter:\".concat(name, \"\\\"\"))) {\n        log.error(\"Can not load reporter \\\"\".concat(name, \"\\\", it is not registered!\\n  Perhaps you are missing some plugin?\"));\n      } else {\n        log.error(\"Can not load \\\"\".concat(name, \"\\\"!\\n \").concat(e.stack));\n      }\n\n      emitter.emit('load_error', 'reporter', name);\n      return;\n    }\n\n    var colorName = name + '_color';\n\n    if (!names.includes(colorName)) {\n      try {\n        log.debug(\"Trying to load color-version of reporter: \".concat(name, \" (\").concat(colorName, \")\"));\n        reporters.push(injector.createChild([locals], ['reporter:' + colorName]).get('reporter:' + name));\n      } catch (e) {\n        log.debug('Couldn\\'t load color-version.');\n      }\n    }\n  });\n  reporters.forEach(function (reporter) {\n    return emitter.bind(reporter);\n  });\n  return new MultiReporter(reporters);\n}\n\ncreateReporters.$inject = ['config.reporters', 'config', 'emitter', 'injector'];\nexports.createReporters = createReporters;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/karma/lib/reporter.js"],"names":["resolve","require","SourceMapConsumer","_","PathUtils","log","create","MultiReporter","baseReporterDecoratorFactory","decoratorFactory","createErrorFormatter","config","emitter","basePath","urlRoot","lastServedFiles","on","files","served","URL_REGEXP","RegExp","hostname","port","cache","WeakMap","getSourceMapConsumer","sourceMap","has","set","get","input","indentation","isString","isError","message","isEmpty","JSON","stringify","msg","replace","prefix","path","__","___","line","____","column","normalizedPath","file","find","bias","GREATEST_LOWER_BOUND","LEAST_UPPER_BOUND","zeroBasedColumn","Math","max","original","originalPositionFor","oneBasedOriginalColumn","formatPathMapping","source","e","warn","formatError","createReporters","names","injector","errorFormatter","reporters","forEach","name","includes","Reporter","push","reportSlowerThan","colors","browserConsoleLogOptions","locals","baseReporterDecorator","debug","createChild","error","stack","emit","colorName","reporter","bind","$inject","exports"],"mappings":"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","sourcesContent":["'use strict'\n\n// eslint-disable-next-line node/no-deprecated-api\nconst resolve = require('url').resolve\nconst SourceMapConsumer = require('source-map').SourceMapConsumer\nconst _ = require('lodash')\n\nconst PathUtils = require('./utils/path-utils')\nconst log = require('./logger').create('reporter')\nconst MultiReporter = require('./reporters/multi')\nconst baseReporterDecoratorFactory = require('./reporters/base').decoratorFactory\n\nfunction createErrorFormatter (config, emitter, SourceMapConsumer) {\n  const basePath = config.basePath\n  const urlRoot = config.urlRoot === '/' ? '' : (config.urlRoot || '')\n  let lastServedFiles = []\n\n  emitter.on('file_list_modified', (files) => {\n    lastServedFiles = files.served\n  })\n\n  const URL_REGEXP = new RegExp('(?:https?:\\\\/\\\\/' +\n    config.hostname + '(?:\\\\:' + config.port + ')?' + ')?\\\\/?' +\n    urlRoot + '\\\\/?' +\n    '(base/|absolute)' + // prefix, including slash for base/ to create relative paths.\n    '((?:[A-z]\\\\:)?[^\\\\?\\\\s\\\\:]*)' + // path\n    '(\\\\?\\\\w*)?' + // sha\n    '(\\\\:(\\\\d+))?' + // line\n    '(\\\\:(\\\\d+))?' + // column\n    '', 'g')\n\n  const cache = new WeakMap()\n\n  function getSourceMapConsumer (sourceMap) {\n    if (!cache.has(sourceMap)) {\n      cache.set(sourceMap, new SourceMapConsumer(sourceMap))\n    }\n    return cache.get(sourceMap)\n  }\n\n  return function (input, indentation) {\n    indentation = _.isString(indentation) ? indentation : ''\n    if (_.isError(input)) {\n      input = input.message\n    } else if (_.isEmpty(input)) {\n      input = ''\n    } else if (!_.isString(input)) {\n      input = JSON.stringify(input, null, indentation)\n    }\n\n    let msg = input.replace(URL_REGEXP, function (_, prefix, path, __, ___, line, ____, column) {\n      const normalizedPath = prefix === 'base/' ? `${basePath}/${path}` : path\n      const file = lastServedFiles.find((file) => file.path === normalizedPath)\n\n      if (file && file.sourceMap && line) {\n        line = +line\n        column = +column\n\n        // When no column is given and we default to 0, it doesn't make sense to only search for smaller\n        // or equal columns in the sourcemap, let's search for equal or greater columns.\n        const bias = column ? SourceMapConsumer.GREATEST_LOWER_BOUND : SourceMapConsumer.LEAST_UPPER_BOUND\n\n        try {\n          const zeroBasedColumn = Math.max(0, (column || 1) - 1)\n          const original = getSourceMapConsumer(file.sourceMap).originalPositionFor({ line, column: zeroBasedColumn, bias })\n\n          // Source maps often only have a local file name, resolve to turn into a full path if\n          // the path is not absolute yet.\n          const oneBasedOriginalColumn = original.column == null ? original.column : original.column + 1\n          return `${PathUtils.formatPathMapping(resolve(path, original.source), original.line, oneBasedOriginalColumn)} <- ${PathUtils.formatPathMapping(path, line, column)}`\n        } catch (e) {\n          log.warn(`SourceMap position not found for trace: ${input}`)\n        }\n      }\n\n      return PathUtils.formatPathMapping(path, line, column) || prefix\n    })\n\n    if (indentation) {\n      msg = indentation + msg.replace(/\\n/g, '\\n' + indentation)\n    }\n\n    return config.formatError ? config.formatError(msg) : msg + '\\n'\n  }\n}\n\nfunction createReporters (names, config, emitter, injector) {\n  const errorFormatter = createErrorFormatter(config, emitter, SourceMapConsumer)\n  const reporters = []\n\n  names.forEach((name) => {\n    if (['dots', 'progress'].includes(name)) {\n      [\n        require(`./reporters/${name}`),\n        require(`./reporters/${name}_color`)\n      ].forEach((Reporter) => {\n        reporters.push(new Reporter(errorFormatter, config.reportSlowerThan, config.colors, config.browserConsoleLogOptions))\n      })\n      return\n    }\n\n    const locals = {\n      baseReporterDecorator: ['factory', baseReporterDecoratorFactory],\n      formatError: ['value', errorFormatter]\n    }\n\n    try {\n      log.debug(`Trying to load reporter: ${name}`)\n      reporters.push(injector.createChild([locals], ['reporter:' + name]).get('reporter:' + name))\n    } catch (e) {\n      if (e.message.includes(`No provider for \"reporter:${name}\"`)) {\n        log.error(`Can not load reporter \"${name}\", it is not registered!\\n  Perhaps you are missing some plugin?`)\n      } else {\n        log.error(`Can not load \"${name}\"!\\n ${e.stack}`)\n      }\n      emitter.emit('load_error', 'reporter', name)\n      return\n    }\n\n    const colorName = name + '_color'\n    if (!names.includes(colorName)) {\n      try {\n        log.debug(`Trying to load color-version of reporter: ${name} (${colorName})`)\n        reporters.push(injector.createChild([locals], ['reporter:' + colorName]).get('reporter:' + name))\n      } catch (e) {\n        log.debug('Couldn\\'t load color-version.')\n      }\n    }\n  })\n\n  reporters.forEach((reporter) => emitter.bind(reporter))\n\n  return new MultiReporter(reporters)\n}\n\ncreateReporters.$inject = [\n  'config.reporters',\n  'config',\n  'emitter',\n  'injector'\n]\n\nexports.createReporters = createReporters\n"]},"metadata":{},"sourceType":"script"}