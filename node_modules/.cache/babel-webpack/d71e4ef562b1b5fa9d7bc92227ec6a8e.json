{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar assert = require('assert');\n\nvar _ = {\n  isNumber: require('lodash/isNumber'),\n  filter: require('lodash/filter'),\n  map: require('lodash/map'),\n  find: require('lodash/find')\n};\n\nvar Separator = require('./separator');\n\nvar Choice = require('./choice');\n/**\n * Choices collection\n * Collection of multiple `choice` object\n * @constructor\n * @param {Array} choices  All `choice` to keep in the collection\n */\n\n\nmodule.exports = /*#__PURE__*/function () {\n  function Choices(choices, answers) {\n    _classCallCheck(this, Choices);\n\n    this.choices = choices.map(function (val) {\n      if (val.type === 'separator') {\n        if (!(val instanceof Separator)) {\n          val = new Separator(val.line);\n        }\n\n        return val;\n      }\n\n      return new Choice(val, answers);\n    });\n    this.realChoices = this.choices.filter(Separator.exclude).filter(function (item) {\n      return !item.disabled;\n    });\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.choices.length;\n      },\n      set: function set(val) {\n        this.choices.length = val;\n      }\n    });\n    Object.defineProperty(this, 'realLength', {\n      get: function get() {\n        return this.realChoices.length;\n      },\n      set: function set() {\n        throw new Error('Cannot set `realLength` of a Choices collection');\n      }\n    });\n  }\n  /**\n   * Get a valid choice from the collection\n   * @param  {Number} selector  The selected choice index\n   * @return {Choice|Undefined} Return the matched choice or undefined\n   */\n\n\n  _createClass(Choices, [{\n    key: \"getChoice\",\n    value: function getChoice(selector) {\n      assert(_.isNumber(selector));\n      return this.realChoices[selector];\n    }\n    /**\n     * Get a raw element from the collection\n     * @param  {Number} selector  The selected index value\n     * @return {Choice|Undefined} Return the matched choice or undefined\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(selector) {\n      assert(_.isNumber(selector));\n      return this.choices[selector];\n    }\n    /**\n     * Match the valid choices against a where clause\n     * @param  {Object} whereClause Lodash `where` clause\n     * @return {Array}              Matching choices or empty array\n     */\n\n  }, {\n    key: \"where\",\n    value: function where(whereClause) {\n      return _.filter(this.realChoices, whereClause);\n    }\n    /**\n     * Pluck a particular key from the choices\n     * @param  {String} propertyName Property name to select\n     * @return {Array}               Selected properties\n     */\n\n  }, {\n    key: \"pluck\",\n    value: function pluck(propertyName) {\n      return _.map(this.realChoices, propertyName);\n    } // Expose usual Array methods\n\n  }, {\n    key: \"indexOf\",\n    value: function indexOf() {\n      return this.choices.indexOf.apply(this.choices, arguments);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach() {\n      return this.choices.forEach.apply(this.choices, arguments);\n    }\n  }, {\n    key: \"filter\",\n    value: function filter() {\n      return this.choices.filter.apply(this.choices, arguments);\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce() {\n      return this.choices.reduce.apply(this.choices, arguments);\n    }\n  }, {\n    key: \"find\",\n    value: function find(func) {\n      return _.find(this.choices, func);\n    }\n  }, {\n    key: \"push\",\n    value: function push() {\n      var objs = _.map(arguments, function (val) {\n        return new Choice(val);\n      });\n\n      this.choices.push.apply(this.choices, objs);\n      this.realChoices = this.choices.filter(Separator.exclude).filter(function (item) {\n        return !item.disabled;\n      });\n      return this.choices;\n    }\n  }]);\n\n  return Choices;\n}();","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/inquirer/lib/objects/choices.js"],"names":["assert","require","_","isNumber","filter","map","find","Separator","Choice","module","exports","choices","answers","val","type","line","realChoices","exclude","item","disabled","Object","defineProperty","get","length","set","Error","selector","whereClause","propertyName","indexOf","apply","arguments","forEach","reduce","func","objs","push"],"mappings":"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","sourcesContent":["'use strict';\nvar assert = require('assert');\nvar _ = {\n  isNumber: require('lodash/isNumber'),\n  filter: require('lodash/filter'),\n  map: require('lodash/map'),\n  find: require('lodash/find'),\n};\nvar Separator = require('./separator');\nvar Choice = require('./choice');\n\n/**\n * Choices collection\n * Collection of multiple `choice` object\n * @constructor\n * @param {Array} choices  All `choice` to keep in the collection\n */\n\nmodule.exports = class Choices {\n  constructor(choices, answers) {\n    this.choices = choices.map((val) => {\n      if (val.type === 'separator') {\n        if (!(val instanceof Separator)) {\n          val = new Separator(val.line);\n        }\n\n        return val;\n      }\n\n      return new Choice(val, answers);\n    });\n\n    this.realChoices = this.choices\n      .filter(Separator.exclude)\n      .filter((item) => !item.disabled);\n\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.choices.length;\n      },\n      set(val) {\n        this.choices.length = val;\n      },\n    });\n\n    Object.defineProperty(this, 'realLength', {\n      get() {\n        return this.realChoices.length;\n      },\n      set() {\n        throw new Error('Cannot set `realLength` of a Choices collection');\n      },\n    });\n  }\n\n  /**\n   * Get a valid choice from the collection\n   * @param  {Number} selector  The selected choice index\n   * @return {Choice|Undefined} Return the matched choice or undefined\n   */\n\n  getChoice(selector) {\n    assert(_.isNumber(selector));\n    return this.realChoices[selector];\n  }\n\n  /**\n   * Get a raw element from the collection\n   * @param  {Number} selector  The selected index value\n   * @return {Choice|Undefined} Return the matched choice or undefined\n   */\n\n  get(selector) {\n    assert(_.isNumber(selector));\n    return this.choices[selector];\n  }\n\n  /**\n   * Match the valid choices against a where clause\n   * @param  {Object} whereClause Lodash `where` clause\n   * @return {Array}              Matching choices or empty array\n   */\n\n  where(whereClause) {\n    return _.filter(this.realChoices, whereClause);\n  }\n\n  /**\n   * Pluck a particular key from the choices\n   * @param  {String} propertyName Property name to select\n   * @return {Array}               Selected properties\n   */\n\n  pluck(propertyName) {\n    return _.map(this.realChoices, propertyName);\n  }\n\n  // Expose usual Array methods\n  indexOf() {\n    return this.choices.indexOf.apply(this.choices, arguments);\n  }\n\n  forEach() {\n    return this.choices.forEach.apply(this.choices, arguments);\n  }\n\n  filter() {\n    return this.choices.filter.apply(this.choices, arguments);\n  }\n\n  reduce() {\n    return this.choices.reduce.apply(this.choices, arguments);\n  }\n\n  find(func) {\n    return _.find(this.choices, func);\n  }\n\n  push() {\n    var objs = _.map(arguments, (val) => new Choice(val));\n    this.choices.push.apply(this.choices, objs);\n    this.realChoices = this.choices\n      .filter(Separator.exclude)\n      .filter((item) => !item.disabled);\n    return this.choices;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}