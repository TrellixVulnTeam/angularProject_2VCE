{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler/src/schema/dom_security_schema\", [\"require\", \"exports\", \"tslib\", \"@angular/compiler/src/core\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SECURITY_SCHEMA = void 0;\n\n  var tslib_1 = require(\"tslib\");\n\n  var core_1 = require(\"@angular/compiler/src/core\"); // =================================================================================================\n  // =================================================================================================\n  // =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n  // =================================================================================================\n  // =================================================================================================\n  //\n  //        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!\n  //                               Reach out to mprobst for details.\n  //\n  // =================================================================================================\n\n  /** Map from tagName|propertyName to SecurityContext. Properties applying to all tags use '*'. */\n\n\n  var _SECURITY_SCHEMA;\n\n  function SECURITY_SCHEMA() {\n    if (!_SECURITY_SCHEMA) {\n      _SECURITY_SCHEMA = {}; // Case is insignificant below, all element and attribute names are lower-cased for lookup.\n\n      registerContext(core_1.SecurityContext.HTML, ['iframe|srcdoc', '*|innerHTML', '*|outerHTML']);\n      registerContext(core_1.SecurityContext.STYLE, ['*|style']); // NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\n\n      registerContext(core_1.SecurityContext.URL, ['*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href', 'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action', 'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite', 'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src']);\n      registerContext(core_1.SecurityContext.RESOURCE_URL, ['applet|code', 'applet|codebase', 'base|href', 'embed|src', 'frame|src', 'head|profile', 'html|manifest', 'iframe|src', 'link|href', 'media|src', 'object|codebase', 'object|data', 'script|src']);\n    }\n\n    return _SECURITY_SCHEMA;\n  }\n\n  exports.SECURITY_SCHEMA = SECURITY_SCHEMA;\n\n  function registerContext(ctx, specs) {\n    var e_1, _a;\n\n    try {\n      for (var specs_1 = tslib_1.__values(specs), specs_1_1 = specs_1.next(); !specs_1_1.done; specs_1_1 = specs_1.next()) {\n        var spec = specs_1_1.value;\n        _SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (specs_1_1 && !specs_1_1.done && (_a = specs_1.return)) _a.call(specs_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  }\n});","map":{"version":3,"sources":["../../../../../../../packages/compiler/src/schema/dom_security_schema.ts"],"names":[],"mappings":"AAAA;;;;;;AAMG;;;;;;;;;;;;;;;;;;AAEH,MAAA,MAAA,GAAA,OAAA,CAAA,4BAAA,CAAA,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AACA,MAAI,gBAAJ;;AAEA,WAAgB,eAAhB,GAA+B;AAC7B,QAAI,CAAC,gBAAL,EAAuB;AACrB,MAAA,gBAAgB,GAAG,EAAnB,CADqB,CAErB;;AAEA,MAAA,eAAe,CAAC,MAAA,CAAA,eAAA,CAAgB,IAAjB,EAAuB,CACpC,eADoC,EAEpC,aAFoC,EAGpC,aAHoC,CAAvB,CAAf;AAKA,MAAA,eAAe,CAAC,MAAA,CAAA,eAAA,CAAgB,KAAjB,EAAwB,CAAC,SAAD,CAAxB,CAAf,CATqB,CAUrB;;AACA,MAAA,eAAe,CAAC,MAAA,CAAA,eAAA,CAAgB,GAAjB,EAAsB,CACnC,cADmC,EACnB,WADmB,EACA,WADA,EACmB,WADnB,EACmC,QADnC,EAEnC,QAFmC,EAEnB,iBAFmB,EAEA,iBAFA,EAEmB,UAFnB,EAEmC,aAFnC,EAGnC,SAHmC,EAGnB,YAHmB,EAGA,WAHA,EAGmB,UAHnB,EAGmC,QAHnC,EAInC,YAJmC,EAInB,eAJmB,EAIA,WAJA,EAImB,cAJnB,EAImC,WAJnC,CAAtB,CAAf;AAMA,MAAA,eAAe,CAAC,MAAA,CAAA,eAAA,CAAgB,YAAjB,EAA+B,CAC5C,aAD4C,EAE5C,iBAF4C,EAG5C,WAH4C,EAI5C,WAJ4C,EAK5C,WAL4C,EAM5C,cAN4C,EAO5C,eAP4C,EAQ5C,YAR4C,EAS5C,WAT4C,EAU5C,WAV4C,EAW5C,iBAX4C,EAY5C,aAZ4C,EAa5C,YAb4C,CAA/B,CAAf;AAeD;;AACD,WAAO,gBAAP;AACD;;AAnCD,EAAA,OAAA,CAAA,eAAA,GAAA,eAAA;;AAqCA,WAAS,eAAT,CAAyB,GAAzB,EAA+C,KAA/C,EAA8D;;;;AAC5D,WAAmB,IAAA,OAAA,GAAA,OAAA,CAAA,QAAA,CAAA,KAAA,CAAA,EAAK,SAAA,GAAA,OAAA,CAAA,IAAA,EAAxB,EAAwB,CAAA,SAAA,CAAA,IAAxB,EAAwB,SAAA,GAAA,OAAA,CAAA,IAAA,EAAxB,EAAwB;AAAnB,YAAM,IAAI,GAAA,SAAA,CAAA,KAAV;AAAqB,QAAA,gBAAgB,CAAC,IAAI,CAAC,WAAL,EAAD,CAAhB,GAAuC,GAAvC;AAA2C;;;;;;;;;;;;AACtE","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SecurityContext} from '../core';\n\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!\n//                               Reach out to mprobst for details.\n//\n// =================================================================================================\n\n/** Map from tagName|propertyName to SecurityContext. Properties applying to all tags use '*'. */\nlet _SECURITY_SCHEMA!: {[k: string]: SecurityContext};\n\nexport function SECURITY_SCHEMA(): {[k: string]: SecurityContext} {\n  if (!_SECURITY_SCHEMA) {\n    _SECURITY_SCHEMA = {};\n    // Case is insignificant below, all element and attribute names are lower-cased for lookup.\n\n    registerContext(SecurityContext.HTML, [\n      'iframe|srcdoc',\n      '*|innerHTML',\n      '*|outerHTML',\n    ]);\n    registerContext(SecurityContext.STYLE, ['*|style']);\n    // NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\n    registerContext(SecurityContext.URL, [\n      '*|formAction', 'area|href',       'area|ping',       'audio|src',    'a|href',\n      'a|ping',       'blockquote|cite', 'body|background', 'del|cite',     'form|action',\n      'img|src',      'img|srcset',      'input|src',       'ins|cite',     'q|cite',\n      'source|src',   'source|srcset',   'track|src',       'video|poster', 'video|src',\n    ]);\n    registerContext(SecurityContext.RESOURCE_URL, [\n      'applet|code',\n      'applet|codebase',\n      'base|href',\n      'embed|src',\n      'frame|src',\n      'head|profile',\n      'html|manifest',\n      'iframe|src',\n      'link|href',\n      'media|src',\n      'object|codebase',\n      'object|data',\n      'script|src',\n    ]);\n  }\n  return _SECURITY_SCHEMA;\n}\n\nfunction registerContext(ctx: SecurityContext, specs: string[]) {\n  for (const spec of specs) _SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}