{"ast":null,"code":"\"use strict\";\n/**\n * **PostCSS Syntax Error**\n *\n * Loader wrapper for postcss syntax errors\n *\n * @class SyntaxError\n * @extends Error\n *\n * @param {Object} err CssSyntaxError\n */\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar SyntaxError = /*#__PURE__*/function (_Error) {\n  _inherits(SyntaxError, _Error);\n\n  var _super = _createSuper(SyntaxError);\n\n  function SyntaxError(error) {\n    var _this;\n\n    _classCallCheck(this, SyntaxError);\n\n    _this = _super.call(this, error);\n    var line = error.line,\n        column = error.column,\n        reason = error.reason,\n        plugin = error.plugin,\n        file = error.file;\n    _this.name = 'SyntaxError';\n    _this.message = \"\".concat(_this.name, \"\\n\\n\");\n\n    if (typeof line !== 'undefined') {\n      _this.message += \"(\".concat(line, \":\").concat(column, \") \");\n    }\n\n    _this.message += plugin ? \"\".concat(plugin, \": \") : '';\n    _this.message += file ? \"\".concat(file, \" \") : '<css input> ';\n    _this.message += \"\".concat(reason);\n    var code = error.showSourceCode();\n\n    if (code) {\n      _this.message += \"\\n\\n\".concat(code, \"\\n\");\n    }\n\n    _this.stack = false;\n    return _this;\n  }\n\n  return SyntaxError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nmodule.exports = SyntaxError;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/postcss-loader/dist/Error.js"],"names":["SyntaxError","error","line","column","reason","plugin","file","name","message","code","showSourceCode","stack","Error","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;IACMA,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,QACEC,IADF,GAMID,KANJ,CACEC,IADF;AAAA,QAEEC,MAFF,GAMIF,KANJ,CAEEE,MAFF;AAAA,QAGEC,MAHF,GAMIH,KANJ,CAGEG,MAHF;AAAA,QAIEC,MAJF,GAMIJ,KANJ,CAIEI,MAJF;AAAA,QAKEC,IALF,GAMIL,KANJ,CAKEK,IALF;AAOA,UAAKC,IAAL,GAAY,aAAZ;AACA,UAAKC,OAAL,aAAkB,MAAKD,IAAvB;;AAEA,QAAI,OAAOL,IAAP,KAAgB,WAApB,EAAiC;AAC/B,YAAKM,OAAL,eAAoBN,IAApB,cAA4BC,MAA5B;AACD;;AAED,UAAKK,OAAL,IAAgBH,MAAM,aAAMA,MAAN,UAAmB,EAAzC;AACA,UAAKG,OAAL,IAAgBF,IAAI,aAAMA,IAAN,SAAgB,cAApC;AACA,UAAKE,OAAL,cAAmBJ,MAAnB;AACA,QAAMK,IAAI,GAAGR,KAAK,CAACS,cAAN,EAAb;;AAEA,QAAID,IAAJ,EAAU;AACR,YAAKD,OAAL,kBAAuBC,IAAvB;AACD;;AAED,UAAKE,KAAL,GAAa,KAAb;AAzBiB;AA0BlB;;;iCA3BuBC,K;;AA+B1BC,MAAM,CAACC,OAAP,GAAiBd,WAAjB","sourcesContent":["\"use strict\";\n\n/**\n * **PostCSS Syntax Error**\n *\n * Loader wrapper for postcss syntax errors\n *\n * @class SyntaxError\n * @extends Error\n *\n * @param {Object} err CssSyntaxError\n */\nclass SyntaxError extends Error {\n  constructor(error) {\n    super(error);\n    const {\n      line,\n      column,\n      reason,\n      plugin,\n      file\n    } = error;\n    this.name = 'SyntaxError';\n    this.message = `${this.name}\\n\\n`;\n\n    if (typeof line !== 'undefined') {\n      this.message += `(${line}:${column}) `;\n    }\n\n    this.message += plugin ? `${plugin}: ` : '';\n    this.message += file ? `${file} ` : '<css input> ';\n    this.message += `${reason}`;\n    const code = error.showSourceCode();\n\n    if (code) {\n      this.message += `\\n\\n${code}\\n`;\n    }\n\n    this.stack = false;\n  }\n\n}\n\nmodule.exports = SyntaxError;"]},"metadata":{},"sourceType":"script"}