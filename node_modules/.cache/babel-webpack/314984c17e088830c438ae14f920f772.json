{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _toConsumableArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _objectSpread = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _regeneratorRuntime = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _asyncToGenerator = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.inlineLocales = exports.createI18nPlugins = exports.process = exports.setup = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar core_1 = require(\"@babel/core\");\n\nvar template_1 = require(\"@babel/template\");\n\nvar cacache = require(\"cacache\");\n\nvar crypto_1 = require(\"crypto\");\n\nvar fs = require(\"fs\");\n\nvar path = require(\"path\");\n\nvar source_map_1 = require(\"source-map\");\n\nvar terser_1 = require(\"terser\");\n\nvar v8 = require(\"v8\");\n\nvar webpack_sources_1 = require(\"webpack-sources\");\n\nvar environment_options_1 = require(\"./environment-options\");\n\nvar webpack_version_1 = require(\"./webpack-version\");\n\nvar deserialize = v8.deserialize; // If code size is larger than 500KB, consider lower fidelity but faster sourcemap merge\n\nvar FAST_SOURCEMAP_THRESHOLD = 500 * 1024;\nvar cachePath;\nvar i18n;\n\nfunction setup(data) {\n  var options = Array.isArray(data) ? deserialize(Buffer.from(data)) : data;\n  cachePath = options.cachePath;\n  i18n = options.i18n;\n}\n\nexports.setup = setup;\n\nfunction cachePut(_x, _x2, _x3) {\n  return _cachePut.apply(this, arguments);\n}\n\nfunction _cachePut() {\n  _cachePut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(content, key, integrity) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(cachePath && key)) {\n              _context.next = 3;\n              break;\n            }\n\n            _context.next = 3;\n            return cacache.put(cachePath, key, content, {\n              metadata: {\n                integrity: integrity\n              }\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _cachePut.apply(this, arguments);\n}\n\nfunction process(_x4) {\n  return _process.apply(this, arguments);\n}\n\nfunction _process() {\n  _process = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(options) {\n    var result, basePath, filename, downlevelFilename, downlevel, sourceCode, sourceMap, downlevelCode, downlevelMap, _options$supportedBro, targets, transformResult, fastSourceMaps;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!options.cacheKeys) {\n              options.cacheKeys = [];\n            }\n\n            result = {\n              name: options.name\n            };\n\n            if (options.integrityAlgorithm) {\n              // Store unmodified code integrity value -- used for SRI value replacement\n              result.integrity = generateIntegrityValue(options.integrityAlgorithm, options.code);\n            } // Runtime chunk requires specialized handling\n\n\n            if (!options.runtime) {\n              _context2.next = 10;\n              break;\n            }\n\n            _context2.t0 = _objectSpread;\n            _context2.t1 = _objectSpread({}, result);\n            _context2.next = 8;\n            return processRuntime(options);\n\n          case 8:\n            _context2.t2 = _context2.sent;\n            return _context2.abrupt(\"return\", (0, _context2.t0)(_context2.t1, _context2.t2));\n\n          case 10:\n            basePath = path.dirname(options.filename);\n            filename = path.basename(options.filename);\n            downlevelFilename = filename.replace(/\\-(es20\\d{2}|esnext)/, '-es5');\n            downlevel = !options.optimizeOnly;\n            sourceCode = options.code;\n            sourceMap = options.map ? JSON.parse(options.map) : undefined;\n\n            if (!downlevel) {\n              _context2.next = 30;\n              break;\n            }\n\n            _options$supportedBro = options.supportedBrowsers, targets = _options$supportedBro === void 0 ? [] : _options$supportedBro; // todo: revisit this in version 10, when we update our defaults browserslist\n            // Without this workaround bundles will not be downlevelled because Babel doesn't know handle to 'op_mini all'\n            // See: https://github.com/babel/babel/issues/11155\n\n            if (Array.isArray(targets) && targets.includes('op_mini all')) {\n              targets.push('ie_mob 11');\n            } else if ('op_mini' in targets) {\n              targets['ie_mob'] = '11';\n            } // Downlevel the bundle\n\n\n            _context2.next = 21;\n            return core_1.transformAsync(sourceCode, {\n              filename: filename,\n              // using false ensures that babel will NOT search and process sourcemap comments (large memory usage)\n              // The types do not include the false option even though it is valid\n              // tslint:disable-next-line: no-any\n              inputSourceMap: false,\n              babelrc: false,\n              configFile: false,\n              presets: [[require.resolve('@babel/preset-env'), {\n                // browserslist-compatible query or object of minimum environment versions to support\n                targets: targets,\n                // modules aren't needed since the bundles use webpack's custom module loading\n                modules: false,\n                // 'transform-typeof-symbol' generates slower code\n                exclude: ['transform-typeof-symbol']\n              }]],\n              plugins: [createIifeWrapperPlugin()].concat(_toConsumableArray(options.replacements ? [createReplacePlugin(options.replacements)] : [])),\n              minified: environment_options_1.allowMinify && !!options.optimize,\n              compact: !environment_options_1.shouldBeautify && !!options.optimize,\n              sourceMaps: !!sourceMap\n            });\n\n          case 21:\n            transformResult = _context2.sent;\n\n            if (!(!transformResult || !transformResult.code)) {\n              _context2.next = 24;\n              break;\n            }\n\n            throw new Error(\"Unknown error occurred processing bundle for \\\"\".concat(options.filename, \"\\\".\"));\n\n          case 24:\n            downlevelCode = transformResult.code;\n\n            if (!(sourceMap && transformResult.map)) {\n              _context2.next = 30;\n              break;\n            }\n\n            // String length is used as an estimate for byte length\n            fastSourceMaps = sourceCode.length > FAST_SOURCEMAP_THRESHOLD;\n            _context2.next = 29;\n            return mergeSourceMaps(sourceCode, sourceMap, downlevelCode, transformResult.map, filename, // When not optimizing, the sourcemaps are significantly less complex\n            // and can use the higher fidelity merge\n            !!options.optimize && fastSourceMaps);\n\n          case 29:\n            downlevelMap = _context2.sent;\n\n          case 30:\n            if (!downlevelCode) {\n              _context2.next = 34;\n              break;\n            }\n\n            _context2.next = 33;\n            return processBundle(_objectSpread(_objectSpread({}, options), {}, {\n              code: downlevelCode,\n              map: downlevelMap,\n              filename: path.join(basePath, downlevelFilename),\n              isOriginal: false\n            }));\n\n          case 33:\n            result.downlevel = _context2.sent;\n\n          case 34:\n            if (!(!result.original && !options.ignoreOriginal)) {\n              _context2.next = 38;\n              break;\n            }\n\n            _context2.next = 37;\n            return processBundle(_objectSpread(_objectSpread({}, options), {}, {\n              isOriginal: true\n            }));\n\n          case 37:\n            result.original = _context2.sent;\n\n          case 38:\n            return _context2.abrupt(\"return\", result);\n\n          case 39:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _process.apply(this, arguments);\n}\n\nexports.process = process;\n\nfunction mergeSourceMaps(_x5, _x6, _x7, _x8, _x9) {\n  return _mergeSourceMaps.apply(this, arguments);\n}\n\nfunction _mergeSourceMaps() {\n  _mergeSourceMaps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(inputCode, inputSourceMap, resultCode, resultSourceMap, filename) {\n    var fast,\n        finalSourceMap,\n        _args3 = arguments;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            fast = _args3.length > 5 && _args3[5] !== undefined ? _args3[5] : false;\n\n            if (!(fast || webpack_version_1.isWebpackFiveOrHigher())) {\n              _context3.next = 3;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", mergeSourceMapsFast(inputSourceMap, resultSourceMap));\n\n          case 3:\n            // SourceMapSource produces high-quality sourcemaps\n            // Final sourcemap will always be available when providing the input sourcemaps\n            // tslint:disable-next-line: no-non-null-assertion\n            finalSourceMap = new webpack_sources_1.SourceMapSource(resultCode, filename, resultSourceMap, inputCode, inputSourceMap, true).map();\n            return _context3.abrupt(\"return\", finalSourceMap);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _mergeSourceMaps.apply(this, arguments);\n}\n\nfunction mergeSourceMapsFast(_x10, _x11) {\n  return _mergeSourceMapsFast.apply(this, arguments);\n}\n\nfunction _mergeSourceMapsFast() {\n  _mergeSourceMapsFast = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(first, second) {\n    var sourceRoot, generator, map, sourceContentMap, i, _i, contentIndex;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            sourceRoot = first.sourceRoot;\n            generator = new source_map_1.SourceMapGenerator(); // sourcemap package adds the sourceRoot to all position source paths if not removed\n\n            delete first.sourceRoot;\n            _context4.next = 5;\n            return source_map_1.SourceMapConsumer.with(first, null, function (originalConsumer) {\n              return source_map_1.SourceMapConsumer.with(second, null, function (newConsumer) {\n                newConsumer.eachMapping(function (mapping) {\n                  if (mapping.originalLine === null) {\n                    return;\n                  }\n\n                  var originalPosition = originalConsumer.originalPositionFor({\n                    line: mapping.originalLine,\n                    column: mapping.originalColumn\n                  });\n\n                  if (originalPosition.line === null || originalPosition.column === null || originalPosition.source === null) {\n                    return;\n                  }\n\n                  generator.addMapping({\n                    generated: {\n                      line: mapping.generatedLine,\n                      column: mapping.generatedColumn\n                    },\n                    name: originalPosition.name || undefined,\n                    original: {\n                      line: originalPosition.line,\n                      column: originalPosition.column\n                    },\n                    source: originalPosition.source\n                  });\n                });\n              });\n            });\n\n          case 5:\n            map = generator.toJSON();\n            map.file = second.file;\n            map.sourceRoot = sourceRoot; // Add source content if present\n\n            if (first.sourcesContent) {\n              // Source content array is based on index of sources\n              sourceContentMap = new Map();\n\n              for (i = 0; i < first.sources.length; i++) {\n                // make paths \"absolute\" so they can be compared (`./a.js` and `a.js` are equivalent)\n                sourceContentMap.set(path.resolve('/', first.sources[i]), i);\n              }\n\n              map.sourcesContent = [];\n\n              for (_i = 0; _i < map.sources.length; _i++) {\n                contentIndex = sourceContentMap.get(path.resolve('/', map.sources[_i]));\n\n                if (contentIndex === undefined) {\n                  map.sourcesContent.push('');\n                } else {\n                  map.sourcesContent.push(first.sourcesContent[contentIndex]);\n                }\n              }\n            } // Put the sourceRoot back\n\n\n            if (sourceRoot) {\n              first.sourceRoot = sourceRoot;\n            }\n\n            return _context4.abrupt(\"return\", map);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _mergeSourceMapsFast.apply(this, arguments);\n}\n\nfunction processBundle(_x12) {\n  return _processBundle.apply(this, arguments);\n}\n\nfunction _processBundle() {\n  _processBundle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(options) {\n    var optimize, isOriginal, code, map, filepath, hiddenSourceMaps, _options$cacheKeys, cacheKeys, integrityAlgorithm, rawMap, filename, result, mapContent, fileResult;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            optimize = options.optimize, isOriginal = options.isOriginal, code = options.code, map = options.map, filepath = options.filename, hiddenSourceMaps = options.hiddenSourceMaps, _options$cacheKeys = options.cacheKeys, cacheKeys = _options$cacheKeys === void 0 ? [] : _options$cacheKeys, integrityAlgorithm = options.integrityAlgorithm;\n            rawMap = typeof map === 'string' ? JSON.parse(map) : map;\n            filename = path.basename(filepath);\n\n            if (rawMap) {\n              rawMap.file = filename;\n            }\n\n            if (!optimize) {\n              _context5.next = 10;\n              break;\n            }\n\n            _context5.next = 7;\n            return terserMangle(code, {\n              filename: filename,\n              map: rawMap,\n              compress: !isOriginal,\n              ecma: isOriginal ? 2015 : 5\n            });\n\n          case 7:\n            result = _context5.sent;\n            _context5.next = 11;\n            break;\n\n          case 10:\n            result = {\n              map: rawMap,\n              code: code\n            };\n\n          case 11:\n            if (!result.map) {\n              _context5.next = 17;\n              break;\n            }\n\n            if (!hiddenSourceMaps) {\n              result.code += \"\\n//# sourceMappingURL=\".concat(filename, \".map\");\n            }\n\n            mapContent = JSON.stringify(result.map);\n            _context5.next = 16;\n            return cachePut(mapContent, cacheKeys[isOriginal ? 1\n            /* OriginalMap */\n            :\n            /* OriginalMap */\n            3\n            /* DownlevelMap */\n            ]);\n\n          case 16:\n            fs.writeFileSync(filepath + '.map', mapContent);\n\n          case 17:\n            fileResult = createFileEntry(filepath, result.code, mapContent, integrityAlgorithm);\n            _context5.next = 20;\n            return cachePut(result.code, cacheKeys[isOriginal ? 0\n            /* OriginalCode */\n            :\n            /* OriginalCode */\n            2\n            /* DownlevelCode */\n            ], fileResult.integrity);\n\n          case 20:\n            fs.writeFileSync(filepath, result.code);\n            return _context5.abrupt(\"return\", fileResult);\n\n          case 22:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _processBundle.apply(this, arguments);\n}\n\nfunction terserMangle(_x13) {\n  return _terserMangle.apply(this, arguments);\n}\n\nfunction _terserMangle() {\n  _terserMangle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(code) {\n    var options,\n        minifyOutput,\n        outputCode,\n        outputMap,\n        _args6 = arguments;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            options = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};\n            _context6.next = 3;\n            return terser_1.minify(options.filename ? _defineProperty({}, options.filename, code) : code, {\n              compress: environment_options_1.allowMinify && !!options.compress,\n              ecma: options.ecma || 5,\n              mangle: environment_options_1.allowMangle,\n              safari10: true,\n              format: {\n                ascii_only: true,\n                webkit: true,\n                beautify: environment_options_1.shouldBeautify,\n                wrap_func_args: false\n              },\n              sourceMap: !!options.map && {\n                asObject: true\n              }\n            });\n\n          case 3:\n            minifyOutput = _context6.sent;\n            // tslint:disable-next-line: no-non-null-assertion\n            outputCode = minifyOutput.code;\n\n            if (!(options.map && minifyOutput.map)) {\n              _context6.next = 9;\n              break;\n            }\n\n            _context6.next = 8;\n            return mergeSourceMaps(code, options.map, outputCode, minifyOutput.map, options.filename || '0', code.length > FAST_SOURCEMAP_THRESHOLD);\n\n          case 8:\n            outputMap = _context6.sent;\n\n          case 9:\n            return _context6.abrupt(\"return\", {\n              code: outputCode,\n              map: outputMap\n            });\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _terserMangle.apply(this, arguments);\n}\n\nfunction createFileEntry(filename, code, map, integrityAlgorithm) {\n  return {\n    filename: filename,\n    size: Buffer.byteLength(code),\n    integrity: integrityAlgorithm && generateIntegrityValue(integrityAlgorithm, code),\n    map: !map ? undefined : {\n      filename: filename + '.map',\n      size: Buffer.byteLength(map)\n    }\n  };\n}\n\nfunction generateIntegrityValue(hashAlgorithm, code) {\n  return hashAlgorithm + '-' + crypto_1.createHash(hashAlgorithm).update(code).digest('base64');\n} // The webpack runtime chunk is already ES5.\n// However, two variants are still needed due to lazy routing and SRI differences\n// NOTE: This should eventually be a babel plugin\n\n\nfunction processRuntime(_x14) {\n  return _processRuntime.apply(this, arguments);\n}\n\nfunction _processRuntime() {\n  _processRuntime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(options) {\n    var originalCode, downlevelCode, _iterator3, _step3, data;\n\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            originalCode = options.code;\n            downlevelCode = options.code; // Replace integrity hashes with updated values\n\n            if (!(options.integrityAlgorithm && options.runtimeData)) {\n              _context7.next = 22;\n              break;\n            }\n\n            _iterator3 = _createForOfIteratorHelper(options.runtimeData);\n            _context7.prev = 4;\n\n            _iterator3.s();\n\n          case 6:\n            if ((_step3 = _iterator3.n()).done) {\n              _context7.next = 14;\n              break;\n            }\n\n            data = _step3.value;\n\n            if (data.integrity) {\n              _context7.next = 10;\n              break;\n            }\n\n            return _context7.abrupt(\"continue\", 12);\n\n          case 10:\n            if (data.original && data.original.integrity) {\n              originalCode = originalCode.replace(data.integrity, data.original.integrity);\n            }\n\n            if (data.downlevel && data.downlevel.integrity) {\n              downlevelCode = downlevelCode.replace(data.integrity, data.downlevel.integrity);\n            }\n\n          case 12:\n            _context7.next = 6;\n            break;\n\n          case 14:\n            _context7.next = 19;\n            break;\n\n          case 16:\n            _context7.prev = 16;\n            _context7.t0 = _context7[\"catch\"](4);\n\n            _iterator3.e(_context7.t0);\n\n          case 19:\n            _context7.prev = 19;\n\n            _iterator3.f();\n\n            return _context7.finish(19);\n\n          case 22:\n            // Adjust lazy loaded scripts to point to the proper variant\n            // Extra spacing is intentional to align source line positions\n            downlevelCode = downlevelCode.replace(/\"\\-(es20\\d{2}|esnext)\\./, '   \"-es5.');\n            _context7.next = 25;\n            return processBundle(_objectSpread(_objectSpread({}, options), {}, {\n              code: originalCode,\n              isOriginal: true\n            }));\n\n          case 25:\n            _context7.t1 = _context7.sent;\n            _context7.next = 28;\n            return processBundle(_objectSpread(_objectSpread({}, options), {}, {\n              code: downlevelCode,\n              filename: options.filename.replace(/\\-(es20\\d{2}|esnext)/, '-es5'),\n              isOriginal: false\n            }));\n\n          case 28:\n            _context7.t2 = _context7.sent;\n            return _context7.abrupt(\"return\", {\n              original: _context7.t1,\n              downlevel: _context7.t2\n            });\n\n          case 30:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[4, 16, 19, 22]]);\n  }));\n  return _processRuntime.apply(this, arguments);\n}\n\nfunction createReplacePlugin(replacements) {\n  return {\n    visitor: {\n      StringLiteral: function StringLiteral(path) {\n        var _iterator = _createForOfIteratorHelper(replacements),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var replacement = _step.value;\n\n            if (path.node.value === replacement[0]) {\n              path.node.value = replacement[1];\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n  };\n}\n\nfunction createIifeWrapperPlugin() {\n  return {\n    visitor: {\n      Program: {\n        exit: function exit(path) {\n          // Save existing body and directives\n          var _path$node = path.node,\n              body = _path$node.body,\n              directives = _path$node.directives; // Clear out body and directives for wrapper\n\n          path.node.body = [];\n          path.node.directives = []; // Create the wrapper - \"(function() { ... })();\"\n\n          var wrapper = core_1.types.expressionStatement(core_1.types.callExpression(core_1.types.parenthesizedExpression(core_1.types.functionExpression(undefined, [], core_1.types.blockStatement(body, directives))), [])); // Insert the wrapper\n\n          path.pushContainer('body', wrapper);\n        }\n      }\n    }\n  };\n}\n\nvar USE_LOCALIZE_PLUGINS = false;\n\nfunction createI18nPlugins(_x15, _x16, _x17, _x18) {\n  return _createI18nPlugins.apply(this, arguments);\n}\n\nfunction _createI18nPlugins() {\n  _createI18nPlugins = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(locale, translation, missingTranslation, localeDataContent) {\n    var plugins, localizeDiag, diagnostics, es2015, es5, inlineLocale;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            plugins = [];\n            _context8.next = 3;\n            return Promise.resolve().then(function () {\n              return require('@angular/localize/src/tools/src/diagnostics');\n            });\n\n          case 3:\n            localizeDiag = _context8.sent;\n            diagnostics = new localizeDiag.Diagnostics();\n            _context8.next = 7;\n            return Promise.resolve().then(function () {\n              return require( // tslint:disable-next-line: trailing-comma\n              '@angular/localize/src/tools/src/translate/source_files/es2015_translate_plugin');\n            });\n\n          case 7:\n            es2015 = _context8.sent;\n            plugins.push( // tslint:disable-next-line: no-any\n            es2015.makeEs2015TranslatePlugin(diagnostics, translation || {}, {\n              missingTranslation: translation === undefined ? 'ignore' : missingTranslation\n            }));\n            _context8.next = 11;\n            return Promise.resolve().then(function () {\n              return require( // tslint:disable-next-line: trailing-comma\n              '@angular/localize/src/tools/src/translate/source_files/es5_translate_plugin');\n            });\n\n          case 11:\n            es5 = _context8.sent;\n            plugins.push( // tslint:disable-next-line: no-any\n            es5.makeEs5TranslatePlugin(diagnostics, translation || {}, {\n              missingTranslation: translation === undefined ? 'ignore' : missingTranslation\n            }));\n            _context8.next = 15;\n            return Promise.resolve().then(function () {\n              return require( // tslint:disable-next-line: trailing-comma\n              '@angular/localize/src/tools/src/translate/source_files/locale_plugin');\n            });\n\n          case 15:\n            inlineLocale = _context8.sent;\n            plugins.push(inlineLocale.makeLocalePlugin(locale));\n\n            if (localeDataContent) {\n              plugins.push({\n                visitor: {\n                  Program: function Program(path) {\n                    path.unshiftContainer('body', template_1.default.ast(localeDataContent));\n                  }\n                }\n              });\n            }\n\n            return _context8.abrupt(\"return\", {\n              diagnostics: diagnostics,\n              plugins: plugins\n            });\n\n          case 19:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _createI18nPlugins.apply(this, arguments);\n}\n\nexports.createI18nPlugins = createI18nPlugins;\nvar localizeName = '$localize';\n\nfunction inlineLocales(_x19) {\n  return _inlineLocales.apply(this, arguments);\n}\n\nfunction _inlineLocales() {\n  _inlineLocales = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(options) {\n    var _a, hasLocalizeName, ast, index, msg, diagnostics, inputMap, _iterator4, _step4, locale, isSourceLocale, translations, localeDataContent, localeDataPath, _yield$createI18nPlug, localeDiagnostics, plugins, transformResult, outputPath, outputMap;\n\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            if (!(!i18n || i18n.inlineLocales.size === 0)) {\n              _context9.next = 2;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", {\n              file: options.filename,\n              diagnostics: [],\n              count: 0\n            });\n\n          case 2:\n            if (!(i18n.flatOutput && i18n.inlineLocales.size > 1)) {\n              _context9.next = 4;\n              break;\n            }\n\n            throw new Error('Flat output is only supported when inlining one locale.');\n\n          case 4:\n            hasLocalizeName = options.code.includes(localizeName);\n\n            if (!(!hasLocalizeName && !options.setLocale)) {\n              _context9.next = 7;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", inlineCopyOnly(options));\n\n          case 7:\n            _context9.prev = 7;\n            ast = core_1.parseSync(options.code, {\n              babelrc: false,\n              configFile: false,\n              sourceType: 'script',\n              filename: options.filename\n            });\n            _context9.next = 17;\n            break;\n\n          case 11:\n            _context9.prev = 11;\n            _context9.t0 = _context9[\"catch\"](7);\n\n            if (!_context9.t0.message) {\n              _context9.next = 17;\n              break;\n            }\n\n            // Make the error more readable.\n            // Same errors will contain the full content of the file as the error message\n            // Which makes it hard to find the actual error message.\n            index = _context9.t0.message.indexOf(')\\n');\n            msg = index !== -1 ? _context9.t0.message.substr(0, index + 1) : _context9.t0.message;\n            throw new Error(\"\".concat(msg, \"\\nAn error occurred inlining file \\\"\").concat(options.filename, \"\\\"\"));\n\n          case 17:\n            if (ast) {\n              _context9.next = 19;\n              break;\n            }\n\n            throw new Error(\"Unknown error occurred inlining file \\\"\".concat(options.filename, \"\\\"\"));\n\n          case 19:\n            if (USE_LOCALIZE_PLUGINS) {\n              _context9.next = 21;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", inlineLocalesDirect(ast, options));\n\n          case 21:\n            diagnostics = [];\n            inputMap = options.map && JSON.parse(options.map);\n            _iterator4 = _createForOfIteratorHelper(i18n.inlineLocales);\n            _context9.prev = 24;\n\n            _iterator4.s();\n\n          case 26:\n            if ((_step4 = _iterator4.n()).done) {\n              _context9.next = 57;\n              break;\n            }\n\n            locale = _step4.value;\n            isSourceLocale = locale === i18n.sourceLocale; // tslint:disable-next-line: no-any\n\n            translations = isSourceLocale ? {} : i18n.locales[locale].translation || {};\n            localeDataContent = void 0;\n\n            if (!options.setLocale) {\n              _context9.next = 37;\n              break;\n            }\n\n            // If locale data is provided, load it and prepend to file\n            localeDataPath = (_a = i18n.locales[locale]) === null || _a === void 0 ? void 0 : _a.dataPath;\n\n            if (!localeDataPath) {\n              _context9.next = 37;\n              break;\n            }\n\n            _context9.next = 36;\n            return loadLocaleData(localeDataPath, true, options.es5);\n\n          case 36:\n            localeDataContent = _context9.sent;\n\n          case 37:\n            _context9.next = 39;\n            return createI18nPlugins(locale, translations, isSourceLocale ? 'ignore' : options.missingTranslation || 'warning', localeDataContent);\n\n          case 39:\n            _yield$createI18nPlug = _context9.sent;\n            localeDiagnostics = _yield$createI18nPlug.diagnostics;\n            plugins = _yield$createI18nPlug.plugins;\n            _context9.next = 44;\n            return core_1.transformFromAstSync(ast, options.code, {\n              filename: options.filename,\n              // using false ensures that babel will NOT search and process sourcemap comments (large memory usage)\n              // The types do not include the false option even though it is valid\n              // tslint:disable-next-line: no-any\n              inputSourceMap: false,\n              babelrc: false,\n              configFile: false,\n              plugins: plugins,\n              compact: !environment_options_1.shouldBeautify,\n              sourceMaps: !!inputMap\n            });\n\n          case 44:\n            transformResult = _context9.sent;\n            diagnostics.push.apply(diagnostics, _toConsumableArray(localeDiagnostics.messages));\n\n            if (!(!transformResult || !transformResult.code)) {\n              _context9.next = 48;\n              break;\n            }\n\n            throw new Error(\"Unknown error occurred processing bundle for \\\"\".concat(options.filename, \"\\\".\"));\n\n          case 48:\n            outputPath = path.join(options.outputPath, i18n.flatOutput ? '' : locale, options.filename);\n            fs.writeFileSync(outputPath, transformResult.code);\n\n            if (!(inputMap && transformResult.map)) {\n              _context9.next = 55;\n              break;\n            }\n\n            _context9.next = 53;\n            return mergeSourceMaps(options.code, inputMap, transformResult.code, transformResult.map, options.filename, options.code.length > FAST_SOURCEMAP_THRESHOLD);\n\n          case 53:\n            outputMap = _context9.sent;\n            fs.writeFileSync(outputPath + '.map', JSON.stringify(outputMap));\n\n          case 55:\n            _context9.next = 26;\n            break;\n\n          case 57:\n            _context9.next = 62;\n            break;\n\n          case 59:\n            _context9.prev = 59;\n            _context9.t1 = _context9[\"catch\"](24);\n\n            _iterator4.e(_context9.t1);\n\n          case 62:\n            _context9.prev = 62;\n\n            _iterator4.f();\n\n            return _context9.finish(62);\n\n          case 65:\n            return _context9.abrupt(\"return\", {\n              file: options.filename,\n              diagnostics: diagnostics\n            });\n\n          case 66:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[7, 11], [24, 59, 62, 65]]);\n  }));\n  return _inlineLocales.apply(this, arguments);\n}\n\nexports.inlineLocales = inlineLocales;\n\nfunction inlineLocalesDirect(_x20, _x21) {\n  return _inlineLocalesDirect.apply(this, arguments);\n}\n\nfunction _inlineLocalesDirect() {\n  _inlineLocalesDirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(ast, options) {\n    var _yield$Promise$resolv, generate, utils, localizeDiag, diagnostics, positions, inputMap, mapSourceRoot, _iterator5, _step5, locale, content, isSourceLocale, translations, _iterator6, _step6, position, translated, expression, _generate, code, outputSource, setLocaleText, localeDataSource, localeDataPath, localeDataContent, _outputSource$sourceA, outputCode, outputMap, outputPath;\n\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            if (!(!i18n || i18n.inlineLocales.size === 0)) {\n              _context10.next = 2;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", {\n              file: options.filename,\n              diagnostics: [],\n              count: 0\n            });\n\n          case 2:\n            _context10.next = 4;\n            return Promise.resolve().then(function () {\n              return require('@babel/generator');\n            });\n\n          case 4:\n            _yield$Promise$resolv = _context10.sent;\n            generate = _yield$Promise$resolv.default;\n            _context10.next = 8;\n            return Promise.resolve().then(function () {\n              return require('@angular/localize/src/tools/src/source_file_utils');\n            });\n\n          case 8:\n            utils = _context10.sent;\n            _context10.next = 11;\n            return Promise.resolve().then(function () {\n              return require('@angular/localize/src/tools/src/diagnostics');\n            });\n\n          case 11:\n            localizeDiag = _context10.sent;\n            diagnostics = new localizeDiag.Diagnostics();\n            positions = findLocalizePositions(ast, options, utils);\n\n            if (!(positions.length === 0 && !options.setLocale)) {\n              _context10.next = 16;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", inlineCopyOnly(options));\n\n          case 16:\n            inputMap = options.map && JSON.parse(options.map); // Cleanup source root otherwise it will be added to each source entry\n\n            mapSourceRoot = inputMap && inputMap.sourceRoot;\n\n            if (inputMap) {\n              delete inputMap.sourceRoot;\n            }\n\n            _iterator5 = _createForOfIteratorHelper(i18n.inlineLocales);\n            _context10.prev = 20;\n\n            _iterator5.s();\n\n          case 22:\n            if ((_step5 = _iterator5.n()).done) {\n              _context10.next = 46;\n              break;\n            }\n\n            locale = _step5.value;\n            content = new webpack_sources_1.ReplaceSource(inputMap ? // tslint:disable-next-line: no-any\n            new webpack_sources_1.SourceMapSource(options.code, options.filename, inputMap) : new webpack_sources_1.OriginalSource(options.code, options.filename));\n            isSourceLocale = locale === i18n.sourceLocale; // tslint:disable-next-line: no-any\n\n            translations = isSourceLocale ? {} : i18n.locales[locale].translation || {};\n            _iterator6 = _createForOfIteratorHelper(positions);\n\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                position = _step6.value;\n                translated = utils.translate(diagnostics, translations, position.messageParts, position.expressions, isSourceLocale ? 'ignore' : options.missingTranslation || 'warning');\n                expression = utils.buildLocalizeReplacement(translated[0], translated[1]);\n                _generate = generate(expression), code = _generate.code;\n                content.replace(position.start, position.end - 1, code);\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n\n            outputSource = content;\n\n            if (!options.setLocale) {\n              _context10.next = 40;\n              break;\n            }\n\n            setLocaleText = \"var $localize=Object.assign(void 0===$localize?{}:$localize,{locale:\\\"\".concat(locale, \"\\\"});\\n\"); // If locale data is provided, load it and prepend to file\n\n            localeDataSource = null;\n            localeDataPath = i18n.locales[locale] && i18n.locales[locale].dataPath;\n\n            if (!localeDataPath) {\n              _context10.next = 39;\n              break;\n            }\n\n            _context10.next = 37;\n            return loadLocaleData(localeDataPath, true, options.es5);\n\n          case 37:\n            localeDataContent = _context10.sent;\n            localeDataSource = new webpack_sources_1.OriginalSource(localeDataContent, path.basename(localeDataPath));\n\n          case 39:\n            outputSource = localeDataSource // The semicolon ensures that there is no syntax error between statements\n            ? new webpack_sources_1.ConcatSource(setLocaleText, localeDataSource, ';\\n', content) : new webpack_sources_1.ConcatSource(setLocaleText, content);\n\n          case 40:\n            _outputSource$sourceA = outputSource.sourceAndMap(), outputCode = _outputSource$sourceA.source, outputMap = _outputSource$sourceA.map;\n            outputPath = path.join(options.outputPath, i18n.flatOutput ? '' : locale, options.filename);\n            fs.writeFileSync(outputPath, outputCode);\n\n            if (inputMap && outputMap) {\n              outputMap.file = options.filename;\n\n              if (mapSourceRoot) {\n                outputMap.sourceRoot = mapSourceRoot;\n              }\n\n              fs.writeFileSync(outputPath + '.map', JSON.stringify(outputMap));\n            }\n\n          case 44:\n            _context10.next = 22;\n            break;\n\n          case 46:\n            _context10.next = 51;\n            break;\n\n          case 48:\n            _context10.prev = 48;\n            _context10.t0 = _context10[\"catch\"](20);\n\n            _iterator5.e(_context10.t0);\n\n          case 51:\n            _context10.prev = 51;\n\n            _iterator5.f();\n\n            return _context10.finish(51);\n\n          case 54:\n            return _context10.abrupt(\"return\", {\n              file: options.filename,\n              diagnostics: diagnostics.messages,\n              count: positions.length\n            });\n\n          case 55:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[20, 48, 51, 54]]);\n  }));\n  return _inlineLocalesDirect.apply(this, arguments);\n}\n\nfunction inlineCopyOnly(options) {\n  if (!i18n) {\n    throw new Error('i18n options are missing');\n  }\n\n  var _iterator2 = _createForOfIteratorHelper(i18n.inlineLocales),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var locale = _step2.value;\n      var outputPath = path.join(options.outputPath, i18n.flatOutput ? '' : locale, options.filename);\n      fs.writeFileSync(outputPath, options.code);\n\n      if (options.map) {\n        fs.writeFileSync(outputPath + '.map', options.map);\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return {\n    file: options.filename,\n    diagnostics: [],\n    count: 0\n  };\n}\n\nfunction findLocalizePositions(ast, options, utils) {\n  var positions = []; // Workaround to ensure a path hub is present for traversal\n\n  var _require = require('@babel/core'),\n      File = _require.File;\n\n  var file = new File({}, {\n    code: options.code,\n    ast: ast\n  });\n\n  if (options.es5) {\n    core_1.traverse(file.ast, {\n      CallExpression: function CallExpression(path) {\n        var callee = path.get('callee');\n\n        if (callee.isIdentifier() && callee.node.name === localizeName && utils.isGlobalIdentifier(callee)) {\n          var _unwrapLocalizeCall = unwrapLocalizeCall(path, utils),\n              _unwrapLocalizeCall2 = _slicedToArray(_unwrapLocalizeCall, 2),\n              messageParts = _unwrapLocalizeCall2[0],\n              expressions = _unwrapLocalizeCall2[1];\n\n          positions.push({\n            // tslint:disable-next-line: no-non-null-assertion\n            start: path.node.start,\n            // tslint:disable-next-line: no-non-null-assertion\n            end: path.node.end,\n            messageParts: messageParts,\n            expressions: expressions\n          });\n        }\n      }\n    });\n  } else {\n    core_1.traverse(file.ast, {\n      TaggedTemplateExpression: function TaggedTemplateExpression(path) {\n        if (core_1.types.isIdentifier(path.node.tag) && path.node.tag.name === localizeName) {\n          var _unwrapTemplateLitera = unwrapTemplateLiteral(path, utils),\n              _unwrapTemplateLitera2 = _slicedToArray(_unwrapTemplateLitera, 2),\n              messageParts = _unwrapTemplateLitera2[0],\n              expressions = _unwrapTemplateLitera2[1];\n\n          positions.push({\n            // tslint:disable-next-line: no-non-null-assertion\n            start: path.node.start,\n            // tslint:disable-next-line: no-non-null-assertion\n            end: path.node.end,\n            messageParts: messageParts,\n            expressions: expressions\n          });\n        }\n      }\n    });\n  }\n\n  return positions;\n}\n\nfunction unwrapTemplateLiteral(path, utils) {\n  var _utils$unwrapMessageP = utils.unwrapMessagePartsFromTemplateLiteral(path.get('quasi').get('quasis')),\n      _utils$unwrapMessageP2 = _slicedToArray(_utils$unwrapMessageP, 1),\n      messageParts = _utils$unwrapMessageP2[0];\n\n  var _utils$unwrapExpressi = utils.unwrapExpressionsFromTemplateLiteral(path.get('quasi')),\n      _utils$unwrapExpressi2 = _slicedToArray(_utils$unwrapExpressi, 1),\n      expressions = _utils$unwrapExpressi2[0];\n\n  return [messageParts, expressions];\n}\n\nfunction unwrapLocalizeCall(path, utils) {\n  var _utils$unwrapMessageP3 = utils.unwrapMessagePartsFromLocalizeCall(path),\n      _utils$unwrapMessageP4 = _slicedToArray(_utils$unwrapMessageP3, 1),\n      messageParts = _utils$unwrapMessageP4[0];\n\n  var _utils$unwrapSubstitu = utils.unwrapSubstitutionsFromLocalizeCall(path),\n      _utils$unwrapSubstitu2 = _slicedToArray(_utils$unwrapSubstitu, 1),\n      expressions = _utils$unwrapSubstitu2[0];\n\n  return [messageParts, expressions];\n}\n\nfunction loadLocaleData(_x22, _x23, _x24) {\n  return _loadLocaleData.apply(this, arguments);\n}\n\nfunction _loadLocaleData() {\n  _loadLocaleData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(path, optimize, es5) {\n    var content, transformResult;\n    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            // The path is validated during option processing before the build starts\n            content = fs.readFileSync(path, 'utf8'); // Downlevel and optimize the data\n\n            _context11.next = 3;\n            return core_1.transformAsync(content, {\n              filename: path,\n              // The types do not include the false option even though it is valid\n              // tslint:disable-next-line: no-any\n              inputSourceMap: false,\n              babelrc: false,\n              configFile: false,\n              presets: [[require.resolve('@babel/preset-env'), {\n                bugfixes: true,\n                // IE 11 is the oldest supported browser\n                targets: es5 ? {\n                  ie: '11'\n                } : {\n                  esmodules: true\n                }\n              }]],\n              minified: environment_options_1.allowMinify && optimize,\n              compact: !environment_options_1.shouldBeautify && optimize,\n              comments: !optimize\n            });\n\n          case 3:\n            transformResult = _context11.sent;\n\n            if (!(!transformResult || !transformResult.code)) {\n              _context11.next = 6;\n              break;\n            }\n\n            throw new Error(\"Unknown error occurred processing bundle for \\\"\".concat(path, \"\\\".\"));\n\n          case 6:\n            return _context11.abrupt(\"return\", transformResult.code);\n\n          case 7:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _loadLocaleData.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/src/utils/process-bundle.js"],"names":["Object","defineProperty","exports","value","inlineLocales","createI18nPlugins","process","setup","core_1","require","template_1","cacache","crypto_1","fs","path","source_map_1","terser_1","v8","webpack_sources_1","environment_options_1","webpack_version_1","deserialize","FAST_SOURCEMAP_THRESHOLD","cachePath","i18n","data","options","Array","isArray","Buffer","from","cachePut","content","key","integrity","put","metadata","cacheKeys","result","name","integrityAlgorithm","generateIntegrityValue","code","runtime","processRuntime","basePath","dirname","filename","basename","downlevelFilename","replace","downlevel","optimizeOnly","sourceCode","sourceMap","map","JSON","parse","undefined","supportedBrowsers","targets","includes","push","transformAsync","inputSourceMap","babelrc","configFile","presets","resolve","modules","exclude","plugins","createIifeWrapperPlugin","replacements","createReplacePlugin","minified","allowMinify","optimize","compact","shouldBeautify","sourceMaps","transformResult","Error","downlevelCode","fastSourceMaps","length","mergeSourceMaps","downlevelMap","processBundle","join","isOriginal","original","ignoreOriginal","inputCode","resultCode","resultSourceMap","fast","isWebpackFiveOrHigher","mergeSourceMapsFast","finalSourceMap","SourceMapSource","first","second","sourceRoot","generator","SourceMapGenerator","SourceMapConsumer","with","originalConsumer","newConsumer","eachMapping","mapping","originalLine","originalPosition","originalPositionFor","line","column","originalColumn","source","addMapping","generated","generatedLine","generatedColumn","toJSON","file","sourcesContent","sourceContentMap","Map","i","sources","set","contentIndex","get","filepath","hiddenSourceMaps","rawMap","terserMangle","compress","ecma","mapContent","stringify","writeFileSync","fileResult","createFileEntry","minify","mangle","allowMangle","safari10","format","ascii_only","webkit","beautify","wrap_func_args","asObject","minifyOutput","outputCode","outputMap","size","byteLength","hashAlgorithm","createHash","update","digest","originalCode","runtimeData","visitor","StringLiteral","replacement","node","Program","exit","body","directives","wrapper","types","expressionStatement","callExpression","parenthesizedExpression","functionExpression","blockStatement","pushContainer","USE_LOCALIZE_PLUGINS","locale","translation","missingTranslation","localeDataContent","Promise","then","localizeDiag","diagnostics","Diagnostics","es2015","makeEs2015TranslatePlugin","es5","makeEs5TranslatePlugin","inlineLocale","makeLocalePlugin","unshiftContainer","default","ast","localizeName","count","flatOutput","hasLocalizeName","setLocale","inlineCopyOnly","parseSync","sourceType","message","index","indexOf","msg","substr","inlineLocalesDirect","inputMap","isSourceLocale","sourceLocale","translations","locales","localeDataPath","_a","dataPath","loadLocaleData","localeDiagnostics","transformFromAstSync","messages","outputPath","generate","utils","positions","findLocalizePositions","mapSourceRoot","ReplaceSource","OriginalSource","position","translated","translate","messageParts","expressions","expression","buildLocalizeReplacement","start","end","outputSource","setLocaleText","localeDataSource","ConcatSource","sourceAndMap","File","traverse","CallExpression","callee","isIdentifier","isGlobalIdentifier","unwrapLocalizeCall","TaggedTemplateExpression","tag","unwrapTemplateLiteral","unwrapMessagePartsFromTemplateLiteral","unwrapExpressionsFromTemplateLiteral","unwrapMessagePartsFromLocalizeCall","unwrapSubstitutionsFromLocalizeCall","readFileSync","bugfixes","ie","esmodules","comments"],"mappings":"AAAA;;;;;;;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwBF,OAAO,CAACG,iBAAR,GAA4BH,OAAO,CAACI,OAAR,GAAkBJ,OAAO,CAACK,KAAR,GAAgB,KAAK,CAA3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAtB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,iBAAD,CAA1B;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMG,QAAQ,GAAGH,OAAO,CAAC,QAAD,CAAxB;;AACA,IAAMI,EAAE,GAAGJ,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMK,IAAI,GAAGL,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMM,YAAY,GAAGN,OAAO,CAAC,YAAD,CAA5B;;AACA,IAAMO,QAAQ,GAAGP,OAAO,CAAC,QAAD,CAAxB;;AACA,IAAMQ,EAAE,GAAGR,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMS,iBAAiB,GAAGT,OAAO,CAAC,iBAAD,CAAjC;;AACA,IAAMU,qBAAqB,GAAGV,OAAO,CAAC,uBAAD,CAArC;;AACA,IAAMW,iBAAiB,GAAGX,OAAO,CAAC,mBAAD,CAAjC;;AACA,IAAMY,WAAW,GAAGJ,EAAE,CAACI,WAAvB,C,CACA;;AACA,IAAMC,wBAAwB,GAAG,MAAM,IAAvC;AACA,IAAIC,SAAJ;AACA,IAAIC,IAAJ;;AACA,SAASjB,KAAT,CAAekB,IAAf,EAAqB;AACjB,MAAMC,OAAO,GAAGC,KAAK,CAACC,OAAN,CAAcH,IAAd,IACVJ,WAAW,CAACQ,MAAM,CAACC,IAAP,CAAYL,IAAZ,CAAD,CADD,GAEVA,IAFN;AAGAF,EAAAA,SAAS,GAAGG,OAAO,CAACH,SAApB;AACAC,EAAAA,IAAI,GAAGE,OAAO,CAACF,IAAf;AACH;;AACDtB,OAAO,CAACK,KAAR,GAAgBA,KAAhB;;SACewB,Q;;;;;uEAAf,iBAAwBC,OAAxB,EAAiCC,GAAjC,EAAsCC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQX,SAAS,IAAIU,GADrB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAEctB,OAAO,CAACwB,GAAR,CAAYZ,SAAZ,EAAuBU,GAAvB,EAA4BD,OAA5B,EAAqC;AACvCI,cAAAA,QAAQ,EAAE;AAAEF,gBAAAA,SAAS,EAATA;AAAF;AAD6B,aAArC,CAFd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAOe5B,O;;;;;sEAAf,kBAAuBoB,OAAvB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACI,gBAAI,CAACA,OAAO,CAACW,SAAb,EAAwB;AACpBX,cAAAA,OAAO,CAACW,SAAR,GAAoB,EAApB;AACH;;AACKC,YAAAA,MAJV,GAImB;AAAEC,cAAAA,IAAI,EAAEb,OAAO,CAACa;AAAhB,aAJnB;;AAKI,gBAAIb,OAAO,CAACc,kBAAZ,EAAgC;AAC5B;AACAF,cAAAA,MAAM,CAACJ,SAAP,GAAmBO,sBAAsB,CAACf,OAAO,CAACc,kBAAT,EAA6Bd,OAAO,CAACgB,IAArC,CAAzC;AACH,aARL,CASI;;;AATJ,iBAUQhB,OAAO,CAACiB,OAVhB;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAWoBL,MAXpB;AAAA;AAAA,mBAWsCM,cAAc,CAAClB,OAAD,CAXpD;;AAAA;AAAA;AAAA;;AAAA;AAaUmB,YAAAA,QAbV,GAaqB/B,IAAI,CAACgC,OAAL,CAAapB,OAAO,CAACqB,QAArB,CAbrB;AAcUA,YAAAA,QAdV,GAcqBjC,IAAI,CAACkC,QAAL,CAActB,OAAO,CAACqB,QAAtB,CAdrB;AAeUE,YAAAA,iBAfV,GAe8BF,QAAQ,CAACG,OAAT,CAAiB,sBAAjB,EAAyC,MAAzC,CAf9B;AAgBUC,YAAAA,SAhBV,GAgBsB,CAACzB,OAAO,CAAC0B,YAhB/B;AAiBUC,YAAAA,UAjBV,GAiBuB3B,OAAO,CAACgB,IAjB/B;AAkBUY,YAAAA,SAlBV,GAkBsB5B,OAAO,CAAC6B,GAAR,GAAcC,IAAI,CAACC,KAAL,CAAW/B,OAAO,CAAC6B,GAAnB,CAAd,GAAwCG,SAlB9D;;AAAA,iBAqBQP,SArBR;AAAA;AAAA;AAAA;;AAAA,oCAsBoDzB,OAtBpD,CAsBgBiC,iBAtBhB,EAsBmCC,OAtBnC,sCAsB6C,EAtB7C,0BAuBQ;AACA;AACA;;AACA,gBAAIjC,KAAK,CAACC,OAAN,CAAcgC,OAAd,KAA0BA,OAAO,CAACC,QAAR,CAAiB,aAAjB,CAA9B,EAA+D;AAC3DD,cAAAA,OAAO,CAACE,IAAR,CAAa,WAAb;AACH,aAFD,MAGK,IAAI,aAAaF,OAAjB,EAA0B;AAC3BA,cAAAA,OAAO,CAAC,QAAD,CAAP,GAAoB,IAApB;AACH,aA/BT,CAgCQ;;;AAhCR;AAAA,mBAiCsCpD,MAAM,CAACuD,cAAP,CAAsBV,UAAtB,EAAkC;AAC5DN,cAAAA,QAAQ,EAARA,QAD4D;AAE5D;AACA;AACA;AACAiB,cAAAA,cAAc,EAAE,KAL4C;AAM5DC,cAAAA,OAAO,EAAE,KANmD;AAO5DC,cAAAA,UAAU,EAAE,KAPgD;AAQ5DC,cAAAA,OAAO,EAAE,CAAC,CACF1D,OAAO,CAAC2D,OAAR,CAAgB,mBAAhB,CADE,EAEF;AACI;AACAR,gBAAAA,OAAO,EAAPA,OAFJ;AAGI;AACAS,gBAAAA,OAAO,EAAE,KAJb;AAKI;AACAC,gBAAAA,OAAO,EAAE,CAAC,yBAAD;AANb,eAFE,CAAD,CARmD;AAmB5DC,cAAAA,OAAO,GACHC,uBAAuB,EADpB,4BAEC9C,OAAO,CAAC+C,YAAR,GAAuB,CAACC,mBAAmB,CAAChD,OAAO,CAAC+C,YAAT,CAApB,CAAvB,GAAqE,EAFtE,EAnBqD;AAuB5DE,cAAAA,QAAQ,EAAExD,qBAAqB,CAACyD,WAAtB,IAAqC,CAAC,CAAClD,OAAO,CAACmD,QAvBG;AAwB5DC,cAAAA,OAAO,EAAE,CAAC3D,qBAAqB,CAAC4D,cAAvB,IAAyC,CAAC,CAACrD,OAAO,CAACmD,QAxBA;AAyB5DG,cAAAA,UAAU,EAAE,CAAC,CAAC1B;AAzB8C,aAAlC,CAjCtC;;AAAA;AAiCc2B,YAAAA,eAjCd;;AAAA,kBA4DY,CAACA,eAAD,IAAoB,CAACA,eAAe,CAACvC,IA5DjD;AAAA;AAAA;AAAA;;AAAA,kBA6DkB,IAAIwC,KAAJ,0DAA2DxD,OAAO,CAACqB,QAAnE,SA7DlB;;AAAA;AA+DQoC,YAAAA,aAAa,GAAGF,eAAe,CAACvC,IAAhC;;AA/DR,kBAgEYY,SAAS,IAAI2B,eAAe,CAAC1B,GAhEzC;AAAA;AAAA;AAAA;;AAiEY;AACM6B,YAAAA,cAlElB,GAkEmC/B,UAAU,CAACgC,MAAX,GAAoB/D,wBAlEvD;AAAA;AAAA,mBAmEiCgE,eAAe,CAACjC,UAAD,EAAaC,SAAb,EAAwB6B,aAAxB,EAAuCF,eAAe,CAAC1B,GAAvD,EAA4DR,QAA5D,EACpC;AACA;AACA,aAAC,CAACrB,OAAO,CAACmD,QAAV,IAAsBO,cAHc,CAnEhD;;AAAA;AAmEYG,YAAAA,YAnEZ;;AAAA;AAAA,iBAyEQJ,aAzER;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA0EiCK,aAAa,iCAC/B9D,OAD+B;AAElCgB,cAAAA,IAAI,EAAEyC,aAF4B;AAGlC5B,cAAAA,GAAG,EAAEgC,YAH6B;AAIlCxC,cAAAA,QAAQ,EAAEjC,IAAI,CAAC2E,IAAL,CAAU5C,QAAV,EAAoBI,iBAApB,CAJwB;AAKlCyC,cAAAA,UAAU,EAAE;AALsB,eA1E9C;;AAAA;AA0EQpD,YAAAA,MAAM,CAACa,SA1Ef;;AAAA;AAAA,kBAkFQ,CAACb,MAAM,CAACqD,QAAR,IAAoB,CAACjE,OAAO,CAACkE,cAlFrC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAmFgCJ,aAAa,iCAC9B9D,OAD8B;AAEjCgE,cAAAA,UAAU,EAAE;AAFqB,eAnF7C;;AAAA;AAmFQpD,YAAAA,MAAM,CAACqD,QAnFf;;AAAA;AAAA,8CAwFWrD,MAxFX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA0FApC,OAAO,CAACI,OAAR,GAAkBA,OAAlB;;SACegF,e;;;;;8EAAf,kBAA+BO,SAA/B,EAA0C7B,cAA1C,EAA0D8B,UAA1D,EAAsEC,eAAtE,EAAuFhD,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiGiD,YAAAA,IAAjG,8DAAwG,KAAxG;;AAAA,kBAGQA,IAAI,IAAI5E,iBAAiB,CAAC6E,qBAAlB,EAHhB;AAAA;AAAA;AAAA;;AAAA,8CAIeC,mBAAmB,CAAClC,cAAD,EAAiB+B,eAAjB,CAJlC;;AAAA;AAMI;AACA;AACA;AACMI,YAAAA,cATV,GAS2B,IAAIjF,iBAAiB,CAACkF,eAAtB,CAAsCN,UAAtC,EAAkD/C,QAAlD,EAA4DgD,eAA5D,EAA6EF,SAA7E,EAAwF7B,cAAxF,EAAwG,IAAxG,EAA8GT,GAA9G,EAT3B;AAAA,8CAUW4C,cAVX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAYeD,mB;;;;;kFAAf,kBAAmCG,KAAnC,EAA0CC,MAA1C;AAAA;;AAAA;AAAA;AAAA;AAAA;AACUC,YAAAA,UADV,GACuBF,KAAK,CAACE,UAD7B;AAEUC,YAAAA,SAFV,GAEsB,IAAIzF,YAAY,CAAC0F,kBAAjB,EAFtB,EAGI;;AACA,mBAAOJ,KAAK,CAACE,UAAb;AAJJ;AAAA,mBAKUxF,YAAY,CAAC2F,iBAAb,CAA+BC,IAA/B,CAAoCN,KAApC,EAA2C,IAA3C,EAAiD,UAAAO,gBAAgB,EAAI;AACvE,qBAAO7F,YAAY,CAAC2F,iBAAb,CAA+BC,IAA/B,CAAoCL,MAApC,EAA4C,IAA5C,EAAkD,UAAAO,WAAW,EAAI;AACpEA,gBAAAA,WAAW,CAACC,WAAZ,CAAwB,UAAAC,OAAO,EAAI;AAC/B,sBAAIA,OAAO,CAACC,YAAR,KAAyB,IAA7B,EAAmC;AAC/B;AACH;;AACD,sBAAMC,gBAAgB,GAAGL,gBAAgB,CAACM,mBAAjB,CAAqC;AAC1DC,oBAAAA,IAAI,EAAEJ,OAAO,CAACC,YAD4C;AAE1DI,oBAAAA,MAAM,EAAEL,OAAO,CAACM;AAF0C,mBAArC,CAAzB;;AAIA,sBAAIJ,gBAAgB,CAACE,IAAjB,KAA0B,IAA1B,IACAF,gBAAgB,CAACG,MAAjB,KAA4B,IAD5B,IAEAH,gBAAgB,CAACK,MAAjB,KAA4B,IAFhC,EAEsC;AAClC;AACH;;AACDd,kBAAAA,SAAS,CAACe,UAAV,CAAqB;AACjBC,oBAAAA,SAAS,EAAE;AACPL,sBAAAA,IAAI,EAAEJ,OAAO,CAACU,aADP;AAEPL,sBAAAA,MAAM,EAAEL,OAAO,CAACW;AAFT,qBADM;AAKjBnF,oBAAAA,IAAI,EAAE0E,gBAAgB,CAAC1E,IAAjB,IAAyBmB,SALd;AAMjBiC,oBAAAA,QAAQ,EAAE;AACNwB,sBAAAA,IAAI,EAAEF,gBAAgB,CAACE,IADjB;AAENC,sBAAAA,MAAM,EAAEH,gBAAgB,CAACG;AAFnB,qBANO;AAUjBE,oBAAAA,MAAM,EAAEL,gBAAgB,CAACK;AAVR,mBAArB;AAYH,iBAzBD;AA0BH,eA3BM,CAAP;AA4BH,aA7BK,CALV;;AAAA;AAmCU/D,YAAAA,GAnCV,GAmCgBiD,SAAS,CAACmB,MAAV,EAnChB;AAoCIpE,YAAAA,GAAG,CAACqE,IAAJ,GAAWtB,MAAM,CAACsB,IAAlB;AACArE,YAAAA,GAAG,CAACgD,UAAJ,GAAiBA,UAAjB,CArCJ,CAsCI;;AACA,gBAAIF,KAAK,CAACwB,cAAV,EAA0B;AACtB;AACMC,cAAAA,gBAFgB,GAEG,IAAIC,GAAJ,EAFH;;AAGtB,mBAASC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAG3B,KAAK,CAAC4B,OAAN,CAAc5C,MAAlC,EAA0C2C,CAAC,EAA3C,EAA+C;AAC3C;AACAF,gBAAAA,gBAAgB,CAACI,GAAjB,CAAqBpH,IAAI,CAACsD,OAAL,CAAa,GAAb,EAAkBiC,KAAK,CAAC4B,OAAN,CAAcD,CAAd,CAAlB,CAArB,EAA0DA,CAA1D;AACH;;AACDzE,cAAAA,GAAG,CAACsE,cAAJ,GAAqB,EAArB;;AACA,mBAASG,EAAT,GAAa,CAAb,EAAgBA,EAAC,GAAGzE,GAAG,CAAC0E,OAAJ,CAAY5C,MAAhC,EAAwC2C,EAAC,EAAzC,EAA6C;AACnCG,gBAAAA,YADmC,GACpBL,gBAAgB,CAACM,GAAjB,CAAqBtH,IAAI,CAACsD,OAAL,CAAa,GAAb,EAAkBb,GAAG,CAAC0E,OAAJ,CAAYD,EAAZ,CAAlB,CAArB,CADoB;;AAEzC,oBAAIG,YAAY,KAAKzE,SAArB,EAAgC;AAC5BH,kBAAAA,GAAG,CAACsE,cAAJ,CAAmB/D,IAAnB,CAAwB,EAAxB;AACH,iBAFD,MAGK;AACDP,kBAAAA,GAAG,CAACsE,cAAJ,CAAmB/D,IAAnB,CAAwBuC,KAAK,CAACwB,cAAN,CAAqBM,YAArB,CAAxB;AACH;AACJ;AACJ,aAxDL,CAyDI;;;AACA,gBAAI5B,UAAJ,EAAgB;AACZF,cAAAA,KAAK,CAACE,UAAN,GAAmBA,UAAnB;AACH;;AA5DL,8CA6DWhD,GA7DX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA+DeiC,a;;;;;4EAAf,kBAA6B9D,OAA7B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACYmD,YAAAA,QADZ,GAC2HnD,OAD3H,CACYmD,QADZ,EACsBa,UADtB,GAC2HhE,OAD3H,CACsBgE,UADtB,EACkChD,IADlC,GAC2HhB,OAD3H,CACkCgB,IADlC,EACwCa,GADxC,GAC2H7B,OAD3H,CACwC6B,GADxC,EACuD8E,QADvD,GAC2H3G,OAD3H,CAC6CqB,QAD7C,EACiEuF,gBADjE,GAC2H5G,OAD3H,CACiE4G,gBADjE,uBAC2H5G,OAD3H,CACmFW,SADnF,EACmFA,SADnF,mCAC+F,EAD/F,uBACmGG,kBADnG,GAC2Hd,OAD3H,CACmGc,kBADnG;AAEU+F,YAAAA,MAFV,GAEmB,OAAOhF,GAAP,KAAe,QAAf,GAA0BC,IAAI,CAACC,KAAL,CAAWF,GAAX,CAA1B,GAA4CA,GAF/D;AAGUR,YAAAA,QAHV,GAGqBjC,IAAI,CAACkC,QAAL,CAAcqF,QAAd,CAHrB;;AAKI,gBAAIE,MAAJ,EAAY;AACRA,cAAAA,MAAM,CAACX,IAAP,GAAc7E,QAAd;AACH;;AAPL,iBAQQ8B,QARR;AAAA;AAAA;AAAA;;AAAA;AAAA,mBASuB2D,YAAY,CAAC9F,IAAD,EAAO;AAC9BK,cAAAA,QAAQ,EAARA,QAD8B;AAE9BQ,cAAAA,GAAG,EAAEgF,MAFyB;AAG9BE,cAAAA,QAAQ,EAAE,CAAC/C,UAHmB;AAI9BgD,cAAAA,IAAI,EAAEhD,UAAU,GAAG,IAAH,GAAU;AAJI,aAAP,CATnC;;AAAA;AASQpD,YAAAA,MATR;AAAA;AAAA;;AAAA;AAiBQA,YAAAA,MAAM,GAAG;AACLiB,cAAAA,GAAG,EAAEgF,MADA;AAEL7F,cAAAA,IAAI,EAAJA;AAFK,aAAT;;AAjBR;AAAA,iBAuBQJ,MAAM,CAACiB,GAvBf;AAAA;AAAA;AAAA;;AAwBQ,gBAAI,CAAC+E,gBAAL,EAAuB;AACnBhG,cAAAA,MAAM,CAACI,IAAP,qCAAyCK,QAAzC;AACH;;AACD4F,YAAAA,UAAU,GAAGnF,IAAI,CAACoF,SAAL,CAAetG,MAAM,CAACiB,GAAtB,CAAb;AA3BR;AAAA,mBA4BcxB,QAAQ,CAAC4G,UAAD,EAAatG,SAAS,CAACqD,UAAU,GAAG;AAAE;AAAL;AAAK;AAAoB;AAAE;AAAtC,aAAtB,CA5BtB;;AAAA;AA6BQ7E,YAAAA,EAAE,CAACgI,aAAH,CAAiBR,QAAQ,GAAG,MAA5B,EAAoCM,UAApC;;AA7BR;AA+BUG,YAAAA,UA/BV,GA+BuBC,eAAe,CAACV,QAAD,EAAW/F,MAAM,CAACI,IAAlB,EAAwBiG,UAAxB,EAAoCnG,kBAApC,CA/BtC;AAAA;AAAA,mBAgCUT,QAAQ,CAACO,MAAM,CAACI,IAAR,EAAcL,SAAS,CAACqD,UAAU,GAAG;AAAE;AAAL;AAAK;AAAqB;AAAE;AAAvC,aAAvB,EAAoFoD,UAAU,CAAC5G,SAA/F,CAhClB;;AAAA;AAiCIrB,YAAAA,EAAE,CAACgI,aAAH,CAAiBR,QAAjB,EAA2B/F,MAAM,CAACI,IAAlC;AAjCJ,8CAkCWoG,UAlCX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAoCeN,Y;;;;;2EAAf,kBAA4B9F,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkChB,YAAAA,OAAlC,8DAA4C,EAA5C;AAAA;AAAA,mBAI+BV,QAAQ,CAACgI,MAAT,CAAgBtH,OAAO,CAACqB,QAAR,uBAAsBrB,OAAO,CAACqB,QAA9B,EAAyCL,IAAzC,IAAkDA,IAAlE,EAAwE;AAC/F+F,cAAAA,QAAQ,EAAEtH,qBAAqB,CAACyD,WAAtB,IAAqC,CAAC,CAAClD,OAAO,CAAC+G,QADsC;AAE/FC,cAAAA,IAAI,EAAEhH,OAAO,CAACgH,IAAR,IAAgB,CAFyE;AAG/FO,cAAAA,MAAM,EAAE9H,qBAAqB,CAAC+H,WAHiE;AAI/FC,cAAAA,QAAQ,EAAE,IAJqF;AAK/FC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,UAAU,EAAE,IADR;AAEJC,gBAAAA,MAAM,EAAE,IAFJ;AAGJC,gBAAAA,QAAQ,EAAEpI,qBAAqB,CAAC4D,cAH5B;AAIJyE,gBAAAA,cAAc,EAAE;AAJZ,eALuF;AAW/FlG,cAAAA,SAAS,EAAE,CAAC,CAAC5B,OAAO,CAAC6B,GAAV,IACP;AACIkG,gBAAAA,QAAQ,EAAE;AADd;AAZ2F,aAAxE,CAJ/B;;AAAA;AAIUC,YAAAA,YAJV;AAoBI;AACMC,YAAAA,UArBV,GAqBuBD,YAAY,CAAChH,IArBpC;;AAAA,kBAuBQhB,OAAO,CAAC6B,GAAR,IAAemG,YAAY,CAACnG,GAvBpC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAwB0B+B,eAAe,CAAC5C,IAAD,EAAOhB,OAAO,CAAC6B,GAAf,EAAoBoG,UAApB,EAAgCD,YAAY,CAACnG,GAA7C,EAAkD7B,OAAO,CAACqB,QAAR,IAAoB,GAAtE,EAA2EL,IAAI,CAAC2C,MAAL,GAAc/D,wBAAzF,CAxBzC;;AAAA;AAwBQsI,YAAAA,SAxBR;;AAAA;AAAA,8CA0BW;AAAElH,cAAAA,IAAI,EAAEiH,UAAR;AAAoBpG,cAAAA,GAAG,EAAEqG;AAAzB,aA1BX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA4BA,SAASb,eAAT,CAAyBhG,QAAzB,EAAmCL,IAAnC,EAAyCa,GAAzC,EAA8Cf,kBAA9C,EAAkE;AAC9D,SAAO;AACHO,IAAAA,QAAQ,EAAEA,QADP;AAEH8G,IAAAA,IAAI,EAAEhI,MAAM,CAACiI,UAAP,CAAkBpH,IAAlB,CAFH;AAGHR,IAAAA,SAAS,EAAEM,kBAAkB,IAAIC,sBAAsB,CAACD,kBAAD,EAAqBE,IAArB,CAHpD;AAIHa,IAAAA,GAAG,EAAE,CAACA,GAAD,GACCG,SADD,GAEC;AACEX,MAAAA,QAAQ,EAAEA,QAAQ,GAAG,MADvB;AAEE8G,MAAAA,IAAI,EAAEhI,MAAM,CAACiI,UAAP,CAAkBvG,GAAlB;AAFR;AANH,GAAP;AAWH;;AACD,SAASd,sBAAT,CAAgCsH,aAAhC,EAA+CrH,IAA/C,EAAqD;AACjD,SAAQqH,aAAa,GACjB,GADI,GAEJnJ,QAAQ,CAACoJ,UAAT,CAAoBD,aAApB,EACKE,MADL,CACYvH,IADZ,EAEKwH,MAFL,CAEY,QAFZ,CAFJ;AAKH,C,CACD;AACA;AACA;;;SACetH,c;;;;;6EAAf,kBAA8BlB,OAA9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACQyI,YAAAA,YADR,GACuBzI,OAAO,CAACgB,IAD/B;AAEQyC,YAAAA,aAFR,GAEwBzD,OAAO,CAACgB,IAFhC,EAGI;;AAHJ,kBAIQhB,OAAO,CAACc,kBAAR,IAA8Bd,OAAO,CAAC0I,WAJ9C;AAAA;AAAA;AAAA;;AAAA,oDAK2B1I,OAAO,CAAC0I,WALnC;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKmB3I,YAAAA,IALnB;;AAAA,gBAMiBA,IAAI,CAACS,SANtB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AASY,gBAAIT,IAAI,CAACkE,QAAL,IAAiBlE,IAAI,CAACkE,QAAL,CAAczD,SAAnC,EAA8C;AAC1CiI,cAAAA,YAAY,GAAGA,YAAY,CAACjH,OAAb,CAAqBzB,IAAI,CAACS,SAA1B,EAAqCT,IAAI,CAACkE,QAAL,CAAczD,SAAnD,CAAf;AACH;;AACD,gBAAIT,IAAI,CAAC0B,SAAL,IAAkB1B,IAAI,CAAC0B,SAAL,CAAejB,SAArC,EAAgD;AAC5CiD,cAAAA,aAAa,GAAGA,aAAa,CAACjC,OAAd,CAAsBzB,IAAI,CAACS,SAA3B,EAAsCT,IAAI,CAAC0B,SAAL,CAAejB,SAArD,CAAhB;AACH;;AAdb;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAiBI;AACA;AACAiD,YAAAA,aAAa,GAAGA,aAAa,CAACjC,OAAd,CAAsB,yBAAtB,EAAiD,WAAjD,CAAhB;AAnBJ;AAAA,mBAqBwBsC,aAAa,iCACtB9D,OADsB;AAEzBgB,cAAAA,IAAI,EAAEyH,YAFmB;AAGzBzE,cAAAA,UAAU,EAAE;AAHa,eArBrC;;AAAA;AAAA;AAAA;AAAA,mBA0ByBF,aAAa,iCACvB9D,OADuB;AAE1BgB,cAAAA,IAAI,EAAEyC,aAFoB;AAG1BpC,cAAAA,QAAQ,EAAErB,OAAO,CAACqB,QAAR,CAAiBG,OAAjB,CAAyB,sBAAzB,EAAiD,MAAjD,CAHgB;AAI1BwC,cAAAA,UAAU,EAAE;AAJc,eA1BtC;;AAAA;AAAA;AAAA;AAqBQC,cAAAA,QArBR;AA0BQxC,cAAAA,SA1BR;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkCA,SAASuB,mBAAT,CAA6BD,YAA7B,EAA2C;AACvC,SAAO;AACH4F,IAAAA,OAAO,EAAE;AACLC,MAAAA,aADK,yBACSxJ,IADT,EACe;AAAA,mDACU2D,YADV;AAAA;;AAAA;AAChB,8DAAwC;AAAA,gBAA7B8F,WAA6B;;AACpC,gBAAIzJ,IAAI,CAAC0J,IAAL,CAAUrK,KAAV,KAAoBoK,WAAW,CAAC,CAAD,CAAnC,EAAwC;AACpCzJ,cAAAA,IAAI,CAAC0J,IAAL,CAAUrK,KAAV,GAAkBoK,WAAW,CAAC,CAAD,CAA7B;AACH;AACJ;AALe;AAAA;AAAA;AAAA;AAAA;AAMnB;AAPI;AADN,GAAP;AAWH;;AACD,SAAS/F,uBAAT,GAAmC;AAC/B,SAAO;AACH6F,IAAAA,OAAO,EAAE;AACLI,MAAAA,OAAO,EAAE;AACLC,QAAAA,IADK,gBACA5J,IADA,EACM;AACP;AACA,2BAA6BA,IAAI,CAAC0J,IAAlC;AAAA,cAAQG,IAAR,cAAQA,IAAR;AAAA,cAAcC,UAAd,cAAcA,UAAd,CAFO,CAGP;;AACA9J,UAAAA,IAAI,CAAC0J,IAAL,CAAUG,IAAV,GAAiB,EAAjB;AACA7J,UAAAA,IAAI,CAAC0J,IAAL,CAAUI,UAAV,GAAuB,EAAvB,CALO,CAMP;;AACA,cAAMC,OAAO,GAAGrK,MAAM,CAACsK,KAAP,CAAaC,mBAAb,CAAiCvK,MAAM,CAACsK,KAAP,CAAaE,cAAb,CAA4BxK,MAAM,CAACsK,KAAP,CAAaG,uBAAb,CAAqCzK,MAAM,CAACsK,KAAP,CAAaI,kBAAb,CAAgCxH,SAAhC,EAA2C,EAA3C,EAA+ClD,MAAM,CAACsK,KAAP,CAAaK,cAAb,CAA4BR,IAA5B,EAAkCC,UAAlC,CAA/C,CAArC,CAA5B,EAAiK,EAAjK,CAAjC,CAAhB,CAPO,CAQP;;AACA9J,UAAAA,IAAI,CAACsK,aAAL,CAAmB,MAAnB,EAA2BP,OAA3B;AACH;AAXI;AADJ;AADN,GAAP;AAiBH;;AACD,IAAMQ,oBAAoB,GAAG,KAA7B;;SACehL,iB;;;;;gFAAf,kBAAiCiL,MAAjC,EAAyCC,WAAzC,EAAsDC,kBAAtD,EAA0EC,iBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AACUlH,YAAAA,OADV,GACoB,EADpB;AAAA;AAAA,mBAE+BmH,OAAO,CAACtH,OAAR,GAAkBuH,IAAlB,CAAuB;AAAA,qBAAMlL,OAAO,CAAC,6CAAD,CAAb;AAAA,aAAvB,CAF/B;;AAAA;AAEUmL,YAAAA,YAFV;AAGUC,YAAAA,WAHV,GAGwB,IAAID,YAAY,CAACE,WAAjB,EAHxB;AAAA;AAAA,mBAIyBJ,OAAO,CAACtH,OAAR,GAAkBuH,IAAlB,CAAuB;AAAA,qBAAMlL,OAAO,EACzD;AACA,8FAFyD,CAAb;AAAA,aAAvB,CAJzB;;AAAA;AAIUsL,YAAAA,MAJV;AAOIxH,YAAAA,OAAO,CAACT,IAAR,EACA;AACAiI,YAAAA,MAAM,CAACC,yBAAP,CAAiCH,WAAjC,EAA+CN,WAAW,IAAI,EAA9D,EAAmE;AAC/DC,cAAAA,kBAAkB,EAAED,WAAW,KAAK7H,SAAhB,GAA4B,QAA5B,GAAuC8H;AADI,aAAnE,CAFA;AAPJ;AAAA,mBAYsBE,OAAO,CAACtH,OAAR,GAAkBuH,IAAlB,CAAuB;AAAA,qBAAMlL,OAAO,EACtD;AACA,2FAFsD,CAAb;AAAA,aAAvB,CAZtB;;AAAA;AAYUwL,YAAAA,GAZV;AAeI1H,YAAAA,OAAO,CAACT,IAAR,EACA;AACAmI,YAAAA,GAAG,CAACC,sBAAJ,CAA2BL,WAA3B,EAAyCN,WAAW,IAAI,EAAxD,EAA6D;AACzDC,cAAAA,kBAAkB,EAAED,WAAW,KAAK7H,SAAhB,GAA4B,QAA5B,GAAuC8H;AADF,aAA7D,CAFA;AAfJ;AAAA,mBAoB+BE,OAAO,CAACtH,OAAR,GAAkBuH,IAAlB,CAAuB;AAAA,qBAAMlL,OAAO,EAC/D;AACA,oFAF+D,CAAb;AAAA,aAAvB,CApB/B;;AAAA;AAoBU0L,YAAAA,YApBV;AAuBI5H,YAAAA,OAAO,CAACT,IAAR,CAAaqI,YAAY,CAACC,gBAAb,CAA8Bd,MAA9B,CAAb;;AACA,gBAAIG,iBAAJ,EAAuB;AACnBlH,cAAAA,OAAO,CAACT,IAAR,CAAa;AACTuG,gBAAAA,OAAO,EAAE;AACLI,kBAAAA,OADK,mBACG3J,IADH,EACS;AACVA,oBAAAA,IAAI,CAACuL,gBAAL,CAAsB,MAAtB,EAA8B3L,UAAU,CAAC4L,OAAX,CAAmBC,GAAnB,CAAuBd,iBAAvB,CAA9B;AACH;AAHI;AADA,eAAb;AAOH;;AAhCL,8CAiCW;AAAEI,cAAAA,WAAW,EAAXA,WAAF;AAAetH,cAAAA,OAAO,EAAPA;AAAf,aAjCX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAmCArE,OAAO,CAACG,iBAAR,GAA4BA,iBAA5B;AACA,IAAMmM,YAAY,GAAG,WAArB;;SACepM,a;;;;;4EAAf,kBAA6BsB,OAA7B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEQ,CAACF,IAAD,IAASA,IAAI,CAACpB,aAAL,CAAmByJ,IAAnB,KAA4B,CAF7C;AAAA;AAAA;AAAA;;AAAA,8CAGe;AAAEjC,cAAAA,IAAI,EAAElG,OAAO,CAACqB,QAAhB;AAA0B8I,cAAAA,WAAW,EAAE,EAAvC;AAA2CY,cAAAA,KAAK,EAAE;AAAlD,aAHf;;AAAA;AAAA,kBAKQjL,IAAI,CAACkL,UAAL,IAAmBlL,IAAI,CAACpB,aAAL,CAAmByJ,IAAnB,GAA0B,CALrD;AAAA;AAAA;AAAA;;AAAA,kBAMc,IAAI3E,KAAJ,CAAU,yDAAV,CANd;;AAAA;AAQUyH,YAAAA,eARV,GAQ4BjL,OAAO,CAACgB,IAAR,CAAamB,QAAb,CAAsB2I,YAAtB,CAR5B;;AAAA,kBASQ,CAACG,eAAD,IAAoB,CAACjL,OAAO,CAACkL,SATrC;AAAA;AAAA;AAAA;;AAAA,8CAUeC,cAAc,CAACnL,OAAD,CAV7B;;AAAA;AAAA;AAcQ6K,YAAAA,GAAG,GAAG/L,MAAM,CAACsM,SAAP,CAAiBpL,OAAO,CAACgB,IAAzB,EAA+B;AACjCuB,cAAAA,OAAO,EAAE,KADwB;AAEjCC,cAAAA,UAAU,EAAE,KAFqB;AAGjC6I,cAAAA,UAAU,EAAE,QAHqB;AAIjChK,cAAAA,QAAQ,EAAErB,OAAO,CAACqB;AAJe,aAA/B,CAAN;AAdR;AAAA;;AAAA;AAAA;AAAA;;AAAA,iBAsBY,aAAMiK,OAtBlB;AAAA;AAAA;AAAA;;AAuBY;AACA;AACA;AACMC,YAAAA,KA1BlB,GA0B0B,aAAMD,OAAN,CAAcE,OAAd,CAAsB,KAAtB,CA1B1B;AA2BkBC,YAAAA,GA3BlB,GA2BwBF,KAAK,KAAK,CAAC,CAAX,GAAe,aAAMD,OAAN,CAAcI,MAAd,CAAqB,CAArB,EAAwBH,KAAK,GAAG,CAAhC,CAAf,GAAoD,aAAMD,OA3BlF;AAAA,kBA4BkB,IAAI9H,KAAJ,WAAaiI,GAAb,iDAAsDzL,OAAO,CAACqB,QAA9D,QA5BlB;;AAAA;AAAA,gBA+BSwJ,GA/BT;AAAA;AAAA;AAAA;;AAAA,kBAgCc,IAAIrH,KAAJ,kDAAmDxD,OAAO,CAACqB,QAA3D,QAhCd;;AAAA;AAAA,gBAkCSsI,oBAlCT;AAAA;AAAA;AAAA;;AAAA,8CAmCegC,mBAAmB,CAACd,GAAD,EAAM7K,OAAN,CAnClC;;AAAA;AAqCUmK,YAAAA,WArCV,GAqCwB,EArCxB;AAsCUyB,YAAAA,QAtCV,GAsCqB5L,OAAO,CAAC6B,GAAR,IAAeC,IAAI,CAACC,KAAL,CAAW/B,OAAO,CAAC6B,GAAnB,CAtCpC;AAAA,oDAuCyB/B,IAAI,CAACpB,aAvC9B;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuCekL,YAAAA,MAvCf;AAwCciC,YAAAA,cAxCd,GAwC+BjC,MAAM,KAAK9J,IAAI,CAACgM,YAxC/C,EAyCQ;;AACMC,YAAAA,YA1Cd,GA0C6BF,cAAc,GAAG,EAAH,GAAQ/L,IAAI,CAACkM,OAAL,CAAapC,MAAb,EAAqBC,WAArB,IAAoC,EA1CvF;AA2CYE,YAAAA,iBA3CZ;;AAAA,iBA4CY/J,OAAO,CAACkL,SA5CpB;AAAA;AAAA;AAAA;;AA6CY;AACMe,YAAAA,cA9ClB,GA8CmC,CAACC,EAAE,GAAGpM,IAAI,CAACkM,OAAL,CAAapC,MAAb,CAAN,MAAgC,IAAhC,IAAwCsC,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiEA,EAAE,CAACC,QA9CvG;;AAAA,iBA+CgBF,cA/ChB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAgD0CG,cAAc,CAACH,cAAD,EAAiB,IAAjB,EAAuBjM,OAAO,CAACuK,GAA/B,CAhDxD;;AAAA;AAgDgBR,YAAAA,iBAhDhB;;AAAA;AAAA;AAAA,mBAmDkEpL,iBAAiB,CAACiL,MAAD,EAASmC,YAAT,EAAuBF,cAAc,GAAG,QAAH,GAAc7L,OAAO,CAAC8J,kBAAR,IAA8B,SAAjF,EAA4FC,iBAA5F,CAnDnF;;AAAA;AAAA;AAmD6BsC,YAAAA,iBAnD7B,yBAmDgBlC,WAnDhB;AAmDgDtH,YAAAA,OAnDhD,yBAmDgDA,OAnDhD;AAAA;AAAA,mBAoDsC/D,MAAM,CAACwN,oBAAP,CAA4BzB,GAA5B,EAAiC7K,OAAO,CAACgB,IAAzC,EAA+C;AACzEK,cAAAA,QAAQ,EAAErB,OAAO,CAACqB,QADuD;AAEzE;AACA;AACA;AACAiB,cAAAA,cAAc,EAAE,KALyD;AAMzEC,cAAAA,OAAO,EAAE,KANgE;AAOzEC,cAAAA,UAAU,EAAE,KAP6D;AAQzEK,cAAAA,OAAO,EAAPA,OARyE;AASzEO,cAAAA,OAAO,EAAE,CAAC3D,qBAAqB,CAAC4D,cATyC;AAUzEC,cAAAA,UAAU,EAAE,CAAC,CAACsI;AAV2D,aAA/C,CApDtC;;AAAA;AAoDcrI,YAAAA,eApDd;AAgEQ4G,YAAAA,WAAW,CAAC/H,IAAZ,OAAA+H,WAAW,qBAASkC,iBAAiB,CAACE,QAA3B,EAAX;;AAhER,kBAiEY,CAAChJ,eAAD,IAAoB,CAACA,eAAe,CAACvC,IAjEjD;AAAA;AAAA;AAAA;;AAAA,kBAkEkB,IAAIwC,KAAJ,0DAA2DxD,OAAO,CAACqB,QAAnE,SAlElB;;AAAA;AAoEcmL,YAAAA,UApEd,GAoE2BpN,IAAI,CAAC2E,IAAL,CAAU/D,OAAO,CAACwM,UAAlB,EAA8B1M,IAAI,CAACkL,UAAL,GAAkB,EAAlB,GAAuBpB,MAArD,EAA6D5J,OAAO,CAACqB,QAArE,CApE3B;AAqEQlC,YAAAA,EAAE,CAACgI,aAAH,CAAiBqF,UAAjB,EAA6BjJ,eAAe,CAACvC,IAA7C;;AArER,kBAsEY4K,QAAQ,IAAIrI,eAAe,CAAC1B,GAtExC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAuEoC+B,eAAe,CAAC5D,OAAO,CAACgB,IAAT,EAAe4K,QAAf,EAAyBrI,eAAe,CAACvC,IAAzC,EAA+CuC,eAAe,CAAC1B,GAA/D,EAAoE7B,OAAO,CAACqB,QAA5E,EAAsFrB,OAAO,CAACgB,IAAR,CAAa2C,MAAb,GAAsB/D,wBAA5G,CAvEnD;;AAAA;AAuEkBsI,YAAAA,SAvElB;AAwEY/I,YAAAA,EAAE,CAACgI,aAAH,CAAiBqF,UAAU,GAAG,MAA9B,EAAsC1K,IAAI,CAACoF,SAAL,CAAegB,SAAf,CAAtC;;AAxEZ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA,8CA2EW;AAAEhC,cAAAA,IAAI,EAAElG,OAAO,CAACqB,QAAhB;AAA0B8I,cAAAA,WAAW,EAAXA;AAA1B,aA3EX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA6EA3L,OAAO,CAACE,aAAR,GAAwBA,aAAxB;;SACeiN,mB;;;;;kFAAf,mBAAmCd,GAAnC,EAAwC7K,OAAxC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,CAACF,IAAD,IAASA,IAAI,CAACpB,aAAL,CAAmByJ,IAAnB,KAA4B,CAD7C;AAAA;AAAA;AAAA;;AAAA,+CAEe;AAAEjC,cAAAA,IAAI,EAAElG,OAAO,CAACqB,QAAhB;AAA0B8I,cAAAA,WAAW,EAAE,EAAvC;AAA2CY,cAAAA,KAAK,EAAE;AAAlD,aAFf;;AAAA;AAAA;AAAA,mBAIwCf,OAAO,CAACtH,OAAR,GAAkBuH,IAAlB,CAAuB;AAAA,qBAAMlL,OAAO,CAAC,kBAAD,CAAb;AAAA,aAAvB,CAJxC;;AAAA;AAAA;AAIqB0N,YAAAA,QAJrB,yBAIY7B,OAJZ;AAAA;AAAA,mBAKwBZ,OAAO,CAACtH,OAAR,GAAkBuH,IAAlB,CAAuB;AAAA,qBAAMlL,OAAO,CAAC,mDAAD,CAAb;AAAA,aAAvB,CALxB;;AAAA;AAKU2N,YAAAA,KALV;AAAA;AAAA,mBAM+B1C,OAAO,CAACtH,OAAR,GAAkBuH,IAAlB,CAAuB;AAAA,qBAAMlL,OAAO,CAAC,6CAAD,CAAb;AAAA,aAAvB,CAN/B;;AAAA;AAMUmL,YAAAA,YANV;AAOUC,YAAAA,WAPV,GAOwB,IAAID,YAAY,CAACE,WAAjB,EAPxB;AAQUuC,YAAAA,SARV,GAQsBC,qBAAqB,CAAC/B,GAAD,EAAM7K,OAAN,EAAe0M,KAAf,CAR3C;;AAAA,kBASQC,SAAS,CAAChJ,MAAV,KAAqB,CAArB,IAA0B,CAAC3D,OAAO,CAACkL,SAT3C;AAAA;AAAA;AAAA;;AAAA,+CAUeC,cAAc,CAACnL,OAAD,CAV7B;;AAAA;AAYU4L,YAAAA,QAZV,GAYqB5L,OAAO,CAAC6B,GAAR,IAAeC,IAAI,CAACC,KAAL,CAAW/B,OAAO,CAAC6B,GAAnB,CAZpC,EAaI;;AACMgL,YAAAA,aAdV,GAc0BjB,QAAQ,IAAIA,QAAQ,CAAC/G,UAd/C;;AAeI,gBAAI+G,QAAJ,EAAc;AACV,qBAAOA,QAAQ,CAAC/G,UAAhB;AACH;;AAjBL,oDAkByB/E,IAAI,CAACpB,aAlB9B;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBekL,YAAAA,MAlBf;AAmBctJ,YAAAA,OAnBd,GAmBwB,IAAId,iBAAiB,CAACsN,aAAtB,CAAoClB,QAAQ,GACtD;AACE,gBAAIpM,iBAAiB,CAACkF,eAAtB,CAAsC1E,OAAO,CAACgB,IAA9C,EAAoDhB,OAAO,CAACqB,QAA5D,EAAsEuK,QAAtE,CAFoD,GAGtD,IAAIpM,iBAAiB,CAACuN,cAAtB,CAAqC/M,OAAO,CAACgB,IAA7C,EAAmDhB,OAAO,CAACqB,QAA3D,CAHU,CAnBxB;AAuBcwK,YAAAA,cAvBd,GAuB+BjC,MAAM,KAAK9J,IAAI,CAACgM,YAvB/C,EAwBQ;;AACMC,YAAAA,YAzBd,GAyB6BF,cAAc,GAAG,EAAH,GAAQ/L,IAAI,CAACkM,OAAL,CAAapC,MAAb,EAAqBC,WAArB,IAAoC,EAzBvF;AAAA,oDA0B+B8C,SA1B/B;;AAAA;AA0BQ,qEAAkC;AAAvBK,gBAAAA,QAAuB;AACxBC,gBAAAA,UADwB,GACXP,KAAK,CAACQ,SAAN,CAAgB/C,WAAhB,EAA6B4B,YAA7B,EAA2CiB,QAAQ,CAACG,YAApD,EAAkEH,QAAQ,CAACI,WAA3E,EAAwFvB,cAAc,GAAG,QAAH,GAAc7L,OAAO,CAAC8J,kBAAR,IAA8B,SAAlJ,CADW;AAExBuD,gBAAAA,UAFwB,GAEXX,KAAK,CAACY,wBAAN,CAA+BL,UAAU,CAAC,CAAD,CAAzC,EAA8CA,UAAU,CAAC,CAAD,CAAxD,CAFW;AAAA,4BAGbR,QAAQ,CAACY,UAAD,CAHK,EAGtBrM,IAHsB,aAGtBA,IAHsB;AAI9BV,gBAAAA,OAAO,CAACkB,OAAR,CAAgBwL,QAAQ,CAACO,KAAzB,EAAgCP,QAAQ,CAACQ,GAAT,GAAe,CAA/C,EAAkDxM,IAAlD;AACH;AA/BT;AAAA;AAAA;AAAA;AAAA;;AAgCYyM,YAAAA,YAhCZ,GAgC2BnN,OAhC3B;;AAAA,iBAiCYN,OAAO,CAACkL,SAjCpB;AAAA;AAAA;AAAA;;AAkCkBwC,YAAAA,aAlClB,mFAkC0G9D,MAlC1G,cAmCY;;AACI+D,YAAAA,gBApChB,GAoCmC,IApCnC;AAqCkB1B,YAAAA,cArClB,GAqCmCnM,IAAI,CAACkM,OAAL,CAAapC,MAAb,KAAwB9J,IAAI,CAACkM,OAAL,CAAapC,MAAb,EAAqBuC,QArChF;;AAAA,iBAsCgBF,cAtChB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAuCgDG,cAAc,CAACH,cAAD,EAAiB,IAAjB,EAAuBjM,OAAO,CAACuK,GAA/B,CAvC9D;;AAAA;AAuCsBR,YAAAA,iBAvCtB;AAwCgB4D,YAAAA,gBAAgB,GAAG,IAAInO,iBAAiB,CAACuN,cAAtB,CAAqChD,iBAArC,EAAwD3K,IAAI,CAACkC,QAAL,CAAc2K,cAAd,CAAxD,CAAnB;;AAxChB;AA0CYwB,YAAAA,YAAY,GAAGE,gBAAgB,CAC3B;AAD2B,cAEzB,IAAInO,iBAAiB,CAACoO,YAAtB,CAAmCF,aAAnC,EAAkDC,gBAAlD,EAAoE,KAApE,EAA2ErN,OAA3E,CAFyB,GAGzB,IAAId,iBAAiB,CAACoO,YAAtB,CAAmCF,aAAnC,EAAkDpN,OAAlD,CAHN;;AA1CZ;AAAA,oCA+CuDmN,YAAY,CAACI,YAAb,EA/CvD,EA+CwB5F,UA/CxB,yBA+CgBrC,MA/ChB,EA+CyCsC,SA/CzC,yBA+CoCrG,GA/CpC;AAgDc2K,YAAAA,UAhDd,GAgD2BpN,IAAI,CAAC2E,IAAL,CAAU/D,OAAO,CAACwM,UAAlB,EAA8B1M,IAAI,CAACkL,UAAL,GAAkB,EAAlB,GAAuBpB,MAArD,EAA6D5J,OAAO,CAACqB,QAArE,CAhD3B;AAiDQlC,YAAAA,EAAE,CAACgI,aAAH,CAAiBqF,UAAjB,EAA6BvE,UAA7B;;AACA,gBAAI2D,QAAQ,IAAI1D,SAAhB,EAA2B;AACvBA,cAAAA,SAAS,CAAChC,IAAV,GAAiBlG,OAAO,CAACqB,QAAzB;;AACA,kBAAIwL,aAAJ,EAAmB;AACf3E,gBAAAA,SAAS,CAACrD,UAAV,GAAuBgI,aAAvB;AACH;;AACD1N,cAAAA,EAAE,CAACgI,aAAH,CAAiBqF,UAAU,GAAG,MAA9B,EAAsC1K,IAAI,CAACoF,SAAL,CAAegB,SAAf,CAAtC;AACH;;AAxDT;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA,+CA0DW;AAAEhC,cAAAA,IAAI,EAAElG,OAAO,CAACqB,QAAhB;AAA0B8I,cAAAA,WAAW,EAAEA,WAAW,CAACoC,QAAnD;AAA6DxB,cAAAA,KAAK,EAAE4B,SAAS,CAAChJ;AAA9E,aA1DX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA4DA,SAASwH,cAAT,CAAwBnL,OAAxB,EAAiC;AAC7B,MAAI,CAACF,IAAL,EAAW;AACP,UAAM,IAAI0D,KAAJ,CAAU,0BAAV,CAAN;AACH;;AAH4B,8CAIR1D,IAAI,CAACpB,aAJG;AAAA;;AAAA;AAI7B,2DAAyC;AAAA,UAA9BkL,MAA8B;AACrC,UAAM4C,UAAU,GAAGpN,IAAI,CAAC2E,IAAL,CAAU/D,OAAO,CAACwM,UAAlB,EAA8B1M,IAAI,CAACkL,UAAL,GAAkB,EAAlB,GAAuBpB,MAArD,EAA6D5J,OAAO,CAACqB,QAArE,CAAnB;AACAlC,MAAAA,EAAE,CAACgI,aAAH,CAAiBqF,UAAjB,EAA6BxM,OAAO,CAACgB,IAArC;;AACA,UAAIhB,OAAO,CAAC6B,GAAZ,EAAiB;AACb1C,QAAAA,EAAE,CAACgI,aAAH,CAAiBqF,UAAU,GAAG,MAA9B,EAAsCxM,OAAO,CAAC6B,GAA9C;AACH;AACJ;AAV4B;AAAA;AAAA;AAAA;AAAA;;AAW7B,SAAO;AAAEqE,IAAAA,IAAI,EAAElG,OAAO,CAACqB,QAAhB;AAA0B8I,IAAAA,WAAW,EAAE,EAAvC;AAA2CY,IAAAA,KAAK,EAAE;AAAlD,GAAP;AACH;;AACD,SAAS6B,qBAAT,CAA+B/B,GAA/B,EAAoC7K,OAApC,EAA6C0M,KAA7C,EAAoD;AAChD,MAAMC,SAAS,GAAG,EAAlB,CADgD,CAEhD;;AACA,iBAAiB5N,OAAO,CAAC,aAAD,CAAxB;AAAA,MAAQ+O,IAAR,YAAQA,IAAR;;AACA,MAAM5H,IAAI,GAAG,IAAI4H,IAAJ,CAAS,EAAT,EAAa;AAAE9M,IAAAA,IAAI,EAAEhB,OAAO,CAACgB,IAAhB;AAAsB6J,IAAAA,GAAG,EAAHA;AAAtB,GAAb,CAAb;;AACA,MAAI7K,OAAO,CAACuK,GAAZ,EAAiB;AACbzL,IAAAA,MAAM,CAACiP,QAAP,CAAgB7H,IAAI,CAAC2E,GAArB,EAA0B;AACtBmD,MAAAA,cADsB,0BACP5O,IADO,EACD;AACjB,YAAM6O,MAAM,GAAG7O,IAAI,CAACsH,GAAL,CAAS,QAAT,CAAf;;AACA,YAAIuH,MAAM,CAACC,YAAP,MACAD,MAAM,CAACnF,IAAP,CAAYjI,IAAZ,KAAqBiK,YADrB,IAEA4B,KAAK,CAACyB,kBAAN,CAAyBF,MAAzB,CAFJ,EAEsC;AAClC,oCAAoCG,kBAAkB,CAAChP,IAAD,EAAOsN,KAAP,CAAtD;AAAA;AAAA,cAAOS,YAAP;AAAA,cAAqBC,WAArB;;AACAT,UAAAA,SAAS,CAACvK,IAAV,CAAe;AACX;AACAmL,YAAAA,KAAK,EAAEnO,IAAI,CAAC0J,IAAL,CAAUyE,KAFN;AAGX;AACAC,YAAAA,GAAG,EAAEpO,IAAI,CAAC0J,IAAL,CAAU0E,GAJJ;AAKXL,YAAAA,YAAY,EAAZA,YALW;AAMXC,YAAAA,WAAW,EAAXA;AANW,WAAf;AAQH;AACJ;AAhBqB,KAA1B;AAkBH,GAnBD,MAoBK;AACDtO,IAAAA,MAAM,CAACiP,QAAP,CAAgB7H,IAAI,CAAC2E,GAArB,EAA0B;AACtBwD,MAAAA,wBADsB,oCACGjP,IADH,EACS;AAC3B,YAAIN,MAAM,CAACsK,KAAP,CAAa8E,YAAb,CAA0B9O,IAAI,CAAC0J,IAAL,CAAUwF,GAApC,KAA4ClP,IAAI,CAAC0J,IAAL,CAAUwF,GAAV,CAAczN,IAAd,KAAuBiK,YAAvE,EAAqF;AACjF,sCAAoCyD,qBAAqB,CAACnP,IAAD,EAAOsN,KAAP,CAAzD;AAAA;AAAA,cAAOS,YAAP;AAAA,cAAqBC,WAArB;;AACAT,UAAAA,SAAS,CAACvK,IAAV,CAAe;AACX;AACAmL,YAAAA,KAAK,EAAEnO,IAAI,CAAC0J,IAAL,CAAUyE,KAFN;AAGX;AACAC,YAAAA,GAAG,EAAEpO,IAAI,CAAC0J,IAAL,CAAU0E,GAJJ;AAKXL,YAAAA,YAAY,EAAZA,YALW;AAMXC,YAAAA,WAAW,EAAXA;AANW,WAAf;AAQH;AACJ;AAbqB,KAA1B;AAeH;;AACD,SAAOT,SAAP;AACH;;AACD,SAAS4B,qBAAT,CAA+BnP,IAA/B,EAAqCsN,KAArC,EAA4C;AACxC,8BAAuBA,KAAK,CAAC8B,qCAAN,CAA4CpP,IAAI,CAACsH,GAAL,CAAS,OAAT,EAAkBA,GAAlB,CAAsB,QAAtB,CAA5C,CAAvB;AAAA;AAAA,MAAOyG,YAAP;;AACA,8BAAsBT,KAAK,CAAC+B,oCAAN,CAA2CrP,IAAI,CAACsH,GAAL,CAAS,OAAT,CAA3C,CAAtB;AAAA;AAAA,MAAO0G,WAAP;;AACA,SAAO,CAACD,YAAD,EAAeC,WAAf,CAAP;AACH;;AACD,SAASgB,kBAAT,CAA4BhP,IAA5B,EAAkCsN,KAAlC,EAAyC;AACrC,+BAAuBA,KAAK,CAACgC,kCAAN,CAAyCtP,IAAzC,CAAvB;AAAA;AAAA,MAAO+N,YAAP;;AACA,8BAAsBT,KAAK,CAACiC,mCAAN,CAA0CvP,IAA1C,CAAtB;AAAA;AAAA,MAAOgO,WAAP;;AACA,SAAO,CAACD,YAAD,EAAeC,WAAf,CAAP;AACH;;SACchB,c;;;;;6EAAf,mBAA8BhN,IAA9B,EAAoC+D,QAApC,EAA8CoH,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AACMjK,YAAAA,OAFV,GAEoBnB,EAAE,CAACyP,YAAH,CAAgBxP,IAAhB,EAAsB,MAAtB,CAFpB,EAGI;;AAHJ;AAAA,mBAIkCN,MAAM,CAACuD,cAAP,CAAsB/B,OAAtB,EAA+B;AACzDe,cAAAA,QAAQ,EAAEjC,IAD+C;AAEzD;AACA;AACAkD,cAAAA,cAAc,EAAE,KAJyC;AAKzDC,cAAAA,OAAO,EAAE,KALgD;AAMzDC,cAAAA,UAAU,EAAE,KAN6C;AAOzDC,cAAAA,OAAO,EAAE,CACL,CACI1D,OAAO,CAAC2D,OAAR,CAAgB,mBAAhB,CADJ,EAEI;AACImM,gBAAAA,QAAQ,EAAE,IADd;AAEI;AACA3M,gBAAAA,OAAO,EAAEqI,GAAG,GAAG;AAAEuE,kBAAAA,EAAE,EAAE;AAAN,iBAAH,GAAkB;AAAEC,kBAAAA,SAAS,EAAE;AAAb;AAHlC,eAFJ,CADK,CAPgD;AAiBzD9L,cAAAA,QAAQ,EAAExD,qBAAqB,CAACyD,WAAtB,IAAqCC,QAjBU;AAkBzDC,cAAAA,OAAO,EAAE,CAAC3D,qBAAqB,CAAC4D,cAAvB,IAAyCF,QAlBO;AAmBzD6L,cAAAA,QAAQ,EAAE,CAAC7L;AAnB8C,aAA/B,CAJlC;;AAAA;AAIUI,YAAAA,eAJV;;AAAA,kBAyBQ,CAACA,eAAD,IAAoB,CAACA,eAAe,CAACvC,IAzB7C;AAAA;AAAA;AAAA;;AAAA,kBA0Bc,IAAIwC,KAAJ,0DAA2DpE,IAA3D,SA1Bd;;AAAA;AAAA,+CA4BWmE,eAAe,CAACvC,IA5B3B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.inlineLocales = exports.createI18nPlugins = exports.process = exports.setup = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst core_1 = require(\"@babel/core\");\nconst template_1 = require(\"@babel/template\");\nconst cacache = require(\"cacache\");\nconst crypto_1 = require(\"crypto\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst source_map_1 = require(\"source-map\");\nconst terser_1 = require(\"terser\");\nconst v8 = require(\"v8\");\nconst webpack_sources_1 = require(\"webpack-sources\");\nconst environment_options_1 = require(\"./environment-options\");\nconst webpack_version_1 = require(\"./webpack-version\");\nconst deserialize = v8.deserialize;\n// If code size is larger than 500KB, consider lower fidelity but faster sourcemap merge\nconst FAST_SOURCEMAP_THRESHOLD = 500 * 1024;\nlet cachePath;\nlet i18n;\nfunction setup(data) {\n    const options = Array.isArray(data)\n        ? deserialize(Buffer.from(data))\n        : data;\n    cachePath = options.cachePath;\n    i18n = options.i18n;\n}\nexports.setup = setup;\nasync function cachePut(content, key, integrity) {\n    if (cachePath && key) {\n        await cacache.put(cachePath, key, content, {\n            metadata: { integrity },\n        });\n    }\n}\nasync function process(options) {\n    if (!options.cacheKeys) {\n        options.cacheKeys = [];\n    }\n    const result = { name: options.name };\n    if (options.integrityAlgorithm) {\n        // Store unmodified code integrity value -- used for SRI value replacement\n        result.integrity = generateIntegrityValue(options.integrityAlgorithm, options.code);\n    }\n    // Runtime chunk requires specialized handling\n    if (options.runtime) {\n        return { ...result, ...(await processRuntime(options)) };\n    }\n    const basePath = path.dirname(options.filename);\n    const filename = path.basename(options.filename);\n    const downlevelFilename = filename.replace(/\\-(es20\\d{2}|esnext)/, '-es5');\n    const downlevel = !options.optimizeOnly;\n    const sourceCode = options.code;\n    const sourceMap = options.map ? JSON.parse(options.map) : undefined;\n    let downlevelCode;\n    let downlevelMap;\n    if (downlevel) {\n        const { supportedBrowsers: targets = [] } = options;\n        // todo: revisit this in version 10, when we update our defaults browserslist\n        // Without this workaround bundles will not be downlevelled because Babel doesn't know handle to 'op_mini all'\n        // See: https://github.com/babel/babel/issues/11155\n        if (Array.isArray(targets) && targets.includes('op_mini all')) {\n            targets.push('ie_mob 11');\n        }\n        else if ('op_mini' in targets) {\n            targets['ie_mob'] = '11';\n        }\n        // Downlevel the bundle\n        const transformResult = await core_1.transformAsync(sourceCode, {\n            filename,\n            // using false ensures that babel will NOT search and process sourcemap comments (large memory usage)\n            // The types do not include the false option even though it is valid\n            // tslint:disable-next-line: no-any\n            inputSourceMap: false,\n            babelrc: false,\n            configFile: false,\n            presets: [[\n                    require.resolve('@babel/preset-env'),\n                    {\n                        // browserslist-compatible query or object of minimum environment versions to support\n                        targets,\n                        // modules aren't needed since the bundles use webpack's custom module loading\n                        modules: false,\n                        // 'transform-typeof-symbol' generates slower code\n                        exclude: ['transform-typeof-symbol'],\n                    },\n                ]],\n            plugins: [\n                createIifeWrapperPlugin(),\n                ...(options.replacements ? [createReplacePlugin(options.replacements)] : []),\n            ],\n            minified: environment_options_1.allowMinify && !!options.optimize,\n            compact: !environment_options_1.shouldBeautify && !!options.optimize,\n            sourceMaps: !!sourceMap,\n        });\n        if (!transformResult || !transformResult.code) {\n            throw new Error(`Unknown error occurred processing bundle for \"${options.filename}\".`);\n        }\n        downlevelCode = transformResult.code;\n        if (sourceMap && transformResult.map) {\n            // String length is used as an estimate for byte length\n            const fastSourceMaps = sourceCode.length > FAST_SOURCEMAP_THRESHOLD;\n            downlevelMap = await mergeSourceMaps(sourceCode, sourceMap, downlevelCode, transformResult.map, filename, \n            // When not optimizing, the sourcemaps are significantly less complex\n            // and can use the higher fidelity merge\n            !!options.optimize && fastSourceMaps);\n        }\n    }\n    if (downlevelCode) {\n        result.downlevel = await processBundle({\n            ...options,\n            code: downlevelCode,\n            map: downlevelMap,\n            filename: path.join(basePath, downlevelFilename),\n            isOriginal: false,\n        });\n    }\n    if (!result.original && !options.ignoreOriginal) {\n        result.original = await processBundle({\n            ...options,\n            isOriginal: true,\n        });\n    }\n    return result;\n}\nexports.process = process;\nasync function mergeSourceMaps(inputCode, inputSourceMap, resultCode, resultSourceMap, filename, fast = false) {\n    // Webpack 5 terser sourcemaps currently fail merging with the high-quality method\n    // TODO_WEBPACK_5: Investigate high-quality sourcemap merge failures\n    if (fast || webpack_version_1.isWebpackFiveOrHigher()) {\n        return mergeSourceMapsFast(inputSourceMap, resultSourceMap);\n    }\n    // SourceMapSource produces high-quality sourcemaps\n    // Final sourcemap will always be available when providing the input sourcemaps\n    // tslint:disable-next-line: no-non-null-assertion\n    const finalSourceMap = new webpack_sources_1.SourceMapSource(resultCode, filename, resultSourceMap, inputCode, inputSourceMap, true).map();\n    return finalSourceMap;\n}\nasync function mergeSourceMapsFast(first, second) {\n    const sourceRoot = first.sourceRoot;\n    const generator = new source_map_1.SourceMapGenerator();\n    // sourcemap package adds the sourceRoot to all position source paths if not removed\n    delete first.sourceRoot;\n    await source_map_1.SourceMapConsumer.with(first, null, originalConsumer => {\n        return source_map_1.SourceMapConsumer.with(second, null, newConsumer => {\n            newConsumer.eachMapping(mapping => {\n                if (mapping.originalLine === null) {\n                    return;\n                }\n                const originalPosition = originalConsumer.originalPositionFor({\n                    line: mapping.originalLine,\n                    column: mapping.originalColumn,\n                });\n                if (originalPosition.line === null ||\n                    originalPosition.column === null ||\n                    originalPosition.source === null) {\n                    return;\n                }\n                generator.addMapping({\n                    generated: {\n                        line: mapping.generatedLine,\n                        column: mapping.generatedColumn,\n                    },\n                    name: originalPosition.name || undefined,\n                    original: {\n                        line: originalPosition.line,\n                        column: originalPosition.column,\n                    },\n                    source: originalPosition.source,\n                });\n            });\n        });\n    });\n    const map = generator.toJSON();\n    map.file = second.file;\n    map.sourceRoot = sourceRoot;\n    // Add source content if present\n    if (first.sourcesContent) {\n        // Source content array is based on index of sources\n        const sourceContentMap = new Map();\n        for (let i = 0; i < first.sources.length; i++) {\n            // make paths \"absolute\" so they can be compared (`./a.js` and `a.js` are equivalent)\n            sourceContentMap.set(path.resolve('/', first.sources[i]), i);\n        }\n        map.sourcesContent = [];\n        for (let i = 0; i < map.sources.length; i++) {\n            const contentIndex = sourceContentMap.get(path.resolve('/', map.sources[i]));\n            if (contentIndex === undefined) {\n                map.sourcesContent.push('');\n            }\n            else {\n                map.sourcesContent.push(first.sourcesContent[contentIndex]);\n            }\n        }\n    }\n    // Put the sourceRoot back\n    if (sourceRoot) {\n        first.sourceRoot = sourceRoot;\n    }\n    return map;\n}\nasync function processBundle(options) {\n    const { optimize, isOriginal, code, map, filename: filepath, hiddenSourceMaps, cacheKeys = [], integrityAlgorithm, } = options;\n    const rawMap = typeof map === 'string' ? JSON.parse(map) : map;\n    const filename = path.basename(filepath);\n    let result;\n    if (rawMap) {\n        rawMap.file = filename;\n    }\n    if (optimize) {\n        result = await terserMangle(code, {\n            filename,\n            map: rawMap,\n            compress: !isOriginal,\n            ecma: isOriginal ? 2015 : 5,\n        });\n    }\n    else {\n        result = {\n            map: rawMap,\n            code,\n        };\n    }\n    let mapContent;\n    if (result.map) {\n        if (!hiddenSourceMaps) {\n            result.code += `\\n//# sourceMappingURL=${filename}.map`;\n        }\n        mapContent = JSON.stringify(result.map);\n        await cachePut(mapContent, cacheKeys[isOriginal ? 1 /* OriginalMap */ : 3 /* DownlevelMap */]);\n        fs.writeFileSync(filepath + '.map', mapContent);\n    }\n    const fileResult = createFileEntry(filepath, result.code, mapContent, integrityAlgorithm);\n    await cachePut(result.code, cacheKeys[isOriginal ? 0 /* OriginalCode */ : 2 /* DownlevelCode */], fileResult.integrity);\n    fs.writeFileSync(filepath, result.code);\n    return fileResult;\n}\nasync function terserMangle(code, options = {}) {\n    // Note: Investigate converting the AST instead of re-parsing\n    // estree -> terser is already supported; need babel -> estree/terser\n    // Mangle downlevel code\n    const minifyOutput = await terser_1.minify(options.filename ? { [options.filename]: code } : code, {\n        compress: environment_options_1.allowMinify && !!options.compress,\n        ecma: options.ecma || 5,\n        mangle: environment_options_1.allowMangle,\n        safari10: true,\n        format: {\n            ascii_only: true,\n            webkit: true,\n            beautify: environment_options_1.shouldBeautify,\n            wrap_func_args: false,\n        },\n        sourceMap: !!options.map &&\n            {\n                asObject: true,\n            },\n    });\n    // tslint:disable-next-line: no-non-null-assertion\n    const outputCode = minifyOutput.code;\n    let outputMap;\n    if (options.map && minifyOutput.map) {\n        outputMap = await mergeSourceMaps(code, options.map, outputCode, minifyOutput.map, options.filename || '0', code.length > FAST_SOURCEMAP_THRESHOLD);\n    }\n    return { code: outputCode, map: outputMap };\n}\nfunction createFileEntry(filename, code, map, integrityAlgorithm) {\n    return {\n        filename: filename,\n        size: Buffer.byteLength(code),\n        integrity: integrityAlgorithm && generateIntegrityValue(integrityAlgorithm, code),\n        map: !map\n            ? undefined\n            : {\n                filename: filename + '.map',\n                size: Buffer.byteLength(map),\n            },\n    };\n}\nfunction generateIntegrityValue(hashAlgorithm, code) {\n    return (hashAlgorithm +\n        '-' +\n        crypto_1.createHash(hashAlgorithm)\n            .update(code)\n            .digest('base64'));\n}\n// The webpack runtime chunk is already ES5.\n// However, two variants are still needed due to lazy routing and SRI differences\n// NOTE: This should eventually be a babel plugin\nasync function processRuntime(options) {\n    let originalCode = options.code;\n    let downlevelCode = options.code;\n    // Replace integrity hashes with updated values\n    if (options.integrityAlgorithm && options.runtimeData) {\n        for (const data of options.runtimeData) {\n            if (!data.integrity) {\n                continue;\n            }\n            if (data.original && data.original.integrity) {\n                originalCode = originalCode.replace(data.integrity, data.original.integrity);\n            }\n            if (data.downlevel && data.downlevel.integrity) {\n                downlevelCode = downlevelCode.replace(data.integrity, data.downlevel.integrity);\n            }\n        }\n    }\n    // Adjust lazy loaded scripts to point to the proper variant\n    // Extra spacing is intentional to align source line positions\n    downlevelCode = downlevelCode.replace(/\"\\-(es20\\d{2}|esnext)\\./, '   \"-es5.');\n    return {\n        original: await processBundle({\n            ...options,\n            code: originalCode,\n            isOriginal: true,\n        }),\n        downlevel: await processBundle({\n            ...options,\n            code: downlevelCode,\n            filename: options.filename.replace(/\\-(es20\\d{2}|esnext)/, '-es5'),\n            isOriginal: false,\n        }),\n    };\n}\nfunction createReplacePlugin(replacements) {\n    return {\n        visitor: {\n            StringLiteral(path) {\n                for (const replacement of replacements) {\n                    if (path.node.value === replacement[0]) {\n                        path.node.value = replacement[1];\n                    }\n                }\n            },\n        },\n    };\n}\nfunction createIifeWrapperPlugin() {\n    return {\n        visitor: {\n            Program: {\n                exit(path) {\n                    // Save existing body and directives\n                    const { body, directives } = path.node;\n                    // Clear out body and directives for wrapper\n                    path.node.body = [];\n                    path.node.directives = [];\n                    // Create the wrapper - \"(function() { ... })();\"\n                    const wrapper = core_1.types.expressionStatement(core_1.types.callExpression(core_1.types.parenthesizedExpression(core_1.types.functionExpression(undefined, [], core_1.types.blockStatement(body, directives))), []));\n                    // Insert the wrapper\n                    path.pushContainer('body', wrapper);\n                },\n            },\n        },\n    };\n}\nconst USE_LOCALIZE_PLUGINS = false;\nasync function createI18nPlugins(locale, translation, missingTranslation, localeDataContent) {\n    const plugins = [];\n    const localizeDiag = await Promise.resolve().then(() => require('@angular/localize/src/tools/src/diagnostics'));\n    const diagnostics = new localizeDiag.Diagnostics();\n    const es2015 = await Promise.resolve().then(() => require(\n    // tslint:disable-next-line: trailing-comma\n    '@angular/localize/src/tools/src/translate/source_files/es2015_translate_plugin'));\n    plugins.push(\n    // tslint:disable-next-line: no-any\n    es2015.makeEs2015TranslatePlugin(diagnostics, (translation || {}), {\n        missingTranslation: translation === undefined ? 'ignore' : missingTranslation,\n    }));\n    const es5 = await Promise.resolve().then(() => require(\n    // tslint:disable-next-line: trailing-comma\n    '@angular/localize/src/tools/src/translate/source_files/es5_translate_plugin'));\n    plugins.push(\n    // tslint:disable-next-line: no-any\n    es5.makeEs5TranslatePlugin(diagnostics, (translation || {}), {\n        missingTranslation: translation === undefined ? 'ignore' : missingTranslation,\n    }));\n    const inlineLocale = await Promise.resolve().then(() => require(\n    // tslint:disable-next-line: trailing-comma\n    '@angular/localize/src/tools/src/translate/source_files/locale_plugin'));\n    plugins.push(inlineLocale.makeLocalePlugin(locale));\n    if (localeDataContent) {\n        plugins.push({\n            visitor: {\n                Program(path) {\n                    path.unshiftContainer('body', template_1.default.ast(localeDataContent));\n                },\n            },\n        });\n    }\n    return { diagnostics, plugins };\n}\nexports.createI18nPlugins = createI18nPlugins;\nconst localizeName = '$localize';\nasync function inlineLocales(options) {\n    var _a;\n    if (!i18n || i18n.inlineLocales.size === 0) {\n        return { file: options.filename, diagnostics: [], count: 0 };\n    }\n    if (i18n.flatOutput && i18n.inlineLocales.size > 1) {\n        throw new Error('Flat output is only supported when inlining one locale.');\n    }\n    const hasLocalizeName = options.code.includes(localizeName);\n    if (!hasLocalizeName && !options.setLocale) {\n        return inlineCopyOnly(options);\n    }\n    let ast;\n    try {\n        ast = core_1.parseSync(options.code, {\n            babelrc: false,\n            configFile: false,\n            sourceType: 'script',\n            filename: options.filename,\n        });\n    }\n    catch (error) {\n        if (error.message) {\n            // Make the error more readable.\n            // Same errors will contain the full content of the file as the error message\n            // Which makes it hard to find the actual error message.\n            const index = error.message.indexOf(')\\n');\n            const msg = index !== -1 ? error.message.substr(0, index + 1) : error.message;\n            throw new Error(`${msg}\\nAn error occurred inlining file \"${options.filename}\"`);\n        }\n    }\n    if (!ast) {\n        throw new Error(`Unknown error occurred inlining file \"${options.filename}\"`);\n    }\n    if (!USE_LOCALIZE_PLUGINS) {\n        return inlineLocalesDirect(ast, options);\n    }\n    const diagnostics = [];\n    const inputMap = options.map && JSON.parse(options.map);\n    for (const locale of i18n.inlineLocales) {\n        const isSourceLocale = locale === i18n.sourceLocale;\n        // tslint:disable-next-line: no-any\n        const translations = isSourceLocale ? {} : i18n.locales[locale].translation || {};\n        let localeDataContent;\n        if (options.setLocale) {\n            // If locale data is provided, load it and prepend to file\n            const localeDataPath = (_a = i18n.locales[locale]) === null || _a === void 0 ? void 0 : _a.dataPath;\n            if (localeDataPath) {\n                localeDataContent = await loadLocaleData(localeDataPath, true, options.es5);\n            }\n        }\n        const { diagnostics: localeDiagnostics, plugins } = await createI18nPlugins(locale, translations, isSourceLocale ? 'ignore' : options.missingTranslation || 'warning', localeDataContent);\n        const transformResult = await core_1.transformFromAstSync(ast, options.code, {\n            filename: options.filename,\n            // using false ensures that babel will NOT search and process sourcemap comments (large memory usage)\n            // The types do not include the false option even though it is valid\n            // tslint:disable-next-line: no-any\n            inputSourceMap: false,\n            babelrc: false,\n            configFile: false,\n            plugins,\n            compact: !environment_options_1.shouldBeautify,\n            sourceMaps: !!inputMap,\n        });\n        diagnostics.push(...localeDiagnostics.messages);\n        if (!transformResult || !transformResult.code) {\n            throw new Error(`Unknown error occurred processing bundle for \"${options.filename}\".`);\n        }\n        const outputPath = path.join(options.outputPath, i18n.flatOutput ? '' : locale, options.filename);\n        fs.writeFileSync(outputPath, transformResult.code);\n        if (inputMap && transformResult.map) {\n            const outputMap = await mergeSourceMaps(options.code, inputMap, transformResult.code, transformResult.map, options.filename, options.code.length > FAST_SOURCEMAP_THRESHOLD);\n            fs.writeFileSync(outputPath + '.map', JSON.stringify(outputMap));\n        }\n    }\n    return { file: options.filename, diagnostics };\n}\nexports.inlineLocales = inlineLocales;\nasync function inlineLocalesDirect(ast, options) {\n    if (!i18n || i18n.inlineLocales.size === 0) {\n        return { file: options.filename, diagnostics: [], count: 0 };\n    }\n    const { default: generate } = await Promise.resolve().then(() => require('@babel/generator'));\n    const utils = await Promise.resolve().then(() => require('@angular/localize/src/tools/src/source_file_utils'));\n    const localizeDiag = await Promise.resolve().then(() => require('@angular/localize/src/tools/src/diagnostics'));\n    const diagnostics = new localizeDiag.Diagnostics();\n    const positions = findLocalizePositions(ast, options, utils);\n    if (positions.length === 0 && !options.setLocale) {\n        return inlineCopyOnly(options);\n    }\n    const inputMap = options.map && JSON.parse(options.map);\n    // Cleanup source root otherwise it will be added to each source entry\n    const mapSourceRoot = inputMap && inputMap.sourceRoot;\n    if (inputMap) {\n        delete inputMap.sourceRoot;\n    }\n    for (const locale of i18n.inlineLocales) {\n        const content = new webpack_sources_1.ReplaceSource(inputMap\n            ? // tslint:disable-next-line: no-any\n                new webpack_sources_1.SourceMapSource(options.code, options.filename, inputMap)\n            : new webpack_sources_1.OriginalSource(options.code, options.filename));\n        const isSourceLocale = locale === i18n.sourceLocale;\n        // tslint:disable-next-line: no-any\n        const translations = isSourceLocale ? {} : i18n.locales[locale].translation || {};\n        for (const position of positions) {\n            const translated = utils.translate(diagnostics, translations, position.messageParts, position.expressions, isSourceLocale ? 'ignore' : options.missingTranslation || 'warning');\n            const expression = utils.buildLocalizeReplacement(translated[0], translated[1]);\n            const { code } = generate(expression);\n            content.replace(position.start, position.end - 1, code);\n        }\n        let outputSource = content;\n        if (options.setLocale) {\n            const setLocaleText = `var $localize=Object.assign(void 0===$localize?{}:$localize,{locale:\"${locale}\"});\\n`;\n            // If locale data is provided, load it and prepend to file\n            let localeDataSource = null;\n            const localeDataPath = i18n.locales[locale] && i18n.locales[locale].dataPath;\n            if (localeDataPath) {\n                const localeDataContent = await loadLocaleData(localeDataPath, true, options.es5);\n                localeDataSource = new webpack_sources_1.OriginalSource(localeDataContent, path.basename(localeDataPath));\n            }\n            outputSource = localeDataSource\n                // The semicolon ensures that there is no syntax error between statements\n                ? new webpack_sources_1.ConcatSource(setLocaleText, localeDataSource, ';\\n', content)\n                : new webpack_sources_1.ConcatSource(setLocaleText, content);\n        }\n        const { source: outputCode, map: outputMap } = outputSource.sourceAndMap();\n        const outputPath = path.join(options.outputPath, i18n.flatOutput ? '' : locale, options.filename);\n        fs.writeFileSync(outputPath, outputCode);\n        if (inputMap && outputMap) {\n            outputMap.file = options.filename;\n            if (mapSourceRoot) {\n                outputMap.sourceRoot = mapSourceRoot;\n            }\n            fs.writeFileSync(outputPath + '.map', JSON.stringify(outputMap));\n        }\n    }\n    return { file: options.filename, diagnostics: diagnostics.messages, count: positions.length };\n}\nfunction inlineCopyOnly(options) {\n    if (!i18n) {\n        throw new Error('i18n options are missing');\n    }\n    for (const locale of i18n.inlineLocales) {\n        const outputPath = path.join(options.outputPath, i18n.flatOutput ? '' : locale, options.filename);\n        fs.writeFileSync(outputPath, options.code);\n        if (options.map) {\n            fs.writeFileSync(outputPath + '.map', options.map);\n        }\n    }\n    return { file: options.filename, diagnostics: [], count: 0 };\n}\nfunction findLocalizePositions(ast, options, utils) {\n    const positions = [];\n    // Workaround to ensure a path hub is present for traversal\n    const { File } = require('@babel/core');\n    const file = new File({}, { code: options.code, ast });\n    if (options.es5) {\n        core_1.traverse(file.ast, {\n            CallExpression(path) {\n                const callee = path.get('callee');\n                if (callee.isIdentifier() &&\n                    callee.node.name === localizeName &&\n                    utils.isGlobalIdentifier(callee)) {\n                    const [messageParts, expressions] = unwrapLocalizeCall(path, utils);\n                    positions.push({\n                        // tslint:disable-next-line: no-non-null-assertion\n                        start: path.node.start,\n                        // tslint:disable-next-line: no-non-null-assertion\n                        end: path.node.end,\n                        messageParts,\n                        expressions,\n                    });\n                }\n            },\n        });\n    }\n    else {\n        core_1.traverse(file.ast, {\n            TaggedTemplateExpression(path) {\n                if (core_1.types.isIdentifier(path.node.tag) && path.node.tag.name === localizeName) {\n                    const [messageParts, expressions] = unwrapTemplateLiteral(path, utils);\n                    positions.push({\n                        // tslint:disable-next-line: no-non-null-assertion\n                        start: path.node.start,\n                        // tslint:disable-next-line: no-non-null-assertion\n                        end: path.node.end,\n                        messageParts,\n                        expressions,\n                    });\n                }\n            },\n        });\n    }\n    return positions;\n}\nfunction unwrapTemplateLiteral(path, utils) {\n    const [messageParts] = utils.unwrapMessagePartsFromTemplateLiteral(path.get('quasi').get('quasis'));\n    const [expressions] = utils.unwrapExpressionsFromTemplateLiteral(path.get('quasi'));\n    return [messageParts, expressions];\n}\nfunction unwrapLocalizeCall(path, utils) {\n    const [messageParts] = utils.unwrapMessagePartsFromLocalizeCall(path);\n    const [expressions] = utils.unwrapSubstitutionsFromLocalizeCall(path);\n    return [messageParts, expressions];\n}\nasync function loadLocaleData(path, optimize, es5) {\n    // The path is validated during option processing before the build starts\n    const content = fs.readFileSync(path, 'utf8');\n    // Downlevel and optimize the data\n    const transformResult = await core_1.transformAsync(content, {\n        filename: path,\n        // The types do not include the false option even though it is valid\n        // tslint:disable-next-line: no-any\n        inputSourceMap: false,\n        babelrc: false,\n        configFile: false,\n        presets: [\n            [\n                require.resolve('@babel/preset-env'),\n                {\n                    bugfixes: true,\n                    // IE 11 is the oldest supported browser\n                    targets: es5 ? { ie: '11' } : { esmodules: true },\n                },\n            ],\n        ],\n        minified: environment_options_1.allowMinify && optimize,\n        compact: !environment_options_1.shouldBeautify && optimize,\n        comments: !optimize,\n    });\n    if (!transformResult || !transformResult.code) {\n        throw new Error(`Unknown error occurred processing bundle for \"${path}\".`);\n    }\n    return transformResult.code;\n}\n"]},"metadata":{},"sourceType":"script"}