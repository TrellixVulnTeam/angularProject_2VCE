{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler-cli/src/ngtsc/reflection/src/util\", [\"require\", \"exports\", \"typescript\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.isNamedVariableDeclaration = exports.isNamedFunctionDeclaration = exports.isNamedClassDeclaration = void 0;\n\n  var ts = require(\"typescript\");\n\n  function isNamedClassDeclaration(node) {\n    return ts.isClassDeclaration(node) && isIdentifier(node.name);\n  }\n\n  exports.isNamedClassDeclaration = isNamedClassDeclaration;\n\n  function isNamedFunctionDeclaration(node) {\n    return ts.isFunctionDeclaration(node) && isIdentifier(node.name);\n  }\n\n  exports.isNamedFunctionDeclaration = isNamedFunctionDeclaration;\n\n  function isNamedVariableDeclaration(node) {\n    return ts.isVariableDeclaration(node) && isIdentifier(node.name);\n  }\n\n  exports.isNamedVariableDeclaration = isNamedVariableDeclaration;\n\n  function isIdentifier(node) {\n    return node !== undefined && ts.isIdentifier(node);\n  }\n});","map":{"version":3,"sources":["../../../../../../../../../packages/compiler-cli/src/ngtsc/reflection/src/util.ts"],"names":[],"mappings":"AAAA;;;;;;AAMG;;;;;;;;;;;;;;;;AAEH,MAAA,EAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AAGA,WAAgB,uBAAhB,CAAwC,IAAxC,EAAqD;AAEnD,WAAO,EAAE,CAAC,kBAAH,CAAsB,IAAtB,KAA+B,YAAY,CAAC,IAAI,CAAC,IAAN,CAAlD;AACD;;AAHD,EAAA,OAAA,CAAA,uBAAA,GAAA,uBAAA;;AAKA,WAAgB,0BAAhB,CAA2C,IAA3C,EAAwD;AAEtD,WAAO,EAAE,CAAC,qBAAH,CAAyB,IAAzB,KAAkC,YAAY,CAAC,IAAI,CAAC,IAAN,CAArD;AACD;;AAHD,EAAA,OAAA,CAAA,0BAAA,GAAA,0BAAA;;AAKA,WAAgB,0BAAhB,CAA2C,IAA3C,EAAwD;AAEtD,WAAO,EAAE,CAAC,qBAAH,CAAyB,IAAzB,KAAkC,YAAY,CAAC,IAAI,CAAC,IAAN,CAArD;AACD;;AAHD,EAAA,OAAA,CAAA,0BAAA,GAAA,0BAAA;;AAKA,WAAS,YAAT,CAAsB,IAAtB,EAA6C;AAC3C,WAAO,IAAI,KAAK,SAAT,IAAsB,EAAE,CAAC,YAAH,CAAgB,IAAhB,CAA7B;AACD","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ts from 'typescript';\nimport {ClassDeclaration} from './host';\n\nexport function isNamedClassDeclaration(node: ts.Node):\n    node is ClassDeclaration<ts.ClassDeclaration> {\n  return ts.isClassDeclaration(node) && isIdentifier(node.name);\n}\n\nexport function isNamedFunctionDeclaration(node: ts.Node):\n    node is ClassDeclaration<ts.FunctionDeclaration> {\n  return ts.isFunctionDeclaration(node) && isIdentifier(node.name);\n}\n\nexport function isNamedVariableDeclaration(node: ts.Node):\n    node is ClassDeclaration<ts.VariableDeclaration> {\n  return ts.isVariableDeclaration(node) && isIdentifier(node.name);\n}\n\nfunction isIdentifier(node: ts.Node|undefined): node is ts.Identifier {\n  return node !== undefined && ts.isIdentifier(node);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}