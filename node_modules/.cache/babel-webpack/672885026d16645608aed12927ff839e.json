{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar path = require(\"path\");\n\nvar fsStat = require(\"@nodelib/fs.stat\");\n\nvar fs = require(\"./adapters/fs\");\n\nvar Settings = /*#__PURE__*/function () {\n  function Settings() {\n    var _options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Settings);\n\n    this._options = _options;\n    this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, false);\n    this.fs = fs.createFileSystemAdapter(this._options.fs);\n    this.pathSegmentSeparator = this._getValue(this._options.pathSegmentSeparator, path.sep);\n    this.stats = this._getValue(this._options.stats, false);\n    this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, true);\n    this.fsStatSettings = new fsStat.Settings({\n      followSymbolicLink: this.followSymbolicLinks,\n      fs: this.fs,\n      throwErrorOnBrokenSymbolicLink: this.throwErrorOnBrokenSymbolicLink\n    });\n  }\n\n  _createClass(Settings, [{\n    key: \"_getValue\",\n    value: function _getValue(option, value) {\n      return option !== null && option !== void 0 ? option : value;\n    }\n  }]);\n\n  return Settings;\n}();\n\nexports.default = Settings;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@nodelib/fs.scandir/out/settings.js"],"names":["Object","defineProperty","exports","value","path","require","fsStat","fs","Settings","_options","followSymbolicLinks","_getValue","createFileSystemAdapter","pathSegmentSeparator","sep","stats","throwErrorOnBrokenSymbolicLink","fsStatSettings","followSymbolicLink","option","default"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,kBAAD,CAAtB;;AACA,IAAME,EAAE,GAAGF,OAAO,CAAC,eAAD,CAAlB;;IACMG,Q;AACF,sBAA2B;AAAA,QAAfC,QAAe,uEAAJ,EAAI;;AAAA;;AACvB,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKC,mBAAL,GAA2B,KAAKC,SAAL,CAAe,KAAKF,QAAL,CAAcC,mBAA7B,EAAkD,KAAlD,CAA3B;AACA,SAAKH,EAAL,GAAUA,EAAE,CAACK,uBAAH,CAA2B,KAAKH,QAAL,CAAcF,EAAzC,CAAV;AACA,SAAKM,oBAAL,GAA4B,KAAKF,SAAL,CAAe,KAAKF,QAAL,CAAcI,oBAA7B,EAAmDT,IAAI,CAACU,GAAxD,CAA5B;AACA,SAAKC,KAAL,GAAa,KAAKJ,SAAL,CAAe,KAAKF,QAAL,CAAcM,KAA7B,EAAoC,KAApC,CAAb;AACA,SAAKC,8BAAL,GAAsC,KAAKL,SAAL,CAAe,KAAKF,QAAL,CAAcO,8BAA7B,EAA6D,IAA7D,CAAtC;AACA,SAAKC,cAAL,GAAsB,IAAIX,MAAM,CAACE,QAAX,CAAoB;AACtCU,MAAAA,kBAAkB,EAAE,KAAKR,mBADa;AAEtCH,MAAAA,EAAE,EAAE,KAAKA,EAF6B;AAGtCS,MAAAA,8BAA8B,EAAE,KAAKA;AAHC,KAApB,CAAtB;AAKH;;;;WACD,mBAAUG,MAAV,EAAkBhB,KAAlB,EAAyB;AACrB,aAAOgB,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgDhB,KAAvD;AACH;;;;;;AAELD,OAAO,CAACkB,OAAR,GAAkBZ,QAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = require(\"path\");\nconst fsStat = require(\"@nodelib/fs.stat\");\nconst fs = require(\"./adapters/fs\");\nclass Settings {\n    constructor(_options = {}) {\n        this._options = _options;\n        this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, false);\n        this.fs = fs.createFileSystemAdapter(this._options.fs);\n        this.pathSegmentSeparator = this._getValue(this._options.pathSegmentSeparator, path.sep);\n        this.stats = this._getValue(this._options.stats, false);\n        this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, true);\n        this.fsStatSettings = new fsStat.Settings({\n            followSymbolicLink: this.followSymbolicLinks,\n            fs: this.fs,\n            throwErrorOnBrokenSymbolicLink: this.throwErrorOnBrokenSymbolicLink\n        });\n    }\n    _getValue(option, value) {\n        return option !== null && option !== void 0 ? option : value;\n    }\n}\nexports.default = Settings;\n"]},"metadata":{},"sourceType":"script"}