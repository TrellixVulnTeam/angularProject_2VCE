{"ast":null,"code":"'use strict';\n\nvar path = require('path');\n\nvar childProcess = require('child_process');\n\nvar crossSpawn = require('cross-spawn');\n\nvar stripEof = require('strip-eof');\n\nvar npmRunPath = require('npm-run-path');\n\nvar isStream = require('is-stream');\n\nvar _getStream = require('get-stream');\n\nvar pFinally = require('p-finally');\n\nvar onExit = require('signal-exit');\n\nvar errname = require('./lib/errname');\n\nvar stdio = require('./lib/stdio');\n\nvar TEN_MEGABYTES = 1000 * 1000 * 10;\n\nfunction handleArgs(cmd, args, opts) {\n  var parsed;\n  opts = Object.assign({\n    extendEnv: true,\n    env: {}\n  }, opts);\n\n  if (opts.extendEnv) {\n    opts.env = Object.assign({}, process.env, opts.env);\n  }\n\n  if (opts.__winShell === true) {\n    delete opts.__winShell;\n    parsed = {\n      command: cmd,\n      args: args,\n      options: opts,\n      file: cmd,\n      original: {\n        cmd: cmd,\n        args: args\n      }\n    };\n  } else {\n    parsed = crossSpawn._parse(cmd, args, opts);\n  }\n\n  opts = Object.assign({\n    maxBuffer: TEN_MEGABYTES,\n    buffer: true,\n    stripEof: true,\n    preferLocal: true,\n    localDir: parsed.options.cwd || process.cwd(),\n    encoding: 'utf8',\n    reject: true,\n    cleanup: true\n  }, parsed.options);\n  opts.stdio = stdio(opts);\n\n  if (opts.preferLocal) {\n    opts.env = npmRunPath.env(Object.assign({}, opts, {\n      cwd: opts.localDir\n    }));\n  }\n\n  if (opts.detached) {\n    // #115\n    opts.cleanup = false;\n  }\n\n  if (process.platform === 'win32' && path.basename(parsed.command) === 'cmd.exe') {\n    // #116\n    parsed.args.unshift('/q');\n  }\n\n  return {\n    cmd: parsed.command,\n    args: parsed.args,\n    opts: opts,\n    parsed: parsed\n  };\n}\n\nfunction handleInput(spawned, input) {\n  if (input === null || input === undefined) {\n    return;\n  }\n\n  if (isStream(input)) {\n    input.pipe(spawned.stdin);\n  } else {\n    spawned.stdin.end(input);\n  }\n}\n\nfunction handleOutput(opts, val) {\n  if (val && opts.stripEof) {\n    val = stripEof(val);\n  }\n\n  return val;\n}\n\nfunction handleShell(fn, cmd, opts) {\n  var file = '/bin/sh';\n  var args = ['-c', cmd];\n  opts = Object.assign({}, opts);\n\n  if (process.platform === 'win32') {\n    opts.__winShell = true;\n    file = process.env.comspec || 'cmd.exe';\n    args = ['/s', '/c', \"\\\"\".concat(cmd, \"\\\"\")];\n    opts.windowsVerbatimArguments = true;\n  }\n\n  if (opts.shell) {\n    file = opts.shell;\n    delete opts.shell;\n  }\n\n  return fn(file, args, opts);\n}\n\nfunction getStream(process, stream, _ref) {\n  var encoding = _ref.encoding,\n      buffer = _ref.buffer,\n      maxBuffer = _ref.maxBuffer;\n\n  if (!process[stream]) {\n    return null;\n  }\n\n  var ret;\n\n  if (!buffer) {\n    // TODO: Use `ret = util.promisify(stream.finished)(process[stream]);` when targeting Node.js 10\n    ret = new Promise(function (resolve, reject) {\n      process[stream].once('end', resolve).once('error', reject);\n    });\n  } else if (encoding) {\n    ret = _getStream(process[stream], {\n      encoding: encoding,\n      maxBuffer: maxBuffer\n    });\n  } else {\n    ret = _getStream.buffer(process[stream], {\n      maxBuffer: maxBuffer\n    });\n  }\n\n  return ret.catch(function (err) {\n    err.stream = stream;\n    err.message = \"\".concat(stream, \" \").concat(err.message);\n    throw err;\n  });\n}\n\nfunction makeError(result, options) {\n  var stdout = result.stdout,\n      stderr = result.stderr;\n  var err = result.error;\n  var code = result.code,\n      signal = result.signal;\n  var parsed = options.parsed,\n      joinedCmd = options.joinedCmd;\n  var timedOut = options.timedOut || false;\n\n  if (!err) {\n    var output = '';\n\n    if (Array.isArray(parsed.opts.stdio)) {\n      if (parsed.opts.stdio[2] !== 'inherit') {\n        output += output.length > 0 ? stderr : \"\\n\".concat(stderr);\n      }\n\n      if (parsed.opts.stdio[1] !== 'inherit') {\n        output += \"\\n\".concat(stdout);\n      }\n    } else if (parsed.opts.stdio !== 'inherit') {\n      output = \"\\n\".concat(stderr).concat(stdout);\n    }\n\n    err = new Error(\"Command failed: \".concat(joinedCmd).concat(output));\n    err.code = code < 0 ? errname(code) : code;\n  }\n\n  err.stdout = stdout;\n  err.stderr = stderr;\n  err.failed = true;\n  err.signal = signal || null;\n  err.cmd = joinedCmd;\n  err.timedOut = timedOut;\n  return err;\n}\n\nfunction joinCmd(cmd, args) {\n  var joinedCmd = cmd;\n\n  if (Array.isArray(args) && args.length > 0) {\n    joinedCmd += ' ' + args.join(' ');\n  }\n\n  return joinedCmd;\n}\n\nmodule.exports = function (cmd, args, opts) {\n  var parsed = handleArgs(cmd, args, opts);\n  var _parsed$opts = parsed.opts,\n      encoding = _parsed$opts.encoding,\n      buffer = _parsed$opts.buffer,\n      maxBuffer = _parsed$opts.maxBuffer;\n  var joinedCmd = joinCmd(cmd, args);\n  var spawned;\n\n  try {\n    spawned = childProcess.spawn(parsed.cmd, parsed.args, parsed.opts);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n\n  var removeExitHandler;\n\n  if (parsed.opts.cleanup) {\n    removeExitHandler = onExit(function () {\n      spawned.kill();\n    });\n  }\n\n  var timeoutId = null;\n  var timedOut = false;\n\n  var cleanup = function cleanup() {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    }\n\n    if (removeExitHandler) {\n      removeExitHandler();\n    }\n  };\n\n  if (parsed.opts.timeout > 0) {\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      timedOut = true;\n      spawned.kill(parsed.opts.killSignal);\n    }, parsed.opts.timeout);\n  }\n\n  var processDone = new Promise(function (resolve) {\n    spawned.on('exit', function (code, signal) {\n      cleanup();\n      resolve({\n        code: code,\n        signal: signal\n      });\n    });\n    spawned.on('error', function (err) {\n      cleanup();\n      resolve({\n        error: err\n      });\n    });\n\n    if (spawned.stdin) {\n      spawned.stdin.on('error', function (err) {\n        cleanup();\n        resolve({\n          error: err\n        });\n      });\n    }\n  });\n\n  function destroy() {\n    if (spawned.stdout) {\n      spawned.stdout.destroy();\n    }\n\n    if (spawned.stderr) {\n      spawned.stderr.destroy();\n    }\n  }\n\n  var handlePromise = function handlePromise() {\n    return pFinally(Promise.all([processDone, getStream(spawned, 'stdout', {\n      encoding: encoding,\n      buffer: buffer,\n      maxBuffer: maxBuffer\n    }), getStream(spawned, 'stderr', {\n      encoding: encoding,\n      buffer: buffer,\n      maxBuffer: maxBuffer\n    })]).then(function (arr) {\n      var result = arr[0];\n      result.stdout = arr[1];\n      result.stderr = arr[2];\n\n      if (result.error || result.code !== 0 || result.signal !== null) {\n        var err = makeError(result, {\n          joinedCmd: joinedCmd,\n          parsed: parsed,\n          timedOut: timedOut\n        }); // TODO: missing some timeout logic for killed\n        // https://github.com/nodejs/node/blob/master/lib/child_process.js#L203\n        // err.killed = spawned.killed || killed;\n\n        err.killed = err.killed || spawned.killed;\n\n        if (!parsed.opts.reject) {\n          return err;\n        }\n\n        throw err;\n      }\n\n      return {\n        stdout: handleOutput(parsed.opts, result.stdout),\n        stderr: handleOutput(parsed.opts, result.stderr),\n        code: 0,\n        failed: false,\n        killed: false,\n        signal: null,\n        cmd: joinedCmd,\n        timedOut: false\n      };\n    }), destroy);\n  };\n\n  crossSpawn._enoent.hookChildProcess(spawned, parsed.parsed);\n\n  handleInput(spawned, parsed.opts.input);\n\n  spawned.then = function (onfulfilled, onrejected) {\n    return handlePromise().then(onfulfilled, onrejected);\n  };\n\n  spawned.catch = function (onrejected) {\n    return handlePromise().catch(onrejected);\n  };\n\n  return spawned;\n}; // TODO: set `stderr: 'ignore'` when that option is implemented\n\n\nmodule.exports.stdout = function () {\n  var _module;\n\n  return (_module = module).exports.apply(_module, arguments).then(function (x) {\n    return x.stdout;\n  });\n}; // TODO: set `stdout: 'ignore'` when that option is implemented\n\n\nmodule.exports.stderr = function () {\n  var _module2;\n\n  return (_module2 = module).exports.apply(_module2, arguments).then(function (x) {\n    return x.stderr;\n  });\n};\n\nmodule.exports.shell = function (cmd, opts) {\n  return handleShell(module.exports, cmd, opts);\n};\n\nmodule.exports.sync = function (cmd, args, opts) {\n  var parsed = handleArgs(cmd, args, opts);\n  var joinedCmd = joinCmd(cmd, args);\n\n  if (isStream(parsed.opts.input)) {\n    throw new TypeError('The `input` option cannot be a stream in sync mode');\n  }\n\n  var result = childProcess.spawnSync(parsed.cmd, parsed.args, parsed.opts);\n  result.code = result.status;\n\n  if (result.error || result.status !== 0 || result.signal !== null) {\n    var err = makeError(result, {\n      joinedCmd: joinedCmd,\n      parsed: parsed\n    });\n\n    if (!parsed.opts.reject) {\n      return err;\n    }\n\n    throw err;\n  }\n\n  return {\n    stdout: handleOutput(parsed.opts, result.stdout),\n    stderr: handleOutput(parsed.opts, result.stderr),\n    code: 0,\n    failed: false,\n    signal: null,\n    cmd: joinedCmd,\n    timedOut: false\n  };\n};\n\nmodule.exports.shellSync = function (cmd, opts) {\n  return handleShell(module.exports.sync, cmd, opts);\n};","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/execa/index.js"],"names":["path","require","childProcess","crossSpawn","stripEof","npmRunPath","isStream","_getStream","pFinally","onExit","errname","stdio","TEN_MEGABYTES","handleArgs","cmd","args","opts","parsed","Object","assign","extendEnv","env","process","__winShell","command","options","file","original","_parse","maxBuffer","buffer","preferLocal","localDir","cwd","encoding","reject","cleanup","detached","platform","basename","unshift","handleInput","spawned","input","undefined","pipe","stdin","end","handleOutput","val","handleShell","fn","comspec","windowsVerbatimArguments","shell","getStream","stream","ret","Promise","resolve","once","catch","err","message","makeError","result","stdout","stderr","error","code","signal","joinedCmd","timedOut","output","Array","isArray","length","Error","failed","joinCmd","join","module","exports","spawn","removeExitHandler","kill","timeoutId","clearTimeout","timeout","setTimeout","killSignal","processDone","on","destroy","handlePromise","all","then","arr","killed","_enoent","hookChildProcess","onfulfilled","onrejected","x","sync","TypeError","spawnSync","status","shellSync"],"mappings":"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","sourcesContent":["'use strict';\nconst path = require('path');\nconst childProcess = require('child_process');\nconst crossSpawn = require('cross-spawn');\nconst stripEof = require('strip-eof');\nconst npmRunPath = require('npm-run-path');\nconst isStream = require('is-stream');\nconst _getStream = require('get-stream');\nconst pFinally = require('p-finally');\nconst onExit = require('signal-exit');\nconst errname = require('./lib/errname');\nconst stdio = require('./lib/stdio');\n\nconst TEN_MEGABYTES = 1000 * 1000 * 10;\n\nfunction handleArgs(cmd, args, opts) {\n\tlet parsed;\n\n\topts = Object.assign({\n\t\textendEnv: true,\n\t\tenv: {}\n\t}, opts);\n\n\tif (opts.extendEnv) {\n\t\topts.env = Object.assign({}, process.env, opts.env);\n\t}\n\n\tif (opts.__winShell === true) {\n\t\tdelete opts.__winShell;\n\t\tparsed = {\n\t\t\tcommand: cmd,\n\t\t\targs,\n\t\t\toptions: opts,\n\t\t\tfile: cmd,\n\t\t\toriginal: {\n\t\t\t\tcmd,\n\t\t\t\targs\n\t\t\t}\n\t\t};\n\t} else {\n\t\tparsed = crossSpawn._parse(cmd, args, opts);\n\t}\n\n\topts = Object.assign({\n\t\tmaxBuffer: TEN_MEGABYTES,\n\t\tbuffer: true,\n\t\tstripEof: true,\n\t\tpreferLocal: true,\n\t\tlocalDir: parsed.options.cwd || process.cwd(),\n\t\tencoding: 'utf8',\n\t\treject: true,\n\t\tcleanup: true\n\t}, parsed.options);\n\n\topts.stdio = stdio(opts);\n\n\tif (opts.preferLocal) {\n\t\topts.env = npmRunPath.env(Object.assign({}, opts, {cwd: opts.localDir}));\n\t}\n\n\tif (opts.detached) {\n\t\t// #115\n\t\topts.cleanup = false;\n\t}\n\n\tif (process.platform === 'win32' && path.basename(parsed.command) === 'cmd.exe') {\n\t\t// #116\n\t\tparsed.args.unshift('/q');\n\t}\n\n\treturn {\n\t\tcmd: parsed.command,\n\t\targs: parsed.args,\n\t\topts,\n\t\tparsed\n\t};\n}\n\nfunction handleInput(spawned, input) {\n\tif (input === null || input === undefined) {\n\t\treturn;\n\t}\n\n\tif (isStream(input)) {\n\t\tinput.pipe(spawned.stdin);\n\t} else {\n\t\tspawned.stdin.end(input);\n\t}\n}\n\nfunction handleOutput(opts, val) {\n\tif (val && opts.stripEof) {\n\t\tval = stripEof(val);\n\t}\n\n\treturn val;\n}\n\nfunction handleShell(fn, cmd, opts) {\n\tlet file = '/bin/sh';\n\tlet args = ['-c', cmd];\n\n\topts = Object.assign({}, opts);\n\n\tif (process.platform === 'win32') {\n\t\topts.__winShell = true;\n\t\tfile = process.env.comspec || 'cmd.exe';\n\t\targs = ['/s', '/c', `\"${cmd}\"`];\n\t\topts.windowsVerbatimArguments = true;\n\t}\n\n\tif (opts.shell) {\n\t\tfile = opts.shell;\n\t\tdelete opts.shell;\n\t}\n\n\treturn fn(file, args, opts);\n}\n\nfunction getStream(process, stream, {encoding, buffer, maxBuffer}) {\n\tif (!process[stream]) {\n\t\treturn null;\n\t}\n\n\tlet ret;\n\n\tif (!buffer) {\n\t\t// TODO: Use `ret = util.promisify(stream.finished)(process[stream]);` when targeting Node.js 10\n\t\tret = new Promise((resolve, reject) => {\n\t\t\tprocess[stream]\n\t\t\t\t.once('end', resolve)\n\t\t\t\t.once('error', reject);\n\t\t});\n\t} else if (encoding) {\n\t\tret = _getStream(process[stream], {\n\t\t\tencoding,\n\t\t\tmaxBuffer\n\t\t});\n\t} else {\n\t\tret = _getStream.buffer(process[stream], {maxBuffer});\n\t}\n\n\treturn ret.catch(err => {\n\t\terr.stream = stream;\n\t\terr.message = `${stream} ${err.message}`;\n\t\tthrow err;\n\t});\n}\n\nfunction makeError(result, options) {\n\tconst {stdout, stderr} = result;\n\n\tlet err = result.error;\n\tconst {code, signal} = result;\n\n\tconst {parsed, joinedCmd} = options;\n\tconst timedOut = options.timedOut || false;\n\n\tif (!err) {\n\t\tlet output = '';\n\n\t\tif (Array.isArray(parsed.opts.stdio)) {\n\t\t\tif (parsed.opts.stdio[2] !== 'inherit') {\n\t\t\t\toutput += output.length > 0 ? stderr : `\\n${stderr}`;\n\t\t\t}\n\n\t\t\tif (parsed.opts.stdio[1] !== 'inherit') {\n\t\t\t\toutput += `\\n${stdout}`;\n\t\t\t}\n\t\t} else if (parsed.opts.stdio !== 'inherit') {\n\t\t\toutput = `\\n${stderr}${stdout}`;\n\t\t}\n\n\t\terr = new Error(`Command failed: ${joinedCmd}${output}`);\n\t\terr.code = code < 0 ? errname(code) : code;\n\t}\n\n\terr.stdout = stdout;\n\terr.stderr = stderr;\n\terr.failed = true;\n\terr.signal = signal || null;\n\terr.cmd = joinedCmd;\n\terr.timedOut = timedOut;\n\n\treturn err;\n}\n\nfunction joinCmd(cmd, args) {\n\tlet joinedCmd = cmd;\n\n\tif (Array.isArray(args) && args.length > 0) {\n\t\tjoinedCmd += ' ' + args.join(' ');\n\t}\n\n\treturn joinedCmd;\n}\n\nmodule.exports = (cmd, args, opts) => {\n\tconst parsed = handleArgs(cmd, args, opts);\n\tconst {encoding, buffer, maxBuffer} = parsed.opts;\n\tconst joinedCmd = joinCmd(cmd, args);\n\n\tlet spawned;\n\ttry {\n\t\tspawned = childProcess.spawn(parsed.cmd, parsed.args, parsed.opts);\n\t} catch (err) {\n\t\treturn Promise.reject(err);\n\t}\n\n\tlet removeExitHandler;\n\tif (parsed.opts.cleanup) {\n\t\tremoveExitHandler = onExit(() => {\n\t\t\tspawned.kill();\n\t\t});\n\t}\n\n\tlet timeoutId = null;\n\tlet timedOut = false;\n\n\tconst cleanup = () => {\n\t\tif (timeoutId) {\n\t\t\tclearTimeout(timeoutId);\n\t\t\ttimeoutId = null;\n\t\t}\n\n\t\tif (removeExitHandler) {\n\t\t\tremoveExitHandler();\n\t\t}\n\t};\n\n\tif (parsed.opts.timeout > 0) {\n\t\ttimeoutId = setTimeout(() => {\n\t\t\ttimeoutId = null;\n\t\t\ttimedOut = true;\n\t\t\tspawned.kill(parsed.opts.killSignal);\n\t\t}, parsed.opts.timeout);\n\t}\n\n\tconst processDone = new Promise(resolve => {\n\t\tspawned.on('exit', (code, signal) => {\n\t\t\tcleanup();\n\t\t\tresolve({code, signal});\n\t\t});\n\n\t\tspawned.on('error', err => {\n\t\t\tcleanup();\n\t\t\tresolve({error: err});\n\t\t});\n\n\t\tif (spawned.stdin) {\n\t\t\tspawned.stdin.on('error', err => {\n\t\t\t\tcleanup();\n\t\t\t\tresolve({error: err});\n\t\t\t});\n\t\t}\n\t});\n\n\tfunction destroy() {\n\t\tif (spawned.stdout) {\n\t\t\tspawned.stdout.destroy();\n\t\t}\n\n\t\tif (spawned.stderr) {\n\t\t\tspawned.stderr.destroy();\n\t\t}\n\t}\n\n\tconst handlePromise = () => pFinally(Promise.all([\n\t\tprocessDone,\n\t\tgetStream(spawned, 'stdout', {encoding, buffer, maxBuffer}),\n\t\tgetStream(spawned, 'stderr', {encoding, buffer, maxBuffer})\n\t]).then(arr => {\n\t\tconst result = arr[0];\n\t\tresult.stdout = arr[1];\n\t\tresult.stderr = arr[2];\n\n\t\tif (result.error || result.code !== 0 || result.signal !== null) {\n\t\t\tconst err = makeError(result, {\n\t\t\t\tjoinedCmd,\n\t\t\t\tparsed,\n\t\t\t\ttimedOut\n\t\t\t});\n\n\t\t\t// TODO: missing some timeout logic for killed\n\t\t\t// https://github.com/nodejs/node/blob/master/lib/child_process.js#L203\n\t\t\t// err.killed = spawned.killed || killed;\n\t\t\terr.killed = err.killed || spawned.killed;\n\n\t\t\tif (!parsed.opts.reject) {\n\t\t\t\treturn err;\n\t\t\t}\n\n\t\t\tthrow err;\n\t\t}\n\n\t\treturn {\n\t\t\tstdout: handleOutput(parsed.opts, result.stdout),\n\t\t\tstderr: handleOutput(parsed.opts, result.stderr),\n\t\t\tcode: 0,\n\t\t\tfailed: false,\n\t\t\tkilled: false,\n\t\t\tsignal: null,\n\t\t\tcmd: joinedCmd,\n\t\t\ttimedOut: false\n\t\t};\n\t}), destroy);\n\n\tcrossSpawn._enoent.hookChildProcess(spawned, parsed.parsed);\n\n\thandleInput(spawned, parsed.opts.input);\n\n\tspawned.then = (onfulfilled, onrejected) => handlePromise().then(onfulfilled, onrejected);\n\tspawned.catch = onrejected => handlePromise().catch(onrejected);\n\n\treturn spawned;\n};\n\n// TODO: set `stderr: 'ignore'` when that option is implemented\nmodule.exports.stdout = (...args) => module.exports(...args).then(x => x.stdout);\n\n// TODO: set `stdout: 'ignore'` when that option is implemented\nmodule.exports.stderr = (...args) => module.exports(...args).then(x => x.stderr);\n\nmodule.exports.shell = (cmd, opts) => handleShell(module.exports, cmd, opts);\n\nmodule.exports.sync = (cmd, args, opts) => {\n\tconst parsed = handleArgs(cmd, args, opts);\n\tconst joinedCmd = joinCmd(cmd, args);\n\n\tif (isStream(parsed.opts.input)) {\n\t\tthrow new TypeError('The `input` option cannot be a stream in sync mode');\n\t}\n\n\tconst result = childProcess.spawnSync(parsed.cmd, parsed.args, parsed.opts);\n\tresult.code = result.status;\n\n\tif (result.error || result.status !== 0 || result.signal !== null) {\n\t\tconst err = makeError(result, {\n\t\t\tjoinedCmd,\n\t\t\tparsed\n\t\t});\n\n\t\tif (!parsed.opts.reject) {\n\t\t\treturn err;\n\t\t}\n\n\t\tthrow err;\n\t}\n\n\treturn {\n\t\tstdout: handleOutput(parsed.opts, result.stdout),\n\t\tstderr: handleOutput(parsed.opts, result.stderr),\n\t\tcode: 0,\n\t\tfailed: false,\n\t\tsignal: null,\n\t\tcmd: joinedCmd,\n\t\ttimedOut: false\n\t};\n};\n\nmodule.exports.shellSync = (cmd, opts) => handleShell(module.exports.sync, cmd, opts);\n"]},"metadata":{},"sourceType":"script"}