{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NodeJsSyncHost = exports.NodeJsAsyncHost = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar fs = require(\"fs\");\n\nvar path = require(\"path\");\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar src_1 = require(\"../src\"); // This will only be initialized if the watch() method is called.\n// Otherwise chokidar appears only in type positions, and shouldn't be referenced\n// in the JavaScript output.\n\n\nvar FSWatcher;\n\nfunction loadFSWatcher() {\n  if (!FSWatcher) {\n    try {\n      // tslint:disable-next-line:no-implicit-dependencies\n      FSWatcher = require('chokidar').FSWatcher;\n    } catch (e) {\n      if (e.code !== 'MODULE_NOT_FOUND') {\n        throw new Error('As of angular-devkit version 8.0, the \"chokidar\" package ' + 'must be installed in order to use watch() features.');\n      }\n\n      throw e;\n    }\n  }\n}\n\nfunction _callFs(fn) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return new rxjs_1.Observable(function (obs) {\n    fn.apply(void 0, args.concat([function (err, result) {\n      if (err) {\n        obs.error(err);\n      } else {\n        obs.next(result);\n        obs.complete();\n      }\n    }]));\n  });\n}\n/**\n * An implementation of the Virtual FS using Node as the background. There are two versions; one\n * synchronous and one asynchronous.\n */\n\n\nvar NodeJsAsyncHost = /*#__PURE__*/function () {\n  function NodeJsAsyncHost() {\n    _classCallCheck(this, NodeJsAsyncHost);\n  }\n\n  _createClass(NodeJsAsyncHost, [{\n    key: \"capabilities\",\n    get: function get() {\n      return {\n        synchronous: false\n      };\n    }\n  }, {\n    key: \"write\",\n    value: function write(path, content) {\n      return new rxjs_1.Observable(function (obs) {\n        // Create folders if necessary.\n        var _createDir = function _createDir(path) {\n          if (fs.existsSync(src_1.getSystemPath(path))) {\n            return;\n          }\n\n          if (src_1.dirname(path) === path) {\n            throw new Error();\n          }\n\n          _createDir(src_1.dirname(path));\n\n          fs.mkdirSync(src_1.getSystemPath(path));\n        };\n\n        _createDir(src_1.dirname(path));\n\n        _callFs(fs.writeFile, src_1.getSystemPath(path), new Uint8Array(content)).subscribe(obs);\n      });\n    }\n  }, {\n    key: \"read\",\n    value: function read(path) {\n      return _callFs(fs.readFile, src_1.getSystemPath(path)).pipe(operators_1.map(function (buffer) {\n        return new Uint8Array(buffer).buffer;\n      }));\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(path) {\n      return this.isDirectory(path).pipe(operators_1.mergeMap(function (isDirectory) {\n        if (isDirectory) {\n          var allFiles = [];\n          var allDirs = [];\n\n          var _recurseList = function _recurseList(path) {\n            var _iterator = _createForOfIteratorHelper(fs.readdirSync(src_1.getSystemPath(path))),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var fragment = _step.value;\n\n                if (fs.statSync(src_1.getSystemPath(src_1.join(path, fragment))).isDirectory()) {\n                  _recurseList(src_1.join(path, fragment));\n\n                  allDirs.push(src_1.join(path, fragment));\n                } else {\n                  allFiles.push(src_1.join(path, fragment));\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          };\n\n          _recurseList(path);\n\n          return rxjs_1.concat(rxjs_1.from(allFiles).pipe(operators_1.mergeMap(function (p) {\n            return _callFs(fs.unlink, src_1.getSystemPath(p));\n          }), operators_1.ignoreElements()), rxjs_1.from(allDirs).pipe(operators_1.concatMap(function (p) {\n            return _callFs(fs.rmdir, src_1.getSystemPath(p));\n          })));\n        } else {\n          return _callFs(fs.unlink, src_1.getSystemPath(path));\n        }\n      }), operators_1.map(function () {\n        return undefined;\n      }));\n    }\n  }, {\n    key: \"rename\",\n    value: function rename(from, to) {\n      return _callFs(fs.rename, src_1.getSystemPath(from), src_1.getSystemPath(to));\n    }\n  }, {\n    key: \"list\",\n    value: function list(path) {\n      return _callFs(fs.readdir, src_1.getSystemPath(path)).pipe(operators_1.map(function (names) {\n        return names.map(function (name) {\n          return src_1.fragment(name);\n        });\n      }));\n    }\n  }, {\n    key: \"exists\",\n    value: function exists(path) {\n      // Exists is a special case because it cannot error.\n      return new rxjs_1.Observable(function (obs) {\n        fs.exists(path, function (exists) {\n          obs.next(exists);\n          obs.complete();\n        });\n      });\n    }\n  }, {\n    key: \"isDirectory\",\n    value: function isDirectory(path) {\n      return _callFs(fs.stat, src_1.getSystemPath(path)).pipe(operators_1.map(function (stat) {\n        return stat.isDirectory();\n      }));\n    }\n  }, {\n    key: \"isFile\",\n    value: function isFile(path) {\n      return _callFs(fs.stat, src_1.getSystemPath(path)).pipe(operators_1.map(function (stat) {\n        return stat.isFile();\n      }));\n    } // Some hosts may not support stat.\n\n  }, {\n    key: \"stat\",\n    value: function stat(path) {\n      return _callFs(fs.stat, src_1.getSystemPath(path));\n    } // Some hosts may not support watching.\n\n  }, {\n    key: \"watch\",\n    value: function watch(path, _options) {\n      return new rxjs_1.Observable(function (obs) {\n        loadFSWatcher();\n        var watcher = new FSWatcher({\n          persistent: true\n        }).add(src_1.getSystemPath(path));\n        watcher.on('change', function (path) {\n          obs.next({\n            path: src_1.normalize(path),\n            time: new Date(),\n            type: 0\n            /* Changed */\n\n          });\n        }).on('add', function (path) {\n          obs.next({\n            path: src_1.normalize(path),\n            time: new Date(),\n            type: 1\n            /* Created */\n\n          });\n        }).on('unlink', function (path) {\n          obs.next({\n            path: src_1.normalize(path),\n            time: new Date(),\n            type: 2\n            /* Deleted */\n\n          });\n        });\n        return function () {\n          return watcher.close();\n        };\n      }).pipe(operators_1.publish(), operators_1.refCount());\n    }\n  }]);\n\n  return NodeJsAsyncHost;\n}();\n\nexports.NodeJsAsyncHost = NodeJsAsyncHost;\n/**\n * An implementation of the Virtual FS using Node as the backend, synchronously.\n */\n\nvar NodeJsSyncHost = /*#__PURE__*/function () {\n  function NodeJsSyncHost() {\n    _classCallCheck(this, NodeJsSyncHost);\n  }\n\n  _createClass(NodeJsSyncHost, [{\n    key: \"capabilities\",\n    get: function get() {\n      return {\n        synchronous: true\n      };\n    }\n  }, {\n    key: \"write\",\n    value: function write(path, content) {\n      return new rxjs_1.Observable(function (obs) {\n        // TODO: remove this try+catch when issue https://github.com/ReactiveX/rxjs/issues/3740 is\n        // fixed.\n        try {\n          // Create folders if necessary.\n          var _createDir = function _createDir(path) {\n            if (fs.existsSync(src_1.getSystemPath(path))) {\n              return;\n            }\n\n            _createDir(src_1.dirname(path));\n\n            fs.mkdirSync(src_1.getSystemPath(path));\n          };\n\n          _createDir(src_1.dirname(path));\n\n          fs.writeFileSync(src_1.getSystemPath(path), new Uint8Array(content));\n          obs.next();\n          obs.complete();\n        } catch (err) {\n          obs.error(err);\n        }\n      });\n    }\n  }, {\n    key: \"read\",\n    value: function read(path) {\n      return new rxjs_1.Observable(function (obs) {\n        // TODO: remove this try+catch when issue https://github.com/ReactiveX/rxjs/issues/3740 is\n        // fixed.\n        try {\n          var buffer = fs.readFileSync(src_1.getSystemPath(path));\n          obs.next(new Uint8Array(buffer).buffer);\n          obs.complete();\n        } catch (err) {\n          obs.error(err);\n        }\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(path) {\n      var _this = this;\n\n      return this.isDirectory(path).pipe(operators_1.concatMap(function (isDir) {\n        // TODO: remove this try+catch when issue https://github.com/ReactiveX/rxjs/issues/3740 is\n        // fixed.\n        if (isDir) {\n          var dirPaths = fs.readdirSync(src_1.getSystemPath(path));\n          var rmDirComplete = new rxjs_1.Observable(function (obs) {\n            try {\n              fs.rmdirSync(src_1.getSystemPath(path));\n              obs.complete();\n            } catch (e) {\n              obs.error(e);\n            }\n          });\n          return rxjs_1.concat.apply(rxjs_1, _toConsumableArray(dirPaths.map(function (name) {\n            return _this.delete(src_1.join(path, name));\n          })).concat([rmDirComplete]));\n        } else {\n          try {\n            fs.unlinkSync(src_1.getSystemPath(path));\n          } catch (err) {\n            return rxjs_1.throwError(err);\n          }\n\n          return rxjs_1.of(undefined);\n        }\n      }));\n    }\n  }, {\n    key: \"rename\",\n    value: function rename(from, to) {\n      return new rxjs_1.Observable(function (obs) {\n        // TODO: remove this try+catch when issue https://github.com/ReactiveX/rxjs/issues/3740 is\n        // fixed.\n        try {\n          var toSystemPath = src_1.getSystemPath(to);\n\n          if (!fs.existsSync(path.dirname(toSystemPath))) {\n            fs.mkdirSync(path.dirname(toSystemPath), {\n              recursive: true\n            });\n          }\n\n          fs.renameSync(src_1.getSystemPath(from), src_1.getSystemPath(to));\n          obs.next();\n          obs.complete();\n        } catch (err) {\n          obs.error(err);\n        }\n      });\n    }\n  }, {\n    key: \"list\",\n    value: function list(path) {\n      return new rxjs_1.Observable(function (obs) {\n        // TODO: remove this try+catch when issue https://github.com/ReactiveX/rxjs/issues/3740 is\n        // fixed.\n        try {\n          var names = fs.readdirSync(src_1.getSystemPath(path));\n          obs.next(names.map(function (name) {\n            return src_1.fragment(name);\n          }));\n          obs.complete();\n        } catch (err) {\n          obs.error(err);\n        }\n      });\n    }\n  }, {\n    key: \"exists\",\n    value: function exists(path) {\n      return new rxjs_1.Observable(function (obs) {\n        // TODO: remove this try+catch when issue https://github.com/ReactiveX/rxjs/issues/3740 is\n        // fixed.\n        try {\n          obs.next(fs.existsSync(src_1.getSystemPath(path)));\n          obs.complete();\n        } catch (err) {\n          obs.error(err);\n        }\n      });\n    }\n  }, {\n    key: \"isDirectory\",\n    value: function isDirectory(path) {\n      // tslint:disable-next-line:no-non-null-assertion\n      return this.stat(path).pipe(operators_1.map(function (stat) {\n        return stat.isDirectory();\n      }));\n    }\n  }, {\n    key: \"isFile\",\n    value: function isFile(path) {\n      // tslint:disable-next-line:no-non-null-assertion\n      return this.stat(path).pipe(operators_1.map(function (stat) {\n        return stat.isFile();\n      }));\n    } // Some hosts may not support stat.\n\n  }, {\n    key: \"stat\",\n    value: function stat(path) {\n      return new rxjs_1.Observable(function (obs) {\n        // TODO: remove this try+catch when issue https://github.com/ReactiveX/rxjs/issues/3740 is\n        // fixed.\n        try {\n          obs.next(fs.statSync(src_1.getSystemPath(path)));\n          obs.complete();\n        } catch (err) {\n          obs.error(err);\n        }\n      });\n    } // Some hosts may not support watching.\n\n  }, {\n    key: \"watch\",\n    value: function watch(path, _options) {\n      return new rxjs_1.Observable(function (obs) {\n        var opts = {\n          persistent: false\n        };\n        loadFSWatcher();\n        var watcher = new FSWatcher(opts).add(src_1.getSystemPath(path));\n        watcher.on('change', function (path) {\n          obs.next({\n            path: src_1.normalize(path),\n            time: new Date(),\n            type: 0\n            /* Changed */\n\n          });\n        }).on('add', function (path) {\n          obs.next({\n            path: src_1.normalize(path),\n            time: new Date(),\n            type: 1\n            /* Created */\n\n          });\n        }).on('unlink', function (path) {\n          obs.next({\n            path: src_1.normalize(path),\n            time: new Date(),\n            type: 2\n            /* Deleted */\n\n          });\n        });\n        return function () {\n          return watcher.close();\n        };\n      }).pipe(operators_1.publish(), operators_1.refCount());\n    }\n  }]);\n\n  return NodeJsSyncHost;\n}();\n\nexports.NodeJsSyncHost = NodeJsSyncHost;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/@angular-devkit/core/node/host.js"],"names":["Object","defineProperty","exports","value","NodeJsSyncHost","NodeJsAsyncHost","fs","require","path","rxjs_1","operators_1","src_1","FSWatcher","loadFSWatcher","e","code","Error","_callFs","fn","args","Observable","obs","err","result","error","next","complete","synchronous","content","_createDir","existsSync","getSystemPath","dirname","mkdirSync","writeFile","Uint8Array","subscribe","readFile","pipe","map","buffer","isDirectory","mergeMap","allFiles","allDirs","_recurseList","readdirSync","fragment","statSync","join","push","concat","from","p","unlink","ignoreElements","concatMap","rmdir","undefined","to","rename","readdir","names","name","exists","stat","isFile","_options","watcher","persistent","add","on","normalize","time","Date","type","close","publish","refCount","writeFileSync","readFileSync","isDir","dirPaths","rmDirComplete","rmdirSync","delete","unlinkSync","throwError","of","toSystemPath","recursive","renameSync","opts"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeJsSyncHost = exports.NodeJsAsyncHost = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst src_1 = require(\"../src\");\n// This will only be initialized if the watch() method is called.\n// Otherwise chokidar appears only in type positions, and shouldn't be referenced\n// in the JavaScript output.\nlet FSWatcher;\nfunction loadFSWatcher() {\n    if (!FSWatcher) {\n        try {\n            // tslint:disable-next-line:no-implicit-dependencies\n            FSWatcher = require('chokidar').FSWatcher;\n        }\n        catch (e) {\n            if (e.code !== 'MODULE_NOT_FOUND') {\n                throw new Error('As of angular-devkit version 8.0, the \"chokidar\" package ' +\n                    'must be installed in order to use watch() features.');\n            }\n            throw e;\n        }\n    }\n}\nfunction _callFs(fn, ...args) {\n    return new rxjs_1.Observable(obs => {\n        fn(...args, (err, result) => {\n            if (err) {\n                obs.error(err);\n            }\n            else {\n                obs.next(result);\n                obs.complete();\n            }\n        });\n    });\n}\n/**\n * An implementation of the Virtual FS using Node as the background. There are two versions; one\n * synchronous and one asynchronous.\n */\nclass NodeJsAsyncHost {\n    get capabilities() {\n        return { synchronous: false };\n    }\n    write(path, content) {\n        return new rxjs_1.Observable(obs => {\n            // Create folders if necessary.\n            const _createDir = (path) => {\n                if (fs.existsSync(src_1.getSystemPath(path))) {\n                    return;\n                }\n                if (src_1.dirname(path) === path) {\n                    throw new Error();\n                }\n                _createDir(src_1.dirname(path));\n                fs.mkdirSync(src_1.getSystemPath(path));\n            };\n            _createDir(src_1.dirname(path));\n            _callFs(fs.writeFile, src_1.getSystemPath(path), new Uint8Array(content)).subscribe(obs);\n        });\n    }\n    read(path) {\n        return _callFs(fs.readFile, src_1.getSystemPath(path)).pipe(operators_1.map(buffer => new Uint8Array(buffer).buffer));\n    }\n    delete(path) {\n        return this.isDirectory(path).pipe(operators_1.mergeMap(isDirectory => {\n            if (isDirectory) {\n                const allFiles = [];\n                const allDirs = [];\n                const _recurseList = (path) => {\n                    for (const fragment of fs.readdirSync(src_1.getSystemPath(path))) {\n                        if (fs.statSync(src_1.getSystemPath(src_1.join(path, fragment))).isDirectory()) {\n                            _recurseList(src_1.join(path, fragment));\n                            allDirs.push(src_1.join(path, fragment));\n                        }\n                        else {\n                            allFiles.push(src_1.join(path, fragment));\n                        }\n                    }\n                };\n                _recurseList(path);\n                return rxjs_1.concat(rxjs_1.from(allFiles).pipe(operators_1.mergeMap(p => _callFs(fs.unlink, src_1.getSystemPath(p))), operators_1.ignoreElements()), rxjs_1.from(allDirs).pipe(operators_1.concatMap(p => _callFs(fs.rmdir, src_1.getSystemPath(p)))));\n            }\n            else {\n                return _callFs(fs.unlink, src_1.getSystemPath(path));\n            }\n        }), operators_1.map(() => undefined));\n    }\n    rename(from, to) {\n        return _callFs(fs.rename, src_1.getSystemPath(from), src_1.getSystemPath(to));\n    }\n    list(path) {\n        return _callFs(fs.readdir, src_1.getSystemPath(path)).pipe(operators_1.map((names) => names.map(name => src_1.fragment(name))));\n    }\n    exists(path) {\n        // Exists is a special case because it cannot error.\n        return new rxjs_1.Observable(obs => {\n            fs.exists(path, exists => {\n                obs.next(exists);\n                obs.complete();\n            });\n        });\n    }\n    isDirectory(path) {\n        return _callFs(fs.stat, src_1.getSystemPath(path)).pipe(operators_1.map(stat => stat.isDirectory()));\n    }\n    isFile(path) {\n        return _callFs(fs.stat, src_1.getSystemPath(path)).pipe(operators_1.map(stat => stat.isFile()));\n    }\n    // Some hosts may not support stat.\n    stat(path) {\n        return _callFs(fs.stat, src_1.getSystemPath(path));\n    }\n    // Some hosts may not support watching.\n    watch(path, _options) {\n        return new rxjs_1.Observable(obs => {\n            loadFSWatcher();\n            const watcher = new FSWatcher({ persistent: true }).add(src_1.getSystemPath(path));\n            watcher\n                .on('change', path => {\n                obs.next({\n                    path: src_1.normalize(path),\n                    time: new Date(),\n                    type: 0 /* Changed */,\n                });\n            })\n                .on('add', path => {\n                obs.next({\n                    path: src_1.normalize(path),\n                    time: new Date(),\n                    type: 1 /* Created */,\n                });\n            })\n                .on('unlink', path => {\n                obs.next({\n                    path: src_1.normalize(path),\n                    time: new Date(),\n                    type: 2 /* Deleted */,\n                });\n            });\n            return () => watcher.close();\n        }).pipe(operators_1.publish(), operators_1.refCount());\n    }\n}\nexports.NodeJsAsyncHost = NodeJsAsyncHost;\n/**\n * An implementation of the Virtual FS using Node as the backend, synchronously.\n */\nclass NodeJsSyncHost {\n    get capabilities() {\n        return { synchronous: true };\n    }\n    write(path, content) {\n        return new rxjs_1.Observable(obs => {\n            // TODO: remove this try+catch when issue https://github.com/ReactiveX/rxjs/issues/3740 is\n            // fixed.\n            try {\n                // Create folders if necessary.\n                const _createDir = (path) => {\n                    if (fs.existsSync(src_1.getSystemPath(path))) {\n                        return;\n                    }\n                    _createDir(src_1.dirname(path));\n                    fs.mkdirSync(src_1.getSystemPath(path));\n                };\n                _createDir(src_1.dirname(path));\n                fs.writeFileSync(src_1.getSystemPath(path), new Uint8Array(content));\n                obs.next();\n                obs.complete();\n            }\n            catch (err) {\n                obs.error(err);\n            }\n        });\n    }\n    read(path) {\n        return new rxjs_1.Observable(obs => {\n            // TODO: remove this try+catch when issue https://github.com/ReactiveX/rxjs/issues/3740 is\n            // fixed.\n            try {\n                const buffer = fs.readFileSync(src_1.getSystemPath(path));\n                obs.next(new Uint8Array(buffer).buffer);\n                obs.complete();\n            }\n            catch (err) {\n                obs.error(err);\n            }\n        });\n    }\n    delete(path) {\n        return this.isDirectory(path).pipe(operators_1.concatMap(isDir => {\n            // TODO: remove this try+catch when issue https://github.com/ReactiveX/rxjs/issues/3740 is\n            // fixed.\n            if (isDir) {\n                const dirPaths = fs.readdirSync(src_1.getSystemPath(path));\n                const rmDirComplete = new rxjs_1.Observable((obs) => {\n                    try {\n                        fs.rmdirSync(src_1.getSystemPath(path));\n                        obs.complete();\n                    }\n                    catch (e) {\n                        obs.error(e);\n                    }\n                });\n                return rxjs_1.concat(...dirPaths.map(name => this.delete(src_1.join(path, name))), rmDirComplete);\n            }\n            else {\n                try {\n                    fs.unlinkSync(src_1.getSystemPath(path));\n                }\n                catch (err) {\n                    return rxjs_1.throwError(err);\n                }\n                return rxjs_1.of(undefined);\n            }\n        }));\n    }\n    rename(from, to) {\n        return new rxjs_1.Observable(obs => {\n            // TODO: remove this try+catch when issue https://github.com/ReactiveX/rxjs/issues/3740 is\n            // fixed.\n            try {\n                const toSystemPath = src_1.getSystemPath(to);\n                if (!fs.existsSync(path.dirname(toSystemPath))) {\n                    fs.mkdirSync(path.dirname(toSystemPath), { recursive: true });\n                }\n                fs.renameSync(src_1.getSystemPath(from), src_1.getSystemPath(to));\n                obs.next();\n                obs.complete();\n            }\n            catch (err) {\n                obs.error(err);\n            }\n        });\n    }\n    list(path) {\n        return new rxjs_1.Observable(obs => {\n            // TODO: remove this try+catch when issue https://github.com/ReactiveX/rxjs/issues/3740 is\n            // fixed.\n            try {\n                const names = fs.readdirSync(src_1.getSystemPath(path));\n                obs.next(names.map(name => src_1.fragment(name)));\n                obs.complete();\n            }\n            catch (err) {\n                obs.error(err);\n            }\n        });\n    }\n    exists(path) {\n        return new rxjs_1.Observable(obs => {\n            // TODO: remove this try+catch when issue https://github.com/ReactiveX/rxjs/issues/3740 is\n            // fixed.\n            try {\n                obs.next(fs.existsSync(src_1.getSystemPath(path)));\n                obs.complete();\n            }\n            catch (err) {\n                obs.error(err);\n            }\n        });\n    }\n    isDirectory(path) {\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.stat(path).pipe(operators_1.map(stat => stat.isDirectory()));\n    }\n    isFile(path) {\n        // tslint:disable-next-line:no-non-null-assertion\n        return this.stat(path).pipe(operators_1.map(stat => stat.isFile()));\n    }\n    // Some hosts may not support stat.\n    stat(path) {\n        return new rxjs_1.Observable(obs => {\n            // TODO: remove this try+catch when issue https://github.com/ReactiveX/rxjs/issues/3740 is\n            // fixed.\n            try {\n                obs.next(fs.statSync(src_1.getSystemPath(path)));\n                obs.complete();\n            }\n            catch (err) {\n                obs.error(err);\n            }\n        });\n    }\n    // Some hosts may not support watching.\n    watch(path, _options) {\n        return new rxjs_1.Observable(obs => {\n            const opts = { persistent: false };\n            loadFSWatcher();\n            const watcher = new FSWatcher(opts).add(src_1.getSystemPath(path));\n            watcher\n                .on('change', path => {\n                obs.next({\n                    path: src_1.normalize(path),\n                    time: new Date(),\n                    type: 0 /* Changed */,\n                });\n            })\n                .on('add', path => {\n                obs.next({\n                    path: src_1.normalize(path),\n                    time: new Date(),\n                    type: 1 /* Created */,\n                });\n            })\n                .on('unlink', path => {\n                obs.next({\n                    path: src_1.normalize(path),\n                    time: new Date(),\n                    type: 2 /* Deleted */,\n                });\n            });\n            return () => watcher.close();\n        }).pipe(operators_1.publish(), operators_1.refCount());\n    }\n}\nexports.NodeJsSyncHost = NodeJsSyncHost;\n"]},"metadata":{},"sourceType":"script"}