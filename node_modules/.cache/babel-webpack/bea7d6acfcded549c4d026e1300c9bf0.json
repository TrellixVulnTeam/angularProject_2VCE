{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SafeReadonlyHost = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * A Host that filters out errors. The only exception is `read()` which will still error out if\n * the delegate returned an error (e.g. NodeJS will error out if the file doesn't exist).\n */\n\n\nvar SafeReadonlyHost = /*#__PURE__*/function () {\n  function SafeReadonlyHost(_delegate) {\n    _classCallCheck(this, SafeReadonlyHost);\n\n    this._delegate = _delegate;\n  }\n\n  _createClass(SafeReadonlyHost, [{\n    key: \"capabilities\",\n    get: function get() {\n      return this._delegate.capabilities;\n    }\n  }, {\n    key: \"read\",\n    value: function read(path) {\n      return this._delegate.read(path);\n    }\n  }, {\n    key: \"list\",\n    value: function list(path) {\n      return this._delegate.list(path).pipe(operators_1.catchError(function () {\n        return rxjs_1.of([]);\n      }));\n    }\n  }, {\n    key: \"exists\",\n    value: function exists(path) {\n      return this._delegate.exists(path);\n    }\n  }, {\n    key: \"isDirectory\",\n    value: function isDirectory(path) {\n      return this._delegate.isDirectory(path).pipe(operators_1.catchError(function () {\n        return rxjs_1.of(false);\n      }));\n    }\n  }, {\n    key: \"isFile\",\n    value: function isFile(path) {\n      return this._delegate.isFile(path).pipe(operators_1.catchError(function () {\n        return rxjs_1.of(false);\n      }));\n    } // Some hosts may not support stats.\n\n  }, {\n    key: \"stat\",\n    value: function stat(path) {\n      var maybeStat = this._delegate.stat(path);\n\n      return maybeStat && maybeStat.pipe(operators_1.catchError(function () {\n        return rxjs_1.of(null);\n      }));\n    }\n  }]);\n\n  return SafeReadonlyHost;\n}();\n\nexports.SafeReadonlyHost = SafeReadonlyHost;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/@angular-devkit/core/src/virtual-fs/host/safe.js"],"names":["Object","defineProperty","exports","value","SafeReadonlyHost","rxjs_1","require","operators_1","_delegate","capabilities","path","read","list","pipe","catchError","of","exists","isDirectory","isFile","maybeStat","stat"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2B,KAAK,CAAhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,MAAD,CAAtB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,gBAAD,CAA3B;AACA;AACA;AACA;AACA;;;IACMF,gB;AACF,4BAAYI,SAAZ,EAAuB;AAAA;;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACH;;;;SACD,eAAmB;AACf,aAAO,KAAKA,SAAL,CAAeC,YAAtB;AACH;;;WACD,cAAKC,IAAL,EAAW;AACP,aAAO,KAAKF,SAAL,CAAeG,IAAf,CAAoBD,IAApB,CAAP;AACH;;;WACD,cAAKA,IAAL,EAAW;AACP,aAAO,KAAKF,SAAL,CAAeI,IAAf,CAAoBF,IAApB,EAA0BG,IAA1B,CAA+BN,WAAW,CAACO,UAAZ,CAAuB;AAAA,eAAMT,MAAM,CAACU,EAAP,CAAU,EAAV,CAAN;AAAA,OAAvB,CAA/B,CAAP;AACH;;;WACD,gBAAOL,IAAP,EAAa;AACT,aAAO,KAAKF,SAAL,CAAeQ,MAAf,CAAsBN,IAAtB,CAAP;AACH;;;WACD,qBAAYA,IAAZ,EAAkB;AACd,aAAO,KAAKF,SAAL,CAAeS,WAAf,CAA2BP,IAA3B,EAAiCG,IAAjC,CAAsCN,WAAW,CAACO,UAAZ,CAAuB;AAAA,eAAMT,MAAM,CAACU,EAAP,CAAU,KAAV,CAAN;AAAA,OAAvB,CAAtC,CAAP;AACH;;;WACD,gBAAOL,IAAP,EAAa;AACT,aAAO,KAAKF,SAAL,CAAeU,MAAf,CAAsBR,IAAtB,EAA4BG,IAA5B,CAAiCN,WAAW,CAACO,UAAZ,CAAuB;AAAA,eAAMT,MAAM,CAACU,EAAP,CAAU,KAAV,CAAN;AAAA,OAAvB,CAAjC,CAAP;AACH,K,CACD;;;;WACA,cAAKL,IAAL,EAAW;AACP,UAAMS,SAAS,GAAG,KAAKX,SAAL,CAAeY,IAAf,CAAoBV,IAApB,CAAlB;;AACA,aAAOS,SAAS,IAAIA,SAAS,CAACN,IAAV,CAAeN,WAAW,CAACO,UAAZ,CAAuB;AAAA,eAAMT,MAAM,CAACU,EAAP,CAAU,IAAV,CAAN;AAAA,OAAvB,CAAf,CAApB;AACH;;;;;;AAELb,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SafeReadonlyHost = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\n/**\n * A Host that filters out errors. The only exception is `read()` which will still error out if\n * the delegate returned an error (e.g. NodeJS will error out if the file doesn't exist).\n */\nclass SafeReadonlyHost {\n    constructor(_delegate) {\n        this._delegate = _delegate;\n    }\n    get capabilities() {\n        return this._delegate.capabilities;\n    }\n    read(path) {\n        return this._delegate.read(path);\n    }\n    list(path) {\n        return this._delegate.list(path).pipe(operators_1.catchError(() => rxjs_1.of([])));\n    }\n    exists(path) {\n        return this._delegate.exists(path);\n    }\n    isDirectory(path) {\n        return this._delegate.isDirectory(path).pipe(operators_1.catchError(() => rxjs_1.of(false)));\n    }\n    isFile(path) {\n        return this._delegate.isFile(path).pipe(operators_1.catchError(() => rxjs_1.of(false)));\n    }\n    // Some hosts may not support stats.\n    stat(path) {\n        const maybeStat = this._delegate.stat(path);\n        return maybeStat && maybeStat.pipe(operators_1.catchError(() => rxjs_1.of(null)));\n    }\n}\nexports.SafeReadonlyHost = SafeReadonlyHost;\n"]},"metadata":{},"sourceType":"script"}