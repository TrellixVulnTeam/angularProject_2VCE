{"ast":null,"code":"'use strict';\n\nvar _taggedTemplateLiteral = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n\nvar BB = require('bluebird');\n\nvar contentPath = require('./path');\n\nvar fixOwner = require('../util/fix-owner');\n\nvar fs = require('graceful-fs');\n\nvar moveFile = require('../util/move-file');\n\nvar PassThrough = require('stream').PassThrough;\n\nvar path = require('path');\n\nvar pipe = BB.promisify(require('mississippi').pipe);\nvar rimraf = BB.promisify(require('rimraf'));\n\nvar ssri = require('ssri');\n\nvar to = require('mississippi').to;\n\nvar uniqueFilename = require('unique-filename');\n\nvar Y = require('../util/y.js');\n\nvar writeFileAsync = BB.promisify(fs.writeFile);\nmodule.exports = write;\n\nfunction write(cache, data, opts) {\n  opts = opts || {};\n\n  if (opts.algorithms && opts.algorithms.length > 1) {\n    throw new Error(Y(_templateObject || (_templateObject = _taggedTemplateLiteral([\"opts.algorithms only supports a single algorithm for now\"]))));\n  }\n\n  if (typeof opts.size === 'number' && data.length !== opts.size) {\n    return BB.reject(sizeError(opts.size, data.length));\n  }\n\n  var sri = ssri.fromData(data, {\n    algorithms: opts.algorithms\n  });\n\n  if (opts.integrity && !ssri.checkData(data, opts.integrity, opts)) {\n    return BB.reject(checksumError(opts.integrity, sri));\n  }\n\n  return BB.using(makeTmp(cache, opts), function (tmp) {\n    return writeFileAsync(tmp.target, data, {\n      flag: 'wx'\n    }).then(function () {\n      return moveToDestination(tmp, cache, sri, opts);\n    });\n  }).then(function () {\n    return {\n      integrity: sri,\n      size: data.length\n    };\n  });\n}\n\nmodule.exports.stream = writeStream;\n\nfunction writeStream(cache, opts) {\n  opts = opts || {};\n  var inputStream = new PassThrough();\n  var inputErr = false;\n\n  function errCheck() {\n    if (inputErr) {\n      throw inputErr;\n    }\n  }\n\n  var allDone;\n  var ret = to(function (c, n, cb) {\n    if (!allDone) {\n      allDone = handleContent(inputStream, cache, opts, errCheck);\n    }\n\n    inputStream.write(c, n, cb);\n  }, function (cb) {\n    inputStream.end(function () {\n      if (!allDone) {\n        var e = new Error(Y(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"Cache input stream was empty\"]))));\n        e.code = 'ENODATA';\n        return ret.emit('error', e);\n      }\n\n      allDone.then(function (res) {\n        res.integrity && ret.emit('integrity', res.integrity);\n        res.size !== null && ret.emit('size', res.size);\n        cb();\n      }, function (e) {\n        ret.emit('error', e);\n      });\n    });\n  });\n  ret.once('error', function (e) {\n    inputErr = e;\n  });\n  return ret;\n}\n\nfunction handleContent(inputStream, cache, opts, errCheck) {\n  return BB.using(makeTmp(cache, opts), function (tmp) {\n    errCheck();\n    return pipeToTmp(inputStream, cache, tmp.target, opts, errCheck).then(function (res) {\n      return moveToDestination(tmp, cache, res.integrity, opts, errCheck).then(function () {\n        return res;\n      });\n    });\n  });\n}\n\nfunction pipeToTmp(inputStream, cache, tmpTarget, opts, errCheck) {\n  return BB.resolve().then(function () {\n    var integrity;\n    var size;\n    var hashStream = ssri.integrityStream({\n      integrity: opts.integrity,\n      algorithms: opts.algorithms,\n      size: opts.size\n    }).on('integrity', function (s) {\n      integrity = s;\n    }).on('size', function (s) {\n      size = s;\n    });\n    var outStream = fs.createWriteStream(tmpTarget, {\n      flags: 'wx'\n    });\n    errCheck();\n    return pipe(inputStream, hashStream, outStream).then(function () {\n      return {\n        integrity: integrity,\n        size: size\n      };\n    }).catch(function (err) {\n      return rimraf(tmpTarget).then(function () {\n        throw err;\n      });\n    });\n  });\n}\n\nfunction makeTmp(cache, opts) {\n  var tmpTarget = uniqueFilename(path.join(cache, 'tmp'), opts.tmpPrefix);\n  return fixOwner.mkdirfix(cache, path.dirname(tmpTarget)).then(function () {\n    return {\n      target: tmpTarget,\n      moved: false\n    };\n  }).disposer(function (tmp) {\n    return !tmp.moved && rimraf(tmp.target);\n  });\n}\n\nfunction moveToDestination(tmp, cache, sri, opts, errCheck) {\n  errCheck && errCheck();\n  var destination = contentPath(cache, sri);\n  var destDir = path.dirname(destination);\n  return fixOwner.mkdirfix(cache, destDir).then(function () {\n    errCheck && errCheck();\n    return moveFile(tmp.target, destination);\n  }).then(function () {\n    errCheck && errCheck();\n    tmp.moved = true;\n    return fixOwner.chownr(cache, destination);\n  });\n}\n\nfunction sizeError(expected, found) {\n  var err = new Error(Y(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"Bad data size: expected inserted data to be \", \" bytes, but got \", \" instead\"])), expected, found));\n  err.expected = expected;\n  err.found = found;\n  err.code = 'EBADSIZE';\n  return err;\n}\n\nfunction checksumError(expected, found) {\n  var err = new Error(Y(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"Integrity check failed:\\n  Wanted: \", \"\\n   Found: \", \"\"])), expected, found));\n  err.code = 'EINTEGRITY';\n  err.expected = expected;\n  err.found = found;\n  return err;\n}","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/node_modules/cacache/lib/content/write.js"],"names":["BB","require","contentPath","fixOwner","fs","moveFile","PassThrough","path","pipe","promisify","rimraf","ssri","to","uniqueFilename","Y","writeFileAsync","writeFile","module","exports","write","cache","data","opts","algorithms","length","Error","size","reject","sizeError","sri","fromData","integrity","checkData","checksumError","using","makeTmp","tmp","target","flag","then","moveToDestination","stream","writeStream","inputStream","inputErr","errCheck","allDone","ret","c","n","cb","handleContent","end","e","code","emit","res","once","pipeToTmp","tmpTarget","resolve","hashStream","integrityStream","on","s","outStream","createWriteStream","flags","catch","err","join","tmpPrefix","mkdirfix","dirname","moved","disposer","destination","destDir","chownr","expected","found"],"mappings":"AAAA;;;;;;AAEA,IAAMA,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AAEA,IAAMC,WAAW,GAAGD,OAAO,CAAC,QAAD,CAA3B;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,mBAAD,CAAxB;;AACA,IAAMG,EAAE,GAAGH,OAAO,CAAC,aAAD,CAAlB;;AACA,IAAMI,QAAQ,GAAGJ,OAAO,CAAC,mBAAD,CAAxB;;AACA,IAAMK,WAAW,GAAGL,OAAO,CAAC,QAAD,CAAP,CAAkBK,WAAtC;;AACA,IAAMC,IAAI,GAAGN,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMO,IAAI,GAAGR,EAAE,CAACS,SAAH,CAAaR,OAAO,CAAC,aAAD,CAAP,CAAuBO,IAApC,CAAb;AACA,IAAME,MAAM,GAAGV,EAAE,CAACS,SAAH,CAAaR,OAAO,CAAC,QAAD,CAApB,CAAf;;AACA,IAAMU,IAAI,GAAGV,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMW,EAAE,GAAGX,OAAO,CAAC,aAAD,CAAP,CAAuBW,EAAlC;;AACA,IAAMC,cAAc,GAAGZ,OAAO,CAAC,iBAAD,CAA9B;;AACA,IAAMa,CAAC,GAAGb,OAAO,CAAC,cAAD,CAAjB;;AAEA,IAAMc,cAAc,GAAGf,EAAE,CAACS,SAAH,CAAaL,EAAE,CAACY,SAAhB,CAAvB;AAEAC,MAAM,CAACC,OAAP,GAAiBC,KAAjB;;AACA,SAASA,KAAT,CAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmC;AACjCA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;;AACA,MAAIA,IAAI,CAACC,UAAL,IAAmBD,IAAI,CAACC,UAAL,CAAgBC,MAAhB,GAAyB,CAAhD,EAAmD;AACjD,UAAM,IAAIC,KAAJ,CACJX,CADI,8HAAN;AAGD;;AACD,MAAI,OAAOQ,IAAI,CAACI,IAAZ,KAAqB,QAArB,IAAiCL,IAAI,CAACG,MAAL,KAAgBF,IAAI,CAACI,IAA1D,EAAgE;AAC9D,WAAO1B,EAAE,CAAC2B,MAAH,CAAUC,SAAS,CAACN,IAAI,CAACI,IAAN,EAAYL,IAAI,CAACG,MAAjB,CAAnB,CAAP;AACD;;AACD,MAAMK,GAAG,GAAGlB,IAAI,CAACmB,QAAL,CAAcT,IAAd,EAAoB;AAC9BE,IAAAA,UAAU,EAAED,IAAI,CAACC;AADa,GAApB,CAAZ;;AAGA,MAAID,IAAI,CAACS,SAAL,IAAkB,CAACpB,IAAI,CAACqB,SAAL,CAAeX,IAAf,EAAqBC,IAAI,CAACS,SAA1B,EAAqCT,IAArC,CAAvB,EAAmE;AACjE,WAAOtB,EAAE,CAAC2B,MAAH,CAAUM,aAAa,CAACX,IAAI,CAACS,SAAN,EAAiBF,GAAjB,CAAvB,CAAP;AACD;;AACD,SAAO7B,EAAE,CAACkC,KAAH,CAASC,OAAO,CAACf,KAAD,EAAQE,IAAR,CAAhB,EAA+B,UAAAc,GAAG;AAAA,WACvCrB,cAAc,CACZqB,GAAG,CAACC,MADQ,EACAhB,IADA,EACM;AAAEiB,MAAAA,IAAI,EAAE;AAAR,KADN,CAAd,CAEEC,IAFF,CAEO;AAAA,aACLC,iBAAiB,CAACJ,GAAD,EAAMhB,KAAN,EAAaS,GAAb,EAAkBP,IAAlB,CADZ;AAAA,KAFP,CADuC;AAAA,GAAlC,EAMJiB,IANI,CAMC;AAAA,WAAO;AAAER,MAAAA,SAAS,EAAEF,GAAb;AAAkBH,MAAAA,IAAI,EAAEL,IAAI,CAACG;AAA7B,KAAP;AAAA,GAND,CAAP;AAOD;;AAEDP,MAAM,CAACC,OAAP,CAAeuB,MAAf,GAAwBC,WAAxB;;AACA,SAASA,WAAT,CAAsBtB,KAAtB,EAA6BE,IAA7B,EAAmC;AACjCA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACA,MAAMqB,WAAW,GAAG,IAAIrC,WAAJ,EAApB;AACA,MAAIsC,QAAQ,GAAG,KAAf;;AACA,WAASC,QAAT,GAAqB;AACnB,QAAID,QAAJ,EAAc;AAAE,YAAMA,QAAN;AAAgB;AACjC;;AAED,MAAIE,OAAJ;AACA,MAAMC,GAAG,GAAGnC,EAAE,CAAC,UAACoC,CAAD,EAAIC,CAAJ,EAAOC,EAAP,EAAc;AAC3B,QAAI,CAACJ,OAAL,EAAc;AACZA,MAAAA,OAAO,GAAGK,aAAa,CAACR,WAAD,EAAcvB,KAAd,EAAqBE,IAArB,EAA2BuB,QAA3B,CAAvB;AACD;;AACDF,IAAAA,WAAW,CAACxB,KAAZ,CAAkB6B,CAAlB,EAAqBC,CAArB,EAAwBC,EAAxB;AACD,GALa,EAKX,UAAAA,EAAE,EAAI;AACPP,IAAAA,WAAW,CAACS,GAAZ,CAAgB,YAAM;AACpB,UAAI,CAACN,OAAL,EAAc;AACZ,YAAMO,CAAC,GAAG,IAAI5B,KAAJ,CAAUX,CAAV,oGAAV;AACAuC,QAAAA,CAAC,CAACC,IAAF,GAAS,SAAT;AACA,eAAOP,GAAG,CAACQ,IAAJ,CAAS,OAAT,EAAkBF,CAAlB,CAAP;AACD;;AACDP,MAAAA,OAAO,CAACP,IAAR,CAAa,UAAAiB,GAAG,EAAI;AAClBA,QAAAA,GAAG,CAACzB,SAAJ,IAAiBgB,GAAG,CAACQ,IAAJ,CAAS,WAAT,EAAsBC,GAAG,CAACzB,SAA1B,CAAjB;AACAyB,QAAAA,GAAG,CAAC9B,IAAJ,KAAa,IAAb,IAAqBqB,GAAG,CAACQ,IAAJ,CAAS,MAAT,EAAiBC,GAAG,CAAC9B,IAArB,CAArB;AACAwB,QAAAA,EAAE;AACH,OAJD,EAIG,UAAAG,CAAC,EAAI;AACNN,QAAAA,GAAG,CAACQ,IAAJ,CAAS,OAAT,EAAkBF,CAAlB;AACD,OAND;AAOD,KAbD;AAcD,GApBa,CAAd;AAqBAN,EAAAA,GAAG,CAACU,IAAJ,CAAS,OAAT,EAAkB,UAAAJ,CAAC,EAAI;AACrBT,IAAAA,QAAQ,GAAGS,CAAX;AACD,GAFD;AAGA,SAAON,GAAP;AACD;;AAED,SAASI,aAAT,CAAwBR,WAAxB,EAAqCvB,KAArC,EAA4CE,IAA5C,EAAkDuB,QAAlD,EAA4D;AAC1D,SAAO7C,EAAE,CAACkC,KAAH,CAASC,OAAO,CAACf,KAAD,EAAQE,IAAR,CAAhB,EAA+B,UAAAc,GAAG,EAAI;AAC3CS,IAAAA,QAAQ;AACR,WAAOa,SAAS,CACdf,WADc,EACDvB,KADC,EACMgB,GAAG,CAACC,MADV,EACkBf,IADlB,EACwBuB,QADxB,CAAT,CAELN,IAFK,CAEA,UAAAiB,GAAG,EAAI;AACZ,aAAOhB,iBAAiB,CACtBJ,GADsB,EACjBhB,KADiB,EACVoC,GAAG,CAACzB,SADM,EACKT,IADL,EACWuB,QADX,CAAjB,CAELN,IAFK,CAEA;AAAA,eAAMiB,GAAN;AAAA,OAFA,CAAP;AAGD,KANM,CAAP;AAOD,GATM,CAAP;AAUD;;AAED,SAASE,SAAT,CAAoBf,WAApB,EAAiCvB,KAAjC,EAAwCuC,SAAxC,EAAmDrC,IAAnD,EAAyDuB,QAAzD,EAAmE;AACjE,SAAO7C,EAAE,CAAC4D,OAAH,GAAarB,IAAb,CAAkB,YAAM;AAC7B,QAAIR,SAAJ;AACA,QAAIL,IAAJ;AACA,QAAMmC,UAAU,GAAGlD,IAAI,CAACmD,eAAL,CAAqB;AACtC/B,MAAAA,SAAS,EAAET,IAAI,CAACS,SADsB;AAEtCR,MAAAA,UAAU,EAAED,IAAI,CAACC,UAFqB;AAGtCG,MAAAA,IAAI,EAAEJ,IAAI,CAACI;AAH2B,KAArB,EAIhBqC,EAJgB,CAIb,WAJa,EAIA,UAAAC,CAAC,EAAI;AACtBjC,MAAAA,SAAS,GAAGiC,CAAZ;AACD,KANkB,EAMhBD,EANgB,CAMb,MANa,EAML,UAAAC,CAAC,EAAI;AACjBtC,MAAAA,IAAI,GAAGsC,CAAP;AACD,KARkB,CAAnB;AASA,QAAMC,SAAS,GAAG7D,EAAE,CAAC8D,iBAAH,CAAqBP,SAArB,EAAgC;AAChDQ,MAAAA,KAAK,EAAE;AADyC,KAAhC,CAAlB;AAGAtB,IAAAA,QAAQ;AACR,WAAOrC,IAAI,CAACmC,WAAD,EAAckB,UAAd,EAA0BI,SAA1B,CAAJ,CAAyC1B,IAAzC,CAA8C,YAAM;AACzD,aAAO;AAAER,QAAAA,SAAS,EAATA,SAAF;AAAaL,QAAAA,IAAI,EAAJA;AAAb,OAAP;AACD,KAFM,EAEJ0C,KAFI,CAEE,UAAAC,GAAG,EAAI;AACd,aAAO3D,MAAM,CAACiD,SAAD,CAAN,CAAkBpB,IAAlB,CAAuB,YAAM;AAAE,cAAM8B,GAAN;AAAW,OAA1C,CAAP;AACD,KAJM,CAAP;AAKD,GArBM,CAAP;AAsBD;;AAED,SAASlC,OAAT,CAAkBf,KAAlB,EAAyBE,IAAzB,EAA+B;AAC7B,MAAMqC,SAAS,GAAG9C,cAAc,CAACN,IAAI,CAAC+D,IAAL,CAAUlD,KAAV,EAAiB,KAAjB,CAAD,EAA0BE,IAAI,CAACiD,SAA/B,CAAhC;AACA,SAAOpE,QAAQ,CAACqE,QAAT,CACLpD,KADK,EACEb,IAAI,CAACkE,OAAL,CAAad,SAAb,CADF,EAELpB,IAFK,CAEA;AAAA,WAAO;AACZF,MAAAA,MAAM,EAAEsB,SADI;AAEZe,MAAAA,KAAK,EAAE;AAFK,KAAP;AAAA,GAFA,EAKHC,QALG,CAKM,UAAAvC,GAAG;AAAA,WAAK,CAACA,GAAG,CAACsC,KAAL,IAAchE,MAAM,CAAC0B,GAAG,CAACC,MAAL,CAAzB;AAAA,GALT,CAAP;AAMD;;AAED,SAASG,iBAAT,CAA4BJ,GAA5B,EAAiChB,KAAjC,EAAwCS,GAAxC,EAA6CP,IAA7C,EAAmDuB,QAAnD,EAA6D;AAC3DA,EAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACA,MAAM+B,WAAW,GAAG1E,WAAW,CAACkB,KAAD,EAAQS,GAAR,CAA/B;AACA,MAAMgD,OAAO,GAAGtE,IAAI,CAACkE,OAAL,CAAaG,WAAb,CAAhB;AAEA,SAAOzE,QAAQ,CAACqE,QAAT,CACLpD,KADK,EACEyD,OADF,EAELtC,IAFK,CAEA,YAAM;AACXM,IAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACA,WAAOxC,QAAQ,CAAC+B,GAAG,CAACC,MAAL,EAAauC,WAAb,CAAf;AACD,GALM,EAKJrC,IALI,CAKC,YAAM;AACZM,IAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACAT,IAAAA,GAAG,CAACsC,KAAJ,GAAY,IAAZ;AACA,WAAOvE,QAAQ,CAAC2E,MAAT,CAAgB1D,KAAhB,EAAuBwD,WAAvB,CAAP;AACD,GATM,CAAP;AAUD;;AAED,SAAShD,SAAT,CAAoBmD,QAApB,EAA8BC,KAA9B,EAAqC;AACnC,MAAIX,GAAG,GAAG,IAAI5C,KAAJ,CAAUX,CAAV,oJAA0DiE,QAA1D,EAAqFC,KAArF,EAAV;AACAX,EAAAA,GAAG,CAACU,QAAJ,GAAeA,QAAf;AACAV,EAAAA,GAAG,CAACW,KAAJ,GAAYA,KAAZ;AACAX,EAAAA,GAAG,CAACf,IAAJ,GAAW,UAAX;AACA,SAAOe,GAAP;AACD;;AAED,SAASpC,aAAT,CAAwB8C,QAAxB,EAAkCC,KAAlC,EAAyC;AACvC,MAAIX,GAAG,GAAG,IAAI5C,KAAJ,CAAUX,CAAV,+HACAiE,QADA,EAEAC,KAFA,EAAV;AAGAX,EAAAA,GAAG,CAACf,IAAJ,GAAW,YAAX;AACAe,EAAAA,GAAG,CAACU,QAAJ,GAAeA,QAAf;AACAV,EAAAA,GAAG,CAACW,KAAJ,GAAYA,KAAZ;AACA,SAAOX,GAAP;AACD","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst contentPath = require('./path')\nconst fixOwner = require('../util/fix-owner')\nconst fs = require('graceful-fs')\nconst moveFile = require('../util/move-file')\nconst PassThrough = require('stream').PassThrough\nconst path = require('path')\nconst pipe = BB.promisify(require('mississippi').pipe)\nconst rimraf = BB.promisify(require('rimraf'))\nconst ssri = require('ssri')\nconst to = require('mississippi').to\nconst uniqueFilename = require('unique-filename')\nconst Y = require('../util/y.js')\n\nconst writeFileAsync = BB.promisify(fs.writeFile)\n\nmodule.exports = write\nfunction write (cache, data, opts) {\n  opts = opts || {}\n  if (opts.algorithms && opts.algorithms.length > 1) {\n    throw new Error(\n      Y`opts.algorithms only supports a single algorithm for now`\n    )\n  }\n  if (typeof opts.size === 'number' && data.length !== opts.size) {\n    return BB.reject(sizeError(opts.size, data.length))\n  }\n  const sri = ssri.fromData(data, {\n    algorithms: opts.algorithms\n  })\n  if (opts.integrity && !ssri.checkData(data, opts.integrity, opts)) {\n    return BB.reject(checksumError(opts.integrity, sri))\n  }\n  return BB.using(makeTmp(cache, opts), tmp => (\n    writeFileAsync(\n      tmp.target, data, { flag: 'wx' }\n    ).then(() => (\n      moveToDestination(tmp, cache, sri, opts)\n    ))\n  )).then(() => ({ integrity: sri, size: data.length }))\n}\n\nmodule.exports.stream = writeStream\nfunction writeStream (cache, opts) {\n  opts = opts || {}\n  const inputStream = new PassThrough()\n  let inputErr = false\n  function errCheck () {\n    if (inputErr) { throw inputErr }\n  }\n\n  let allDone\n  const ret = to((c, n, cb) => {\n    if (!allDone) {\n      allDone = handleContent(inputStream, cache, opts, errCheck)\n    }\n    inputStream.write(c, n, cb)\n  }, cb => {\n    inputStream.end(() => {\n      if (!allDone) {\n        const e = new Error(Y`Cache input stream was empty`)\n        e.code = 'ENODATA'\n        return ret.emit('error', e)\n      }\n      allDone.then(res => {\n        res.integrity && ret.emit('integrity', res.integrity)\n        res.size !== null && ret.emit('size', res.size)\n        cb()\n      }, e => {\n        ret.emit('error', e)\n      })\n    })\n  })\n  ret.once('error', e => {\n    inputErr = e\n  })\n  return ret\n}\n\nfunction handleContent (inputStream, cache, opts, errCheck) {\n  return BB.using(makeTmp(cache, opts), tmp => {\n    errCheck()\n    return pipeToTmp(\n      inputStream, cache, tmp.target, opts, errCheck\n    ).then(res => {\n      return moveToDestination(\n        tmp, cache, res.integrity, opts, errCheck\n      ).then(() => res)\n    })\n  })\n}\n\nfunction pipeToTmp (inputStream, cache, tmpTarget, opts, errCheck) {\n  return BB.resolve().then(() => {\n    let integrity\n    let size\n    const hashStream = ssri.integrityStream({\n      integrity: opts.integrity,\n      algorithms: opts.algorithms,\n      size: opts.size\n    }).on('integrity', s => {\n      integrity = s\n    }).on('size', s => {\n      size = s\n    })\n    const outStream = fs.createWriteStream(tmpTarget, {\n      flags: 'wx'\n    })\n    errCheck()\n    return pipe(inputStream, hashStream, outStream).then(() => {\n      return { integrity, size }\n    }).catch(err => {\n      return rimraf(tmpTarget).then(() => { throw err })\n    })\n  })\n}\n\nfunction makeTmp (cache, opts) {\n  const tmpTarget = uniqueFilename(path.join(cache, 'tmp'), opts.tmpPrefix)\n  return fixOwner.mkdirfix(\n    cache, path.dirname(tmpTarget)\n  ).then(() => ({\n    target: tmpTarget,\n    moved: false\n  })).disposer(tmp => (!tmp.moved && rimraf(tmp.target)))\n}\n\nfunction moveToDestination (tmp, cache, sri, opts, errCheck) {\n  errCheck && errCheck()\n  const destination = contentPath(cache, sri)\n  const destDir = path.dirname(destination)\n\n  return fixOwner.mkdirfix(\n    cache, destDir\n  ).then(() => {\n    errCheck && errCheck()\n    return moveFile(tmp.target, destination)\n  }).then(() => {\n    errCheck && errCheck()\n    tmp.moved = true\n    return fixOwner.chownr(cache, destination)\n  })\n}\n\nfunction sizeError (expected, found) {\n  var err = new Error(Y`Bad data size: expected inserted data to be ${expected} bytes, but got ${found} instead`)\n  err.expected = expected\n  err.found = found\n  err.code = 'EBADSIZE'\n  return err\n}\n\nfunction checksumError (expected, found) {\n  var err = new Error(Y`Integrity check failed:\n  Wanted: ${expected}\n   Found: ${found}`)\n  err.code = 'EINTEGRITY'\n  err.expected = expected\n  err.found = found\n  return err\n}\n"]},"metadata":{},"sourceType":"script"}