{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler-cli/ngcc/src/writing/cleaning/utils\", [\"require\", \"exports\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.isLocalDirectory = void 0;\n  /**\n   * Returns true if the given `path` is a directory (not a symlink) and actually exists.\n   *\n   * @param fs the current filesystem\n   * @param path the path to check\n   */\n\n  function isLocalDirectory(fs, path) {\n    if (fs.exists(path)) {\n      var stat = fs.lstat(path);\n      return stat.isDirectory();\n    } else {\n      return false;\n    }\n  }\n\n  exports.isLocalDirectory = isLocalDirectory;\n});","map":{"version":3,"sources":["../../../../../../../../../packages/compiler-cli/ngcc/src/writing/cleaning/utils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AASA;;;;;AAKG;;AACH,WAAgB,gBAAhB,CAAiC,EAAjC,EAAyD,IAAzD,EAA6E;AAC3E,QAAI,EAAE,CAAC,MAAH,CAAU,IAAV,CAAJ,EAAqB;AACnB,UAAM,IAAI,GAAG,EAAE,CAAC,KAAH,CAAS,IAAT,CAAb;AACA,aAAO,IAAI,CAAC,WAAL,EAAP;AACD,KAHD,MAGO;AACL,aAAO,KAAP;AACD;AACF;;AAPD,EAAA,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AbsoluteFsPath, ReadonlyFileSystem} from '../../../../src/ngtsc/file_system';\n\n/**\n * Returns true if the given `path` is a directory (not a symlink) and actually exists.\n *\n * @param fs the current filesystem\n * @param path the path to check\n */\nexport function isLocalDirectory(fs: ReadonlyFileSystem, path: AbsoluteFsPath): boolean {\n  if (fs.exists(path)) {\n    const stat = fs.lstat(path);\n    return stat.isDirectory();\n  } else {\n    return false;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}