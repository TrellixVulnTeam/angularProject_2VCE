{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createVirtualAstObject = exports.unescapeKey = exports.escapeKey = void 0;\n\nvar stableStringify = require(\"fast-json-stable-stringify\");\n\nfunction findNode(parent, p) {\n  if (parent.kind === 'object') {\n    var entry = parent.properties.find(function (entry) {\n      return entry.key.value === p;\n    });\n\n    if (entry) {\n      return {\n        node: entry.value,\n        parent: entry\n      };\n    }\n  } else {\n    var index = Number(p);\n\n    if (!isNaN(index)) {\n      return {\n        node: parent.elements[index],\n        parent: parent\n      };\n    }\n  }\n\n  return {\n    parent: parent\n  };\n}\n\nfunction createPropertyDescriptor(value) {\n  return {\n    configurable: true,\n    enumerable: true,\n    writable: true,\n    value: value\n  };\n}\n\nfunction escapeKey(key) {\n  if (typeof key === 'number') {\n    return key;\n  }\n\n  return key.replace('~', '~0').replace('/', '~1');\n}\n\nexports.escapeKey = escapeKey;\n\nfunction unescapeKey(key) {\n  if (typeof key === 'number') {\n    return key;\n  }\n\n  return key.replace('~1', '/').replace('~0', '~');\n}\n\nexports.unescapeKey = unescapeKey;\n\nfunction createVirtualAstObject(root) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var reporter = function reporter(path, parent, node, old, current) {\n    if (options.listener) {\n      if (old === current || stableStringify(old) === stableStringify(current)) {\n        return;\n      }\n\n      var op = old === undefined ? 'add' : current === undefined ? 'remove' : 'replace';\n      options.listener(op, path, parent, current);\n    }\n  };\n\n  return create(root, '', reporter, new Set(options.exclude), options.include && options.include.length > 0 ? new Set(options.include) : undefined, options.base);\n}\n\nexports.createVirtualAstObject = createVirtualAstObject;\n\nfunction create(ast, path, reporter) {\n  var excluded = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Set();\n  var included = arguments.length > 4 ? arguments[4] : undefined;\n  var base = arguments.length > 5 ? arguments[5] : undefined;\n  var cache = new Map();\n  var alteredNodes = new Set();\n\n  if (!base) {\n    if (ast.kind === 'object') {\n      base = Object.create(null);\n    } else {\n      base = [];\n      base.length = ast.elements.length;\n    }\n  }\n\n  return new Proxy(base, {\n    getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, p) {\n      var descriptor = Reflect.getOwnPropertyDescriptor(target, p);\n\n      if (descriptor || typeof p === 'symbol') {\n        return descriptor;\n      } else if (excluded.has(p) || included && !included.has(p)) {\n        return undefined;\n      }\n\n      var propertyPath = path + '/' + escapeKey(p);\n      var cacheEntry = cache.get(propertyPath);\n\n      if (cacheEntry) {\n        if (cacheEntry.value !== undefined) {\n          return createPropertyDescriptor(cacheEntry.value);\n        }\n\n        return undefined;\n      }\n\n      var _findNode = findNode(ast, p),\n          node = _findNode.node;\n\n      if (node) {\n        return createPropertyDescriptor(node.value);\n      }\n\n      return undefined;\n    },\n    has: function has(target, p) {\n      if (Reflect.has(target, p)) {\n        return true;\n      } else if (typeof p === 'symbol' || excluded.has(p)) {\n        return false;\n      }\n\n      return cache.has(path + '/' + escapeKey(p)) || findNode(ast, p) !== undefined;\n    },\n    get: function get(target, p) {\n      if (typeof p === 'symbol' || Reflect.has(target, p)) {\n        return Reflect.get(target, p);\n      } else if (excluded.has(p) || included && !included.has(p)) {\n        return undefined;\n      }\n\n      var propertyPath = path + '/' + escapeKey(p);\n      var cacheEntry = cache.get(propertyPath);\n\n      if (cacheEntry) {\n        return cacheEntry.value;\n      }\n\n      var _findNode2 = findNode(ast, p),\n          node = _findNode2.node,\n          parent = _findNode2.parent;\n\n      var value;\n\n      if (node) {\n        if (node.kind === 'object' || node.kind === 'array') {\n          value = create(node, propertyPath, function (path, parent, vnode, old, current) {\n            if (!alteredNodes.has(node)) {\n              reporter(path, parent, vnode, old, current);\n            }\n          });\n        } else {\n          value = node.value;\n        }\n\n        cache.set(propertyPath, {\n          node: node,\n          parent: parent,\n          value: value\n        });\n      }\n\n      return value;\n    },\n    set: function set(target, p, value) {\n      if (value === undefined) {\n        // setting to undefined is equivalent to a delete\n        // tslint:disable-next-line: no-non-null-assertion\n        return this.deleteProperty(target, p);\n      }\n\n      if (typeof p === 'symbol' || Reflect.has(target, p)) {\n        return Reflect.set(target, p, value);\n      } else if (excluded.has(p) || included && !included.has(p)) {\n        return false;\n      } // TODO: Check if is JSON value\n\n\n      var jsonValue = value;\n      var propertyPath = path + '/' + escapeKey(p);\n      var cacheEntry = cache.get(propertyPath);\n\n      if (cacheEntry) {\n        var oldValue = cacheEntry.value;\n        cacheEntry.value = value;\n\n        if (cacheEntry.node && oldValue !== value) {\n          alteredNodes.add(cacheEntry.node);\n        }\n\n        reporter(propertyPath, cacheEntry.parent, cacheEntry.node, oldValue, jsonValue);\n      } else {\n        var _findNode3 = findNode(ast, p),\n            node = _findNode3.node,\n            parent = _findNode3.parent;\n\n        cache.set(propertyPath, {\n          node: node,\n          parent: parent,\n          value: value\n        });\n\n        if (node && node.value !== value) {\n          alteredNodes.add(node);\n        }\n\n        reporter(propertyPath, parent, node, node && node.value, value);\n      }\n\n      return true;\n    },\n    deleteProperty: function deleteProperty(target, p) {\n      if (typeof p === 'symbol' || Reflect.has(target, p)) {\n        return Reflect.deleteProperty(target, p);\n      } else if (excluded.has(p) || included && !included.has(p)) {\n        return false;\n      }\n\n      var propertyPath = path + '/' + escapeKey(p);\n      var cacheEntry = cache.get(propertyPath);\n\n      if (cacheEntry) {\n        var oldValue = cacheEntry.value;\n        cacheEntry.value = undefined;\n\n        if (cacheEntry.node) {\n          alteredNodes.add(cacheEntry.node);\n        }\n\n        if (cacheEntry.parent.kind === 'keyvalue') {\n          // Remove the entire key/value pair from this JSON object\n          reporter(propertyPath, ast, cacheEntry.node, oldValue, undefined);\n        } else {\n          reporter(propertyPath, cacheEntry.parent, cacheEntry.node, oldValue, undefined);\n        }\n      } else {\n        var _findNode4 = findNode(ast, p),\n            node = _findNode4.node,\n            parent = _findNode4.parent;\n\n        if (node) {\n          cache.set(propertyPath, {\n            node: node,\n            parent: parent,\n            value: undefined\n          });\n          alteredNodes.add(node);\n\n          if (parent.kind === 'keyvalue') {\n            // Remove the entire key/value pair from this JSON object\n            reporter(propertyPath, ast, node, node && node.value, undefined);\n          } else {\n            reporter(propertyPath, parent, node, node && node.value, undefined);\n          }\n        }\n      }\n\n      return true;\n    },\n    defineProperty: function defineProperty(target, p, attributes) {\n      if (typeof p === 'symbol') {\n        return Reflect.defineProperty(target, p, attributes);\n      }\n\n      return false;\n    },\n    ownKeys: function ownKeys(target) {\n      var keys;\n\n      if (ast.kind === 'object') {\n        keys = ast.properties.map(function (entry) {\n          return entry.key.value;\n        }).filter(function (p) {\n          return !excluded.has(p) && (!included || included.has(p));\n        });\n      } else {\n        keys = [];\n      }\n\n      var _iterator = _createForOfIteratorHelper(cache.keys()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var key = _step.value;\n          var relativeKey = key.substr(path.length + 1);\n\n          if (relativeKey.length > 0 && !relativeKey.includes('/')) {\n            keys.push(unescapeKey(relativeKey));\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return _toConsumableArray(new Set([].concat(_toConsumableArray(keys), _toConsumableArray(Reflect.ownKeys(target)))));\n    }\n  });\n}","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/@angular-devkit/core/src/workspace/json/utilities.js"],"names":["Object","defineProperty","exports","value","createVirtualAstObject","unescapeKey","escapeKey","stableStringify","require","findNode","parent","p","kind","entry","properties","find","key","node","index","Number","isNaN","elements","createPropertyDescriptor","configurable","enumerable","writable","replace","root","options","reporter","path","old","current","listener","op","undefined","create","Set","exclude","include","length","base","ast","excluded","included","cache","Map","alteredNodes","Proxy","getOwnPropertyDescriptor","target","descriptor","Reflect","has","propertyPath","cacheEntry","get","vnode","set","deleteProperty","jsonValue","oldValue","add","attributes","ownKeys","keys","map","filter","relativeKey","substr","includes","push"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createVirtualAstObject = exports.unescapeKey = exports.escapeKey = void 0;\nconst stableStringify = require(\"fast-json-stable-stringify\");\nfunction findNode(parent, p) {\n    if (parent.kind === 'object') {\n        const entry = parent.properties.find(entry => entry.key.value === p);\n        if (entry) {\n            return { node: entry.value, parent: entry };\n        }\n    }\n    else {\n        const index = Number(p);\n        if (!isNaN(index)) {\n            return { node: parent.elements[index], parent };\n        }\n    }\n    return { parent };\n}\nfunction createPropertyDescriptor(value) {\n    return {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value,\n    };\n}\nfunction escapeKey(key) {\n    if (typeof key === 'number') {\n        return key;\n    }\n    return key.replace('~', '~0').replace('/', '~1');\n}\nexports.escapeKey = escapeKey;\nfunction unescapeKey(key) {\n    if (typeof key === 'number') {\n        return key;\n    }\n    return key.replace('~1', '/').replace('~0', '~');\n}\nexports.unescapeKey = unescapeKey;\nfunction createVirtualAstObject(root, options = {}) {\n    const reporter = (path, parent, node, old, current) => {\n        if (options.listener) {\n            if (old === current || stableStringify(old) === stableStringify(current)) {\n                return;\n            }\n            const op = old === undefined ? 'add' : current === undefined ? 'remove' : 'replace';\n            options.listener(op, path, parent, current);\n        }\n    };\n    return create(root, '', reporter, new Set(options.exclude), options.include && options.include.length > 0 ? new Set(options.include) : undefined, options.base);\n}\nexports.createVirtualAstObject = createVirtualAstObject;\nfunction create(ast, path, reporter, excluded = new Set(), included, base) {\n    const cache = new Map();\n    const alteredNodes = new Set();\n    if (!base) {\n        if (ast.kind === 'object') {\n            base = Object.create(null);\n        }\n        else {\n            base = [];\n            base.length = ast.elements.length;\n        }\n    }\n    return new Proxy(base, {\n        getOwnPropertyDescriptor(target, p) {\n            const descriptor = Reflect.getOwnPropertyDescriptor(target, p);\n            if (descriptor || typeof p === 'symbol') {\n                return descriptor;\n            }\n            else if (excluded.has(p) || (included && !included.has(p))) {\n                return undefined;\n            }\n            const propertyPath = path + '/' + escapeKey(p);\n            const cacheEntry = cache.get(propertyPath);\n            if (cacheEntry) {\n                if (cacheEntry.value !== undefined) {\n                    return createPropertyDescriptor(cacheEntry.value);\n                }\n                return undefined;\n            }\n            const { node } = findNode(ast, p);\n            if (node) {\n                return createPropertyDescriptor(node.value);\n            }\n            return undefined;\n        },\n        has(target, p) {\n            if (Reflect.has(target, p)) {\n                return true;\n            }\n            else if (typeof p === 'symbol' || excluded.has(p)) {\n                return false;\n            }\n            return cache.has(path + '/' + escapeKey(p)) || findNode(ast, p) !== undefined;\n        },\n        get(target, p) {\n            if (typeof p === 'symbol' || Reflect.has(target, p)) {\n                return Reflect.get(target, p);\n            }\n            else if (excluded.has(p) || (included && !included.has(p))) {\n                return undefined;\n            }\n            const propertyPath = path + '/' + escapeKey(p);\n            const cacheEntry = cache.get(propertyPath);\n            if (cacheEntry) {\n                return cacheEntry.value;\n            }\n            const { node, parent } = findNode(ast, p);\n            let value;\n            if (node) {\n                if (node.kind === 'object' || node.kind === 'array') {\n                    value = create(node, propertyPath, (path, parent, vnode, old, current) => {\n                        if (!alteredNodes.has(node)) {\n                            reporter(path, parent, vnode, old, current);\n                        }\n                    });\n                }\n                else {\n                    value = node.value;\n                }\n                cache.set(propertyPath, { node, parent, value });\n            }\n            return value;\n        },\n        set(target, p, value) {\n            if (value === undefined) {\n                // setting to undefined is equivalent to a delete\n                // tslint:disable-next-line: no-non-null-assertion\n                return this.deleteProperty(target, p);\n            }\n            if (typeof p === 'symbol' || Reflect.has(target, p)) {\n                return Reflect.set(target, p, value);\n            }\n            else if (excluded.has(p) || (included && !included.has(p))) {\n                return false;\n            }\n            // TODO: Check if is JSON value\n            const jsonValue = value;\n            const propertyPath = path + '/' + escapeKey(p);\n            const cacheEntry = cache.get(propertyPath);\n            if (cacheEntry) {\n                const oldValue = cacheEntry.value;\n                cacheEntry.value = value;\n                if (cacheEntry.node && oldValue !== value) {\n                    alteredNodes.add(cacheEntry.node);\n                }\n                reporter(propertyPath, cacheEntry.parent, cacheEntry.node, oldValue, jsonValue);\n            }\n            else {\n                const { node, parent } = findNode(ast, p);\n                cache.set(propertyPath, { node, parent, value: value });\n                if (node && node.value !== value) {\n                    alteredNodes.add(node);\n                }\n                reporter(propertyPath, parent, node, node && node.value, value);\n            }\n            return true;\n        },\n        deleteProperty(target, p) {\n            if (typeof p === 'symbol' || Reflect.has(target, p)) {\n                return Reflect.deleteProperty(target, p);\n            }\n            else if (excluded.has(p) || (included && !included.has(p))) {\n                return false;\n            }\n            const propertyPath = path + '/' + escapeKey(p);\n            const cacheEntry = cache.get(propertyPath);\n            if (cacheEntry) {\n                const oldValue = cacheEntry.value;\n                cacheEntry.value = undefined;\n                if (cacheEntry.node) {\n                    alteredNodes.add(cacheEntry.node);\n                }\n                if (cacheEntry.parent.kind === 'keyvalue') {\n                    // Remove the entire key/value pair from this JSON object\n                    reporter(propertyPath, ast, cacheEntry.node, oldValue, undefined);\n                }\n                else {\n                    reporter(propertyPath, cacheEntry.parent, cacheEntry.node, oldValue, undefined);\n                }\n            }\n            else {\n                const { node, parent } = findNode(ast, p);\n                if (node) {\n                    cache.set(propertyPath, { node, parent, value: undefined });\n                    alteredNodes.add(node);\n                    if (parent.kind === 'keyvalue') {\n                        // Remove the entire key/value pair from this JSON object\n                        reporter(propertyPath, ast, node, node && node.value, undefined);\n                    }\n                    else {\n                        reporter(propertyPath, parent, node, node && node.value, undefined);\n                    }\n                }\n            }\n            return true;\n        },\n        defineProperty(target, p, attributes) {\n            if (typeof p === 'symbol') {\n                return Reflect.defineProperty(target, p, attributes);\n            }\n            return false;\n        },\n        ownKeys(target) {\n            let keys;\n            if (ast.kind === 'object') {\n                keys = ast.properties\n                    .map(entry => entry.key.value)\n                    .filter(p => !excluded.has(p) && (!included || included.has(p)));\n            }\n            else {\n                keys = [];\n            }\n            for (const key of cache.keys()) {\n                const relativeKey = key.substr(path.length + 1);\n                if (relativeKey.length > 0 && !relativeKey.includes('/')) {\n                    keys.push(unescapeKey(relativeKey));\n                }\n            }\n            return [...new Set([...keys, ...Reflect.ownKeys(target)])];\n        },\n    });\n}\n"]},"metadata":{},"sourceType":"script"}