{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createWorkspaceHost = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar virtual_fs_1 = require(\"../virtual-fs\");\n\nfunction createWorkspaceHost(host) {\n  var workspaceHost = {\n    readFile: function readFile(path) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return host.read(virtual_fs_1.normalize(path)).toPromise();\n\n              case 2:\n                data = _context.sent;\n                return _context.abrupt(\"return\", virtual_fs_1.virtualFs.fileBufferToString(data));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    writeFile: function writeFile(path, data) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", host.write(virtual_fs_1.normalize(path), virtual_fs_1.virtualFs.stringToFileBuffer(data)).toPromise());\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    isDirectory: function isDirectory(path) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return host.isDirectory(virtual_fs_1.normalize(path)).toPromise();\n\n              case 3:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](0);\n                return _context3.abrupt(\"return\", false);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 6]]);\n      }))();\n    },\n    isFile: function isFile(path) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return host.isFile(virtual_fs_1.normalize(path)).toPromise();\n\n              case 3:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 6:\n                _context4.prev = 6;\n                _context4.t0 = _context4[\"catch\"](0);\n                return _context4.abrupt(\"return\", false);\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 6]]);\n      }))();\n    }\n  };\n  return workspaceHost;\n}\n\nexports.createWorkspaceHost = createWorkspaceHost;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/@angular-devkit/core/src/workspace/host.js"],"names":["Object","defineProperty","exports","value","createWorkspaceHost","virtual_fs_1","require","host","workspaceHost","readFile","path","read","normalize","toPromise","data","virtualFs","fileBufferToString","writeFile","write","stringToFileBuffer","isDirectory","isFile"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,mBAAR,GAA8B,KAAK,CAAnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA5B;;AACA,SAASF,mBAAT,CAA6BG,IAA7B,EAAmC;AAC/B,MAAMC,aAAa,GAAG;AACZC,IAAAA,QADY,oBACHC,IADG,EACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACEH,IAAI,CAACI,IAAL,CAAUN,YAAY,CAACO,SAAb,CAAuBF,IAAvB,CAAV,EAAwCG,SAAxC,EADF;;AAAA;AACXC,gBAAAA,IADW;AAAA,iDAEVT,YAAY,CAACU,SAAb,CAAuBC,kBAAvB,CAA0CF,IAA1C,CAFU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGpB,KAJiB;AAKZG,IAAAA,SALY,qBAKFP,IALE,EAKII,IALJ,EAKU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDACjBP,IAAI,CAACW,KAAL,CAAWb,YAAY,CAACO,SAAb,CAAuBF,IAAvB,CAAX,EAAyCL,YAAY,CAACU,SAAb,CAAuBI,kBAAvB,CAA0CL,IAA1C,CAAzC,EAA0FD,SAA1F,EADiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE3B,KAPiB;AAQZO,IAAAA,WARY,uBAQAV,IARA,EAQM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEHH,IAAI,CAACa,WAAL,CAAiBf,YAAY,CAACO,SAAb,CAAuBF,IAAvB,CAAjB,EAA+CG,SAA/C,EAFG;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,kDAMT,KANS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQvB,KAhBiB;AAiBZQ,IAAAA,MAjBY,kBAiBLX,IAjBK,EAiBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEEH,IAAI,CAACc,MAAL,CAAYhB,YAAY,CAACO,SAAb,CAAuBF,IAAvB,CAAZ,EAA0CG,SAA1C,EAFF;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,kDAMJ,KANI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQlB;AAzBiB,GAAtB;AA2BA,SAAOL,aAAP;AACH;;AACDN,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createWorkspaceHost = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst virtual_fs_1 = require(\"../virtual-fs\");\nfunction createWorkspaceHost(host) {\n    const workspaceHost = {\n        async readFile(path) {\n            const data = await host.read(virtual_fs_1.normalize(path)).toPromise();\n            return virtual_fs_1.virtualFs.fileBufferToString(data);\n        },\n        async writeFile(path, data) {\n            return host.write(virtual_fs_1.normalize(path), virtual_fs_1.virtualFs.stringToFileBuffer(data)).toPromise();\n        },\n        async isDirectory(path) {\n            try {\n                return await host.isDirectory(virtual_fs_1.normalize(path)).toPromise();\n            }\n            catch (_a) {\n                // some hosts throw if path does not exist\n                return false;\n            }\n        },\n        async isFile(path) {\n            try {\n                return await host.isFile(virtual_fs_1.normalize(path)).toPromise();\n            }\n            catch (_a) {\n                // some hosts throw if path does not exist\n                return false;\n            }\n        },\n    };\n    return workspaceHost;\n}\nexports.createWorkspaceHost = createWorkspaceHost;\n"]},"metadata":{},"sourceType":"script"}