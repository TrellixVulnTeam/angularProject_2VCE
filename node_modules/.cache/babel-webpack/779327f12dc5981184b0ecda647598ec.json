{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler-cli/src/ngtsc/entry_point/src/generator\", [\"require\", \"exports\", \"typescript\", \"@angular/compiler-cli/src/ngtsc/file_system\", \"@angular/compiler-cli/src/ngtsc/util/src/path\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.FlatIndexGenerator = void 0; /// <reference types=\"node\" />\n\n  var ts = require(\"typescript\");\n\n  var file_system_1 = require(\"@angular/compiler-cli/src/ngtsc/file_system\");\n\n  var path_1 = require(\"@angular/compiler-cli/src/ngtsc/util/src/path\");\n\n  var FlatIndexGenerator =\n  /** @class */\n  function () {\n    function FlatIndexGenerator(entryPoint, relativeFlatIndexPath, moduleName) {\n      this.entryPoint = entryPoint;\n      this.moduleName = moduleName;\n      this.shouldEmit = true;\n      this.flatIndexPath = file_system_1.join(file_system_1.dirname(entryPoint), relativeFlatIndexPath).replace(/\\.js$/, '') + '.ts';\n    }\n\n    FlatIndexGenerator.prototype.makeTopLevelShim = function () {\n      var relativeEntryPoint = path_1.relativePathBetween(this.flatIndexPath, this.entryPoint);\n      var contents = \"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from '\" + relativeEntryPoint + \"';\\n\";\n      var genFile = ts.createSourceFile(this.flatIndexPath, contents, ts.ScriptTarget.ES2015, true, ts.ScriptKind.TS);\n\n      if (this.moduleName !== null) {\n        genFile.moduleName = this.moduleName;\n      }\n\n      return genFile;\n    };\n\n    return FlatIndexGenerator;\n  }();\n\n  exports.FlatIndexGenerator = FlatIndexGenerator;\n});","map":{"version":3,"sources":["../../../../../../../../../packages/compiler-cli/src/ngtsc/entry_point/src/generator.ts"],"names":[],"mappings":"AAAA;;;;;;AAMG;;;;;;;;;;;;;;uCAEH;;AAEA,MAAA,EAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AAEA,MAAA,aAAA,GAAA,OAAA,CAAA,6CAAA,CAAA;;AAEA,MAAA,MAAA,GAAA,OAAA,CAAA,+CAAA,CAAA;;AAEA,MAAA,kBAAA;AAAA;AAAA,cAAA;AAIE,aAAA,kBAAA,CACa,UADb,EACyC,qBADzC,EAEa,UAFb,EAEoC;AADvB,WAAA,UAAA,GAAA,UAAA;AACA,WAAA,UAAA,GAAA,UAAA;AAJJ,WAAA,UAAA,GAAa,IAAb;AAKP,WAAK,aAAL,GACI,aAAA,CAAA,IAAA,CAAK,aAAA,CAAA,OAAA,CAAQ,UAAR,CAAL,EAA0B,qBAA1B,EAAiD,OAAjD,CAAyD,OAAzD,EAAkE,EAAlE,IAAwE,KAD5E;AAED;;AAED,IAAA,kBAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,YAAA;AACE,UAAM,kBAAkB,GAAG,MAAA,CAAA,mBAAA,CAAoB,KAAK,aAAzB,EAAwC,KAAK,UAA7C,CAA3B;AACA,UAAM,QAAQ,GAAG,yEAIJ,kBAJI,GAIc,MAJ/B;AAMA,UAAM,OAAO,GAAG,EAAE,CAAC,gBAAH,CACZ,KAAK,aADO,EACQ,QADR,EACkB,EAAE,CAAC,YAAH,CAAgB,MADlC,EAC0C,IAD1C,EACgD,EAAE,CAAC,UAAH,CAAc,EAD9D,CAAhB;;AAEA,UAAI,KAAK,UAAL,KAAoB,IAAxB,EAA8B;AAC5B,QAAA,OAAO,CAAC,UAAR,GAAqB,KAAK,UAA1B;AACD;;AACD,aAAO,OAAP;AACD,KAdD;;AAeF,WAAA,kBAAA;AAAC,GA1BD,EAAA;;AAAa,EAAA,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/// <reference types=\"node\" />\n\nimport * as ts from 'typescript';\n\nimport {AbsoluteFsPath, dirname, join} from '../../file_system';\nimport {TopLevelShimGenerator} from '../../shims/api';\nimport {relativePathBetween} from '../../util/src/path';\n\nexport class FlatIndexGenerator implements TopLevelShimGenerator {\n  readonly flatIndexPath: string;\n  readonly shouldEmit = true;\n\n  constructor(\n      readonly entryPoint: AbsoluteFsPath, relativeFlatIndexPath: string,\n      readonly moduleName: string|null) {\n    this.flatIndexPath =\n        join(dirname(entryPoint), relativeFlatIndexPath).replace(/\\.js$/, '') + '.ts';\n  }\n\n  makeTopLevelShim(): ts.SourceFile {\n    const relativeEntryPoint = relativePathBetween(this.flatIndexPath, this.entryPoint);\n    const contents = `/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from '${relativeEntryPoint}';\n`;\n    const genFile = ts.createSourceFile(\n        this.flatIndexPath, contents, ts.ScriptTarget.ES2015, true, ts.ScriptKind.TS);\n    if (this.moduleName !== null) {\n      genFile.moduleName = this.moduleName;\n    }\n    return genFile;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}