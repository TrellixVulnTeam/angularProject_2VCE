{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar util = require(\"util\");\n\nvar TOMBSTONE = {};\nvar UNDEFINED_MARKER = {};\n\nvar StackedSetMap = /*#__PURE__*/function () {\n  function StackedSetMap(parentStack) {\n    _classCallCheck(this, StackedSetMap);\n\n    this.stack = parentStack === undefined ? [] : parentStack.slice();\n    this.map = new Map();\n    this.stack.push(this.map);\n  }\n\n  _createClass(StackedSetMap, [{\n    key: \"add\",\n    value: function add(item) {\n      this.map.set(item, true);\n    }\n  }, {\n    key: \"set\",\n    value: function set(item, value) {\n      this.map.set(item, value === undefined ? UNDEFINED_MARKER : value);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(item) {\n      if (this.stack.length > 1) {\n        this.map.set(item, TOMBSTONE);\n      } else {\n        this.map.delete(item);\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(item) {\n      var topValue = this.map.get(item);\n      if (topValue !== undefined) return topValue !== TOMBSTONE;\n\n      if (this.stack.length > 1) {\n        for (var i = this.stack.length - 2; i >= 0; i--) {\n          var value = this.stack[i].get(item);\n\n          if (value !== undefined) {\n            this.map.set(item, value);\n            return value !== TOMBSTONE;\n          }\n        }\n\n        this.map.set(item, TOMBSTONE);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"get\",\n    value: function get(item) {\n      var topValue = this.map.get(item);\n\n      if (topValue !== undefined) {\n        return topValue === TOMBSTONE || topValue === UNDEFINED_MARKER ? undefined : topValue;\n      }\n\n      if (this.stack.length > 1) {\n        for (var i = this.stack.length - 2; i >= 0; i--) {\n          var value = this.stack[i].get(item);\n\n          if (value !== undefined) {\n            this.map.set(item, value);\n            return value === TOMBSTONE || value === UNDEFINED_MARKER ? undefined : value;\n          }\n        }\n\n        this.map.set(item, TOMBSTONE);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"_compress\",\n    value: function _compress() {\n      if (this.stack.length === 1) return;\n      this.map = new Map();\n\n      var _iterator = _createForOfIteratorHelper(this.stack),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var data = _step.value;\n\n          var _iterator2 = _createForOfIteratorHelper(data),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var pair = _step2.value;\n\n              if (pair[1] === TOMBSTONE) {\n                this.map.delete(pair[0]);\n              } else {\n                this.map.set(pair[0], pair[1]);\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.stack = [this.map];\n    }\n  }, {\n    key: \"asArray\",\n    value: function asArray() {\n      this._compress();\n\n      return Array.from(this.map.entries(), function (pair) {\n        return pair[0];\n      });\n    }\n  }, {\n    key: \"asSet\",\n    value: function asSet() {\n      return new Set(this.asArray());\n    }\n  }, {\n    key: \"asPairArray\",\n    value: function asPairArray() {\n      this._compress();\n\n      return Array.from(this.map.entries(), function (pair) {\n        return (\n          /** @type {[TODO, TODO]} */\n          pair[1] === UNDEFINED_MARKER ? [pair[0], undefined] : pair\n        );\n      });\n    }\n  }, {\n    key: \"asMap\",\n    value: function asMap() {\n      return new Map(this.asPairArray());\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      this._compress();\n\n      return this.map.size;\n    }\n  }, {\n    key: \"createChild\",\n    value: function createChild() {\n      return new StackedSetMap(this.stack);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      throw new Error(\"This is no longer an Array\");\n    },\n    set: function set(value) {\n      throw new Error(\"This is no longer an Array\");\n    }\n  }]);\n\n  return StackedSetMap;\n}(); // TODO remove in webpack 5\n\n\nStackedSetMap.prototype.push = util.deprecate(\n/**\n * @deprecated\n * @this {StackedSetMap}\n * @param {any} item Item to add\n * @returns {void}\n */\nfunction (item) {\n  this.add(item);\n}, \"This is no longer an Array: Use add instead.\");\nmodule.exports = StackedSetMap;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/util/StackedSetMap.js"],"names":["util","require","TOMBSTONE","UNDEFINED_MARKER","StackedSetMap","parentStack","stack","undefined","slice","map","Map","push","item","set","value","length","delete","topValue","get","i","data","pair","_compress","Array","from","entries","Set","asArray","asPairArray","size","Error","prototype","deprecate","add","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst util = require(\"util\");\n\nconst TOMBSTONE = {};\nconst UNDEFINED_MARKER = {};\n\nclass StackedSetMap {\n\tconstructor(parentStack) {\n\t\tthis.stack = parentStack === undefined ? [] : parentStack.slice();\n\t\tthis.map = new Map();\n\t\tthis.stack.push(this.map);\n\t}\n\n\tadd(item) {\n\t\tthis.map.set(item, true);\n\t}\n\n\tset(item, value) {\n\t\tthis.map.set(item, value === undefined ? UNDEFINED_MARKER : value);\n\t}\n\n\tdelete(item) {\n\t\tif (this.stack.length > 1) {\n\t\t\tthis.map.set(item, TOMBSTONE);\n\t\t} else {\n\t\t\tthis.map.delete(item);\n\t\t}\n\t}\n\n\thas(item) {\n\t\tconst topValue = this.map.get(item);\n\t\tif (topValue !== undefined) return topValue !== TOMBSTONE;\n\t\tif (this.stack.length > 1) {\n\t\t\tfor (var i = this.stack.length - 2; i >= 0; i--) {\n\t\t\t\tconst value = this.stack[i].get(item);\n\t\t\t\tif (value !== undefined) {\n\t\t\t\t\tthis.map.set(item, value);\n\t\t\t\t\treturn value !== TOMBSTONE;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.map.set(item, TOMBSTONE);\n\t\t}\n\t\treturn false;\n\t}\n\n\tget(item) {\n\t\tconst topValue = this.map.get(item);\n\t\tif (topValue !== undefined) {\n\t\t\treturn topValue === TOMBSTONE || topValue === UNDEFINED_MARKER\n\t\t\t\t? undefined\n\t\t\t\t: topValue;\n\t\t}\n\t\tif (this.stack.length > 1) {\n\t\t\tfor (var i = this.stack.length - 2; i >= 0; i--) {\n\t\t\t\tconst value = this.stack[i].get(item);\n\t\t\t\tif (value !== undefined) {\n\t\t\t\t\tthis.map.set(item, value);\n\t\t\t\t\treturn value === TOMBSTONE || value === UNDEFINED_MARKER\n\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t: value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.map.set(item, TOMBSTONE);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t_compress() {\n\t\tif (this.stack.length === 1) return;\n\t\tthis.map = new Map();\n\t\tfor (const data of this.stack) {\n\t\t\tfor (const pair of data) {\n\t\t\t\tif (pair[1] === TOMBSTONE) {\n\t\t\t\t\tthis.map.delete(pair[0]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.map.set(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.stack = [this.map];\n\t}\n\n\tasArray() {\n\t\tthis._compress();\n\t\treturn Array.from(this.map.entries(), pair => pair[0]);\n\t}\n\n\tasSet() {\n\t\treturn new Set(this.asArray());\n\t}\n\n\tasPairArray() {\n\t\tthis._compress();\n\t\treturn Array.from(this.map.entries(), pair =>\n\t\t\t/** @type {[TODO, TODO]} */ (pair[1] === UNDEFINED_MARKER\n\t\t\t\t? [pair[0], undefined]\n\t\t\t\t: pair)\n\t\t);\n\t}\n\n\tasMap() {\n\t\treturn new Map(this.asPairArray());\n\t}\n\n\tget size() {\n\t\tthis._compress();\n\t\treturn this.map.size;\n\t}\n\n\tcreateChild() {\n\t\treturn new StackedSetMap(this.stack);\n\t}\n\n\tget length() {\n\t\tthrow new Error(\"This is no longer an Array\");\n\t}\n\n\tset length(value) {\n\t\tthrow new Error(\"This is no longer an Array\");\n\t}\n}\n\n// TODO remove in webpack 5\nStackedSetMap.prototype.push = util.deprecate(\n\t/**\n\t * @deprecated\n\t * @this {StackedSetMap}\n\t * @param {any} item Item to add\n\t * @returns {void}\n\t */\n\tfunction(item) {\n\t\tthis.add(item);\n\t},\n\t\"This is no longer an Array: Use add instead.\"\n);\n\nmodule.exports = StackedSetMap;\n"]},"metadata":{},"sourceType":"script"}