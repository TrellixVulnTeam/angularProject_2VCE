{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar util = require(\"util\");\n\nvar deprecateContext = util.deprecate(function () {}, \"Hook.context is deprecated and will be removed\");\n\nvar CALL_DELEGATE = function CALL_DELEGATE() {\n  this.call = this._createCall(\"sync\");\n  return this.call.apply(this, arguments);\n};\n\nvar CALL_ASYNC_DELEGATE = function CALL_ASYNC_DELEGATE() {\n  this.callAsync = this._createCall(\"async\");\n  return this.callAsync.apply(this, arguments);\n};\n\nvar PROMISE_DELEGATE = function PROMISE_DELEGATE() {\n  this.promise = this._createCall(\"promise\");\n  return this.promise.apply(this, arguments);\n};\n\nvar Hook = /*#__PURE__*/function () {\n  function Hook() {\n    var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n    _classCallCheck(this, Hook);\n\n    this._args = args;\n    this.name = name;\n    this.taps = [];\n    this.interceptors = [];\n    this._call = CALL_DELEGATE;\n    this.call = CALL_DELEGATE;\n    this._callAsync = CALL_ASYNC_DELEGATE;\n    this.callAsync = CALL_ASYNC_DELEGATE;\n    this._promise = PROMISE_DELEGATE;\n    this.promise = PROMISE_DELEGATE;\n    this._x = undefined;\n    this.compile = this.compile;\n    this.tap = this.tap;\n    this.tapAsync = this.tapAsync;\n    this.tapPromise = this.tapPromise;\n  }\n\n  _createClass(Hook, [{\n    key: \"compile\",\n    value: function compile(options) {\n      throw new Error(\"Abstract: should be overridden\");\n    }\n  }, {\n    key: \"_createCall\",\n    value: function _createCall(type) {\n      return this.compile({\n        taps: this.taps,\n        interceptors: this.interceptors,\n        args: this._args,\n        type: type\n      });\n    }\n  }, {\n    key: \"_tap\",\n    value: function _tap(type, options, fn) {\n      if (typeof options === \"string\") {\n        options = {\n          name: options.trim()\n        };\n      } else if (typeof options !== \"object\" || options === null) {\n        throw new Error(\"Invalid tap options\");\n      }\n\n      if (typeof options.name !== \"string\" || options.name === \"\") {\n        throw new Error(\"Missing name for tap\");\n      }\n\n      if (typeof options.context !== \"undefined\") {\n        deprecateContext();\n      }\n\n      options = Object.assign({\n        type: type,\n        fn: fn\n      }, options);\n      options = this._runRegisterInterceptors(options);\n\n      this._insert(options);\n    }\n  }, {\n    key: \"tap\",\n    value: function tap(options, fn) {\n      this._tap(\"sync\", options, fn);\n    }\n  }, {\n    key: \"tapAsync\",\n    value: function tapAsync(options, fn) {\n      this._tap(\"async\", options, fn);\n    }\n  }, {\n    key: \"tapPromise\",\n    value: function tapPromise(options, fn) {\n      this._tap(\"promise\", options, fn);\n    }\n  }, {\n    key: \"_runRegisterInterceptors\",\n    value: function _runRegisterInterceptors(options) {\n      var _iterator = _createForOfIteratorHelper(this.interceptors),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var interceptor = _step.value;\n\n          if (interceptor.register) {\n            var newOptions = interceptor.register(options);\n\n            if (newOptions !== undefined) {\n              options = newOptions;\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return options;\n    }\n  }, {\n    key: \"withOptions\",\n    value: function withOptions(options) {\n      var _this = this;\n\n      var mergeOptions = function mergeOptions(opt) {\n        return Object.assign({}, options, typeof opt === \"string\" ? {\n          name: opt\n        } : opt);\n      };\n\n      return {\n        name: this.name,\n        tap: function tap(opt, fn) {\n          return _this.tap(mergeOptions(opt), fn);\n        },\n        tapAsync: function tapAsync(opt, fn) {\n          return _this.tapAsync(mergeOptions(opt), fn);\n        },\n        tapPromise: function tapPromise(opt, fn) {\n          return _this.tapPromise(mergeOptions(opt), fn);\n        },\n        intercept: function intercept(interceptor) {\n          return _this.intercept(interceptor);\n        },\n        isUsed: function isUsed() {\n          return _this.isUsed();\n        },\n        withOptions: function withOptions(opt) {\n          return _this.withOptions(mergeOptions(opt));\n        }\n      };\n    }\n  }, {\n    key: \"isUsed\",\n    value: function isUsed() {\n      return this.taps.length > 0 || this.interceptors.length > 0;\n    }\n  }, {\n    key: \"intercept\",\n    value: function intercept(interceptor) {\n      this._resetCompilation();\n\n      this.interceptors.push(Object.assign({}, interceptor));\n\n      if (interceptor.register) {\n        for (var i = 0; i < this.taps.length; i++) {\n          this.taps[i] = interceptor.register(this.taps[i]);\n        }\n      }\n    }\n  }, {\n    key: \"_resetCompilation\",\n    value: function _resetCompilation() {\n      this.call = this._call;\n      this.callAsync = this._callAsync;\n      this.promise = this._promise;\n    }\n  }, {\n    key: \"_insert\",\n    value: function _insert(item) {\n      this._resetCompilation();\n\n      var before;\n\n      if (typeof item.before === \"string\") {\n        before = new Set([item.before]);\n      } else if (Array.isArray(item.before)) {\n        before = new Set(item.before);\n      }\n\n      var stage = 0;\n\n      if (typeof item.stage === \"number\") {\n        stage = item.stage;\n      }\n\n      var i = this.taps.length;\n\n      while (i > 0) {\n        i--;\n        var x = this.taps[i];\n        this.taps[i + 1] = x;\n        var xStage = x.stage || 0;\n\n        if (before) {\n          if (before.has(x.name)) {\n            before.delete(x.name);\n            continue;\n          }\n\n          if (before.size > 0) {\n            continue;\n          }\n        }\n\n        if (xStage > stage) {\n          continue;\n        }\n\n        i++;\n        break;\n      }\n\n      this.taps[i] = item;\n    }\n  }]);\n\n  return Hook;\n}();\n\nObject.setPrototypeOf(Hook.prototype, null);\nmodule.exports = Hook;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/enhanced-resolve/node_modules/tapable/lib/Hook.js"],"names":["util","require","deprecateContext","deprecate","CALL_DELEGATE","call","_createCall","CALL_ASYNC_DELEGATE","callAsync","PROMISE_DELEGATE","promise","Hook","args","name","undefined","_args","taps","interceptors","_call","_callAsync","_promise","_x","compile","tap","tapAsync","tapPromise","options","Error","type","fn","trim","context","Object","assign","_runRegisterInterceptors","_insert","_tap","interceptor","register","newOptions","mergeOptions","opt","intercept","isUsed","withOptions","length","_resetCompilation","push","i","item","before","Set","Array","isArray","stage","x","xStage","has","delete","size","setPrototypeOf","prototype","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst util = require(\"util\");\n\nconst deprecateContext = util.deprecate(() => {},\n\"Hook.context is deprecated and will be removed\");\n\nconst CALL_DELEGATE = function(...args) {\n\tthis.call = this._createCall(\"sync\");\n\treturn this.call(...args);\n};\nconst CALL_ASYNC_DELEGATE = function(...args) {\n\tthis.callAsync = this._createCall(\"async\");\n\treturn this.callAsync(...args);\n};\nconst PROMISE_DELEGATE = function(...args) {\n\tthis.promise = this._createCall(\"promise\");\n\treturn this.promise(...args);\n};\n\nclass Hook {\n\tconstructor(args = [], name = undefined) {\n\t\tthis._args = args;\n\t\tthis.name = name;\n\t\tthis.taps = [];\n\t\tthis.interceptors = [];\n\t\tthis._call = CALL_DELEGATE;\n\t\tthis.call = CALL_DELEGATE;\n\t\tthis._callAsync = CALL_ASYNC_DELEGATE;\n\t\tthis.callAsync = CALL_ASYNC_DELEGATE;\n\t\tthis._promise = PROMISE_DELEGATE;\n\t\tthis.promise = PROMISE_DELEGATE;\n\t\tthis._x = undefined;\n\n\t\tthis.compile = this.compile;\n\t\tthis.tap = this.tap;\n\t\tthis.tapAsync = this.tapAsync;\n\t\tthis.tapPromise = this.tapPromise;\n\t}\n\n\tcompile(options) {\n\t\tthrow new Error(\"Abstract: should be overridden\");\n\t}\n\n\t_createCall(type) {\n\t\treturn this.compile({\n\t\t\ttaps: this.taps,\n\t\t\tinterceptors: this.interceptors,\n\t\t\targs: this._args,\n\t\t\ttype: type\n\t\t});\n\t}\n\n\t_tap(type, options, fn) {\n\t\tif (typeof options === \"string\") {\n\t\t\toptions = {\n\t\t\t\tname: options.trim()\n\t\t\t};\n\t\t} else if (typeof options !== \"object\" || options === null) {\n\t\t\tthrow new Error(\"Invalid tap options\");\n\t\t}\n\t\tif (typeof options.name !== \"string\" || options.name === \"\") {\n\t\t\tthrow new Error(\"Missing name for tap\");\n\t\t}\n\t\tif (typeof options.context !== \"undefined\") {\n\t\t\tdeprecateContext();\n\t\t}\n\t\toptions = Object.assign({ type, fn }, options);\n\t\toptions = this._runRegisterInterceptors(options);\n\t\tthis._insert(options);\n\t}\n\n\ttap(options, fn) {\n\t\tthis._tap(\"sync\", options, fn);\n\t}\n\n\ttapAsync(options, fn) {\n\t\tthis._tap(\"async\", options, fn);\n\t}\n\n\ttapPromise(options, fn) {\n\t\tthis._tap(\"promise\", options, fn);\n\t}\n\n\t_runRegisterInterceptors(options) {\n\t\tfor (const interceptor of this.interceptors) {\n\t\t\tif (interceptor.register) {\n\t\t\t\tconst newOptions = interceptor.register(options);\n\t\t\t\tif (newOptions !== undefined) {\n\t\t\t\t\toptions = newOptions;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn options;\n\t}\n\n\twithOptions(options) {\n\t\tconst mergeOptions = opt =>\n\t\t\tObject.assign({}, options, typeof opt === \"string\" ? { name: opt } : opt);\n\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\ttap: (opt, fn) => this.tap(mergeOptions(opt), fn),\n\t\t\ttapAsync: (opt, fn) => this.tapAsync(mergeOptions(opt), fn),\n\t\t\ttapPromise: (opt, fn) => this.tapPromise(mergeOptions(opt), fn),\n\t\t\tintercept: interceptor => this.intercept(interceptor),\n\t\t\tisUsed: () => this.isUsed(),\n\t\t\twithOptions: opt => this.withOptions(mergeOptions(opt))\n\t\t};\n\t}\n\n\tisUsed() {\n\t\treturn this.taps.length > 0 || this.interceptors.length > 0;\n\t}\n\n\tintercept(interceptor) {\n\t\tthis._resetCompilation();\n\t\tthis.interceptors.push(Object.assign({}, interceptor));\n\t\tif (interceptor.register) {\n\t\t\tfor (let i = 0; i < this.taps.length; i++) {\n\t\t\t\tthis.taps[i] = interceptor.register(this.taps[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\t_resetCompilation() {\n\t\tthis.call = this._call;\n\t\tthis.callAsync = this._callAsync;\n\t\tthis.promise = this._promise;\n\t}\n\n\t_insert(item) {\n\t\tthis._resetCompilation();\n\t\tlet before;\n\t\tif (typeof item.before === \"string\") {\n\t\t\tbefore = new Set([item.before]);\n\t\t} else if (Array.isArray(item.before)) {\n\t\t\tbefore = new Set(item.before);\n\t\t}\n\t\tlet stage = 0;\n\t\tif (typeof item.stage === \"number\") {\n\t\t\tstage = item.stage;\n\t\t}\n\t\tlet i = this.taps.length;\n\t\twhile (i > 0) {\n\t\t\ti--;\n\t\t\tconst x = this.taps[i];\n\t\t\tthis.taps[i + 1] = x;\n\t\t\tconst xStage = x.stage || 0;\n\t\t\tif (before) {\n\t\t\t\tif (before.has(x.name)) {\n\t\t\t\t\tbefore.delete(x.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (before.size > 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (xStage > stage) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ti++;\n\t\t\tbreak;\n\t\t}\n\t\tthis.taps[i] = item;\n\t}\n}\n\nObject.setPrototypeOf(Hook.prototype, null);\n\nmodule.exports = Hook;\n"]},"metadata":{},"sourceType":"script"}