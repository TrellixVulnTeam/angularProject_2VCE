{"ast":null,"code":"/*\nMIT License http://www.opensource.org/licenses/mit-license.php\nAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\nmodule.exports = /*#__PURE__*/function () {\n  function DescriptionFilePlugin(source, filenames, target) {\n    _classCallCheck(this, DescriptionFilePlugin);\n\n    this.source = source;\n    this.filenames = [].concat(filenames);\n    this.target = target;\n  }\n\n  _createClass(DescriptionFilePlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"DescriptionFilePlugin\", function (request, resolveContext, callback) {\n        var directory = request.path;\n        DescriptionFileUtils.loadDescriptionFile(resolver, directory, _this.filenames, resolveContext, function (err, result) {\n          if (err) return callback(err);\n\n          if (!result) {\n            if (resolveContext.missing) {\n              _this.filenames.forEach(function (filename) {\n                resolveContext.missing.add(resolver.join(directory, filename));\n              });\n            }\n\n            if (resolveContext.log) resolveContext.log(\"No description file found\");\n            return callback();\n          }\n\n          var relativePath = \".\" + request.path.substr(result.directory.length).replace(/\\\\/g, \"/\");\n          var obj = Object.assign({}, request, {\n            descriptionFilePath: result.path,\n            descriptionFileData: result.content,\n            descriptionFileRoot: result.directory,\n            relativePath: relativePath\n          });\n          resolver.doResolve(target, obj, \"using description file: \" + result.path + \" (relative path: \" + relativePath + \")\", resolveContext, function (err, result) {\n            if (err) return callback(err); // Don't allow other processing\n\n            if (result === undefined) return callback(null, null);\n            callback(null, result);\n          });\n        });\n      });\n    }\n  }]);\n\n  return DescriptionFilePlugin;\n}();","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/node_modules/enhanced-resolve/lib/DescriptionFilePlugin.js"],"names":["DescriptionFileUtils","require","module","exports","source","filenames","target","concat","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","directory","path","loadDescriptionFile","err","result","missing","forEach","filename","add","join","log","relativePath","substr","length","replace","obj","Object","assign","descriptionFilePath","descriptionFileData","content","descriptionFileRoot","doResolve","undefined"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,IAAMA,oBAAoB,GAAGC,OAAO,CAAC,wBAAD,CAApC;;AAEAC,MAAM,CAACC,OAAP;AACC,iCAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,MAA/B,EAAuC;AAAA;;AACtC,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiB,GAAGE,MAAH,CAAUF,SAAV,CAAjB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA;;AALF;AAAA;AAAA,WAOC,eAAME,QAAN,EAAgB;AAAA;;AACf,UAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAT,CAAoB,KAAKH,MAAzB,CAAf;AACAE,MAAAA,QAAQ,CACNE,OADF,CACU,KAAKN,MADf,EAEEO,QAFF,CAGE,uBAHF,EAIE,UAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,EAAuC;AACtC,YAAMC,SAAS,GAAGH,OAAO,CAACI,IAA1B;AACAhB,QAAAA,oBAAoB,CAACiB,mBAArB,CACCT,QADD,EAECO,SAFD,EAGC,KAAI,CAACV,SAHN,EAICQ,cAJD,EAKC,UAACK,GAAD,EAAMC,MAAN,EAAiB;AAChB,cAAID,GAAJ,EAAS,OAAOJ,QAAQ,CAACI,GAAD,CAAf;;AACT,cAAI,CAACC,MAAL,EAAa;AACZ,gBAAIN,cAAc,CAACO,OAAnB,EAA4B;AAC3B,cAAA,KAAI,CAACf,SAAL,CAAegB,OAAf,CAAuB,UAAAC,QAAQ,EAAI;AAClCT,gBAAAA,cAAc,CAACO,OAAf,CAAuBG,GAAvB,CACCf,QAAQ,CAACgB,IAAT,CAAcT,SAAd,EAAyBO,QAAzB,CADD;AAGA,eAJD;AAKA;;AACD,gBAAIT,cAAc,CAACY,GAAnB,EACCZ,cAAc,CAACY,GAAf,CAAmB,2BAAnB;AACD,mBAAOX,QAAQ,EAAf;AACA;;AACD,cAAMY,YAAY,GACjB,MACAd,OAAO,CAACI,IAAR,CACEW,MADF,CACSR,MAAM,CAACJ,SAAP,CAAiBa,MAD1B,EAEEC,OAFF,CAEU,KAFV,EAEiB,GAFjB,CAFD;AAKA,cAAMC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBpB,OAAlB,EAA2B;AACtCqB,YAAAA,mBAAmB,EAAEd,MAAM,CAACH,IADU;AAEtCkB,YAAAA,mBAAmB,EAAEf,MAAM,CAACgB,OAFU;AAGtCC,YAAAA,mBAAmB,EAAEjB,MAAM,CAACJ,SAHU;AAItCW,YAAAA,YAAY,EAAEA;AAJwB,WAA3B,CAAZ;AAMAlB,UAAAA,QAAQ,CAAC6B,SAAT,CACC/B,MADD,EAECwB,GAFD,EAGC,6BACCX,MAAM,CAACH,IADR,GAEC,mBAFD,GAGCU,YAHD,GAIC,GAPF,EAQCb,cARD,EASC,UAACK,GAAD,EAAMC,MAAN,EAAiB;AAChB,gBAAID,GAAJ,EAAS,OAAOJ,QAAQ,CAACI,GAAD,CAAf,CADO,CAGhB;;AACA,gBAAIC,MAAM,KAAKmB,SAAf,EAA0B,OAAOxB,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAf;AAC1BA,YAAAA,QAAQ,CAAC,IAAD,EAAOK,MAAP,CAAR;AACA,WAfF;AAiBA,SA/CF;AAiDA,OAvDH;AAyDA;AAlEF;;AAAA;AAAA","sourcesContent":["/*\nMIT License http://www.opensource.org/licenses/mit-license.php\nAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\nmodule.exports = class DescriptionFilePlugin {\n\tconstructor(source, filenames, target) {\n\t\tthis.source = source;\n\t\tthis.filenames = [].concat(filenames);\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\n\t\t\t\t\"DescriptionFilePlugin\",\n\t\t\t\t(request, resolveContext, callback) => {\n\t\t\t\t\tconst directory = request.path;\n\t\t\t\t\tDescriptionFileUtils.loadDescriptionFile(\n\t\t\t\t\t\tresolver,\n\t\t\t\t\t\tdirectory,\n\t\t\t\t\t\tthis.filenames,\n\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tif (!result) {\n\t\t\t\t\t\t\t\tif (resolveContext.missing) {\n\t\t\t\t\t\t\t\t\tthis.filenames.forEach(filename => {\n\t\t\t\t\t\t\t\t\t\tresolveContext.missing.add(\n\t\t\t\t\t\t\t\t\t\t\tresolver.join(directory, filename)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (resolveContext.log)\n\t\t\t\t\t\t\t\t\tresolveContext.log(\"No description file found\");\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst relativePath =\n\t\t\t\t\t\t\t\t\".\" +\n\t\t\t\t\t\t\t\trequest.path\n\t\t\t\t\t\t\t\t\t.substr(result.directory.length)\n\t\t\t\t\t\t\t\t\t.replace(/\\\\/g, \"/\");\n\t\t\t\t\t\t\tconst obj = Object.assign({}, request, {\n\t\t\t\t\t\t\t\tdescriptionFilePath: result.path,\n\t\t\t\t\t\t\t\tdescriptionFileData: result.content,\n\t\t\t\t\t\t\t\tdescriptionFileRoot: result.directory,\n\t\t\t\t\t\t\t\trelativePath: relativePath\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\t\"using description file: \" +\n\t\t\t\t\t\t\t\t\tresult.path +\n\t\t\t\t\t\t\t\t\t\" (relative path: \" +\n\t\t\t\t\t\t\t\t\trelativePath +\n\t\t\t\t\t\t\t\t\t\")\",\n\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t\t\t// Don't allow other processing\n\t\t\t\t\t\t\t\t\tif (result === undefined) return callback(null, null);\n\t\t\t\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}