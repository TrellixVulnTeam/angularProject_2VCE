{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _slicedToArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _regeneratorRuntime = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/regenerator\");\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _asyncToGenerator = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _objectSpread = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IndexHtmlWebpackPlugin = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar path = require(\"path\");\n\nvar webpack_sources_1 = require(\"webpack-sources\");\n\nvar augment_index_html_1 = require(\"../../utils/index-file/augment-index-html\");\n\nvar strip_bom_1 = require(\"../../utils/strip-bom\");\n\nfunction readFile(filename, compilation) {\n  return new Promise(function (resolve, reject) {\n    compilation.inputFileSystem.readFile(filename, function (err, data) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(strip_bom_1.stripBom(data.toString()));\n    });\n  });\n}\n\nvar IndexHtmlWebpackPlugin = /*#__PURE__*/function () {\n  function IndexHtmlWebpackPlugin(options) {\n    _classCallCheck(this, IndexHtmlWebpackPlugin);\n\n    this._options = _objectSpread({\n      input: 'index.html',\n      output: 'index.html',\n      entrypoints: ['polyfills', 'main'],\n      noModuleEntrypoints: [],\n      moduleEntrypoints: [],\n      sri: false,\n      postTransforms: []\n    }, options);\n  }\n\n  _createClass(IndexHtmlWebpackPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.emit.tapPromise('index-html-webpack-plugin', /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(compilation) {\n          var inputContent, files, noModuleFiles, moduleFiles, _iterator, _step, _loop, loadOutputFile, indexSource, _iterator2, _step2, transform;\n\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return readFile(_this._options.input, compilation);\n\n                case 2:\n                  inputContent = _context2.sent;\n                  compilation.fileDependencies.add(_this._options.input); // Get all files for selected entrypoints\n\n                  files = [];\n                  noModuleFiles = [];\n                  moduleFiles = [];\n                  _iterator = _createForOfIteratorHelper(compilation.entrypoints);\n\n                  try {\n                    _loop = function _loop() {\n                      var _step$value = _slicedToArray(_step.value, 2),\n                          entryName = _step$value[0],\n                          entrypoint = _step$value[1];\n\n                      var entryFiles = (entrypoint && entrypoint.getFiles() || []).map(function (f) {\n                        return {\n                          name: entryName,\n                          file: f,\n                          extension: path.extname(f)\n                        };\n                      });\n\n                      if (_this._options.noModuleEntrypoints.includes(entryName)) {\n                        noModuleFiles.push.apply(noModuleFiles, _toConsumableArray(entryFiles));\n                      } else if (_this._options.moduleEntrypoints.includes(entryName)) {\n                        moduleFiles.push.apply(moduleFiles, _toConsumableArray(entryFiles));\n                      } else {\n                        files.push.apply(files, _toConsumableArray(entryFiles));\n                      }\n                    };\n\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      _loop();\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n\n                  loadOutputFile = /*#__PURE__*/function () {\n                    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name) {\n                      var data;\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              data = compilation.assets[name].source();\n                              return _context.abrupt(\"return\", typeof data === 'string' ? data : data.toString());\n\n                            case 2:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee);\n                    }));\n\n                    return function loadOutputFile(_x2) {\n                      return _ref2.apply(this, arguments);\n                    };\n                  }();\n\n                  _context2.next = 12;\n                  return augment_index_html_1.augmentIndexHtml({\n                    input: _this._options.input,\n                    inputContent: inputContent,\n                    baseHref: _this._options.baseHref,\n                    deployUrl: _this._options.deployUrl,\n                    sri: _this._options.sri,\n                    crossOrigin: _this._options.crossOrigin,\n                    files: files,\n                    noModuleFiles: noModuleFiles,\n                    loadOutputFile: loadOutputFile,\n                    moduleFiles: moduleFiles,\n                    entrypoints: _this._options.entrypoints,\n                    lang: _this._options.lang\n                  });\n\n                case 12:\n                  indexSource = _context2.sent;\n                  _iterator2 = _createForOfIteratorHelper(_this._options.postTransforms);\n                  _context2.prev = 14;\n\n                  _iterator2.s();\n\n                case 16:\n                  if ((_step2 = _iterator2.n()).done) {\n                    _context2.next = 23;\n                    break;\n                  }\n\n                  transform = _step2.value;\n                  _context2.next = 20;\n                  return transform(indexSource);\n\n                case 20:\n                  indexSource = _context2.sent;\n\n                case 21:\n                  _context2.next = 16;\n                  break;\n\n                case 23:\n                  _context2.next = 28;\n                  break;\n\n                case 25:\n                  _context2.prev = 25;\n                  _context2.t0 = _context2[\"catch\"](14);\n\n                  _iterator2.e(_context2.t0);\n\n                case 28:\n                  _context2.prev = 28;\n\n                  _iterator2.f();\n\n                  return _context2.finish(28);\n\n                case 31:\n                  // Add to compilation assets\n                  compilation.assets[_this._options.output] = new webpack_sources_1.RawSource(indexSource);\n\n                case 32:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[14, 25, 28, 31]]);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }]);\n\n  return IndexHtmlWebpackPlugin;\n}();\n\nexports.IndexHtmlWebpackPlugin = IndexHtmlWebpackPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/src/webpack/plugins/index-html-webpack-plugin.js"],"names":["Object","defineProperty","exports","value","IndexHtmlWebpackPlugin","path","require","webpack_sources_1","augment_index_html_1","strip_bom_1","readFile","filename","compilation","Promise","resolve","reject","inputFileSystem","err","data","stripBom","toString","options","_options","input","output","entrypoints","noModuleEntrypoints","moduleEntrypoints","sri","postTransforms","compiler","hooks","emit","tapPromise","inputContent","fileDependencies","add","files","noModuleFiles","moduleFiles","entryName","entrypoint","entryFiles","getFiles","map","f","name","file","extension","extname","includes","push","loadOutputFile","assets","source","augmentIndexHtml","baseHref","deployUrl","crossOrigin","lang","indexSource","transform","RawSource"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IndexHtmlWebpackPlugin = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst path = require(\"path\");\nconst webpack_sources_1 = require(\"webpack-sources\");\nconst augment_index_html_1 = require(\"../../utils/index-file/augment-index-html\");\nconst strip_bom_1 = require(\"../../utils/strip-bom\");\nfunction readFile(filename, compilation) {\n    return new Promise((resolve, reject) => {\n        compilation.inputFileSystem.readFile(filename, (err, data) => {\n            if (err) {\n                reject(err);\n                return;\n            }\n            resolve(strip_bom_1.stripBom(data.toString()));\n        });\n    });\n}\nclass IndexHtmlWebpackPlugin {\n    constructor(options) {\n        this._options = {\n            input: 'index.html',\n            output: 'index.html',\n            entrypoints: ['polyfills', 'main'],\n            noModuleEntrypoints: [],\n            moduleEntrypoints: [],\n            sri: false,\n            postTransforms: [],\n            ...options,\n        };\n    }\n    apply(compiler) {\n        compiler.hooks.emit.tapPromise('index-html-webpack-plugin', async (compilation) => {\n            // Get input html file\n            const inputContent = await readFile(this._options.input, compilation);\n            compilation.fileDependencies.add(this._options.input);\n            // Get all files for selected entrypoints\n            const files = [];\n            const noModuleFiles = [];\n            const moduleFiles = [];\n            for (const [entryName, entrypoint] of compilation.entrypoints) {\n                const entryFiles = ((entrypoint && entrypoint.getFiles()) || []).map((f) => ({\n                    name: entryName,\n                    file: f,\n                    extension: path.extname(f),\n                }));\n                if (this._options.noModuleEntrypoints.includes(entryName)) {\n                    noModuleFiles.push(...entryFiles);\n                }\n                else if (this._options.moduleEntrypoints.includes(entryName)) {\n                    moduleFiles.push(...entryFiles);\n                }\n                else {\n                    files.push(...entryFiles);\n                }\n            }\n            const loadOutputFile = async (name) => {\n                const data = compilation.assets[name].source();\n                return typeof data === 'string' ? data : data.toString();\n            };\n            let indexSource = await augment_index_html_1.augmentIndexHtml({\n                input: this._options.input,\n                inputContent,\n                baseHref: this._options.baseHref,\n                deployUrl: this._options.deployUrl,\n                sri: this._options.sri,\n                crossOrigin: this._options.crossOrigin,\n                files,\n                noModuleFiles,\n                loadOutputFile,\n                moduleFiles,\n                entrypoints: this._options.entrypoints,\n                lang: this._options.lang,\n            });\n            for (const transform of this._options.postTransforms) {\n                indexSource = await transform(indexSource);\n            }\n            // Add to compilation assets\n            compilation.assets[this._options.output] = new webpack_sources_1.RawSource(indexSource);\n        });\n    }\n}\nexports.IndexHtmlWebpackPlugin = IndexHtmlWebpackPlugin;\n"]},"metadata":{},"sourceType":"script"}