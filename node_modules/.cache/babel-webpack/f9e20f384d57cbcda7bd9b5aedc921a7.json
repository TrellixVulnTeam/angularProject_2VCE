{"ast":null,"code":"var log = require('../logger').create('launcher');\n/**\n * Kill browser if it does not capture in given `captureTimeout`.\n */\n\n\nfunction CaptureTimeoutLauncher(timer, captureTimeout) {\n  var _this = this;\n\n  if (!captureTimeout) {\n    return;\n  }\n\n  var pendingTimeoutId = null;\n  this.on('start', function () {\n    pendingTimeoutId = timer.setTimeout(function () {\n      pendingTimeoutId = null;\n\n      if (_this.state !== _this.STATE_BEING_CAPTURED) {\n        return;\n      }\n\n      log.warn(\"\".concat(_this.name, \" have not captured in \").concat(captureTimeout, \" ms, killing.\"));\n      _this.error = 'timeout';\n\n      _this.kill();\n    }, captureTimeout);\n  });\n  this.on('done', function () {\n    if (pendingTimeoutId) {\n      timer.clearTimeout(pendingTimeoutId);\n      pendingTimeoutId = null;\n    }\n  });\n}\n\nCaptureTimeoutLauncher.decoratorFactory = function (timer,\n/* config.captureTimeout */\ncaptureTimeout) {\n  return function (launcher) {\n    CaptureTimeoutLauncher.call(launcher, timer, captureTimeout);\n  };\n};\n\nCaptureTimeoutLauncher.decoratorFactory.$inject = ['timer', 'config.captureTimeout'];\nmodule.exports = CaptureTimeoutLauncher;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/karma/lib/launchers/capture_timeout.js"],"names":["log","require","create","CaptureTimeoutLauncher","timer","captureTimeout","pendingTimeoutId","on","setTimeout","state","STATE_BEING_CAPTURED","warn","name","error","kill","clearTimeout","decoratorFactory","launcher","call","$inject","module","exports"],"mappings":"AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,MAArB,CAA4B,UAA5B,CAAZ;AAEA;AACA;AACA;;;AACA,SAASC,sBAAT,CAAiCC,KAAjC,EAAwCC,cAAxC,EAAwD;AAAA;;AACtD,MAAI,CAACA,cAAL,EAAqB;AACnB;AACD;;AAED,MAAIC,gBAAgB,GAAG,IAAvB;AAEA,OAAKC,EAAL,CAAQ,OAAR,EAAiB,YAAM;AACrBD,IAAAA,gBAAgB,GAAGF,KAAK,CAACI,UAAN,CAAiB,YAAM;AACxCF,MAAAA,gBAAgB,GAAG,IAAnB;;AACA,UAAI,KAAI,CAACG,KAAL,KAAe,KAAI,CAACC,oBAAxB,EAA8C;AAC5C;AACD;;AAEDV,MAAAA,GAAG,CAACW,IAAJ,WAAY,KAAI,CAACC,IAAjB,mCAA8CP,cAA9C;AACA,MAAA,KAAI,CAACQ,KAAL,GAAa,SAAb;;AACA,MAAA,KAAI,CAACC,IAAL;AACD,KATkB,EAShBT,cATgB,CAAnB;AAUD,GAXD;AAaA,OAAKE,EAAL,CAAQ,MAAR,EAAgB,YAAM;AACpB,QAAID,gBAAJ,EAAsB;AACpBF,MAAAA,KAAK,CAACW,YAAN,CAAmBT,gBAAnB;AACAA,MAAAA,gBAAgB,GAAG,IAAnB;AACD;AACF,GALD;AAMD;;AAEDH,sBAAsB,CAACa,gBAAvB,GAA0C,UAAUZ,KAAV;AACxC;AAA4BC,cADY,EACI;AAC5C,SAAO,UAAUY,QAAV,EAAoB;AACzBd,IAAAA,sBAAsB,CAACe,IAAvB,CAA4BD,QAA5B,EAAsCb,KAAtC,EAA6CC,cAA7C;AACD,GAFD;AAGD,CALD;;AAOAF,sBAAsB,CAACa,gBAAvB,CAAwCG,OAAxC,GAAkD,CAAC,OAAD,EAAU,uBAAV,CAAlD;AAEAC,MAAM,CAACC,OAAP,GAAiBlB,sBAAjB","sourcesContent":["const log = require('../logger').create('launcher')\n\n/**\n * Kill browser if it does not capture in given `captureTimeout`.\n */\nfunction CaptureTimeoutLauncher (timer, captureTimeout) {\n  if (!captureTimeout) {\n    return\n  }\n\n  let pendingTimeoutId = null\n\n  this.on('start', () => {\n    pendingTimeoutId = timer.setTimeout(() => {\n      pendingTimeoutId = null\n      if (this.state !== this.STATE_BEING_CAPTURED) {\n        return\n      }\n\n      log.warn(`${this.name} have not captured in ${captureTimeout} ms, killing.`)\n      this.error = 'timeout'\n      this.kill()\n    }, captureTimeout)\n  })\n\n  this.on('done', () => {\n    if (pendingTimeoutId) {\n      timer.clearTimeout(pendingTimeoutId)\n      pendingTimeoutId = null\n    }\n  })\n}\n\nCaptureTimeoutLauncher.decoratorFactory = function (timer,\n  /* config.captureTimeout */ captureTimeout) {\n  return function (launcher) {\n    CaptureTimeoutLauncher.call(launcher, timer, captureTimeout)\n  }\n}\n\nCaptureTimeoutLauncher.decoratorFactory.$inject = ['timer', 'config.captureTimeout']\n\nmodule.exports = CaptureTimeoutLauncher\n"]},"metadata":{},"sourceType":"script"}