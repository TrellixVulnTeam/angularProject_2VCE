{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar SourceNode = require(\"source-map\").SourceNode;\n\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\n\nvar SourceMapGenerator = require(\"source-map\").SourceMapGenerator;\n\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\n\nvar fromStringWithSourceMap = require(\"source-list-map\").fromStringWithSourceMap;\n\nvar Source = require(\"./Source\");\n\nvar applySourceMap = require(\"./applySourceMap\");\n\nvar SourceMapSource = /*#__PURE__*/function (_Source) {\n  _inherits(SourceMapSource, _Source);\n\n  var _super = _createSuper(SourceMapSource);\n\n  function SourceMapSource(value, name, sourceMap, originalSource, innerSourceMap, removeOriginalSource) {\n    var _this;\n\n    _classCallCheck(this, SourceMapSource);\n\n    _this = _super.call(this);\n    _this._value = value;\n    _this._name = name;\n    _this._sourceMap = sourceMap;\n    _this._originalSource = originalSource;\n    _this._innerSourceMap = innerSourceMap;\n    _this._removeOriginalSource = removeOriginalSource;\n    return _this;\n  }\n\n  _createClass(SourceMapSource, [{\n    key: \"source\",\n    value: function source() {\n      return this._value;\n    }\n  }, {\n    key: \"node\",\n    value: function node(options) {\n      var sourceMap = this._sourceMap;\n      var node = SourceNode.fromStringWithSourceMap(this._value, new SourceMapConsumer(sourceMap));\n      node.setSourceContent(this._name, this._originalSource);\n      var innerSourceMap = this._innerSourceMap;\n\n      if (innerSourceMap) {\n        node = applySourceMap(node, new SourceMapConsumer(innerSourceMap), this._name, this._removeOriginalSource);\n      }\n\n      return node;\n    }\n  }, {\n    key: \"listMap\",\n    value: function listMap(options) {\n      options = options || {};\n      if (options.module === false) return new SourceListMap(this._value, this._name, this._value);\n      return fromStringWithSourceMap(this._value, typeof this._sourceMap === \"string\" ? JSON.parse(this._sourceMap) : this._sourceMap);\n    }\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash) {\n      hash.update(this._value);\n      if (this._originalSource) hash.update(this._originalSource);\n    }\n  }]);\n\n  return SourceMapSource;\n}(Source);\n\nrequire(\"./SourceAndMapMixin\")(SourceMapSource.prototype);\n\nmodule.exports = SourceMapSource;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack-sources/lib/SourceMapSource.js"],"names":["SourceNode","require","SourceMapConsumer","SourceMapGenerator","SourceListMap","fromStringWithSourceMap","Source","applySourceMap","SourceMapSource","value","name","sourceMap","originalSource","innerSourceMap","removeOriginalSource","_value","_name","_sourceMap","_originalSource","_innerSourceMap","_removeOriginalSource","options","node","setSourceContent","module","JSON","parse","hash","update","prototype","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBD,UAAvC;;AACA,IAAIE,iBAAiB,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBC,iBAA9C;;AACA,IAAIC,kBAAkB,GAAGF,OAAO,CAAC,YAAD,CAAP,CAAsBE,kBAA/C;;AACA,IAAIC,aAAa,GAAGH,OAAO,CAAC,iBAAD,CAAP,CAA2BG,aAA/C;;AACA,IAAIC,uBAAuB,GAAGJ,OAAO,CAAC,iBAAD,CAAP,CAA2BI,uBAAzD;;AACA,IAAIC,MAAM,GAAGL,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIM,cAAc,GAAGN,OAAO,CAAC,kBAAD,CAA5B;;IAEMO,e;;;;;AACL,2BAAYC,KAAZ,EAAmBC,IAAnB,EAAyBC,SAAzB,EAAoCC,cAApC,EAAoDC,cAApD,EAAoEC,oBAApE,EAA0F;AAAA;;AAAA;;AACzF;AACA,UAAKC,MAAL,GAAcN,KAAd;AACA,UAAKO,KAAL,GAAaN,IAAb;AACA,UAAKO,UAAL,GAAkBN,SAAlB;AACA,UAAKO,eAAL,GAAuBN,cAAvB;AACA,UAAKO,eAAL,GAAuBN,cAAvB;AACA,UAAKO,qBAAL,GAA6BN,oBAA7B;AAPyF;AAQzF;;;;WAED,kBAAS;AACR,aAAO,KAAKC,MAAZ;AACA;;;WAED,cAAKM,OAAL,EAAc;AACb,UAAIV,SAAS,GAAG,KAAKM,UAArB;AACA,UAAIK,IAAI,GAAGtB,UAAU,CAACK,uBAAX,CAAmC,KAAKU,MAAxC,EAAgD,IAAIb,iBAAJ,CAAsBS,SAAtB,CAAhD,CAAX;AACAW,MAAAA,IAAI,CAACC,gBAAL,CAAsB,KAAKP,KAA3B,EAAkC,KAAKE,eAAvC;AACA,UAAIL,cAAc,GAAG,KAAKM,eAA1B;;AACA,UAAGN,cAAH,EAAmB;AAClBS,QAAAA,IAAI,GAAGf,cAAc,CAACe,IAAD,EAAO,IAAIpB,iBAAJ,CAAsBW,cAAtB,CAAP,EAA8C,KAAKG,KAAnD,EAA0D,KAAKI,qBAA/D,CAArB;AACA;;AACD,aAAOE,IAAP;AACA;;;WAED,iBAAQD,OAAR,EAAiB;AAChBA,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,UAAGA,OAAO,CAACG,MAAR,KAAmB,KAAtB,EACC,OAAO,IAAIpB,aAAJ,CAAkB,KAAKW,MAAvB,EAA+B,KAAKC,KAApC,EAA2C,KAAKD,MAAhD,CAAP;AACD,aAAOV,uBAAuB,CAAC,KAAKU,MAAN,EAAc,OAAO,KAAKE,UAAZ,KAA2B,QAA3B,GAAsCQ,IAAI,CAACC,KAAL,CAAW,KAAKT,UAAhB,CAAtC,GAAoE,KAAKA,UAAvF,CAA9B;AACA;;;WAED,oBAAWU,IAAX,EAAiB;AAChBA,MAAAA,IAAI,CAACC,MAAL,CAAY,KAAKb,MAAjB;AACA,UAAG,KAAKG,eAAR,EACCS,IAAI,CAACC,MAAL,CAAY,KAAKV,eAAjB;AACD;;;;EArC4BZ,M;;AAwC9BL,OAAO,CAAC,qBAAD,CAAP,CAA+BO,eAAe,CAACqB,SAA/C;;AAEAL,MAAM,CAACM,OAAP,GAAiBtB,eAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar SourceNode = require(\"source-map\").SourceNode;\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\nvar SourceMapGenerator = require(\"source-map\").SourceMapGenerator;\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\nvar fromStringWithSourceMap = require(\"source-list-map\").fromStringWithSourceMap;\nvar Source = require(\"./Source\");\nvar applySourceMap = require(\"./applySourceMap\");\n\nclass SourceMapSource extends Source {\n\tconstructor(value, name, sourceMap, originalSource, innerSourceMap, removeOriginalSource) {\n\t\tsuper();\n\t\tthis._value = value;\n\t\tthis._name = name;\n\t\tthis._sourceMap = sourceMap;\n\t\tthis._originalSource = originalSource;\n\t\tthis._innerSourceMap = innerSourceMap;\n\t\tthis._removeOriginalSource = removeOriginalSource;\n\t}\n\n\tsource() {\n\t\treturn this._value;\n\t}\n\n\tnode(options) {\n\t\tvar sourceMap = this._sourceMap;\n\t\tvar node = SourceNode.fromStringWithSourceMap(this._value, new SourceMapConsumer(sourceMap));\n\t\tnode.setSourceContent(this._name, this._originalSource);\n\t\tvar innerSourceMap = this._innerSourceMap;\n\t\tif(innerSourceMap) {\n\t\t\tnode = applySourceMap(node, new SourceMapConsumer(innerSourceMap), this._name, this._removeOriginalSource);\n\t\t}\n\t\treturn node;\n\t}\n\n\tlistMap(options) {\n\t\toptions = options || {};\n\t\tif(options.module === false)\n\t\t\treturn new SourceListMap(this._value, this._name, this._value);\n\t\treturn fromStringWithSourceMap(this._value, typeof this._sourceMap === \"string\" ? JSON.parse(this._sourceMap) : this._sourceMap);\n\t}\n\n\tupdateHash(hash) {\n\t\thash.update(this._value);\n\t\tif(this._originalSource)\n\t\t\thash.update(this._originalSource);\n\t}\n}\n\nrequire(\"./SourceAndMapMixin\")(SourceMapSource.prototype);\n\nmodule.exports = SourceMapSource;\n"]},"metadata":{},"sourceType":"script"}