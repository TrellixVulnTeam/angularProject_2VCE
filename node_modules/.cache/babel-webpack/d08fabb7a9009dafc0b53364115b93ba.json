{"ast":null,"code":"'use strict';\n/**\n * Inquirer.js\n * A collection of common interactive command line user interfaces.\n */\n\nvar inquirer = module.exports;\n/**\n * Client interfaces\n */\n\ninquirer.prompts = {};\ninquirer.Separator = require('./objects/separator');\ninquirer.ui = {\n  BottomBar: require('./ui/bottom-bar'),\n  Prompt: require('./ui/prompt')\n};\n/**\n * Create a new self-contained prompt module.\n */\n\ninquirer.createPromptModule = function (opt) {\n  var promptModule = function promptModule(questions, answers) {\n    var ui;\n\n    try {\n      ui = new inquirer.ui.Prompt(promptModule.prompts, opt);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    var promise = ui.run(questions, answers); // Monkey patch the UI on the promise object so\n    // that it remains publicly accessible.\n\n    promise.ui = ui;\n    return promise;\n  };\n\n  promptModule.prompts = {};\n  /**\n   * Register a prompt type\n   * @param {String} name     Prompt type name\n   * @param {Function} prompt Prompt constructor\n   * @return {inquirer}\n   */\n\n  promptModule.registerPrompt = function (name, prompt) {\n    promptModule.prompts[name] = prompt;\n    return this;\n  };\n  /**\n   * Register the defaults provider prompts\n   */\n\n\n  promptModule.restoreDefaultPrompts = function () {\n    this.registerPrompt('list', require('./prompts/list'));\n    this.registerPrompt('input', require('./prompts/input'));\n    this.registerPrompt('number', require('./prompts/number'));\n    this.registerPrompt('confirm', require('./prompts/confirm'));\n    this.registerPrompt('rawlist', require('./prompts/rawlist'));\n    this.registerPrompt('expand', require('./prompts/expand'));\n    this.registerPrompt('checkbox', require('./prompts/checkbox'));\n    this.registerPrompt('password', require('./prompts/password'));\n    this.registerPrompt('editor', require('./prompts/editor'));\n  };\n\n  promptModule.restoreDefaultPrompts();\n  return promptModule;\n};\n/**\n * Public CLI helper interface\n * @param  {Array|Object|Rx.Observable} questions - Questions settings array\n * @param  {Function} cb - Callback being passed the user answers\n * @return {inquirer.ui.Prompt}\n */\n\n\ninquirer.prompt = inquirer.createPromptModule(); // Expose helper functions on the top level for easiest usage by common users\n\ninquirer.registerPrompt = function (name, prompt) {\n  inquirer.prompt.registerPrompt(name, prompt);\n};\n\ninquirer.restoreDefaultPrompts = function () {\n  inquirer.prompt.restoreDefaultPrompts();\n};","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/inquirer/lib/inquirer.js"],"names":["inquirer","module","exports","prompts","Separator","require","ui","BottomBar","Prompt","createPromptModule","opt","promptModule","questions","answers","error","Promise","reject","promise","run","registerPrompt","name","prompt","restoreDefaultPrompts"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,OAAtB;AAEA;AACA;AACA;;AAEAF,QAAQ,CAACG,OAAT,GAAmB,EAAnB;AAEAH,QAAQ,CAACI,SAAT,GAAqBC,OAAO,CAAC,qBAAD,CAA5B;AAEAL,QAAQ,CAACM,EAAT,GAAc;AACZC,EAAAA,SAAS,EAAEF,OAAO,CAAC,iBAAD,CADN;AAEZG,EAAAA,MAAM,EAAEH,OAAO,CAAC,aAAD;AAFH,CAAd;AAKA;AACA;AACA;;AACAL,QAAQ,CAACS,kBAAT,GAA8B,UAAUC,GAAV,EAAe;AAC3C,MAAIC,YAAY,GAAG,SAAfA,YAAe,CAAUC,SAAV,EAAqBC,OAArB,EAA8B;AAC/C,QAAIP,EAAJ;;AACA,QAAI;AACFA,MAAAA,EAAE,GAAG,IAAIN,QAAQ,CAACM,EAAT,CAAYE,MAAhB,CAAuBG,YAAY,CAACR,OAApC,EAA6CO,GAA7C,CAAL;AACD,KAFD,CAEE,OAAOI,KAAP,EAAc;AACd,aAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD;;AACD,QAAIG,OAAO,GAAGX,EAAE,CAACY,GAAH,CAAON,SAAP,EAAkBC,OAAlB,CAAd,CAP+C,CAS/C;AACA;;AACAI,IAAAA,OAAO,CAACX,EAAR,GAAaA,EAAb;AAEA,WAAOW,OAAP;AACD,GAdD;;AAgBAN,EAAAA,YAAY,CAACR,OAAb,GAAuB,EAAvB;AAEA;AACF;AACA;AACA;AACA;AACA;;AAEEQ,EAAAA,YAAY,CAACQ,cAAb,GAA8B,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AACpDV,IAAAA,YAAY,CAACR,OAAb,CAAqBiB,IAArB,IAA6BC,MAA7B;AACA,WAAO,IAAP;AACD,GAHD;AAKA;AACF;AACA;;;AAEEV,EAAAA,YAAY,CAACW,qBAAb,GAAqC,YAAY;AAC/C,SAAKH,cAAL,CAAoB,MAApB,EAA4Bd,OAAO,CAAC,gBAAD,CAAnC;AACA,SAAKc,cAAL,CAAoB,OAApB,EAA6Bd,OAAO,CAAC,iBAAD,CAApC;AACA,SAAKc,cAAL,CAAoB,QAApB,EAA8Bd,OAAO,CAAC,kBAAD,CAArC;AACA,SAAKc,cAAL,CAAoB,SAApB,EAA+Bd,OAAO,CAAC,mBAAD,CAAtC;AACA,SAAKc,cAAL,CAAoB,SAApB,EAA+Bd,OAAO,CAAC,mBAAD,CAAtC;AACA,SAAKc,cAAL,CAAoB,QAApB,EAA8Bd,OAAO,CAAC,kBAAD,CAArC;AACA,SAAKc,cAAL,CAAoB,UAApB,EAAgCd,OAAO,CAAC,oBAAD,CAAvC;AACA,SAAKc,cAAL,CAAoB,UAApB,EAAgCd,OAAO,CAAC,oBAAD,CAAvC;AACA,SAAKc,cAAL,CAAoB,QAApB,EAA8Bd,OAAO,CAAC,kBAAD,CAArC;AACD,GAVD;;AAYAM,EAAAA,YAAY,CAACW,qBAAb;AAEA,SAAOX,YAAP;AACD,CAlDD;AAoDA;AACA;AACA;AACA;AACA;AACA;;;AAEAX,QAAQ,CAACqB,MAAT,GAAkBrB,QAAQ,CAACS,kBAAT,EAAlB,C,CAEA;;AACAT,QAAQ,CAACmB,cAAT,GAA0B,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AAChDrB,EAAAA,QAAQ,CAACqB,MAAT,CAAgBF,cAAhB,CAA+BC,IAA/B,EAAqCC,MAArC;AACD,CAFD;;AAIArB,QAAQ,CAACsB,qBAAT,GAAiC,YAAY;AAC3CtB,EAAAA,QAAQ,CAACqB,MAAT,CAAgBC,qBAAhB;AACD,CAFD","sourcesContent":["'use strict';\n/**\n * Inquirer.js\n * A collection of common interactive command line user interfaces.\n */\n\nvar inquirer = module.exports;\n\n/**\n * Client interfaces\n */\n\ninquirer.prompts = {};\n\ninquirer.Separator = require('./objects/separator');\n\ninquirer.ui = {\n  BottomBar: require('./ui/bottom-bar'),\n  Prompt: require('./ui/prompt'),\n};\n\n/**\n * Create a new self-contained prompt module.\n */\ninquirer.createPromptModule = function (opt) {\n  var promptModule = function (questions, answers) {\n    var ui;\n    try {\n      ui = new inquirer.ui.Prompt(promptModule.prompts, opt);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    var promise = ui.run(questions, answers);\n\n    // Monkey patch the UI on the promise object so\n    // that it remains publicly accessible.\n    promise.ui = ui;\n\n    return promise;\n  };\n\n  promptModule.prompts = {};\n\n  /**\n   * Register a prompt type\n   * @param {String} name     Prompt type name\n   * @param {Function} prompt Prompt constructor\n   * @return {inquirer}\n   */\n\n  promptModule.registerPrompt = function (name, prompt) {\n    promptModule.prompts[name] = prompt;\n    return this;\n  };\n\n  /**\n   * Register the defaults provider prompts\n   */\n\n  promptModule.restoreDefaultPrompts = function () {\n    this.registerPrompt('list', require('./prompts/list'));\n    this.registerPrompt('input', require('./prompts/input'));\n    this.registerPrompt('number', require('./prompts/number'));\n    this.registerPrompt('confirm', require('./prompts/confirm'));\n    this.registerPrompt('rawlist', require('./prompts/rawlist'));\n    this.registerPrompt('expand', require('./prompts/expand'));\n    this.registerPrompt('checkbox', require('./prompts/checkbox'));\n    this.registerPrompt('password', require('./prompts/password'));\n    this.registerPrompt('editor', require('./prompts/editor'));\n  };\n\n  promptModule.restoreDefaultPrompts();\n\n  return promptModule;\n};\n\n/**\n * Public CLI helper interface\n * @param  {Array|Object|Rx.Observable} questions - Questions settings array\n * @param  {Function} cb - Callback being passed the user answers\n * @return {inquirer.ui.Prompt}\n */\n\ninquirer.prompt = inquirer.createPromptModule();\n\n// Expose helper functions on the top level for easiest usage by common users\ninquirer.registerPrompt = function (name, prompt) {\n  inquirer.prompt.registerPrompt(name, prompt);\n};\n\ninquirer.restoreDefaultPrompts = function () {\n  inquirer.prompt.restoreDefaultPrompts();\n};\n"]},"metadata":{},"sourceType":"script"}