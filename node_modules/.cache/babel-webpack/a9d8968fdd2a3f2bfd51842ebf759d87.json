{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar chalk = require('chalk');\n\nvar figures = require('figures');\n/**\n * Separator object\n * Used to space/separate choices group\n * @constructor\n * @param {String} line   Separation line content (facultative)\n */\n\n\nvar Separator = /*#__PURE__*/function () {\n  function Separator(line) {\n    _classCallCheck(this, Separator);\n\n    this.type = 'separator';\n    this.line = chalk.dim(line || new Array(15).join(figures.line));\n  }\n  /**\n   * Stringify separator\n   * @return {String} the separator display string\n   */\n\n\n  _createClass(Separator, [{\n    key: \"toString\",\n    value: function toString() {\n      return this.line;\n    }\n  }]);\n\n  return Separator;\n}();\n/**\n * Helper function returning false if object is a separator\n * @param  {Object} obj object to test against\n * @return {Boolean}    `false` if object is a separator\n */\n\n\nSeparator.exclude = function (obj) {\n  return obj.type !== 'separator';\n};\n\nmodule.exports = Separator;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/inquirer/lib/objects/separator.js"],"names":["chalk","require","figures","Separator","line","type","dim","Array","join","exclude","obj","module","exports"],"mappings":"AAAA;;;;;;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;;IAEME,S;AACJ,qBAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKC,IAAL,GAAY,WAAZ;AACA,SAAKD,IAAL,GAAYJ,KAAK,CAACM,GAAN,CAAUF,IAAI,IAAI,IAAIG,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmBN,OAAO,CAACE,IAA3B,CAAlB,CAAZ;AACD;AAED;AACF;AACA;AACA;;;;;WACE,oBAAW;AACT,aAAO,KAAKA,IAAZ;AACD;;;;;AAGH;AACA;AACA;AACA;AACA;;;AAEAD,SAAS,CAACM,OAAV,GAAoB,UAAUC,GAAV,EAAe;AACjC,SAAOA,GAAG,CAACL,IAAJ,KAAa,WAApB;AACD,CAFD;;AAIAM,MAAM,CAACC,OAAP,GAAiBT,SAAjB","sourcesContent":["'use strict';\nvar chalk = require('chalk');\nvar figures = require('figures');\n\n/**\n * Separator object\n * Used to space/separate choices group\n * @constructor\n * @param {String} line   Separation line content (facultative)\n */\n\nclass Separator {\n  constructor(line) {\n    this.type = 'separator';\n    this.line = chalk.dim(line || new Array(15).join(figures.line));\n  }\n\n  /**\n   * Stringify separator\n   * @return {String} the separator display string\n   */\n  toString() {\n    return this.line;\n  }\n}\n\n/**\n * Helper function returning false if object is a separator\n * @param  {Object} obj object to test against\n * @return {Boolean}    `false` if object is a separator\n */\n\nSeparator.exclude = function (obj) {\n  return obj.type !== 'separator';\n};\n\nmodule.exports = Separator;\n"]},"metadata":{},"sourceType":"script"}