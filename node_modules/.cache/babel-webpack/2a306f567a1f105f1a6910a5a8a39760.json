{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar ConstDependency = require(\"./dependencies/ConstDependency\");\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n\nvar UseStrictPlugin = /*#__PURE__*/function () {\n  function UseStrictPlugin() {\n    _classCallCheck(this, UseStrictPlugin);\n  }\n\n  _createClass(UseStrictPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * @param {Compiler} compiler Webpack Compiler\n     * @returns {void}\n     */\n    function apply(compiler) {\n      compiler.hooks.compilation.tap(\"UseStrictPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n\n        var handler = function handler(parser) {\n          parser.hooks.program.tap(\"UseStrictPlugin\", function (ast) {\n            var firstNode = ast.body[0];\n\n            if (firstNode && firstNode.type === \"ExpressionStatement\" && firstNode.expression.type === \"Literal\" && firstNode.expression.value === \"use strict\") {\n              // Remove \"use strict\" expression. It will be added later by the renderer again.\n              // This is necessary in order to not break the strict mode when webpack prepends code.\n              // @see https://github.com/webpack/webpack/issues/1970\n              var dep = new ConstDependency(\"\", firstNode.range);\n              dep.loc = firstNode.loc;\n              parser.state.current.addDependency(dep);\n              parser.state.module.buildInfo.strict = true;\n            }\n          });\n        };\n\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"UseStrictPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"UseStrictPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"UseStrictPlugin\", handler);\n      });\n    }\n  }]);\n\n  return UseStrictPlugin;\n}();\n\nmodule.exports = UseStrictPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/UseStrictPlugin.js"],"names":["ConstDependency","require","UseStrictPlugin","compiler","hooks","compilation","tap","normalModuleFactory","handler","parser","program","ast","firstNode","body","type","expression","value","dep","range","loc","state","current","addDependency","module","buildInfo","strict","for","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,IAAMA,eAAe,GAAGC,OAAO,CAAC,gCAAD,CAA/B;AAEA;;;IAEMC,e;;;;;;;;AACL;AACD;AACA;AACA;AACC,mBAAMC,QAAN,EAAgB;AACfA,MAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,iBADD,EAEC,UAACD,WAAD,QAA0C;AAAA,YAA1BE,mBAA0B,QAA1BA,mBAA0B;;AACzC,YAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,MAAM,EAAI;AACzBA,UAAAA,MAAM,CAACL,KAAP,CAAaM,OAAb,CAAqBJ,GAArB,CAAyB,iBAAzB,EAA4C,UAAAK,GAAG,EAAI;AAClD,gBAAMC,SAAS,GAAGD,GAAG,CAACE,IAAJ,CAAS,CAAT,CAAlB;;AACA,gBACCD,SAAS,IACTA,SAAS,CAACE,IAAV,KAAmB,qBADnB,IAEAF,SAAS,CAACG,UAAV,CAAqBD,IAArB,KAA8B,SAF9B,IAGAF,SAAS,CAACG,UAAV,CAAqBC,KAArB,KAA+B,YAJhC,EAKE;AACD;AACA;AACA;AACA,kBAAMC,GAAG,GAAG,IAAIjB,eAAJ,CAAoB,EAApB,EAAwBY,SAAS,CAACM,KAAlC,CAAZ;AACAD,cAAAA,GAAG,CAACE,GAAJ,GAAUP,SAAS,CAACO,GAApB;AACAV,cAAAA,MAAM,CAACW,KAAP,CAAaC,OAAb,CAAqBC,aAArB,CAAmCL,GAAnC;AACAR,cAAAA,MAAM,CAACW,KAAP,CAAaG,MAAb,CAAoBC,SAApB,CAA8BC,MAA9B,GAAuC,IAAvC;AACA;AACD,WAhBD;AAiBA,SAlBD;;AAoBAlB,QAAAA,mBAAmB,CAACH,KAApB,CAA0BK,MAA1B,CACEiB,GADF,CACM,iBADN,EAEEpB,GAFF,CAEM,iBAFN,EAEyBE,OAFzB;AAGAD,QAAAA,mBAAmB,CAACH,KAApB,CAA0BK,MAA1B,CACEiB,GADF,CACM,oBADN,EAEEpB,GAFF,CAEM,iBAFN,EAEyBE,OAFzB;AAGAD,QAAAA,mBAAmB,CAACH,KAApB,CAA0BK,MAA1B,CACEiB,GADF,CACM,gBADN,EAEEpB,GAFF,CAEM,iBAFN,EAEyBE,OAFzB;AAGA,OAhCF;AAkCA;;;;;;AAGFe,MAAM,CAACI,OAAP,GAAiBzB,eAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass UseStrictPlugin {\n\t/**\n\t * @param {Compiler} compiler Webpack Compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"UseStrictPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst handler = parser => {\n\t\t\t\t\tparser.hooks.program.tap(\"UseStrictPlugin\", ast => {\n\t\t\t\t\t\tconst firstNode = ast.body[0];\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tfirstNode &&\n\t\t\t\t\t\t\tfirstNode.type === \"ExpressionStatement\" &&\n\t\t\t\t\t\t\tfirstNode.expression.type === \"Literal\" &&\n\t\t\t\t\t\t\tfirstNode.expression.value === \"use strict\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Remove \"use strict\" expression. It will be added later by the renderer again.\n\t\t\t\t\t\t\t// This is necessary in order to not break the strict mode when webpack prepends code.\n\t\t\t\t\t\t\t// @see https://github.com/webpack/webpack/issues/1970\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", firstNode.range);\n\t\t\t\t\t\t\tdep.loc = firstNode.loc;\n\t\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\t\tparser.state.module.buildInfo.strict = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"UseStrictPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"UseStrictPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"UseStrictPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = UseStrictPlugin;\n"]},"metadata":{},"sourceType":"script"}