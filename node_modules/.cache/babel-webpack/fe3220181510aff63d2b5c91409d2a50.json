{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// tslint:disable\n// TODO: cleanup this file, it's copied as is from Angular CLI.\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScriptsWebpackPlugin = void 0;\n\nvar webpack_sources_1 = require(\"webpack-sources\");\n\nvar loader_utils_1 = require(\"loader-utils\");\n\nvar path = require(\"path\");\n\nvar webpack_version_1 = require(\"../../utils/webpack-version\");\n\nvar Chunk = require('webpack/lib/Chunk');\n\nvar EntryPoint = require('webpack/lib/Entrypoint');\n\nfunction addDependencies(compilation, scripts) {\n  var _iterator = _createForOfIteratorHelper(scripts),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var script = _step.value;\n      compilation.fileDependencies.add(script);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nfunction hook(compiler, action) {\n  compiler.hooks.thisCompilation.tap('scripts-webpack-plugin', function (compilation) {\n    compilation.hooks.additionalAssets.tapAsync('scripts-webpack-plugin', function (callback) {\n      return action(compilation, callback);\n    });\n  });\n}\n\nvar ScriptsWebpackPlugin = /*#__PURE__*/function () {\n  function ScriptsWebpackPlugin() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ScriptsWebpackPlugin);\n\n    this.options = options;\n  }\n\n  _createClass(ScriptsWebpackPlugin, [{\n    key: \"shouldSkip\",\n    value: function shouldSkip(compilation, scripts) {\n      if (this._lastBuildTime == undefined) {\n        this._lastBuildTime = Date.now();\n        return false;\n      }\n\n      for (var i = 0; i < scripts.length; i++) {\n        var scriptTime = compilation.fileTimestamps.get(scripts[i]);\n\n        if (!scriptTime || scriptTime > this._lastBuildTime) {\n          this._lastBuildTime = Date.now();\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_insertOutput\",\n    value: function _insertOutput(compilation, _ref) {\n      var filename = _ref.filename,\n          source = _ref.source;\n      var cached = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var chunk = new Chunk(this.options.name);\n      chunk.rendered = !cached;\n      chunk.id = this.options.name;\n      chunk.ids = [chunk.id];\n\n      if (webpack_version_1.isWebpackFiveOrHigher()) {\n        chunk.files.add(filename);\n      } else {\n        chunk.files.push(filename);\n      }\n\n      var entrypoint = new EntryPoint(this.options.name);\n      entrypoint.pushChunk(chunk);\n      chunk.addGroup(entrypoint);\n      compilation.entrypoints.set(this.options.name, entrypoint);\n      compilation.chunks.push(chunk);\n      compilation.assets[filename] = source;\n    }\n  }, {\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      if (!this.options.scripts || this.options.scripts.length === 0) {\n        return;\n      }\n\n      var scripts = this.options.scripts.filter(function (script) {\n        return !!script;\n      }).map(function (script) {\n        return path.resolve(_this.options.basePath || '', script);\n      });\n      hook(compiler, function (compilation, callback) {\n        if (_this.shouldSkip(compilation, scripts)) {\n          if (_this._cachedOutput) {\n            _this._insertOutput(compilation, _this._cachedOutput, true);\n          }\n\n          addDependencies(compilation, scripts);\n          callback();\n          return;\n        }\n\n        var sourceGetters = scripts.map(function (fullPath) {\n          return new Promise(function (resolve, reject) {\n            compilation.inputFileSystem.readFile(fullPath, function (err, data) {\n              if (err) {\n                reject(err);\n                return;\n              }\n\n              var content = data.toString();\n              var source;\n\n              if (_this.options.sourceMap) {\n                // TODO: Look for source map file (for '.min' scripts, etc.)\n                var adjustedPath = fullPath;\n\n                if (_this.options.basePath) {\n                  adjustedPath = path.relative(_this.options.basePath, fullPath);\n                }\n\n                source = new webpack_sources_1.OriginalSource(content, adjustedPath);\n              } else {\n                source = new webpack_sources_1.RawSource(content);\n              }\n\n              resolve(source);\n            });\n          });\n        });\n        Promise.all(sourceGetters).then(function (sources) {\n          var concatSource = new webpack_sources_1.ConcatSource();\n          sources.forEach(function (source) {\n            concatSource.add(source);\n            concatSource.add('\\n;');\n          });\n          var combinedSource = new webpack_sources_1.CachedSource(concatSource);\n          var filename = loader_utils_1.interpolateName({\n            resourcePath: 'scripts.js'\n          }, _this.options.filename, {\n            content: combinedSource.source()\n          });\n          var output = {\n            filename: filename,\n            source: combinedSource\n          };\n\n          _this._insertOutput(compilation, output);\n\n          _this._cachedOutput = output;\n          addDependencies(compilation, scripts);\n          callback();\n        }).catch(function (err) {\n          return callback(err);\n        });\n      });\n    }\n  }]);\n\n  return ScriptsWebpackPlugin;\n}();\n\nexports.ScriptsWebpackPlugin = ScriptsWebpackPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/src/webpack/plugins/scripts-webpack-plugin.js"],"names":["Object","defineProperty","exports","value","ScriptsWebpackPlugin","webpack_sources_1","require","loader_utils_1","path","webpack_version_1","Chunk","EntryPoint","addDependencies","compilation","scripts","script","fileDependencies","add","hook","compiler","action","hooks","thisCompilation","tap","additionalAssets","tapAsync","callback","options","_lastBuildTime","undefined","Date","now","i","length","scriptTime","fileTimestamps","get","filename","source","cached","chunk","name","rendered","id","ids","isWebpackFiveOrHigher","files","push","entrypoint","pushChunk","addGroup","entrypoints","set","chunks","assets","filter","map","resolve","basePath","shouldSkip","_cachedOutput","_insertOutput","sourceGetters","fullPath","Promise","reject","inputFileSystem","readFile","err","data","content","toString","sourceMap","adjustedPath","relative","OriginalSource","RawSource","all","then","sources","concatSource","ConcatSource","forEach","combinedSource","CachedSource","interpolateName","resourcePath","output","catch"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// tslint:disable\n// TODO: cleanup this file, it's copied as is from Angular CLI.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScriptsWebpackPlugin = void 0;\nconst webpack_sources_1 = require(\"webpack-sources\");\nconst loader_utils_1 = require(\"loader-utils\");\nconst path = require(\"path\");\nconst webpack_version_1 = require(\"../../utils/webpack-version\");\nconst Chunk = require('webpack/lib/Chunk');\nconst EntryPoint = require('webpack/lib/Entrypoint');\nfunction addDependencies(compilation, scripts) {\n    for (const script of scripts) {\n        compilation.fileDependencies.add(script);\n    }\n}\nfunction hook(compiler, action) {\n    compiler.hooks.thisCompilation.tap('scripts-webpack-plugin', (compilation) => {\n        compilation.hooks.additionalAssets.tapAsync('scripts-webpack-plugin', (callback) => action(compilation, callback));\n    });\n}\nclass ScriptsWebpackPlugin {\n    constructor(options = {}) {\n        this.options = options;\n    }\n    shouldSkip(compilation, scripts) {\n        if (this._lastBuildTime == undefined) {\n            this._lastBuildTime = Date.now();\n            return false;\n        }\n        for (let i = 0; i < scripts.length; i++) {\n            const scriptTime = compilation.fileTimestamps.get(scripts[i]);\n            if (!scriptTime || scriptTime > this._lastBuildTime) {\n                this._lastBuildTime = Date.now();\n                return false;\n            }\n        }\n        return true;\n    }\n    _insertOutput(compilation, { filename, source }, cached = false) {\n        const chunk = new Chunk(this.options.name);\n        chunk.rendered = !cached;\n        chunk.id = this.options.name;\n        chunk.ids = [chunk.id];\n        if (webpack_version_1.isWebpackFiveOrHigher()) {\n            chunk.files.add(filename);\n        }\n        else {\n            chunk.files.push(filename);\n        }\n        const entrypoint = new EntryPoint(this.options.name);\n        entrypoint.pushChunk(chunk);\n        chunk.addGroup(entrypoint);\n        compilation.entrypoints.set(this.options.name, entrypoint);\n        compilation.chunks.push(chunk);\n        compilation.assets[filename] = source;\n    }\n    apply(compiler) {\n        if (!this.options.scripts || this.options.scripts.length === 0) {\n            return;\n        }\n        const scripts = this.options.scripts\n            .filter(script => !!script)\n            .map(script => path.resolve(this.options.basePath || '', script));\n        hook(compiler, (compilation, callback) => {\n            if (this.shouldSkip(compilation, scripts)) {\n                if (this._cachedOutput) {\n                    this._insertOutput(compilation, this._cachedOutput, true);\n                }\n                addDependencies(compilation, scripts);\n                callback();\n                return;\n            }\n            const sourceGetters = scripts.map(fullPath => {\n                return new Promise((resolve, reject) => {\n                    compilation.inputFileSystem.readFile(fullPath, (err, data) => {\n                        if (err) {\n                            reject(err);\n                            return;\n                        }\n                        const content = data.toString();\n                        let source;\n                        if (this.options.sourceMap) {\n                            // TODO: Look for source map file (for '.min' scripts, etc.)\n                            let adjustedPath = fullPath;\n                            if (this.options.basePath) {\n                                adjustedPath = path.relative(this.options.basePath, fullPath);\n                            }\n                            source = new webpack_sources_1.OriginalSource(content, adjustedPath);\n                        }\n                        else {\n                            source = new webpack_sources_1.RawSource(content);\n                        }\n                        resolve(source);\n                    });\n                });\n            });\n            Promise.all(sourceGetters)\n                .then(sources => {\n                const concatSource = new webpack_sources_1.ConcatSource();\n                sources.forEach(source => {\n                    concatSource.add(source);\n                    concatSource.add('\\n;');\n                });\n                const combinedSource = new webpack_sources_1.CachedSource(concatSource);\n                const filename = loader_utils_1.interpolateName({ resourcePath: 'scripts.js' }, this.options.filename, { content: combinedSource.source() });\n                const output = { filename, source: combinedSource };\n                this._insertOutput(compilation, output);\n                this._cachedOutput = output;\n                addDependencies(compilation, scripts);\n                callback();\n            })\n                .catch((err) => callback(err));\n        });\n    }\n}\nexports.ScriptsWebpackPlugin = ScriptsWebpackPlugin;\n"]},"metadata":{},"sourceType":"script"}