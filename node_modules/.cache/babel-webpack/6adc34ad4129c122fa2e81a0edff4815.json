{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findResources = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ts = require(\"typescript\");\n\nvar ast_helpers_1 = require(\"./ast_helpers\");\n\nvar replace_resources_1 = require(\"./replace_resources\");\n\nfunction findResources(sourceFile) {\n  var resources = [];\n  var decorators = ast_helpers_1.collectDeepNodes(sourceFile, ts.SyntaxKind.Decorator);\n\n  var _iterator = _createForOfIteratorHelper(decorators),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var node = _step.value;\n\n      if (!ts.isCallExpression(node.expression)) {\n        continue;\n      }\n\n      var decoratorFactory = node.expression;\n      var args = decoratorFactory.arguments;\n\n      if (args.length !== 1 || !ts.isObjectLiteralExpression(args[0])) {\n        // Unsupported component metadata\n        continue;\n      }\n\n      ts.visitNodes(args[0].properties, function (node) {\n        if (!ts.isPropertyAssignment(node) || ts.isComputedPropertyName(node.name)) {\n          return node;\n        }\n\n        var name = node.name.text;\n\n        switch (name) {\n          case 'templateUrl':\n            var url = replace_resources_1.getResourceUrl(node.initializer);\n\n            if (url) {\n              resources.push(url);\n            }\n\n            break;\n\n          case 'styleUrls':\n            if (!ts.isArrayLiteralExpression(node.initializer)) {\n              return node;\n            }\n\n            ts.visitNodes(node.initializer.elements, function (node) {\n              var url = replace_resources_1.getResourceUrl(node);\n\n              if (url) {\n                resources.push(url);\n              }\n\n              return node;\n            });\n            break;\n        }\n\n        return node;\n      });\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return resources;\n}\n\nexports.findResources = findResources;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@ngtools/webpack/src/transformers/find_resources.js"],"names":["Object","defineProperty","exports","value","findResources","ts","require","ast_helpers_1","replace_resources_1","sourceFile","resources","decorators","collectDeepNodes","SyntaxKind","Decorator","node","isCallExpression","expression","decoratorFactory","args","arguments","length","isObjectLiteralExpression","visitNodes","properties","isPropertyAssignment","isComputedPropertyName","name","text","url","getResourceUrl","initializer","push","isArrayLiteralExpression","elements"],"mappings":"AAAA;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwB,KAAK,CAA7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,EAAE,GAAGC,OAAO,CAAC,YAAD,CAAlB;;AACA,IAAMC,aAAa,GAAGD,OAAO,CAAC,eAAD,CAA7B;;AACA,IAAME,mBAAmB,GAAGF,OAAO,CAAC,qBAAD,CAAnC;;AACA,SAASF,aAAT,CAAuBK,UAAvB,EAAmC;AAC/B,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAMC,UAAU,GAAGJ,aAAa,CAACK,gBAAd,CAA+BH,UAA/B,EAA2CJ,EAAE,CAACQ,UAAH,CAAcC,SAAzD,CAAnB;;AAF+B,6CAGZH,UAHY;AAAA;;AAAA;AAG/B,wDAA+B;AAAA,UAApBI,IAAoB;;AAC3B,UAAI,CAACV,EAAE,CAACW,gBAAH,CAAoBD,IAAI,CAACE,UAAzB,CAAL,EAA2C;AACvC;AACH;;AACD,UAAMC,gBAAgB,GAAGH,IAAI,CAACE,UAA9B;AACA,UAAME,IAAI,GAAGD,gBAAgB,CAACE,SAA9B;;AACA,UAAID,IAAI,CAACE,MAAL,KAAgB,CAAhB,IAAqB,CAAChB,EAAE,CAACiB,yBAAH,CAA6BH,IAAI,CAAC,CAAD,CAAjC,CAA1B,EAAiE;AAC7D;AACA;AACH;;AACDd,MAAAA,EAAE,CAACkB,UAAH,CAAcJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,UAAtB,EAAkC,UAACT,IAAD,EAAU;AACxC,YAAI,CAACV,EAAE,CAACoB,oBAAH,CAAwBV,IAAxB,CAAD,IAAkCV,EAAE,CAACqB,sBAAH,CAA0BX,IAAI,CAACY,IAA/B,CAAtC,EAA4E;AACxE,iBAAOZ,IAAP;AACH;;AACD,YAAMY,IAAI,GAAGZ,IAAI,CAACY,IAAL,CAAUC,IAAvB;;AACA,gBAAQD,IAAR;AACI,eAAK,aAAL;AACI,gBAAME,GAAG,GAAGrB,mBAAmB,CAACsB,cAApB,CAAmCf,IAAI,CAACgB,WAAxC,CAAZ;;AACA,gBAAIF,GAAJ,EAAS;AACLnB,cAAAA,SAAS,CAACsB,IAAV,CAAeH,GAAf;AACH;;AACD;;AACJ,eAAK,WAAL;AACI,gBAAI,CAACxB,EAAE,CAAC4B,wBAAH,CAA4BlB,IAAI,CAACgB,WAAjC,CAAL,EAAoD;AAChD,qBAAOhB,IAAP;AACH;;AACDV,YAAAA,EAAE,CAACkB,UAAH,CAAcR,IAAI,CAACgB,WAAL,CAAiBG,QAA/B,EAAyC,UAACnB,IAAD,EAAU;AAC/C,kBAAMc,GAAG,GAAGrB,mBAAmB,CAACsB,cAApB,CAAmCf,IAAnC,CAAZ;;AACA,kBAAIc,GAAJ,EAAS;AACLnB,gBAAAA,SAAS,CAACsB,IAAV,CAAeH,GAAf;AACH;;AACD,qBAAOd,IAAP;AACH,aAND;AAOA;AAlBR;;AAoBA,eAAOA,IAAP;AACH,OA1BD;AA2BH;AAxC8B;AAAA;AAAA;AAAA;AAAA;;AAyC/B,SAAOL,SAAP;AACH;;AACDR,OAAO,CAACE,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findResources = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ts = require(\"typescript\");\nconst ast_helpers_1 = require(\"./ast_helpers\");\nconst replace_resources_1 = require(\"./replace_resources\");\nfunction findResources(sourceFile) {\n    const resources = [];\n    const decorators = ast_helpers_1.collectDeepNodes(sourceFile, ts.SyntaxKind.Decorator);\n    for (const node of decorators) {\n        if (!ts.isCallExpression(node.expression)) {\n            continue;\n        }\n        const decoratorFactory = node.expression;\n        const args = decoratorFactory.arguments;\n        if (args.length !== 1 || !ts.isObjectLiteralExpression(args[0])) {\n            // Unsupported component metadata\n            continue;\n        }\n        ts.visitNodes(args[0].properties, (node) => {\n            if (!ts.isPropertyAssignment(node) || ts.isComputedPropertyName(node.name)) {\n                return node;\n            }\n            const name = node.name.text;\n            switch (name) {\n                case 'templateUrl':\n                    const url = replace_resources_1.getResourceUrl(node.initializer);\n                    if (url) {\n                        resources.push(url);\n                    }\n                    break;\n                case 'styleUrls':\n                    if (!ts.isArrayLiteralExpression(node.initializer)) {\n                        return node;\n                    }\n                    ts.visitNodes(node.initializer.elements, (node) => {\n                        const url = replace_resources_1.getResourceUrl(node);\n                        if (url) {\n                            resources.push(url);\n                        }\n                        return node;\n                    });\n                    break;\n            }\n            return node;\n        });\n    }\n    return resources;\n}\nexports.findResources = findResources;\n"]},"metadata":{},"sourceType":"script"}