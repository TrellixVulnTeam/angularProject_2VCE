{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _require = require(\"source-map\"),\n    SourceNode = _require.SourceNode,\n    SourceMapConsumer = _require.SourceMapConsumer;\n\nvar _require2 = require(\"source-list-map\"),\n    SourceListMap = _require2.SourceListMap,\n    fromStringWithSourceMap = _require2.fromStringWithSourceMap;\n\nexports.getSourceAndMap = function (source, options) {\n  if (options && options.columns === false) {\n    return source.listMap(options).toStringWithSourceMap({\n      file: \"x\"\n    });\n  }\n\n  var res = source.node(options).toStringWithSourceMap({\n    file: \"x\"\n  });\n  return {\n    source: res.code,\n    map: res.map.toJSON()\n  };\n};\n\nexports.getMap = function (source, options) {\n  if (options && options.columns === false) {\n    return source.listMap(options).toStringWithSourceMap({\n      file: \"x\"\n    }).map;\n  }\n\n  return source.node(options).toStringWithSourceMap({\n    file: \"x\"\n  }).map.toJSON();\n};\n\nexports.getNode = function (source, options) {\n  if (typeof source.node === \"function\") {\n    return source.node(options);\n  } else {\n    var sourceAndMap = source.sourceAndMap(options);\n\n    if (sourceAndMap.map) {\n      return SourceNode.fromStringWithSourceMap(sourceAndMap.source, new SourceMapConsumer(sourceAndMap.map));\n    } else {\n      return new SourceNode(null, null, null, sourceAndMap.source);\n    }\n  }\n};\n\nexports.getListMap = function (source, options) {\n  if (typeof source.listMap === \"function\") {\n    return source.listMap(options);\n  } else {\n    var sourceAndMap = source.sourceAndMap(options);\n\n    if (sourceAndMap.map) {\n      return fromStringWithSourceMap(sourceAndMap.source, sourceAndMap.map);\n    } else {\n      return new SourceListMap(sourceAndMap.source);\n    }\n  }\n};","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/webpack-sources/lib/helpers.js"],"names":["require","SourceNode","SourceMapConsumer","SourceListMap","fromStringWithSourceMap","exports","getSourceAndMap","source","options","columns","listMap","toStringWithSourceMap","file","res","node","code","map","toJSON","getMap","getNode","sourceAndMap","getListMap"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,eAA0CA,OAAO,CAAC,YAAD,CAAjD;AAAA,IAAQC,UAAR,YAAQA,UAAR;AAAA,IAAoBC,iBAApB,YAAoBA,iBAApB;;AACA,gBAAmDF,OAAO,CAAC,iBAAD,CAA1D;AAAA,IAAQG,aAAR,aAAQA,aAAR;AAAA,IAAuBC,uBAAvB,aAAuBA,uBAAvB;;AAEAC,OAAO,CAACC,eAAR,GAA0B,UAACC,MAAD,EAASC,OAAT,EAAqB;AAC9C,MAAIA,OAAO,IAAIA,OAAO,CAACC,OAAR,KAAoB,KAAnC,EAA0C;AACzC,WAAOF,MAAM,CAACG,OAAP,CAAeF,OAAf,EAAwBG,qBAAxB,CAA8C;AACpDC,MAAAA,IAAI,EAAE;AAD8C,KAA9C,CAAP;AAGA;;AAED,MAAMC,GAAG,GAAGN,MAAM,CAACO,IAAP,CAAYN,OAAZ,EAAqBG,qBAArB,CAA2C;AACtDC,IAAAA,IAAI,EAAE;AADgD,GAA3C,CAAZ;AAGA,SAAO;AACNL,IAAAA,MAAM,EAAEM,GAAG,CAACE,IADN;AAENC,IAAAA,GAAG,EAAEH,GAAG,CAACG,GAAJ,CAAQC,MAAR;AAFC,GAAP;AAIA,CAdD;;AAgBAZ,OAAO,CAACa,MAAR,GAAiB,UAACX,MAAD,EAASC,OAAT,EAAqB;AACrC,MAAIA,OAAO,IAAIA,OAAO,CAACC,OAAR,KAAoB,KAAnC,EAA0C;AACzC,WAAOF,MAAM,CAACG,OAAP,CAAeF,OAAf,EAAwBG,qBAAxB,CAA8C;AACpDC,MAAAA,IAAI,EAAE;AAD8C,KAA9C,EAEJI,GAFH;AAGA;;AAED,SAAOT,MAAM,CACXO,IADK,CACAN,OADA,EAELG,qBAFK,CAEiB;AACtBC,IAAAA,IAAI,EAAE;AADgB,GAFjB,EAKLI,GALK,CAKDC,MALC,EAAP;AAMA,CAbD;;AAeAZ,OAAO,CAACc,OAAR,GAAkB,UAACZ,MAAD,EAASC,OAAT,EAAqB;AACtC,MAAI,OAAOD,MAAM,CAACO,IAAd,KAAuB,UAA3B,EAAuC;AACtC,WAAOP,MAAM,CAACO,IAAP,CAAYN,OAAZ,CAAP;AACA,GAFD,MAEO;AACN,QAAMY,YAAY,GAAGb,MAAM,CAACa,YAAP,CAAoBZ,OAApB,CAArB;;AACA,QAAIY,YAAY,CAACJ,GAAjB,EAAsB;AACrB,aAAOf,UAAU,CAACG,uBAAX,CACNgB,YAAY,CAACb,MADP,EAEN,IAAIL,iBAAJ,CAAsBkB,YAAY,CAACJ,GAAnC,CAFM,CAAP;AAIA,KALD,MAKO;AACN,aAAO,IAAIf,UAAJ,CAAe,IAAf,EAAqB,IAArB,EAA2B,IAA3B,EAAiCmB,YAAY,CAACb,MAA9C,CAAP;AACA;AACD;AACD,CAdD;;AAgBAF,OAAO,CAACgB,UAAR,GAAqB,UAACd,MAAD,EAASC,OAAT,EAAqB;AACzC,MAAI,OAAOD,MAAM,CAACG,OAAd,KAA0B,UAA9B,EAA0C;AACzC,WAAOH,MAAM,CAACG,OAAP,CAAeF,OAAf,CAAP;AACA,GAFD,MAEO;AACN,QAAMY,YAAY,GAAGb,MAAM,CAACa,YAAP,CAAoBZ,OAApB,CAArB;;AACA,QAAIY,YAAY,CAACJ,GAAjB,EAAsB;AACrB,aAAOZ,uBAAuB,CAACgB,YAAY,CAACb,MAAd,EAAsBa,YAAY,CAACJ,GAAnC,CAA9B;AACA,KAFD,MAEO;AACN,aAAO,IAAIb,aAAJ,CAAkBiB,YAAY,CAACb,MAA/B,CAAP;AACA;AACD;AACD,CAXD","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { SourceNode, SourceMapConsumer } = require(\"source-map\");\nconst { SourceListMap, fromStringWithSourceMap } = require(\"source-list-map\");\n\nexports.getSourceAndMap = (source, options) => {\n\tif (options && options.columns === false) {\n\t\treturn source.listMap(options).toStringWithSourceMap({\n\t\t\tfile: \"x\"\n\t\t});\n\t}\n\n\tconst res = source.node(options).toStringWithSourceMap({\n\t\tfile: \"x\"\n\t});\n\treturn {\n\t\tsource: res.code,\n\t\tmap: res.map.toJSON()\n\t};\n};\n\nexports.getMap = (source, options) => {\n\tif (options && options.columns === false) {\n\t\treturn source.listMap(options).toStringWithSourceMap({\n\t\t\tfile: \"x\"\n\t\t}).map;\n\t}\n\n\treturn source\n\t\t.node(options)\n\t\t.toStringWithSourceMap({\n\t\t\tfile: \"x\"\n\t\t})\n\t\t.map.toJSON();\n};\n\nexports.getNode = (source, options) => {\n\tif (typeof source.node === \"function\") {\n\t\treturn source.node(options);\n\t} else {\n\t\tconst sourceAndMap = source.sourceAndMap(options);\n\t\tif (sourceAndMap.map) {\n\t\t\treturn SourceNode.fromStringWithSourceMap(\n\t\t\t\tsourceAndMap.source,\n\t\t\t\tnew SourceMapConsumer(sourceAndMap.map)\n\t\t\t);\n\t\t} else {\n\t\t\treturn new SourceNode(null, null, null, sourceAndMap.source);\n\t\t}\n\t}\n};\n\nexports.getListMap = (source, options) => {\n\tif (typeof source.listMap === \"function\") {\n\t\treturn source.listMap(options);\n\t} else {\n\t\tconst sourceAndMap = source.sourceAndMap(options);\n\t\tif (sourceAndMap.map) {\n\t\t\treturn fromStringWithSourceMap(sourceAndMap.source, sourceAndMap.map);\n\t\t} else {\n\t\t\treturn new SourceListMap(sourceAndMap.source);\n\t\t}\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}