{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar RequireEnsureItemDependency = require(\"./RequireEnsureItemDependency\");\n\nvar RequireEnsureDependency = require(\"./RequireEnsureDependency\");\n\nvar NullFactory = require(\"../NullFactory\");\n\nvar RequireEnsureDependenciesBlockParserPlugin = require(\"./RequireEnsureDependenciesBlockParserPlugin\");\n\nvar ParserHelpers = require(\"../ParserHelpers\");\n\nvar RequireEnsurePlugin = /*#__PURE__*/function () {\n  function RequireEnsurePlugin() {\n    _classCallCheck(this, RequireEnsurePlugin);\n  }\n\n  _createClass(RequireEnsurePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.compilation.tap(\"RequireEnsurePlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(RequireEnsureItemDependency, normalModuleFactory);\n        compilation.dependencyTemplates.set(RequireEnsureItemDependency, new RequireEnsureItemDependency.Template());\n        compilation.dependencyFactories.set(RequireEnsureDependency, new NullFactory());\n        compilation.dependencyTemplates.set(RequireEnsureDependency, new RequireEnsureDependency.Template());\n\n        var handler = function handler(parser, parserOptions) {\n          if (parserOptions.requireEnsure !== undefined && !parserOptions.requireEnsure) return;\n          new RequireEnsureDependenciesBlockParserPlugin().apply(parser);\n          parser.hooks.evaluateTypeof.for(\"require.ensure\").tap(\"RequireEnsurePlugin\", ParserHelpers.evaluateToString(\"function\"));\n          parser.hooks.typeof.for(\"require.ensure\").tap(\"RequireEnsurePlugin\", ParserHelpers.toConstantDependency(parser, JSON.stringify(\"function\")));\n        };\n\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"RequireEnsurePlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"RequireEnsurePlugin\", handler);\n      });\n    }\n  }]);\n\n  return RequireEnsurePlugin;\n}();\n\nmodule.exports = RequireEnsurePlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/dependencies/RequireEnsurePlugin.js"],"names":["RequireEnsureItemDependency","require","RequireEnsureDependency","NullFactory","RequireEnsureDependenciesBlockParserPlugin","ParserHelpers","RequireEnsurePlugin","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","requireEnsure","undefined","apply","evaluateTypeof","for","evaluateToString","typeof","toConstantDependency","JSON","stringify","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,IAAMA,2BAA2B,GAAGC,OAAO,CAAC,+BAAD,CAA3C;;AACA,IAAMC,uBAAuB,GAAGD,OAAO,CAAC,2BAAD,CAAvC;;AAEA,IAAME,WAAW,GAAGF,OAAO,CAAC,gBAAD,CAA3B;;AAEA,IAAMG,0CAA0C,GAAGH,OAAO,CAAC,8CAAD,CAA1D;;AAEA,IAAMI,aAAa,GAAGJ,OAAO,CAAC,kBAAD,CAA7B;;IAEMK,mB;;;;;;;WACL,eAAMC,QAAN,EAAgB;AACfA,MAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,qBADD,EAEC,UAACD,WAAD,QAA0C;AAAA,YAA1BE,mBAA0B,QAA1BA,mBAA0B;AACzCF,QAAAA,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CACCb,2BADD,EAECW,mBAFD;AAIAF,QAAAA,WAAW,CAACK,mBAAZ,CAAgCD,GAAhC,CACCb,2BADD,EAEC,IAAIA,2BAA2B,CAACe,QAAhC,EAFD;AAKAN,QAAAA,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CACCX,uBADD,EAEC,IAAIC,WAAJ,EAFD;AAIAM,QAAAA,WAAW,CAACK,mBAAZ,CAAgCD,GAAhC,CACCX,uBADD,EAEC,IAAIA,uBAAuB,CAACa,QAA5B,EAFD;;AAKA,YAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAASC,aAAT,EAA2B;AAC1C,cACCA,aAAa,CAACC,aAAd,KAAgCC,SAAhC,IACA,CAACF,aAAa,CAACC,aAFhB,EAIC;AAED,cAAIf,0CAAJ,GAAiDiB,KAAjD,CAAuDJ,MAAvD;AACAA,UAAAA,MAAM,CAACT,KAAP,CAAac,cAAb,CACEC,GADF,CACM,gBADN,EAEEb,GAFF,CAGE,qBAHF,EAIEL,aAAa,CAACmB,gBAAd,CAA+B,UAA/B,CAJF;AAMAP,UAAAA,MAAM,CAACT,KAAP,CAAaiB,MAAb,CACEF,GADF,CACM,gBADN,EAEEb,GAFF,CAGE,qBAHF,EAIEL,aAAa,CAACqB,oBAAd,CACCT,MADD,EAECU,IAAI,CAACC,SAAL,CAAe,UAAf,CAFD,CAJF;AASA,SAvBD;;AAyBAjB,QAAAA,mBAAmB,CAACH,KAApB,CAA0BS,MAA1B,CACEM,GADF,CACM,iBADN,EAEEb,GAFF,CAEM,qBAFN,EAE6BM,OAF7B;AAGAL,QAAAA,mBAAmB,CAACH,KAApB,CAA0BS,MAA1B,CACEM,GADF,CACM,oBADN,EAEEb,GAFF,CAEM,qBAFN,EAE6BM,OAF7B;AAGA,OApDF;AAsDA;;;;;;AAEFa,MAAM,CAACC,OAAP,GAAiBxB,mBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireEnsureItemDependency = require(\"./RequireEnsureItemDependency\");\nconst RequireEnsureDependency = require(\"./RequireEnsureDependency\");\n\nconst NullFactory = require(\"../NullFactory\");\n\nconst RequireEnsureDependenciesBlockParserPlugin = require(\"./RequireEnsureDependenciesBlockParserPlugin\");\n\nconst ParserHelpers = require(\"../ParserHelpers\");\n\nclass RequireEnsurePlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"RequireEnsurePlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRequireEnsureItemDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireEnsureItemDependency,\n\t\t\t\t\tnew RequireEnsureItemDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRequireEnsureDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireEnsureDependency,\n\t\t\t\t\tnew RequireEnsureDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tparserOptions.requireEnsure !== undefined &&\n\t\t\t\t\t\t!parserOptions.requireEnsure\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew RequireEnsureDependenciesBlockParserPlugin().apply(parser);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"require.ensure\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"RequireEnsurePlugin\",\n\t\t\t\t\t\t\tParserHelpers.evaluateToString(\"function\")\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"require.ensure\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"RequireEnsurePlugin\",\n\t\t\t\t\t\t\tParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tJSON.stringify(\"function\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"RequireEnsurePlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"RequireEnsurePlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = RequireEnsurePlugin;\n"]},"metadata":{},"sourceType":"script"}