{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _defineProperty = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _slicedToArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _webpack = _interopRequireDefault(require(\"webpack\"));\n\nvar _schemaUtils = require(\"schema-utils\");\n\nvar _CssModuleFactory = _interopRequireDefault(require(\"./CssModuleFactory\"));\n\nvar _CssDependencyTemplate = _interopRequireDefault(require(\"./CssDependencyTemplate\"));\n\nvar _CssDependency = _interopRequireDefault(require(\"./CssDependency\"));\n\nvar _pluginOptions = _interopRequireDefault(require(\"./plugin-options.json\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/* eslint-disable class-methods-use-this */\n// webpack 5 exposes the sources property to ensure the right version of webpack-sources is used\n\n\nvar _ref = // eslint-disable-next-line global-require\n_webpack.default.sources || require('webpack-sources'),\n    ConcatSource = _ref.ConcatSource,\n    SourceMapSource = _ref.SourceMapSource,\n    OriginalSource = _ref.OriginalSource;\n\nvar _webpack$default = _webpack.default,\n    Template = _webpack$default.Template,\n    createHash = _webpack$default.util.createHash;\nvar pluginName = 'mini-css-extract-plugin';\nvar REGEXP_CHUNKHASH = /\\[chunkhash(?::(\\d+))?\\]/i;\nvar REGEXP_CONTENTHASH = /\\[contenthash(?::(\\d+))?\\]/i;\nvar REGEXP_NAME = /\\[name\\]/i;\nvar DEFAULT_FILENAME = '[name].css';\n\nvar MiniCssExtractPlugin = /*#__PURE__*/function () {\n  function MiniCssExtractPlugin() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, MiniCssExtractPlugin);\n\n    (0, _schemaUtils.validate)(_pluginOptions.default, options, {\n      name: 'Mini CSS Extract Plugin',\n      baseDataPath: 'options'\n    });\n    var insert = typeof options.insert !== 'undefined' ? typeof options.insert === 'function' ? \"(\".concat(options.insert.toString(), \")(linkTag)\") : Template.asString([\"var target = document.querySelector(\\\"\".concat(options.insert, \"\\\");\"), \"target.parentNode.insertBefore(linkTag, target.nextSibling);\"]) : Template.asString(['document.head.appendChild(linkTag);']);\n    var attributes = typeof options.attributes === 'object' ? options.attributes : {}; // Todo in next major release set default to \"false\"\n\n    var linkType = options.linkType === true || typeof options.linkType === 'undefined' ? 'text/css' : options.linkType;\n    this.options = Object.assign({\n      filename: DEFAULT_FILENAME,\n      ignoreOrder: false\n    }, options);\n    this.runtimeOptions = {\n      insert: insert,\n      linkType: linkType\n    };\n    this.runtimeOptions.attributes = Template.asString(Object.entries(attributes).map(function (entry) {\n      var _entry = _slicedToArray(entry, 2),\n          key = _entry[0],\n          value = _entry[1];\n\n      return \"linkTag.setAttribute(\".concat(JSON.stringify(key), \", \").concat(JSON.stringify(value), \");\");\n    }));\n\n    if (!this.options.chunkFilename) {\n      var filename = this.options.filename;\n\n      if (typeof filename !== 'function') {\n        var hasName = filename.includes('[name]');\n        var hasId = filename.includes('[id]');\n        var hasChunkHash = filename.includes('[chunkhash]');\n        var hasContentHash = filename.includes('[contenthash]'); // Anything changing depending on chunk is fine\n\n        if (hasChunkHash || hasContentHash || hasName || hasId) {\n          this.options.chunkFilename = filename;\n        } else {\n          // Otherwise prefix \"[id].\" in front of the basename to make it changing\n          this.options.chunkFilename = filename.replace(/(^|\\/)([^/]*(?:\\?|$))/, '$1[id].$2');\n        }\n      } else {\n        this.options.chunkFilename = '[id].css';\n      }\n    }\n  }\n  /** @param {import(\"webpack\").Compiler} compiler */\n\n\n  _createClass(MiniCssExtractPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      var isWebpack4 = compiler.webpack ? false : typeof compiler.resolvers !== 'undefined';\n\n      if (!isWebpack4) {\n        var splitChunks = compiler.options.optimization.splitChunks;\n\n        if (splitChunks) {\n          if (splitChunks.defaultSizeTypes.includes('...')) {\n            splitChunks.defaultSizeTypes.push(_utils.MODULE_TYPE);\n          }\n        }\n      }\n\n      compiler.hooks.thisCompilation.tap(pluginName, function (compilation) {\n        compilation.dependencyFactories.set(_CssDependency.default, new _CssModuleFactory.default());\n        compilation.dependencyTemplates.set(_CssDependency.default, new _CssDependencyTemplate.default());\n\n        if (isWebpack4) {\n          compilation.mainTemplate.hooks.renderManifest.tap(pluginName, function (result, _ref2) {\n            var chunk = _ref2.chunk;\n            var chunkGraph = compilation.chunkGraph;\n            var renderedModules = Array.from(_this.getChunkModules(chunk, chunkGraph)).filter(function (module) {\n              return module.type === _utils.MODULE_TYPE;\n            });\n            var filenameTemplate = chunk.filenameTemplate || _this.options.filename;\n\n            if (renderedModules.length > 0) {\n              result.push({\n                render: function render() {\n                  return _this.renderContentAsset(compilation, chunk, renderedModules, compilation.runtimeTemplate.requestShortener);\n                },\n                filenameTemplate: filenameTemplate,\n                pathOptions: {\n                  chunk: chunk,\n                  contentHashType: _utils.MODULE_TYPE\n                },\n                identifier: \"\".concat(pluginName, \".\").concat(chunk.id),\n                hash: chunk.contentHash[_utils.MODULE_TYPE]\n              });\n            }\n          });\n          compilation.chunkTemplate.hooks.renderManifest.tap(pluginName, function (result, _ref3) {\n            var chunk = _ref3.chunk;\n            var chunkGraph = compilation.chunkGraph;\n            var renderedModules = Array.from(_this.getChunkModules(chunk, chunkGraph)).filter(function (module) {\n              return module.type === _utils.MODULE_TYPE;\n            });\n            var filenameTemplate = chunk.filenameTemplate || _this.options.chunkFilename;\n\n            if (renderedModules.length > 0) {\n              result.push({\n                render: function render() {\n                  return _this.renderContentAsset(compilation, chunk, renderedModules, compilation.runtimeTemplate.requestShortener);\n                },\n                filenameTemplate: filenameTemplate,\n                pathOptions: {\n                  chunk: chunk,\n                  contentHashType: _utils.MODULE_TYPE\n                },\n                identifier: \"\".concat(pluginName, \".\").concat(chunk.id),\n                hash: chunk.contentHash[_utils.MODULE_TYPE]\n              });\n            }\n          });\n        } else {\n          compilation.hooks.renderManifest.tap(pluginName, function (result, _ref4) {\n            var chunk = _ref4.chunk;\n            var chunkGraph = compilation.chunkGraph; // We don't need hot update chunks for css\n            // We will use the real asset instead to update\n\n            if (chunk instanceof _webpack.default.HotUpdateChunk) {\n              return;\n            }\n\n            var renderedModules = Array.from(_this.getChunkModules(chunk, chunkGraph)).filter(function (module) {\n              return module.type === _utils.MODULE_TYPE;\n            });\n            var filenameTemplate = chunk.canBeInitial() ? _this.options.filename : _this.options.chunkFilename;\n\n            if (renderedModules.length > 0) {\n              result.push({\n                render: function render() {\n                  return _this.renderContentAsset(compilation, chunk, renderedModules, compilation.runtimeTemplate.requestShortener);\n                },\n                filenameTemplate: filenameTemplate,\n                pathOptions: {\n                  chunk: chunk,\n                  contentHashType: _utils.MODULE_TYPE\n                },\n                identifier: \"\".concat(pluginName, \".\").concat(chunk.id),\n                hash: chunk.contentHash[_utils.MODULE_TYPE]\n              });\n            }\n          });\n        }\n        /*\n         * For webpack 5 this will be unneeded once the logic uses a RuntimeModule\n         * as the content of runtime modules is hashed and added to the chunk hash automatically\n         * */\n\n\n        if (isWebpack4) {\n          compilation.mainTemplate.hooks.hashForChunk.tap(pluginName, function (hash, chunk) {\n            var chunkFilename = _this.options.chunkFilename;\n\n            if (REGEXP_CHUNKHASH.test(chunkFilename)) {\n              hash.update(JSON.stringify(chunk.getChunkMaps(true).hash));\n            }\n\n            if (REGEXP_CONTENTHASH.test(chunkFilename)) {\n              hash.update(JSON.stringify(chunk.getChunkMaps(true).contentHash[_utils.MODULE_TYPE] || {}));\n            }\n\n            if (REGEXP_NAME.test(chunkFilename)) {\n              hash.update(JSON.stringify(chunk.getChunkMaps(true).name));\n            }\n          });\n        }\n\n        compilation.hooks.contentHash.tap(pluginName, function (chunk) {\n          var outputOptions = compilation.outputOptions,\n              chunkGraph = compilation.chunkGraph;\n          var hashFunction = outputOptions.hashFunction,\n              hashDigest = outputOptions.hashDigest,\n              hashDigestLength = outputOptions.hashDigestLength;\n          var hash = createHash(hashFunction);\n\n          var _iterator = _createForOfIteratorHelper(_this.getChunkModules(chunk, chunkGraph)),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var m = _step.value;\n\n              if (m.type === _utils.MODULE_TYPE) {\n                m.updateHash(hash, {\n                  chunkGraph: chunkGraph\n                });\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          var contentHash = chunk.contentHash;\n          contentHash[_utils.MODULE_TYPE] = hash.digest(hashDigest).substring(0, hashDigestLength);\n        });\n        var mainTemplate = compilation.mainTemplate;\n\n        if (isWebpack4) {\n          mainTemplate.hooks.localVars.tap(pluginName, function (source, chunk) {\n            var chunkMap = _this.getCssChunkObject(chunk, compilation);\n\n            if (Object.keys(chunkMap).length > 0) {\n              return Template.asString([source, '', '// object to store loaded CSS chunks', 'var installedCssChunks = {', Template.indent(chunk.ids.map(function (id) {\n                return \"\".concat(JSON.stringify(id), \": 0\");\n              }).join(',\\n')), '};']);\n            }\n\n            return source;\n          });\n          mainTemplate.hooks.requireEnsure.tap(pluginName, function (source, chunk, hash) {\n            var chunkMap = _this.getCssChunkObject(chunk, compilation);\n\n            if (Object.keys(chunkMap).length > 0) {\n              var chunkMaps = chunk.getChunkMaps();\n              var crossOriginLoading = mainTemplate.outputOptions.crossOriginLoading;\n              var linkHrefPath = mainTemplate.getAssetPath(JSON.stringify(_this.options.chunkFilename), {\n                hash: \"\\\" + \".concat(mainTemplate.renderCurrentHashCode(hash), \" + \\\"\"),\n                hashWithLength: function hashWithLength(length) {\n                  return \"\\\" + \".concat(mainTemplate.renderCurrentHashCode(hash, length), \" + \\\"\");\n                },\n                chunk: {\n                  id: '\" + chunkId + \"',\n                  hash: \"\\\" + \".concat(JSON.stringify(chunkMaps.hash), \"[chunkId] + \\\"\"),\n                  hashWithLength: function hashWithLength(length) {\n                    var shortChunkHashMap = Object.create(null);\n\n                    for (var _i = 0, _Object$keys = Object.keys(chunkMaps.hash); _i < _Object$keys.length; _i++) {\n                      var chunkId = _Object$keys[_i];\n\n                      if (typeof chunkMaps.hash[chunkId] === 'string') {\n                        shortChunkHashMap[chunkId] = chunkMaps.hash[chunkId].substring(0, length);\n                      }\n                    }\n\n                    return \"\\\" + \".concat(JSON.stringify(shortChunkHashMap), \"[chunkId] + \\\"\");\n                  },\n                  contentHash: _defineProperty({}, _utils.MODULE_TYPE, \"\\\" + \".concat(JSON.stringify(chunkMaps.contentHash[_utils.MODULE_TYPE]), \"[chunkId] + \\\"\")),\n                  contentHashWithLength: _defineProperty({}, _utils.MODULE_TYPE, function (length) {\n                    var shortContentHashMap = {};\n                    var contentHash = chunkMaps.contentHash[_utils.MODULE_TYPE];\n\n                    for (var _i2 = 0, _Object$keys2 = Object.keys(contentHash); _i2 < _Object$keys2.length; _i2++) {\n                      var chunkId = _Object$keys2[_i2];\n\n                      if (typeof contentHash[chunkId] === 'string') {\n                        shortContentHashMap[chunkId] = contentHash[chunkId].substring(0, length);\n                      }\n                    }\n\n                    return \"\\\" + \".concat(JSON.stringify(shortContentHashMap), \"[chunkId] + \\\"\");\n                  }),\n                  name: \"\\\" + (\".concat(JSON.stringify(chunkMaps.name), \"[chunkId]||chunkId) + \\\"\")\n                },\n                contentHashType: _utils.MODULE_TYPE\n              });\n              return Template.asString([source, '', \"// \".concat(pluginName, \" CSS loading\"), \"var cssChunks = \".concat(JSON.stringify(chunkMap), \";\"), 'if(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);', 'else if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {', Template.indent(['promises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {', Template.indent([\"var href = \".concat(linkHrefPath, \";\"), \"var fullhref = \".concat(mainTemplate.requireFn, \".p + href;\"), 'var existingLinkTags = document.getElementsByTagName(\"link\");', 'for(var i = 0; i < existingLinkTags.length; i++) {', Template.indent(['var tag = existingLinkTags[i];', 'var dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");', 'if(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();']), '}', 'var existingStyleTags = document.getElementsByTagName(\"style\");', 'for(var i = 0; i < existingStyleTags.length; i++) {', Template.indent(['var tag = existingStyleTags[i];', 'var dataHref = tag.getAttribute(\"data-href\");', 'if(dataHref === href || dataHref === fullhref) return resolve();']), '}', 'var linkTag = document.createElement(\"link\");', _this.runtimeOptions.attributes, 'linkTag.rel = \"stylesheet\";', _this.runtimeOptions.linkType ? \"linkTag.type = \".concat(JSON.stringify(_this.runtimeOptions.linkType), \";\") : '', 'var onLinkComplete = function (event) {', Template.indent(['// avoid mem leaks.', 'linkTag.onerror = linkTag.onload = null;', \"if (event.type === 'load') {\", Template.indent(['resolve();']), '} else {', Template.indent(['var request = event && event.target && event.target.href || fullhref;', 'var err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\\\n(\" + request + \")\");', 'err.code = \"CSS_CHUNK_LOAD_FAILED\";', 'err.request = request;', 'delete installedCssChunks[chunkId]', 'linkTag.parentNode.removeChild(linkTag)', 'reject(err);']), '}']), '};', 'linkTag.onerror = linkTag.onload = onLinkComplete;', 'linkTag.href = fullhref;', crossOriginLoading ? Template.asString([\"if (linkTag.href.indexOf(window.location.origin + '/') !== 0) {\", Template.indent(\"linkTag.crossOrigin = \".concat(JSON.stringify(crossOriginLoading), \";\")), '}']) : '', _this.runtimeOptions.insert]), '}).then(function() {', Template.indent(['installedCssChunks[chunkId] = 0;']), '}));']), '}']);\n            }\n\n            return source;\n          });\n        } else {\n          var enabledChunks = new WeakSet();\n\n          var handler = function handler(chunk, set) {\n            if (enabledChunks.has(chunk)) {\n              return;\n            }\n\n            enabledChunks.add(chunk); // eslint-disable-next-line global-require\n\n            var CssLoadingRuntimeModule = require('./CssLoadingRuntimeModule');\n\n            set.add(_webpack.default.RuntimeGlobals.publicPath);\n            compilation.addRuntimeModule(chunk, new _webpack.default.runtime.GetChunkFilenameRuntimeModule(_utils.MODULE_TYPE, 'mini-css', \"\".concat(_webpack.default.RuntimeGlobals.require, \".miniCssF\"), function (referencedChunk) {\n              return referencedChunk.canBeInitial() ? _this.options.filename : _this.options.chunkFilename;\n            }, true));\n            compilation.addRuntimeModule(chunk, new CssLoadingRuntimeModule(set, _this.runtimeOptions));\n          };\n\n          compilation.hooks.runtimeRequirementInTree.for(_webpack.default.RuntimeGlobals.ensureChunkHandlers).tap(pluginName, handler);\n          compilation.hooks.runtimeRequirementInTree.for(_webpack.default.RuntimeGlobals.hmrDownloadUpdateHandlers).tap(pluginName, handler);\n        }\n      });\n    }\n  }, {\n    key: \"getChunkModules\",\n    value: function getChunkModules(chunk, chunkGraph) {\n      return typeof chunkGraph !== 'undefined' ? chunkGraph.getOrderedChunkModulesIterable(chunk, _utils.compareModulesByIdentifier) : chunk.modulesIterable;\n    }\n  }, {\n    key: \"getCssChunkObject\",\n    value: function getCssChunkObject(mainChunk, compilation) {\n      var obj = {};\n      var chunkGraph = compilation.chunkGraph;\n\n      var _iterator2 = _createForOfIteratorHelper(mainChunk.getAllAsyncChunks()),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var chunk = _step2.value;\n\n          var _iterator3 = _createForOfIteratorHelper(this.getChunkModules(chunk, chunkGraph)),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var module = _step3.value;\n\n              if (module.type === _utils.MODULE_TYPE) {\n                obj[chunk.id] = 1;\n                break;\n              }\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return obj;\n    }\n  }, {\n    key: \"renderContentAsset\",\n    value: function renderContentAsset(compilation, chunk, modules, requestShortener) {\n      var _this2 = this;\n\n      var usedModules;\n\n      var _chunk$groupsIterable = _slicedToArray(chunk.groupsIterable, 1),\n          chunkGroup = _chunk$groupsIterable[0];\n\n      var moduleIndexFunctionName = typeof compilation.chunkGraph !== 'undefined' ? 'getModulePostOrderIndex' : 'getModuleIndex2';\n\n      if (typeof chunkGroup[moduleIndexFunctionName] === 'function') {\n        (function () {\n          // Store dependencies for modules\n          var moduleDependencies = new Map(modules.map(function (m) {\n            return [m, new Set()];\n          }));\n          var moduleDependenciesReasons = new Map(modules.map(function (m) {\n            return [m, new Map()];\n          })); // Get ordered list of modules per chunk group\n          // This loop also gathers dependencies from the ordered lists\n          // Lists are in reverse order to allow to use Array.pop()\n\n          var modulesByChunkGroup = Array.from(chunk.groupsIterable, function (cg) {\n            var sortedModules = modules.map(function (m) {\n              return {\n                module: m,\n                index: cg[moduleIndexFunctionName](m)\n              };\n            }) // eslint-disable-next-line no-undefined\n            .filter(function (item) {\n              return item.index !== undefined;\n            }).sort(function (a, b) {\n              return b.index - a.index;\n            }).map(function (item) {\n              return item.module;\n            });\n\n            for (var i = 0; i < sortedModules.length; i++) {\n              var set = moduleDependencies.get(sortedModules[i]);\n              var reasons = moduleDependenciesReasons.get(sortedModules[i]);\n\n              for (var j = i + 1; j < sortedModules.length; j++) {\n                var module = sortedModules[j];\n                set.add(module);\n                var reason = reasons.get(module) || new Set();\n                reason.add(cg);\n                reasons.set(module, reason);\n              }\n            }\n\n            return sortedModules;\n          }); // set with already included modules in correct order\n\n          usedModules = new Set();\n\n          var unusedModulesFilter = function unusedModulesFilter(m) {\n            return !usedModules.has(m);\n          };\n\n          while (usedModules.size < modules.length) {\n            var success = false;\n            var bestMatch = void 0;\n            var bestMatchDeps = void 0; // get first module where dependencies are fulfilled\n\n            var _iterator4 = _createForOfIteratorHelper(modulesByChunkGroup),\n                _step4;\n\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var list = _step4.value;\n\n                // skip and remove already added modules\n                while (list.length > 0 && usedModules.has(list[list.length - 1])) {\n                  list.pop();\n                } // skip empty lists\n\n\n                if (list.length !== 0) {\n                  var module = list[list.length - 1];\n                  var deps = moduleDependencies.get(module); // determine dependencies that are not yet included\n\n                  var failedDeps = Array.from(deps).filter(unusedModulesFilter); // store best match for fallback behavior\n\n                  if (!bestMatchDeps || bestMatchDeps.length > failedDeps.length) {\n                    bestMatch = list;\n                    bestMatchDeps = failedDeps;\n                  }\n\n                  if (failedDeps.length === 0) {\n                    // use this module and remove it from list\n                    usedModules.add(list.pop());\n                    success = true;\n                    break;\n                  }\n                }\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n\n            if (!success) {\n              (function () {\n                // no module found => there is a conflict\n                // use list with fewest failed deps\n                // and emit a warning\n                var fallbackModule = bestMatch.pop();\n\n                if (!_this2.options.ignoreOrder) {\n                  var reasons = moduleDependenciesReasons.get(fallbackModule);\n                  compilation.warnings.push(new Error([\"chunk \".concat(chunk.name || chunk.id, \" [\").concat(pluginName, \"]\"), 'Conflicting order. Following module has been added:', \" * \".concat(fallbackModule.readableIdentifier(requestShortener)), 'despite it was not able to fulfill desired ordering with these modules:'].concat(_toConsumableArray(bestMatchDeps.map(function (m) {\n                    var goodReasonsMap = moduleDependenciesReasons.get(m);\n                    var goodReasons = goodReasonsMap && goodReasonsMap.get(fallbackModule);\n                    var failedChunkGroups = Array.from(reasons.get(m), function (cg) {\n                      return cg.name;\n                    }).join(', ');\n                    var goodChunkGroups = goodReasons && Array.from(goodReasons, function (cg) {\n                      return cg.name;\n                    }).join(', ');\n                    return [\" * \".concat(m.readableIdentifier(requestShortener)), \"   - couldn't fulfill desired order of chunk group(s) \".concat(failedChunkGroups), goodChunkGroups && \"   - while fulfilling desired order of chunk group(s) \".concat(goodChunkGroups)].filter(Boolean).join('\\n');\n                  }))).join('\\n')));\n                }\n\n                usedModules.add(fallbackModule);\n              })();\n            }\n          }\n        })();\n      } else {\n        // fallback for older webpack versions\n        // (to avoid a breaking change)\n        // TODO remove this in next major version\n        // and increase minimum webpack version to 4.12.0\n        modules.sort(function (a, b) {\n          return a.index2 - b.index2;\n        });\n        usedModules = modules;\n      }\n\n      var source = new ConcatSource();\n      var externalsSource = new ConcatSource();\n\n      var _iterator5 = _createForOfIteratorHelper(usedModules),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var m = _step5.value;\n\n          if (/^@import url/.test(m.content)) {\n            // HACK for IE\n            // http://stackoverflow.com/a/14676665/1458162\n            var content = m.content;\n\n            if (m.media) {\n              // insert media into the @import\n              // this is rar\n              // TODO improve this and parse the CSS to support multiple medias\n              content = content.replace(/;|\\s*$/, m.media);\n            }\n\n            externalsSource.add(content);\n            externalsSource.add('\\n');\n          } else {\n            if (m.media) {\n              source.add(\"@media \".concat(m.media, \" {\\n\"));\n            }\n\n            if (m.sourceMap) {\n              source.add(new SourceMapSource(m.content, m.readableIdentifier(requestShortener), m.sourceMap));\n            } else {\n              source.add(new OriginalSource(m.content, m.readableIdentifier(requestShortener)));\n            }\n\n            source.add('\\n');\n\n            if (m.media) {\n              source.add('}\\n');\n            }\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      return new ConcatSource(externalsSource, source);\n    }\n  }]);\n\n  return MiniCssExtractPlugin;\n}();\n\nMiniCssExtractPlugin.loader = require.resolve('./loader');\nvar _default = MiniCssExtractPlugin;\nexports.default = _default;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/mini-css-extract-plugin/dist/index.js"],"names":["Object","defineProperty","exports","value","default","_webpack","_interopRequireDefault","require","_schemaUtils","_CssModuleFactory","_CssDependencyTemplate","_CssDependency","_pluginOptions","_utils","obj","__esModule","sources","ConcatSource","SourceMapSource","OriginalSource","Template","createHash","util","pluginName","REGEXP_CHUNKHASH","REGEXP_CONTENTHASH","REGEXP_NAME","DEFAULT_FILENAME","MiniCssExtractPlugin","options","validate","name","baseDataPath","insert","toString","asString","attributes","linkType","assign","filename","ignoreOrder","runtimeOptions","entries","map","entry","key","JSON","stringify","chunkFilename","hasName","includes","hasId","hasChunkHash","hasContentHash","replace","compiler","isWebpack4","webpack","resolvers","splitChunks","optimization","defaultSizeTypes","push","MODULE_TYPE","hooks","thisCompilation","tap","compilation","dependencyFactories","set","dependencyTemplates","mainTemplate","renderManifest","result","chunk","chunkGraph","renderedModules","Array","from","getChunkModules","filter","module","type","filenameTemplate","length","render","renderContentAsset","runtimeTemplate","requestShortener","pathOptions","contentHashType","identifier","id","hash","contentHash","chunkTemplate","HotUpdateChunk","canBeInitial","hashForChunk","test","update","getChunkMaps","outputOptions","hashFunction","hashDigest","hashDigestLength","m","updateHash","digest","substring","localVars","source","chunkMap","getCssChunkObject","keys","indent","ids","join","requireEnsure","chunkMaps","crossOriginLoading","linkHrefPath","getAssetPath","renderCurrentHashCode","hashWithLength","shortChunkHashMap","create","chunkId","contentHashWithLength","shortContentHashMap","requireFn","enabledChunks","WeakSet","handler","has","add","CssLoadingRuntimeModule","RuntimeGlobals","publicPath","addRuntimeModule","runtime","GetChunkFilenameRuntimeModule","referencedChunk","runtimeRequirementInTree","for","ensureChunkHandlers","hmrDownloadUpdateHandlers","getOrderedChunkModulesIterable","compareModulesByIdentifier","modulesIterable","mainChunk","getAllAsyncChunks","modules","usedModules","groupsIterable","chunkGroup","moduleIndexFunctionName","moduleDependencies","Map","Set","moduleDependenciesReasons","modulesByChunkGroup","cg","sortedModules","index","item","undefined","sort","a","b","i","get","reasons","j","reason","unusedModulesFilter","size","success","bestMatch","bestMatchDeps","list","pop","deps","failedDeps","fallbackModule","warnings","Error","readableIdentifier","goodReasonsMap","goodReasons","failedChunkGroups","goodChunkGroups","Boolean","index2","externalsSource","content","media","sourceMap","loader","resolve","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _webpack = _interopRequireDefault(require(\"webpack\"));\n\nvar _schemaUtils = require(\"schema-utils\");\n\nvar _CssModuleFactory = _interopRequireDefault(require(\"./CssModuleFactory\"));\n\nvar _CssDependencyTemplate = _interopRequireDefault(require(\"./CssDependencyTemplate\"));\n\nvar _CssDependency = _interopRequireDefault(require(\"./CssDependency\"));\n\nvar _pluginOptions = _interopRequireDefault(require(\"./plugin-options.json\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable class-methods-use-this */\n// webpack 5 exposes the sources property to ensure the right version of webpack-sources is used\nconst {\n  ConcatSource,\n  SourceMapSource,\n  OriginalSource\n} = // eslint-disable-next-line global-require\n_webpack.default.sources || require('webpack-sources');\n\nconst {\n  Template,\n  util: {\n    createHash\n  }\n} = _webpack.default;\nconst pluginName = 'mini-css-extract-plugin';\nconst REGEXP_CHUNKHASH = /\\[chunkhash(?::(\\d+))?\\]/i;\nconst REGEXP_CONTENTHASH = /\\[contenthash(?::(\\d+))?\\]/i;\nconst REGEXP_NAME = /\\[name\\]/i;\nconst DEFAULT_FILENAME = '[name].css';\n\nclass MiniCssExtractPlugin {\n  constructor(options = {}) {\n    (0, _schemaUtils.validate)(_pluginOptions.default, options, {\n      name: 'Mini CSS Extract Plugin',\n      baseDataPath: 'options'\n    });\n    const insert = typeof options.insert !== 'undefined' ? typeof options.insert === 'function' ? `(${options.insert.toString()})(linkTag)` : Template.asString([`var target = document.querySelector(\"${options.insert}\");`, `target.parentNode.insertBefore(linkTag, target.nextSibling);`]) : Template.asString(['document.head.appendChild(linkTag);']);\n    const attributes = typeof options.attributes === 'object' ? options.attributes : {}; // Todo in next major release set default to \"false\"\n\n    const linkType = options.linkType === true || typeof options.linkType === 'undefined' ? 'text/css' : options.linkType;\n    this.options = Object.assign({\n      filename: DEFAULT_FILENAME,\n      ignoreOrder: false\n    }, options);\n    this.runtimeOptions = {\n      insert,\n      linkType\n    };\n    this.runtimeOptions.attributes = Template.asString(Object.entries(attributes).map(entry => {\n      const [key, value] = entry;\n      return `linkTag.setAttribute(${JSON.stringify(key)}, ${JSON.stringify(value)});`;\n    }));\n\n    if (!this.options.chunkFilename) {\n      const {\n        filename\n      } = this.options;\n\n      if (typeof filename !== 'function') {\n        const hasName = filename.includes('[name]');\n        const hasId = filename.includes('[id]');\n        const hasChunkHash = filename.includes('[chunkhash]');\n        const hasContentHash = filename.includes('[contenthash]'); // Anything changing depending on chunk is fine\n\n        if (hasChunkHash || hasContentHash || hasName || hasId) {\n          this.options.chunkFilename = filename;\n        } else {\n          // Otherwise prefix \"[id].\" in front of the basename to make it changing\n          this.options.chunkFilename = filename.replace(/(^|\\/)([^/]*(?:\\?|$))/, '$1[id].$2');\n        }\n      } else {\n        this.options.chunkFilename = '[id].css';\n      }\n    }\n  }\n  /** @param {import(\"webpack\").Compiler} compiler */\n\n\n  apply(compiler) {\n    const isWebpack4 = compiler.webpack ? false : typeof compiler.resolvers !== 'undefined';\n\n    if (!isWebpack4) {\n      const {\n        splitChunks\n      } = compiler.options.optimization;\n\n      if (splitChunks) {\n        if (splitChunks.defaultSizeTypes.includes('...')) {\n          splitChunks.defaultSizeTypes.push(_utils.MODULE_TYPE);\n        }\n      }\n    }\n\n    compiler.hooks.thisCompilation.tap(pluginName, compilation => {\n      compilation.dependencyFactories.set(_CssDependency.default, new _CssModuleFactory.default());\n      compilation.dependencyTemplates.set(_CssDependency.default, new _CssDependencyTemplate.default());\n\n      if (isWebpack4) {\n        compilation.mainTemplate.hooks.renderManifest.tap(pluginName, (result, {\n          chunk\n        }) => {\n          const {\n            chunkGraph\n          } = compilation;\n          const renderedModules = Array.from(this.getChunkModules(chunk, chunkGraph)).filter(module => module.type === _utils.MODULE_TYPE);\n          const filenameTemplate = chunk.filenameTemplate || this.options.filename;\n\n          if (renderedModules.length > 0) {\n            result.push({\n              render: () => this.renderContentAsset(compilation, chunk, renderedModules, compilation.runtimeTemplate.requestShortener),\n              filenameTemplate,\n              pathOptions: {\n                chunk,\n                contentHashType: _utils.MODULE_TYPE\n              },\n              identifier: `${pluginName}.${chunk.id}`,\n              hash: chunk.contentHash[_utils.MODULE_TYPE]\n            });\n          }\n        });\n        compilation.chunkTemplate.hooks.renderManifest.tap(pluginName, (result, {\n          chunk\n        }) => {\n          const {\n            chunkGraph\n          } = compilation;\n          const renderedModules = Array.from(this.getChunkModules(chunk, chunkGraph)).filter(module => module.type === _utils.MODULE_TYPE);\n          const filenameTemplate = chunk.filenameTemplate || this.options.chunkFilename;\n\n          if (renderedModules.length > 0) {\n            result.push({\n              render: () => this.renderContentAsset(compilation, chunk, renderedModules, compilation.runtimeTemplate.requestShortener),\n              filenameTemplate,\n              pathOptions: {\n                chunk,\n                contentHashType: _utils.MODULE_TYPE\n              },\n              identifier: `${pluginName}.${chunk.id}`,\n              hash: chunk.contentHash[_utils.MODULE_TYPE]\n            });\n          }\n        });\n      } else {\n        compilation.hooks.renderManifest.tap(pluginName, (result, {\n          chunk\n        }) => {\n          const {\n            chunkGraph\n          } = compilation; // We don't need hot update chunks for css\n          // We will use the real asset instead to update\n\n          if (chunk instanceof _webpack.default.HotUpdateChunk) {\n            return;\n          }\n\n          const renderedModules = Array.from(this.getChunkModules(chunk, chunkGraph)).filter(module => module.type === _utils.MODULE_TYPE);\n          const filenameTemplate = chunk.canBeInitial() ? this.options.filename : this.options.chunkFilename;\n\n          if (renderedModules.length > 0) {\n            result.push({\n              render: () => this.renderContentAsset(compilation, chunk, renderedModules, compilation.runtimeTemplate.requestShortener),\n              filenameTemplate,\n              pathOptions: {\n                chunk,\n                contentHashType: _utils.MODULE_TYPE\n              },\n              identifier: `${pluginName}.${chunk.id}`,\n              hash: chunk.contentHash[_utils.MODULE_TYPE]\n            });\n          }\n        });\n      }\n      /*\n       * For webpack 5 this will be unneeded once the logic uses a RuntimeModule\n       * as the content of runtime modules is hashed and added to the chunk hash automatically\n       * */\n\n\n      if (isWebpack4) {\n        compilation.mainTemplate.hooks.hashForChunk.tap(pluginName, (hash, chunk) => {\n          const {\n            chunkFilename\n          } = this.options;\n\n          if (REGEXP_CHUNKHASH.test(chunkFilename)) {\n            hash.update(JSON.stringify(chunk.getChunkMaps(true).hash));\n          }\n\n          if (REGEXP_CONTENTHASH.test(chunkFilename)) {\n            hash.update(JSON.stringify(chunk.getChunkMaps(true).contentHash[_utils.MODULE_TYPE] || {}));\n          }\n\n          if (REGEXP_NAME.test(chunkFilename)) {\n            hash.update(JSON.stringify(chunk.getChunkMaps(true).name));\n          }\n        });\n      }\n\n      compilation.hooks.contentHash.tap(pluginName, chunk => {\n        const {\n          outputOptions,\n          chunkGraph\n        } = compilation;\n        const {\n          hashFunction,\n          hashDigest,\n          hashDigestLength\n        } = outputOptions;\n        const hash = createHash(hashFunction);\n\n        for (const m of this.getChunkModules(chunk, chunkGraph)) {\n          if (m.type === _utils.MODULE_TYPE) {\n            m.updateHash(hash, {\n              chunkGraph\n            });\n          }\n        }\n\n        const {\n          contentHash\n        } = chunk;\n        contentHash[_utils.MODULE_TYPE] = hash.digest(hashDigest).substring(0, hashDigestLength);\n      });\n      const {\n        mainTemplate\n      } = compilation;\n\n      if (isWebpack4) {\n        mainTemplate.hooks.localVars.tap(pluginName, (source, chunk) => {\n          const chunkMap = this.getCssChunkObject(chunk, compilation);\n\n          if (Object.keys(chunkMap).length > 0) {\n            return Template.asString([source, '', '// object to store loaded CSS chunks', 'var installedCssChunks = {', Template.indent(chunk.ids.map(id => `${JSON.stringify(id)}: 0`).join(',\\n')), '};']);\n          }\n\n          return source;\n        });\n        mainTemplate.hooks.requireEnsure.tap(pluginName, (source, chunk, hash) => {\n          const chunkMap = this.getCssChunkObject(chunk, compilation);\n\n          if (Object.keys(chunkMap).length > 0) {\n            const chunkMaps = chunk.getChunkMaps();\n            const {\n              crossOriginLoading\n            } = mainTemplate.outputOptions;\n            const linkHrefPath = mainTemplate.getAssetPath(JSON.stringify(this.options.chunkFilename), {\n              hash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n              hashWithLength: length => `\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`,\n              chunk: {\n                id: '\" + chunkId + \"',\n                hash: `\" + ${JSON.stringify(chunkMaps.hash)}[chunkId] + \"`,\n\n                hashWithLength(length) {\n                  const shortChunkHashMap = Object.create(null);\n\n                  for (const chunkId of Object.keys(chunkMaps.hash)) {\n                    if (typeof chunkMaps.hash[chunkId] === 'string') {\n                      shortChunkHashMap[chunkId] = chunkMaps.hash[chunkId].substring(0, length);\n                    }\n                  }\n\n                  return `\" + ${JSON.stringify(shortChunkHashMap)}[chunkId] + \"`;\n                },\n\n                contentHash: {\n                  [_utils.MODULE_TYPE]: `\" + ${JSON.stringify(chunkMaps.contentHash[_utils.MODULE_TYPE])}[chunkId] + \"`\n                },\n                contentHashWithLength: {\n                  [_utils.MODULE_TYPE]: length => {\n                    const shortContentHashMap = {};\n                    const contentHash = chunkMaps.contentHash[_utils.MODULE_TYPE];\n\n                    for (const chunkId of Object.keys(contentHash)) {\n                      if (typeof contentHash[chunkId] === 'string') {\n                        shortContentHashMap[chunkId] = contentHash[chunkId].substring(0, length);\n                      }\n                    }\n\n                    return `\" + ${JSON.stringify(shortContentHashMap)}[chunkId] + \"`;\n                  }\n                },\n                name: `\" + (${JSON.stringify(chunkMaps.name)}[chunkId]||chunkId) + \"`\n              },\n              contentHashType: _utils.MODULE_TYPE\n            });\n            return Template.asString([source, '', `// ${pluginName} CSS loading`, `var cssChunks = ${JSON.stringify(chunkMap)};`, 'if(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);', 'else if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {', Template.indent(['promises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {', Template.indent([`var href = ${linkHrefPath};`, `var fullhref = ${mainTemplate.requireFn}.p + href;`, 'var existingLinkTags = document.getElementsByTagName(\"link\");', 'for(var i = 0; i < existingLinkTags.length; i++) {', Template.indent(['var tag = existingLinkTags[i];', 'var dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");', 'if(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();']), '}', 'var existingStyleTags = document.getElementsByTagName(\"style\");', 'for(var i = 0; i < existingStyleTags.length; i++) {', Template.indent(['var tag = existingStyleTags[i];', 'var dataHref = tag.getAttribute(\"data-href\");', 'if(dataHref === href || dataHref === fullhref) return resolve();']), '}', 'var linkTag = document.createElement(\"link\");', this.runtimeOptions.attributes, 'linkTag.rel = \"stylesheet\";', this.runtimeOptions.linkType ? `linkTag.type = ${JSON.stringify(this.runtimeOptions.linkType)};` : '', 'var onLinkComplete = function (event) {', Template.indent(['// avoid mem leaks.', 'linkTag.onerror = linkTag.onload = null;', \"if (event.type === 'load') {\", Template.indent(['resolve();']), '} else {', Template.indent(['var request = event && event.target && event.target.href || fullhref;', 'var err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\\\n(\" + request + \")\");', 'err.code = \"CSS_CHUNK_LOAD_FAILED\";', 'err.request = request;', 'delete installedCssChunks[chunkId]', 'linkTag.parentNode.removeChild(linkTag)', 'reject(err);']), '}']), '};', 'linkTag.onerror = linkTag.onload = onLinkComplete;', 'linkTag.href = fullhref;', crossOriginLoading ? Template.asString([`if (linkTag.href.indexOf(window.location.origin + '/') !== 0) {`, Template.indent(`linkTag.crossOrigin = ${JSON.stringify(crossOriginLoading)};`), '}']) : '', this.runtimeOptions.insert]), '}).then(function() {', Template.indent(['installedCssChunks[chunkId] = 0;']), '}));']), '}']);\n          }\n\n          return source;\n        });\n      } else {\n        const enabledChunks = new WeakSet();\n\n        const handler = (chunk, set) => {\n          if (enabledChunks.has(chunk)) {\n            return;\n          }\n\n          enabledChunks.add(chunk); // eslint-disable-next-line global-require\n\n          const CssLoadingRuntimeModule = require('./CssLoadingRuntimeModule');\n\n          set.add(_webpack.default.RuntimeGlobals.publicPath);\n          compilation.addRuntimeModule(chunk, new _webpack.default.runtime.GetChunkFilenameRuntimeModule(_utils.MODULE_TYPE, 'mini-css', `${_webpack.default.RuntimeGlobals.require}.miniCssF`, referencedChunk => referencedChunk.canBeInitial() ? this.options.filename : this.options.chunkFilename, true));\n          compilation.addRuntimeModule(chunk, new CssLoadingRuntimeModule(set, this.runtimeOptions));\n        };\n\n        compilation.hooks.runtimeRequirementInTree.for(_webpack.default.RuntimeGlobals.ensureChunkHandlers).tap(pluginName, handler);\n        compilation.hooks.runtimeRequirementInTree.for(_webpack.default.RuntimeGlobals.hmrDownloadUpdateHandlers).tap(pluginName, handler);\n      }\n    });\n  }\n\n  getChunkModules(chunk, chunkGraph) {\n    return typeof chunkGraph !== 'undefined' ? chunkGraph.getOrderedChunkModulesIterable(chunk, _utils.compareModulesByIdentifier) : chunk.modulesIterable;\n  }\n\n  getCssChunkObject(mainChunk, compilation) {\n    const obj = {};\n    const {\n      chunkGraph\n    } = compilation;\n\n    for (const chunk of mainChunk.getAllAsyncChunks()) {\n      for (const module of this.getChunkModules(chunk, chunkGraph)) {\n        if (module.type === _utils.MODULE_TYPE) {\n          obj[chunk.id] = 1;\n          break;\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  renderContentAsset(compilation, chunk, modules, requestShortener) {\n    let usedModules;\n    const [chunkGroup] = chunk.groupsIterable;\n    const moduleIndexFunctionName = typeof compilation.chunkGraph !== 'undefined' ? 'getModulePostOrderIndex' : 'getModuleIndex2';\n\n    if (typeof chunkGroup[moduleIndexFunctionName] === 'function') {\n      // Store dependencies for modules\n      const moduleDependencies = new Map(modules.map(m => [m, new Set()]));\n      const moduleDependenciesReasons = new Map(modules.map(m => [m, new Map()])); // Get ordered list of modules per chunk group\n      // This loop also gathers dependencies from the ordered lists\n      // Lists are in reverse order to allow to use Array.pop()\n\n      const modulesByChunkGroup = Array.from(chunk.groupsIterable, cg => {\n        const sortedModules = modules.map(m => {\n          return {\n            module: m,\n            index: cg[moduleIndexFunctionName](m)\n          };\n        }) // eslint-disable-next-line no-undefined\n        .filter(item => item.index !== undefined).sort((a, b) => b.index - a.index).map(item => item.module);\n\n        for (let i = 0; i < sortedModules.length; i++) {\n          const set = moduleDependencies.get(sortedModules[i]);\n          const reasons = moduleDependenciesReasons.get(sortedModules[i]);\n\n          for (let j = i + 1; j < sortedModules.length; j++) {\n            const module = sortedModules[j];\n            set.add(module);\n            const reason = reasons.get(module) || new Set();\n            reason.add(cg);\n            reasons.set(module, reason);\n          }\n        }\n\n        return sortedModules;\n      }); // set with already included modules in correct order\n\n      usedModules = new Set();\n\n      const unusedModulesFilter = m => !usedModules.has(m);\n\n      while (usedModules.size < modules.length) {\n        let success = false;\n        let bestMatch;\n        let bestMatchDeps; // get first module where dependencies are fulfilled\n\n        for (const list of modulesByChunkGroup) {\n          // skip and remove already added modules\n          while (list.length > 0 && usedModules.has(list[list.length - 1])) {\n            list.pop();\n          } // skip empty lists\n\n\n          if (list.length !== 0) {\n            const module = list[list.length - 1];\n            const deps = moduleDependencies.get(module); // determine dependencies that are not yet included\n\n            const failedDeps = Array.from(deps).filter(unusedModulesFilter); // store best match for fallback behavior\n\n            if (!bestMatchDeps || bestMatchDeps.length > failedDeps.length) {\n              bestMatch = list;\n              bestMatchDeps = failedDeps;\n            }\n\n            if (failedDeps.length === 0) {\n              // use this module and remove it from list\n              usedModules.add(list.pop());\n              success = true;\n              break;\n            }\n          }\n        }\n\n        if (!success) {\n          // no module found => there is a conflict\n          // use list with fewest failed deps\n          // and emit a warning\n          const fallbackModule = bestMatch.pop();\n\n          if (!this.options.ignoreOrder) {\n            const reasons = moduleDependenciesReasons.get(fallbackModule);\n            compilation.warnings.push(new Error([`chunk ${chunk.name || chunk.id} [${pluginName}]`, 'Conflicting order. Following module has been added:', ` * ${fallbackModule.readableIdentifier(requestShortener)}`, 'despite it was not able to fulfill desired ordering with these modules:', ...bestMatchDeps.map(m => {\n              const goodReasonsMap = moduleDependenciesReasons.get(m);\n              const goodReasons = goodReasonsMap && goodReasonsMap.get(fallbackModule);\n              const failedChunkGroups = Array.from(reasons.get(m), cg => cg.name).join(', ');\n              const goodChunkGroups = goodReasons && Array.from(goodReasons, cg => cg.name).join(', ');\n              return [` * ${m.readableIdentifier(requestShortener)}`, `   - couldn't fulfill desired order of chunk group(s) ${failedChunkGroups}`, goodChunkGroups && `   - while fulfilling desired order of chunk group(s) ${goodChunkGroups}`].filter(Boolean).join('\\n');\n            })].join('\\n')));\n          }\n\n          usedModules.add(fallbackModule);\n        }\n      }\n    } else {\n      // fallback for older webpack versions\n      // (to avoid a breaking change)\n      // TODO remove this in next major version\n      // and increase minimum webpack version to 4.12.0\n      modules.sort((a, b) => a.index2 - b.index2);\n      usedModules = modules;\n    }\n\n    const source = new ConcatSource();\n    const externalsSource = new ConcatSource();\n\n    for (const m of usedModules) {\n      if (/^@import url/.test(m.content)) {\n        // HACK for IE\n        // http://stackoverflow.com/a/14676665/1458162\n        let {\n          content\n        } = m;\n\n        if (m.media) {\n          // insert media into the @import\n          // this is rar\n          // TODO improve this and parse the CSS to support multiple medias\n          content = content.replace(/;|\\s*$/, m.media);\n        }\n\n        externalsSource.add(content);\n        externalsSource.add('\\n');\n      } else {\n        if (m.media) {\n          source.add(`@media ${m.media} {\\n`);\n        }\n\n        if (m.sourceMap) {\n          source.add(new SourceMapSource(m.content, m.readableIdentifier(requestShortener), m.sourceMap));\n        } else {\n          source.add(new OriginalSource(m.content, m.readableIdentifier(requestShortener)));\n        }\n\n        source.add('\\n');\n\n        if (m.media) {\n          source.add('}\\n');\n        }\n      }\n    }\n\n    return new ConcatSource(externalsSource, source);\n  }\n\n}\n\nMiniCssExtractPlugin.loader = require.resolve('./loader');\nvar _default = MiniCssExtractPlugin;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}