{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler/src/i18n/parse_util\", [\"require\", \"exports\", \"tslib\", \"@angular/compiler/src/parse_util\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.I18nError = void 0;\n\n  var tslib_1 = require(\"tslib\");\n\n  var parse_util_1 = require(\"@angular/compiler/src/parse_util\");\n  /**\n   * An i18n error.\n   */\n\n\n  var I18nError =\n  /** @class */\n  function (_super) {\n    tslib_1.__extends(I18nError, _super);\n\n    function I18nError(span, msg) {\n      return _super.call(this, span, msg) || this;\n    }\n\n    return I18nError;\n  }(parse_util_1.ParseError);\n\n  exports.I18nError = I18nError;\n});","map":{"version":3,"sources":["../../../../../../../packages/compiler/src/i18n/parse_util.ts"],"names":[],"mappings":"AAAA;;;;;;AAMG;;;;;;;;;;;;;;;;;;AAEH,MAAA,YAAA,GAAA,OAAA,CAAA,kCAAA,CAAA;AAEA;;AAEG;;;AACH,MAAA,SAAA;AAAA;AAAA,YAAA,MAAA,EAAA;AAA+B,IAAA,OAAA,CAAA,SAAA,CAAA,SAAA,EAAA,MAAA;;AAC7B,aAAA,SAAA,CAAY,IAAZ,EAAmC,GAAnC,EAA8C;aAC5C,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,IAAN,EAAY,GAAZ,KAAgB,I;AACjB;;AACH,WAAA,SAAA;AAAC,GAJD,CAA+B,YAAA,CAAA,UAA/B,CAAA;;AAAa,EAAA,OAAA,CAAA,SAAA,GAAA,SAAA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseError, ParseSourceSpan} from '../parse_util';\n\n/**\n * An i18n error.\n */\nexport class I18nError extends ParseError {\n  constructor(span: ParseSourceSpan, msg: string) {\n    super(span, msg);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}