{"ast":null,"code":"'use strict';\n\nvar util = require('util');\n\nvar fixOwner = require('./fix-owner');\n\nvar path = require('path');\n\nvar rimraf = util.promisify(require('rimraf'));\n\nvar uniqueFilename = require('unique-filename');\n\nvar _require = require('./disposer'),\n    disposer = _require.disposer;\n\nmodule.exports.mkdir = mktmpdir;\n\nfunction mktmpdir(cache) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var tmpPrefix = opts.tmpPrefix;\n  var tmpTarget = uniqueFilename(path.join(cache, 'tmp'), tmpPrefix);\n  return fixOwner.mkdirfix(cache, tmpTarget).then(function () {\n    return tmpTarget;\n  });\n}\n\nmodule.exports.withTmp = withTmp;\n\nfunction withTmp(cache, opts, cb) {\n  if (!cb) {\n    cb = opts;\n    opts = {};\n  }\n\n  return disposer(mktmpdir(cache, opts), rimraf, cb);\n}\n\nmodule.exports.fix = fixtmpdir;\n\nfunction fixtmpdir(cache) {\n  return fixOwner(cache, path.join(cache, 'tmp'));\n}","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/cacache/lib/util/tmp.js"],"names":["util","require","fixOwner","path","rimraf","promisify","uniqueFilename","disposer","module","exports","mkdir","mktmpdir","cache","opts","tmpPrefix","tmpTarget","join","mkdirfix","then","withTmp","cb","fix","fixtmpdir"],"mappings":"AAAA;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,MAAM,GAAGJ,IAAI,CAACK,SAAL,CAAeJ,OAAO,CAAC,QAAD,CAAtB,CAAf;;AACA,IAAMK,cAAc,GAAGL,OAAO,CAAC,iBAAD,CAA9B;;AACA,eAAqBA,OAAO,CAAC,YAAD,CAA5B;AAAA,IAAQM,QAAR,YAAQA,QAAR;;AAEAC,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuBC,QAAvB;;AAEA,SAASA,QAAT,CAAmBC,KAAnB,EAAqC;AAAA,MAAXC,IAAW,uEAAJ,EAAI;AACnC,MAAQC,SAAR,GAAsBD,IAAtB,CAAQC,SAAR;AACA,MAAMC,SAAS,GAAGT,cAAc,CAACH,IAAI,CAACa,IAAL,CAAUJ,KAAV,EAAiB,KAAjB,CAAD,EAA0BE,SAA1B,CAAhC;AACA,SAAOZ,QAAQ,CAACe,QAAT,CAAkBL,KAAlB,EAAyBG,SAAzB,EAAoCG,IAApC,CAAyC,YAAM;AACpD,WAAOH,SAAP;AACD,GAFM,CAAP;AAGD;;AAEDP,MAAM,CAACC,OAAP,CAAeU,OAAf,GAAyBA,OAAzB;;AAEA,SAASA,OAAT,CAAkBP,KAAlB,EAAyBC,IAAzB,EAA+BO,EAA/B,EAAmC;AACjC,MAAI,CAACA,EAAL,EAAS;AACPA,IAAAA,EAAE,GAAGP,IAAL;AACAA,IAAAA,IAAI,GAAG,EAAP;AACD;;AACD,SAAON,QAAQ,CAACI,QAAQ,CAACC,KAAD,EAAQC,IAAR,CAAT,EAAwBT,MAAxB,EAAgCgB,EAAhC,CAAf;AACD;;AAEDZ,MAAM,CAACC,OAAP,CAAeY,GAAf,GAAqBC,SAArB;;AAEA,SAASA,SAAT,CAAoBV,KAApB,EAA2B;AACzB,SAAOV,QAAQ,CAACU,KAAD,EAAQT,IAAI,CAACa,IAAL,CAAUJ,KAAV,EAAiB,KAAjB,CAAR,CAAf;AACD","sourcesContent":["'use strict'\n\nconst util = require('util')\n\nconst fixOwner = require('./fix-owner')\nconst path = require('path')\nconst rimraf = util.promisify(require('rimraf'))\nconst uniqueFilename = require('unique-filename')\nconst { disposer } = require('./disposer')\n\nmodule.exports.mkdir = mktmpdir\n\nfunction mktmpdir (cache, opts = {}) {\n  const { tmpPrefix } = opts\n  const tmpTarget = uniqueFilename(path.join(cache, 'tmp'), tmpPrefix)\n  return fixOwner.mkdirfix(cache, tmpTarget).then(() => {\n    return tmpTarget\n  })\n}\n\nmodule.exports.withTmp = withTmp\n\nfunction withTmp (cache, opts, cb) {\n  if (!cb) {\n    cb = opts\n    opts = {}\n  }\n  return disposer(mktmpdir(cache, opts), rimraf, cb)\n}\n\nmodule.exports.fix = fixtmpdir\n\nfunction fixtmpdir (cache) {\n  return fixOwner(cache, path.join(cache, 'tmp'))\n}\n"]},"metadata":{},"sourceType":"script"}