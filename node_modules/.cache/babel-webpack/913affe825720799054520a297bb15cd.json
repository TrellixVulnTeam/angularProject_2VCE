{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar AggressiveMergingPlugin = /*#__PURE__*/function () {\n  function AggressiveMergingPlugin(options) {\n    _classCallCheck(this, AggressiveMergingPlugin);\n\n    if (options !== undefined && typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\"Argument should be an options object. To use defaults, pass in nothing.\\nFor more info on options, see https://webpack.js.org/plugins/\");\n    }\n\n    this.options = options || {};\n  }\n\n  _createClass(AggressiveMergingPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var options = this.options;\n      var minSizeReduce = options.minSizeReduce || 1.5;\n      compiler.hooks.thisCompilation.tap(\"AggressiveMergingPlugin\", function (compilation) {\n        compilation.hooks.optimizeChunksAdvanced.tap(\"AggressiveMergingPlugin\", function (chunks) {\n          var combinations = [];\n          chunks.forEach(function (a, idx) {\n            if (a.canBeInitial()) return;\n\n            for (var i = 0; i < idx; i++) {\n              var b = chunks[i];\n              if (b.canBeInitial()) continue;\n              combinations.push({\n                a: a,\n                b: b,\n                improvement: undefined\n              });\n            }\n          });\n\n          for (var _i = 0, _combinations = combinations; _i < _combinations.length; _i++) {\n            var _pair = _combinations[_i];\n\n            var a = _pair.b.size({\n              chunkOverhead: 0\n            });\n\n            var b = _pair.a.size({\n              chunkOverhead: 0\n            });\n\n            var ab = _pair.b.integratedSize(_pair.a, {\n              chunkOverhead: 0\n            });\n\n            var newSize = void 0;\n\n            if (ab === false) {\n              _pair.improvement = false;\n              return;\n            } else {\n              newSize = ab;\n            }\n\n            _pair.improvement = (a + b) / newSize;\n          }\n\n          combinations = combinations.filter(function (pair) {\n            return pair.improvement !== false;\n          });\n          combinations.sort(function (a, b) {\n            return b.improvement - a.improvement;\n          });\n          var pair = combinations[0];\n          if (!pair) return;\n          if (pair.improvement < minSizeReduce) return;\n\n          if (pair.b.integrate(pair.a, \"aggressive-merge\")) {\n            chunks.splice(chunks.indexOf(pair.a), 1);\n            return true;\n          }\n        });\n      });\n    }\n  }]);\n\n  return AggressiveMergingPlugin;\n}();\n\nmodule.exports = AggressiveMergingPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/optimize/AggressiveMergingPlugin.js"],"names":["AggressiveMergingPlugin","options","undefined","Array","isArray","Error","compiler","minSizeReduce","hooks","thisCompilation","tap","compilation","optimizeChunksAdvanced","chunks","combinations","forEach","a","idx","canBeInitial","i","b","push","improvement","pair","size","chunkOverhead","ab","integratedSize","newSize","filter","sort","integrate","splice","indexOf","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass AggressiveMergingPlugin {\n\tconstructor(options) {\n\t\tif (\n\t\t\t(options !== undefined && typeof options !== \"object\") ||\n\t\t\tArray.isArray(options)\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Argument should be an options object. To use defaults, pass in nothing.\\nFor more info on options, see https://webpack.js.org/plugins/\"\n\t\t\t);\n\t\t}\n\t\tthis.options = options || {};\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tconst minSizeReduce = options.minSizeReduce || 1.5;\n\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"AggressiveMergingPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.optimizeChunksAdvanced.tap(\n\t\t\t\t\t\"AggressiveMergingPlugin\",\n\t\t\t\t\tchunks => {\n\t\t\t\t\t\tlet combinations = [];\n\t\t\t\t\t\tchunks.forEach((a, idx) => {\n\t\t\t\t\t\t\tif (a.canBeInitial()) return;\n\t\t\t\t\t\t\tfor (let i = 0; i < idx; i++) {\n\t\t\t\t\t\t\t\tconst b = chunks[i];\n\t\t\t\t\t\t\t\tif (b.canBeInitial()) continue;\n\t\t\t\t\t\t\t\tcombinations.push({\n\t\t\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\t\timprovement: undefined\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tfor (const pair of combinations) {\n\t\t\t\t\t\t\tconst a = pair.b.size({\n\t\t\t\t\t\t\t\tchunkOverhead: 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst b = pair.a.size({\n\t\t\t\t\t\t\t\tchunkOverhead: 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst ab = pair.b.integratedSize(pair.a, {\n\t\t\t\t\t\t\t\tchunkOverhead: 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tlet newSize;\n\t\t\t\t\t\t\tif (ab === false) {\n\t\t\t\t\t\t\t\tpair.improvement = false;\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnewSize = ab;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpair.improvement = (a + b) / newSize;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcombinations = combinations.filter(pair => {\n\t\t\t\t\t\t\treturn pair.improvement !== false;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcombinations.sort((a, b) => {\n\t\t\t\t\t\t\treturn b.improvement - a.improvement;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst pair = combinations[0];\n\n\t\t\t\t\t\tif (!pair) return;\n\t\t\t\t\t\tif (pair.improvement < minSizeReduce) return;\n\n\t\t\t\t\t\tif (pair.b.integrate(pair.a, \"aggressive-merge\")) {\n\t\t\t\t\t\t\tchunks.splice(chunks.indexOf(pair.a), 1);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = AggressiveMergingPlugin;\n"]},"metadata":{},"sourceType":"script"}