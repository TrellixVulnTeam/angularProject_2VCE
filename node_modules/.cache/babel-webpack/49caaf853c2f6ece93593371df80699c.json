{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar stream_1 = require(\"../readers/stream\");\n\nvar provider_1 = require(\"./provider\");\n\nvar ProviderAsync = /*#__PURE__*/function (_provider_1$default) {\n  _inherits(ProviderAsync, _provider_1$default);\n\n  var _super = _createSuper(ProviderAsync);\n\n  function ProviderAsync() {\n    var _this;\n\n    _classCallCheck(this, ProviderAsync);\n\n    _this = _super.apply(this, arguments);\n    _this._reader = new stream_1.default(_this._settings);\n    return _this;\n  }\n\n  _createClass(ProviderAsync, [{\n    key: \"read\",\n    value: function read(task) {\n      var _this2 = this;\n\n      var root = this._getRootDirectory(task);\n\n      var options = this._getReaderOptions(task);\n\n      var entries = [];\n      return new Promise(function (resolve, reject) {\n        var stream = _this2.api(root, task, options);\n\n        stream.once('error', reject);\n        stream.on('data', function (entry) {\n          return entries.push(options.transform(entry));\n        });\n        stream.once('end', function () {\n          return resolve(entries);\n        });\n      });\n    }\n  }, {\n    key: \"api\",\n    value: function api(root, task, options) {\n      if (task.dynamic) {\n        return this._reader.dynamic(root, options);\n      }\n\n      return this._reader.static(task.patterns, options);\n    }\n  }]);\n\n  return ProviderAsync;\n}(provider_1.default);\n\nexports.default = ProviderAsync;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/fast-glob/out/providers/async.js"],"names":["Object","defineProperty","exports","value","stream_1","require","provider_1","ProviderAsync","arguments","_reader","default","_settings","task","root","_getRootDirectory","options","_getReaderOptions","entries","Promise","resolve","reject","stream","api","once","on","entry","push","transform","dynamic","static","patterns"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,QAAQ,GAAGC,OAAO,CAAC,mBAAD,CAAxB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAA1B;;IACME,a;;;;;AACF,2BAAc;AAAA;;AAAA;;AACV,+BAASC,SAAT;AACA,UAAKC,OAAL,GAAe,IAAIL,QAAQ,CAACM,OAAb,CAAqB,MAAKC,SAA1B,CAAf;AAFU;AAGb;;;;WACD,cAAKC,IAAL,EAAW;AAAA;;AACP,UAAMC,IAAI,GAAG,KAAKC,iBAAL,CAAuBF,IAAvB,CAAb;;AACA,UAAMG,OAAO,GAAG,KAAKC,iBAAL,CAAuBJ,IAAvB,CAAhB;;AACA,UAAMK,OAAO,GAAG,EAAhB;AACA,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,YAAMC,MAAM,GAAG,MAAI,CAACC,GAAL,CAAST,IAAT,EAAeD,IAAf,EAAqBG,OAArB,CAAf;;AACAM,QAAAA,MAAM,CAACE,IAAP,CAAY,OAAZ,EAAqBH,MAArB;AACAC,QAAAA,MAAM,CAACG,EAAP,CAAU,MAAV,EAAkB,UAACC,KAAD;AAAA,iBAAWR,OAAO,CAACS,IAAR,CAAaX,OAAO,CAACY,SAAR,CAAkBF,KAAlB,CAAb,CAAX;AAAA,SAAlB;AACAJ,QAAAA,MAAM,CAACE,IAAP,CAAY,KAAZ,EAAmB;AAAA,iBAAMJ,OAAO,CAACF,OAAD,CAAb;AAAA,SAAnB;AACH,OALM,CAAP;AAMH;;;WACD,aAAIJ,IAAJ,EAAUD,IAAV,EAAgBG,OAAhB,EAAyB;AACrB,UAAIH,IAAI,CAACgB,OAAT,EAAkB;AACd,eAAO,KAAKnB,OAAL,CAAamB,OAAb,CAAqBf,IAArB,EAA2BE,OAA3B,CAAP;AACH;;AACD,aAAO,KAAKN,OAAL,CAAaoB,MAAb,CAAoBjB,IAAI,CAACkB,QAAzB,EAAmCf,OAAnC,CAAP;AACH;;;;EArBuBT,UAAU,CAACI,O;;AAuBvCR,OAAO,CAACQ,OAAR,GAAkBH,aAAlB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst stream_1 = require(\"../readers/stream\");\r\nconst provider_1 = require(\"./provider\");\r\nclass ProviderAsync extends provider_1.default {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._reader = new stream_1.default(this._settings);\r\n    }\r\n    read(task) {\r\n        const root = this._getRootDirectory(task);\r\n        const options = this._getReaderOptions(task);\r\n        const entries = [];\r\n        return new Promise((resolve, reject) => {\r\n            const stream = this.api(root, task, options);\r\n            stream.once('error', reject);\r\n            stream.on('data', (entry) => entries.push(options.transform(entry)));\r\n            stream.once('end', () => resolve(entries));\r\n        });\r\n    }\r\n    api(root, task, options) {\r\n        if (task.dynamic) {\r\n            return this._reader.dynamic(root, options);\r\n        }\r\n        return this._reader.static(task.patterns, options);\r\n    }\r\n}\r\nexports.default = ProviderAsync;\r\n"]},"metadata":{},"sourceType":"script"}