{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler-cli/src/ngtsc/annotations/src/factory\", [\"require\", \"exports\", \"@angular/compiler\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.compileNgFactoryDefField = void 0;\n\n  var compiler_1 = require(\"@angular/compiler\");\n\n  function compileNgFactoryDefField(metadata) {\n    var res = compiler_1.compileFactoryFunction(metadata);\n    return {\n      name: 'ɵfac',\n      initializer: res.factory,\n      statements: res.statements,\n      type: res.type\n    };\n  }\n\n  exports.compileNgFactoryDefField = compileNgFactoryDefField;\n});","map":{"version":3,"sources":["../../../../../../../../../packages/compiler-cli/src/ngtsc/annotations/src/factory.ts"],"names":[],"mappings":"AAAA;;;;;;AAMG;;;;;;;;;;;;;;;;AAEH,MAAA,UAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAIA,WAAgB,wBAAhB,CAAyC,QAAzC,EAAoE;AAClE,QAAM,GAAG,GAAG,UAAA,CAAA,sBAAA,CAAuB,QAAvB,CAAZ;AACA,WAAO;AAAC,MAAA,IAAI,EAAE,MAAP;AAAe,MAAA,WAAW,EAAE,GAAG,CAAC,OAAhC;AAAyC,MAAA,UAAU,EAAE,GAAG,CAAC,UAAzD;AAAqE,MAAA,IAAI,EAAE,GAAG,CAAC;AAA/E,KAAP;AACD;;AAHD,EAAA,OAAA,CAAA,wBAAA,GAAA,wBAAA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {compileFactoryFunction, R3FactoryMetadata} from '@angular/compiler';\n\nimport {CompileResult} from '../../transform';\n\nexport function compileNgFactoryDefField(metadata: R3FactoryMetadata): CompileResult {\n  const res = compileFactoryFunction(metadata);\n  return {name: 'ɵfac', initializer: res.factory, statements: res.statements, type: res.type};\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}