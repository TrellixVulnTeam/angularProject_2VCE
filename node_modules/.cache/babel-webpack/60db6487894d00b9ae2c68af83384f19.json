{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnsupportedPlatformException = exports.UnimplementedException = exports.MergeConflictException = exports.InvalidUpdateRecordException = exports.ContentHasMutatedException = exports.PathIsFileException = exports.PathIsDirectoryException = exports.FileAlreadyExistException = exports.FileDoesNotExistException = exports.UnknownException = exports.BaseException = void 0;\n\nvar BaseException = /*#__PURE__*/function (_Error) {\n  _inherits(BaseException, _Error);\n\n  var _super = _createSuper(BaseException);\n\n  function BaseException() {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    _classCallCheck(this, BaseException);\n\n    return _super.call(this, message);\n  }\n\n  return BaseException;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.BaseException = BaseException;\n\nvar UnknownException = /*#__PURE__*/function (_BaseException) {\n  _inherits(UnknownException, _BaseException);\n\n  var _super2 = _createSuper(UnknownException);\n\n  function UnknownException(message) {\n    _classCallCheck(this, UnknownException);\n\n    return _super2.call(this, message);\n  }\n\n  return UnknownException;\n}(BaseException);\n\nexports.UnknownException = UnknownException; // Exceptions\n\nvar FileDoesNotExistException = /*#__PURE__*/function (_BaseException2) {\n  _inherits(FileDoesNotExistException, _BaseException2);\n\n  var _super3 = _createSuper(FileDoesNotExistException);\n\n  function FileDoesNotExistException(path) {\n    _classCallCheck(this, FileDoesNotExistException);\n\n    return _super3.call(this, \"Path \\\"\".concat(path, \"\\\" does not exist.\"));\n  }\n\n  return FileDoesNotExistException;\n}(BaseException);\n\nexports.FileDoesNotExistException = FileDoesNotExistException;\n\nvar FileAlreadyExistException = /*#__PURE__*/function (_BaseException3) {\n  _inherits(FileAlreadyExistException, _BaseException3);\n\n  var _super4 = _createSuper(FileAlreadyExistException);\n\n  function FileAlreadyExistException(path) {\n    _classCallCheck(this, FileAlreadyExistException);\n\n    return _super4.call(this, \"Path \\\"\".concat(path, \"\\\" already exist.\"));\n  }\n\n  return FileAlreadyExistException;\n}(BaseException);\n\nexports.FileAlreadyExistException = FileAlreadyExistException;\n\nvar PathIsDirectoryException = /*#__PURE__*/function (_BaseException4) {\n  _inherits(PathIsDirectoryException, _BaseException4);\n\n  var _super5 = _createSuper(PathIsDirectoryException);\n\n  function PathIsDirectoryException(path) {\n    _classCallCheck(this, PathIsDirectoryException);\n\n    return _super5.call(this, \"Path \\\"\".concat(path, \"\\\" is a directory.\"));\n  }\n\n  return PathIsDirectoryException;\n}(BaseException);\n\nexports.PathIsDirectoryException = PathIsDirectoryException;\n\nvar PathIsFileException = /*#__PURE__*/function (_BaseException5) {\n  _inherits(PathIsFileException, _BaseException5);\n\n  var _super6 = _createSuper(PathIsFileException);\n\n  function PathIsFileException(path) {\n    _classCallCheck(this, PathIsFileException);\n\n    return _super6.call(this, \"Path \\\"\".concat(path, \"\\\" is a file.\"));\n  }\n\n  return PathIsFileException;\n}(BaseException);\n\nexports.PathIsFileException = PathIsFileException;\n\nvar ContentHasMutatedException = /*#__PURE__*/function (_BaseException6) {\n  _inherits(ContentHasMutatedException, _BaseException6);\n\n  var _super7 = _createSuper(ContentHasMutatedException);\n\n  function ContentHasMutatedException(path) {\n    _classCallCheck(this, ContentHasMutatedException);\n\n    return _super7.call(this, \"Content at path \\\"\".concat(path, \"\\\" has changed between the start and the end of an update.\"));\n  }\n\n  return ContentHasMutatedException;\n}(BaseException);\n\nexports.ContentHasMutatedException = ContentHasMutatedException;\n\nvar InvalidUpdateRecordException = /*#__PURE__*/function (_BaseException7) {\n  _inherits(InvalidUpdateRecordException, _BaseException7);\n\n  var _super8 = _createSuper(InvalidUpdateRecordException);\n\n  function InvalidUpdateRecordException() {\n    _classCallCheck(this, InvalidUpdateRecordException);\n\n    return _super8.call(this, \"Invalid record instance.\");\n  }\n\n  return InvalidUpdateRecordException;\n}(BaseException);\n\nexports.InvalidUpdateRecordException = InvalidUpdateRecordException;\n\nvar MergeConflictException = /*#__PURE__*/function (_BaseException8) {\n  _inherits(MergeConflictException, _BaseException8);\n\n  var _super9 = _createSuper(MergeConflictException);\n\n  function MergeConflictException(path) {\n    _classCallCheck(this, MergeConflictException);\n\n    return _super9.call(this, \"A merge conflicted on path \\\"\".concat(path, \"\\\".\"));\n  }\n\n  return MergeConflictException;\n}(BaseException);\n\nexports.MergeConflictException = MergeConflictException;\n\nvar UnimplementedException = /*#__PURE__*/function (_BaseException9) {\n  _inherits(UnimplementedException, _BaseException9);\n\n  var _super10 = _createSuper(UnimplementedException);\n\n  function UnimplementedException() {\n    _classCallCheck(this, UnimplementedException);\n\n    return _super10.call(this, 'This function is unimplemented.');\n  }\n\n  return UnimplementedException;\n}(BaseException);\n\nexports.UnimplementedException = UnimplementedException;\n\nvar UnsupportedPlatformException = /*#__PURE__*/function (_BaseException10) {\n  _inherits(UnsupportedPlatformException, _BaseException10);\n\n  var _super11 = _createSuper(UnsupportedPlatformException);\n\n  function UnsupportedPlatformException() {\n    _classCallCheck(this, UnsupportedPlatformException);\n\n    return _super11.call(this, 'This platform is not supported by this code path.');\n  }\n\n  return UnsupportedPlatformException;\n}(BaseException);\n\nexports.UnsupportedPlatformException = UnsupportedPlatformException;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/@angular-devkit/core/src/exception/exception.js"],"names":["Object","defineProperty","exports","value","UnsupportedPlatformException","UnimplementedException","MergeConflictException","InvalidUpdateRecordException","ContentHasMutatedException","PathIsFileException","PathIsDirectoryException","FileAlreadyExistException","FileDoesNotExistException","UnknownException","BaseException","message","Error","path"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,4BAAR,GAAuCF,OAAO,CAACG,sBAAR,GAAiCH,OAAO,CAACI,sBAAR,GAAiCJ,OAAO,CAACK,4BAAR,GAAuCL,OAAO,CAACM,0BAAR,GAAqCN,OAAO,CAACO,mBAAR,GAA8BP,OAAO,CAACQ,wBAAR,GAAmCR,OAAO,CAACS,yBAAR,GAAoCT,OAAO,CAACU,yBAAR,GAAoCV,OAAO,CAACW,gBAAR,GAA2BX,OAAO,CAACY,aAAR,GAAwB,KAAK,CAAtX;;IACMA,a;;;;;AACF,2BAA0B;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AAAA,6BAChBA,OADgB;AAEzB;;;iCAHuBC,K;;AAK5Bd,OAAO,CAACY,aAAR,GAAwBA,aAAxB;;IACMD,gB;;;;;AACF,4BAAYE,OAAZ,EAAqB;AAAA;;AAAA,8BAAQA,OAAR;AAAmB;;;EADbD,a;;AAG/BZ,OAAO,CAACW,gBAAR,GAA2BA,gBAA3B,C,CACA;;IACMD,yB;;;;;AACF,qCAAYK,IAAZ,EAAkB;AAAA;;AAAA,+CAAiBA,IAAjB;AAA4C;;;EAD1BH,a;;AAGxCZ,OAAO,CAACU,yBAAR,GAAoCA,yBAApC;;IACMD,yB;;;;;AACF,qCAAYM,IAAZ,EAAkB;AAAA;;AAAA,+CAAiBA,IAAjB;AAA2C;;;EADzBH,a;;AAGxCZ,OAAO,CAACS,yBAAR,GAAoCA,yBAApC;;IACMD,wB;;;;;AACF,oCAAYO,IAAZ,EAAkB;AAAA;;AAAA,+CAAiBA,IAAjB;AAA4C;;;EAD3BH,a;;AAGvCZ,OAAO,CAACQ,wBAAR,GAAmCA,wBAAnC;;IACMD,mB;;;;;AACF,+BAAYQ,IAAZ,EAAkB;AAAA;;AAAA,+CAAiBA,IAAjB;AAAuC;;;EAD3BH,a;;AAGlCZ,OAAO,CAACO,mBAAR,GAA8BA,mBAA9B;;IACMD,0B;;;;;AACF,sCAAYS,IAAZ,EAAkB;AAAA;;AAAA,0DACYA,IADZ;AAEjB;;;EAHoCH,a;;AAKzCZ,OAAO,CAACM,0BAAR,GAAqCA,0BAArC;;IACMD,4B;;;;;AACF,0CAAc;AAAA;;AAAA;AAAsC;;;EADbO,a;;AAG3CZ,OAAO,CAACK,4BAAR,GAAuCA,4BAAvC;;IACMD,sB;;;;;AACF,kCAAYW,IAAZ,EAAkB;AAAA;;AAAA,qEACuBA,IADvB;AAEjB;;;EAHgCH,a;;AAKrCZ,OAAO,CAACI,sBAAR,GAAiCA,sBAAjC;;IACMD,sB;;;;;AACF,oCAAc;AAAA;;AAAA,+BAAQ,iCAAR;AAA6C;;;EAD1BS,a;;AAGrCZ,OAAO,CAACG,sBAAR,GAAiCA,sBAAjC;;IACMD,4B;;;;;AACF,0CAAc;AAAA;;AAAA,+BAAQ,mDAAR;AAA+D;;;EADtCU,a;;AAG3CZ,OAAO,CAACE,4BAAR,GAAuCA,4BAAvC","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnsupportedPlatformException = exports.UnimplementedException = exports.MergeConflictException = exports.InvalidUpdateRecordException = exports.ContentHasMutatedException = exports.PathIsFileException = exports.PathIsDirectoryException = exports.FileAlreadyExistException = exports.FileDoesNotExistException = exports.UnknownException = exports.BaseException = void 0;\nclass BaseException extends Error {\n    constructor(message = '') {\n        super(message);\n    }\n}\nexports.BaseException = BaseException;\nclass UnknownException extends BaseException {\n    constructor(message) { super(message); }\n}\nexports.UnknownException = UnknownException;\n// Exceptions\nclass FileDoesNotExistException extends BaseException {\n    constructor(path) { super(`Path \"${path}\" does not exist.`); }\n}\nexports.FileDoesNotExistException = FileDoesNotExistException;\nclass FileAlreadyExistException extends BaseException {\n    constructor(path) { super(`Path \"${path}\" already exist.`); }\n}\nexports.FileAlreadyExistException = FileAlreadyExistException;\nclass PathIsDirectoryException extends BaseException {\n    constructor(path) { super(`Path \"${path}\" is a directory.`); }\n}\nexports.PathIsDirectoryException = PathIsDirectoryException;\nclass PathIsFileException extends BaseException {\n    constructor(path) { super(`Path \"${path}\" is a file.`); }\n}\nexports.PathIsFileException = PathIsFileException;\nclass ContentHasMutatedException extends BaseException {\n    constructor(path) {\n        super(`Content at path \"${path}\" has changed between the start and the end of an update.`);\n    }\n}\nexports.ContentHasMutatedException = ContentHasMutatedException;\nclass InvalidUpdateRecordException extends BaseException {\n    constructor() { super(`Invalid record instance.`); }\n}\nexports.InvalidUpdateRecordException = InvalidUpdateRecordException;\nclass MergeConflictException extends BaseException {\n    constructor(path) {\n        super(`A merge conflicted on path \"${path}\".`);\n    }\n}\nexports.MergeConflictException = MergeConflictException;\nclass UnimplementedException extends BaseException {\n    constructor() { super('This function is unimplemented.'); }\n}\nexports.UnimplementedException = UnimplementedException;\nclass UnsupportedPlatformException extends BaseException {\n    constructor() { super('This platform is not supported by this code path.'); }\n}\nexports.UnsupportedPlatformException = UnsupportedPlatformException;\n"]},"metadata":{},"sourceType":"script"}