{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar LoaderTargetPlugin = /*#__PURE__*/function () {\n  function LoaderTargetPlugin(target) {\n    _classCallCheck(this, LoaderTargetPlugin);\n\n    this.target = target;\n  }\n\n  _createClass(LoaderTargetPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.compilation.tap(\"LoaderTargetPlugin\", function (compilation) {\n        compilation.hooks.normalModuleLoader.tap(\"LoaderTargetPlugin\", function (loaderContext) {\n          loaderContext.target = _this.target;\n        });\n      });\n    }\n  }]);\n\n  return LoaderTargetPlugin;\n}();\n\nmodule.exports = LoaderTargetPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/LoaderTargetPlugin.js"],"names":["LoaderTargetPlugin","target","compiler","hooks","compilation","tap","normalModuleLoader","loaderContext","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;IAEMA,kB;AACL,8BAAYC,MAAZ,EAAoB;AAAA;;AACnB,SAAKA,MAAL,GAAcA,MAAd;AACA;;;;WAED,eAAMC,QAAN,EAAgB;AAAA;;AACfA,MAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CAA+B,oBAA/B,EAAqD,UAAAD,WAAW,EAAI;AACnEA,QAAAA,WAAW,CAACD,KAAZ,CAAkBG,kBAAlB,CAAqCD,GAArC,CACC,oBADD,EAEC,UAAAE,aAAa,EAAI;AAChBA,UAAAA,aAAa,CAACN,MAAd,GAAuB,KAAI,CAACA,MAA5B;AACA,SAJF;AAMA,OAPD;AAQA;;;;;;AAGFO,MAAM,CAACC,OAAP,GAAiBT,kBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass LoaderTargetPlugin {\n\tconstructor(target) {\n\t\tthis.target = target;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"LoaderTargetPlugin\", compilation => {\n\t\t\tcompilation.hooks.normalModuleLoader.tap(\n\t\t\t\t\"LoaderTargetPlugin\",\n\t\t\t\tloaderContext => {\n\t\t\t\t\tloaderContext.target = this.target;\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = LoaderTargetPlugin;\n"]},"metadata":{},"sourceType":"script"}