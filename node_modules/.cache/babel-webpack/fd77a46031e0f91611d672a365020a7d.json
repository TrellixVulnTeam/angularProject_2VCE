{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/regenerator\");\n\nvar _toConsumableArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _asyncToGenerator = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"util\");\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _postcssValueParser = _interopRequireDefault(require(\"postcss-value-parser\"));\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar pluginName = 'postcss-import-parser';\n\nfunction walkAtRules(css, result, options, callback) {\n  var accumulator = [];\n  css.walkAtRules(/^import$/i, function (atRule) {\n    // Convert only top-level @import\n    if (atRule.parent.type !== 'root') {\n      return;\n    } // Nodes do not exists - `@import url('http://') :root {}`\n\n\n    if (atRule.nodes) {\n      result.warn(\"It looks like you didn't end your @import statement correctly. Child nodes are attached to it.\", {\n        node: atRule\n      });\n      return;\n    }\n\n    var _ref = (0, _postcssValueParser.default)(atRule.params),\n        paramsNodes = _ref.nodes; // No nodes - `@import ;`\n    // Invalid type - `@import foo-bar;`\n\n\n    if (paramsNodes.length === 0 || paramsNodes[0].type !== 'string' && paramsNodes[0].type !== 'function') {\n      result.warn(\"Unable to find uri in \\\"\".concat(atRule.toString(), \"\\\"\"), {\n        node: atRule\n      });\n      return;\n    }\n\n    var isStringValue;\n    var url;\n\n    if (paramsNodes[0].type === 'string') {\n      isStringValue = true;\n      url = paramsNodes[0].value;\n    } else {\n      // Invalid function - `@import nourl(test.css);`\n      if (paramsNodes[0].value.toLowerCase() !== 'url') {\n        result.warn(\"Unable to find uri in \\\"\".concat(atRule.toString(), \"\\\"\"), {\n          node: atRule\n        });\n        return;\n      }\n\n      isStringValue = paramsNodes[0].nodes.length !== 0 && paramsNodes[0].nodes[0].type === 'string';\n      url = isStringValue ? paramsNodes[0].nodes[0].value : _postcssValueParser.default.stringify(paramsNodes[0].nodes);\n    } // Empty url - `@import \"\";` or `@import url();`\n\n\n    if (url.trim().length === 0) {\n      result.warn(\"Unable to find uri in \\\"\".concat(atRule.toString(), \"\\\"\"), {\n        node: atRule\n      });\n      return;\n    }\n\n    accumulator.push({\n      atRule: atRule,\n      url: url,\n      isStringValue: isStringValue,\n      mediaNodes: paramsNodes.slice(1)\n    });\n  });\n  callback(null, accumulator);\n}\n\nvar asyncWalkAtRules = (0, _util.promisify)(walkAtRules);\n\nvar _default = _postcss.default.plugin(pluginName, function (options) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(css, result) {\n      var parsedResults, imports, tasks, _iterator, _step, _loop, _ret, results, index, _results$index, url, isRequestable, media, prefix, newUrl, importKey, importName;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return asyncWalkAtRules(css, result, options);\n\n            case 2:\n              parsedResults = _context2.sent;\n\n              if (!(parsedResults.length === 0)) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", Promise.resolve());\n\n            case 5:\n              imports = new Map();\n              tasks = [];\n              _iterator = _createForOfIteratorHelper(parsedResults);\n              _context2.prev = 8;\n\n              _loop = function _loop() {\n                var parsedResult = _step.value;\n                var atRule = parsedResult.atRule,\n                    url = parsedResult.url,\n                    isStringValue = parsedResult.isStringValue,\n                    mediaNodes = parsedResult.mediaNodes;\n                var normalizedUrl = url;\n                var prefix = '';\n                var isRequestable = (0, _utils.isUrlRequestable)(normalizedUrl);\n\n                if (isRequestable) {\n                  var queryParts = normalizedUrl.split('!');\n\n                  if (queryParts.length > 1) {\n                    normalizedUrl = queryParts.pop();\n                    prefix = queryParts.join('!');\n                  }\n\n                  normalizedUrl = (0, _utils.normalizeUrl)(normalizedUrl, isStringValue); // Empty url after normalize - `@import '\\\n                  // \\\n                  // \\\n                  // ';\n\n                  if (normalizedUrl.trim().length === 0) {\n                    result.warn(\"Unable to find uri in \\\"\".concat(atRule.toString(), \"\\\"\"), {\n                      node: atRule\n                    }); // eslint-disable-next-line no-continue\n\n                    return \"continue\";\n                  }\n                }\n\n                var media = void 0;\n\n                if (mediaNodes.length > 0) {\n                  media = _postcssValueParser.default.stringify(mediaNodes).trim().toLowerCase();\n                }\n\n                if (options.filter && !options.filter(normalizedUrl, media)) {\n                  // eslint-disable-next-line no-continue\n                  return \"continue\";\n                }\n\n                atRule.remove();\n\n                if (isRequestable) {\n                  var request = (0, _utils.requestify)(normalizedUrl, options.rootContext);\n                  tasks.push(_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                    var resolver, context, resolvedUrl;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            resolver = options.resolver, context = options.context;\n                            _context.next = 3;\n                            return (0, _utils.resolveRequests)(resolver, context, _toConsumableArray(new Set([request, normalizedUrl])));\n\n                          case 3:\n                            resolvedUrl = _context.sent;\n                            return _context.abrupt(\"return\", {\n                              url: resolvedUrl,\n                              media: media,\n                              prefix: prefix,\n                              isRequestable: isRequestable\n                            });\n\n                          case 5:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }))());\n                } else {\n                  tasks.push({\n                    url: url,\n                    media: media,\n                    prefix: prefix,\n                    isRequestable: isRequestable\n                  });\n                }\n              };\n\n              _iterator.s();\n\n            case 11:\n              if ((_step = _iterator.n()).done) {\n                _context2.next = 17;\n                break;\n              }\n\n              _ret = _loop();\n\n              if (!(_ret === \"continue\")) {\n                _context2.next = 15;\n                break;\n              }\n\n              return _context2.abrupt(\"continue\", 15);\n\n            case 15:\n              _context2.next = 11;\n              break;\n\n            case 17:\n              _context2.next = 22;\n              break;\n\n            case 19:\n              _context2.prev = 19;\n              _context2.t0 = _context2[\"catch\"](8);\n\n              _iterator.e(_context2.t0);\n\n            case 22:\n              _context2.prev = 22;\n\n              _iterator.f();\n\n              return _context2.finish(22);\n\n            case 25:\n              _context2.next = 27;\n              return Promise.all(tasks);\n\n            case 27:\n              results = _context2.sent;\n              index = 0;\n\n            case 29:\n              if (!(index <= results.length - 1)) {\n                _context2.next = 43;\n                break;\n              }\n\n              _results$index = results[index], url = _results$index.url, isRequestable = _results$index.isRequestable, media = _results$index.media;\n\n              if (!isRequestable) {\n                _context2.next = 39;\n                break;\n              }\n\n              prefix = results[index].prefix;\n              newUrl = prefix ? \"\".concat(prefix, \"!\").concat(url) : url;\n              importKey = newUrl;\n              importName = imports.get(importKey);\n\n              if (!importName) {\n                importName = \"___CSS_LOADER_AT_RULE_IMPORT_\".concat(imports.size, \"___\");\n                imports.set(importKey, importName);\n                options.imports.push({\n                  importName: importName,\n                  url: options.urlHandler(newUrl),\n                  index: index\n                });\n              }\n\n              options.api.push({\n                importName: importName,\n                media: media,\n                index: index\n              }); // eslint-disable-next-line no-continue\n\n              return _context2.abrupt(\"continue\", 40);\n\n            case 39:\n              options.api.push({\n                url: url,\n                media: media,\n                index: index\n              });\n\n            case 40:\n              index++;\n              _context2.next = 29;\n              break;\n\n            case 43:\n              return _context2.abrupt(\"return\", Promise.resolve());\n\n            case 44:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[8, 19, 22, 25]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n});\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/css-loader/dist/plugins/postcss-import-parser.js"],"names":["Object","defineProperty","exports","value","default","_util","require","_postcss","_interopRequireDefault","_postcssValueParser","_utils","obj","__esModule","pluginName","walkAtRules","css","result","options","callback","accumulator","atRule","parent","type","nodes","warn","node","params","paramsNodes","length","toString","isStringValue","url","toLowerCase","stringify","trim","push","mediaNodes","slice","asyncWalkAtRules","promisify","_default","plugin","parsedResults","Promise","resolve","imports","Map","tasks","parsedResult","normalizedUrl","prefix","isRequestable","isUrlRequestable","queryParts","split","pop","join","normalizeUrl","media","filter","remove","request","requestify","rootContext","resolver","context","resolveRequests","Set","resolvedUrl","all","results","index","newUrl","importKey","importName","get","size","set","urlHandler","api"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"util\");\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _postcssValueParser = _interopRequireDefault(require(\"postcss-value-parser\"));\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst pluginName = 'postcss-import-parser';\n\nfunction walkAtRules(css, result, options, callback) {\n  const accumulator = [];\n  css.walkAtRules(/^import$/i, atRule => {\n    // Convert only top-level @import\n    if (atRule.parent.type !== 'root') {\n      return;\n    } // Nodes do not exists - `@import url('http://') :root {}`\n\n\n    if (atRule.nodes) {\n      result.warn(\"It looks like you didn't end your @import statement correctly. Child nodes are attached to it.\", {\n        node: atRule\n      });\n      return;\n    }\n\n    const {\n      nodes: paramsNodes\n    } = (0, _postcssValueParser.default)(atRule.params); // No nodes - `@import ;`\n    // Invalid type - `@import foo-bar;`\n\n    if (paramsNodes.length === 0 || paramsNodes[0].type !== 'string' && paramsNodes[0].type !== 'function') {\n      result.warn(`Unable to find uri in \"${atRule.toString()}\"`, {\n        node: atRule\n      });\n      return;\n    }\n\n    let isStringValue;\n    let url;\n\n    if (paramsNodes[0].type === 'string') {\n      isStringValue = true;\n      url = paramsNodes[0].value;\n    } else {\n      // Invalid function - `@import nourl(test.css);`\n      if (paramsNodes[0].value.toLowerCase() !== 'url') {\n        result.warn(`Unable to find uri in \"${atRule.toString()}\"`, {\n          node: atRule\n        });\n        return;\n      }\n\n      isStringValue = paramsNodes[0].nodes.length !== 0 && paramsNodes[0].nodes[0].type === 'string';\n      url = isStringValue ? paramsNodes[0].nodes[0].value : _postcssValueParser.default.stringify(paramsNodes[0].nodes);\n    } // Empty url - `@import \"\";` or `@import url();`\n\n\n    if (url.trim().length === 0) {\n      result.warn(`Unable to find uri in \"${atRule.toString()}\"`, {\n        node: atRule\n      });\n      return;\n    }\n\n    accumulator.push({\n      atRule,\n      url,\n      isStringValue,\n      mediaNodes: paramsNodes.slice(1)\n    });\n  });\n  callback(null, accumulator);\n}\n\nconst asyncWalkAtRules = (0, _util.promisify)(walkAtRules);\n\nvar _default = _postcss.default.plugin(pluginName, options => async (css, result) => {\n  const parsedResults = await asyncWalkAtRules(css, result, options);\n\n  if (parsedResults.length === 0) {\n    return Promise.resolve();\n  }\n\n  const imports = new Map();\n  const tasks = [];\n\n  for (const parsedResult of parsedResults) {\n    const {\n      atRule,\n      url,\n      isStringValue,\n      mediaNodes\n    } = parsedResult;\n    let normalizedUrl = url;\n    let prefix = '';\n    const isRequestable = (0, _utils.isUrlRequestable)(normalizedUrl);\n\n    if (isRequestable) {\n      const queryParts = normalizedUrl.split('!');\n\n      if (queryParts.length > 1) {\n        normalizedUrl = queryParts.pop();\n        prefix = queryParts.join('!');\n      }\n\n      normalizedUrl = (0, _utils.normalizeUrl)(normalizedUrl, isStringValue); // Empty url after normalize - `@import '\\\n      // \\\n      // \\\n      // ';\n\n      if (normalizedUrl.trim().length === 0) {\n        result.warn(`Unable to find uri in \"${atRule.toString()}\"`, {\n          node: atRule\n        }); // eslint-disable-next-line no-continue\n\n        continue;\n      }\n    }\n\n    let media;\n\n    if (mediaNodes.length > 0) {\n      media = _postcssValueParser.default.stringify(mediaNodes).trim().toLowerCase();\n    }\n\n    if (options.filter && !options.filter(normalizedUrl, media)) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    atRule.remove();\n\n    if (isRequestable) {\n      const request = (0, _utils.requestify)(normalizedUrl, options.rootContext);\n      tasks.push((async () => {\n        const {\n          resolver,\n          context\n        } = options;\n        const resolvedUrl = await (0, _utils.resolveRequests)(resolver, context, [...new Set([request, normalizedUrl])]);\n        return {\n          url: resolvedUrl,\n          media,\n          prefix,\n          isRequestable\n        };\n      })());\n    } else {\n      tasks.push({\n        url,\n        media,\n        prefix,\n        isRequestable\n      });\n    }\n  }\n\n  const results = await Promise.all(tasks);\n\n  for (let index = 0; index <= results.length - 1; index++) {\n    const {\n      url,\n      isRequestable,\n      media\n    } = results[index];\n\n    if (isRequestable) {\n      const {\n        prefix\n      } = results[index];\n      const newUrl = prefix ? `${prefix}!${url}` : url;\n      const importKey = newUrl;\n      let importName = imports.get(importKey);\n\n      if (!importName) {\n        importName = `___CSS_LOADER_AT_RULE_IMPORT_${imports.size}___`;\n        imports.set(importKey, importName);\n        options.imports.push({\n          importName,\n          url: options.urlHandler(newUrl),\n          index\n        });\n      }\n\n      options.api.push({\n        importName,\n        media,\n        index\n      }); // eslint-disable-next-line no-continue\n\n      continue;\n    }\n\n    options.api.push({\n      url,\n      media,\n      index\n    });\n  }\n\n  return Promise.resolve();\n});\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}