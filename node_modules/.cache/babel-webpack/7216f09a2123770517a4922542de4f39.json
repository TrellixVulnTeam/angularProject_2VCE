{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar DependencyReference = require(\"./DependencyReference\");\n\nvar ModuleDependency = require(\"./ModuleDependency\");\n\nvar Template = require(\"../Template\");\n\nvar RequireIncludeDependency = /*#__PURE__*/function (_ModuleDependency) {\n  _inherits(RequireIncludeDependency, _ModuleDependency);\n\n  var _super = _createSuper(RequireIncludeDependency);\n\n  function RequireIncludeDependency(request, range) {\n    var _this;\n\n    _classCallCheck(this, RequireIncludeDependency);\n\n    _this = _super.call(this, request);\n    _this.range = range;\n    return _this;\n  }\n\n  _createClass(RequireIncludeDependency, [{\n    key: \"getReference\",\n    value: function getReference() {\n      if (!this.module) return null; // This doesn't use any export\n\n      return new DependencyReference(this.module, [], false);\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return \"require.include\";\n    }\n  }]);\n\n  return RequireIncludeDependency;\n}(ModuleDependency);\n\nRequireIncludeDependency.Template = /*#__PURE__*/function () {\n  function RequireIncludeDependencyTemplate() {\n    _classCallCheck(this, RequireIncludeDependencyTemplate);\n  }\n\n  _createClass(RequireIncludeDependencyTemplate, [{\n    key: \"apply\",\n    value: function apply(dep, source, runtime) {\n      var comment = runtime.outputOptions.pathinfo ? Template.toComment(\"require.include \".concat(runtime.requestShortener.shorten(dep.request))) : \"\";\n      source.replace(dep.range[0], dep.range[1] - 1, \"undefined\".concat(comment));\n    }\n  }]);\n\n  return RequireIncludeDependencyTemplate;\n}();\n\nmodule.exports = RequireIncludeDependency;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/dependencies/RequireIncludeDependency.js"],"names":["DependencyReference","require","ModuleDependency","Template","RequireIncludeDependency","request","range","module","dep","source","runtime","comment","outputOptions","pathinfo","toComment","requestShortener","shorten","replace","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEA,IAAMA,mBAAmB,GAAGC,OAAO,CAAC,uBAAD,CAAnC;;AACA,IAAMC,gBAAgB,GAAGD,OAAO,CAAC,oBAAD,CAAhC;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,aAAD,CAAxB;;IAEMG,wB;;;;;AACL,oCAAYC,OAAZ,EAAqBC,KAArB,EAA4B;AAAA;;AAAA;;AAC3B,8BAAMD,OAAN;AACA,UAAKC,KAAL,GAAaA,KAAb;AAF2B;AAG3B;;;;WAED,wBAAe;AACd,UAAI,CAAC,KAAKC,MAAV,EAAkB,OAAO,IAAP,CADJ,CAEd;;AACA,aAAO,IAAIP,mBAAJ,CAAwB,KAAKO,MAA7B,EAAqC,EAArC,EAAyC,KAAzC,CAAP;AACA;;;SAED,eAAW;AACV,aAAO,iBAAP;AACA;;;;EAdqCL,gB;;AAiBvCE,wBAAwB,CAACD,QAAzB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WACC,eAAMK,GAAN,EAAWC,MAAX,EAAmBC,OAAnB,EAA4B;AAC3B,UAAMC,OAAO,GAAGD,OAAO,CAACE,aAAR,CAAsBC,QAAtB,GACbV,QAAQ,CAACW,SAAT,2BACmBJ,OAAO,CAACK,gBAAR,CAAyBC,OAAzB,CAAiCR,GAAG,CAACH,OAArC,CADnB,EADa,GAIb,EAJH;AAKAI,MAAAA,MAAM,CAACQ,OAAP,CAAeT,GAAG,CAACF,KAAJ,CAAU,CAAV,CAAf,EAA6BE,GAAG,CAACF,KAAJ,CAAU,CAAV,IAAe,CAA5C,qBAA2DK,OAA3D;AACA;AARF;;AAAA;AAAA;;AAWAJ,MAAM,CAACW,OAAP,GAAiBd,wBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependencyReference = require(\"./DependencyReference\");\nconst ModuleDependency = require(\"./ModuleDependency\");\nconst Template = require(\"../Template\");\n\nclass RequireIncludeDependency extends ModuleDependency {\n\tconstructor(request, range) {\n\t\tsuper(request);\n\t\tthis.range = range;\n\t}\n\n\tgetReference() {\n\t\tif (!this.module) return null;\n\t\t// This doesn't use any export\n\t\treturn new DependencyReference(this.module, [], false);\n\t}\n\n\tget type() {\n\t\treturn \"require.include\";\n\t}\n}\n\nRequireIncludeDependency.Template = class RequireIncludeDependencyTemplate {\n\tapply(dep, source, runtime) {\n\t\tconst comment = runtime.outputOptions.pathinfo\n\t\t\t? Template.toComment(\n\t\t\t\t\t`require.include ${runtime.requestShortener.shorten(dep.request)}`\n\t\t\t  )\n\t\t\t: \"\";\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, `undefined${comment}`);\n\t}\n};\n\nmodule.exports = RequireIncludeDependency;\n"]},"metadata":{},"sourceType":"script"}