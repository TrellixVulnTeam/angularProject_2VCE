{"ast":null,"code":"/* eslint-disable\n  strict,\n  no-param-reassign\n*/\n'use strict';\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _assertThisInitialized = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar ValidationError = /*#__PURE__*/function (_Error) {\n  _inherits(ValidationError, _Error);\n\n  var _super = _createSuper(ValidationError);\n\n  function ValidationError(errors, name) {\n    var _this;\n\n    _classCallCheck(this, ValidationError);\n\n    _this = _super.call(this);\n    _this.name = 'ValidationError';\n    _this.message = \"\".concat(name || '', \" Invalid Options\\n\\n\");\n    _this.errors = errors.map(function (err) {\n      err.dataPath = err.dataPath.replace(/\\//g, '.');\n      return err;\n    });\n\n    _this.errors.forEach(function (err) {\n      _this.message += \"options\".concat(err.dataPath, \" \").concat(err.message, \"\\n\");\n    });\n\n    Error.captureStackTrace(_assertThisInitialized(_this), _this.constructor);\n    return _this;\n  }\n\n  return ValidationError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nmodule.exports = ValidationError;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/node_modules/schema-utils/src/ValidationError.js"],"names":["ValidationError","errors","name","message","map","err","dataPath","replace","forEach","Error","captureStackTrace","constructor","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;IAEMA,e;;;;;AACJ,2BAAYC,MAAZ,EAAoBC,IAApB,EAA0B;AAAA;;AAAA;;AACxB;AAEA,UAAKA,IAAL,GAAY,iBAAZ;AAEA,UAAKC,OAAL,aAAkBD,IAAI,IAAI,EAA1B;AAEA,UAAKD,MAAL,GAAcA,MAAM,CAACG,GAAP,CAAW,UAACC,GAAD,EAAS;AAChCA,MAAAA,GAAG,CAACC,QAAJ,GAAeD,GAAG,CAACC,QAAJ,CAAaC,OAAb,CAAqB,KAArB,EAA4B,GAA5B,CAAf;AAEA,aAAOF,GAAP;AACD,KAJa,CAAd;;AAMA,UAAKJ,MAAL,CAAYO,OAAZ,CAAoB,UAACH,GAAD,EAAS;AAC3B,YAAKF,OAAL,qBAA0BE,GAAG,CAACC,QAA9B,cAA0CD,GAAG,CAACF,OAA9C;AACD,KAFD;;AAIAM,IAAAA,KAAK,CAACC,iBAAN,gCAA8B,MAAKC,WAAnC;AAjBwB;AAkBzB;;;iCAnB2BF,K;;AAsB9BG,MAAM,CAACC,OAAP,GAAiBb,eAAjB","sourcesContent":["/* eslint-disable\n  strict,\n  no-param-reassign\n*/\n\n'use strict';\n\nclass ValidationError extends Error {\n  constructor(errors, name) {\n    super();\n\n    this.name = 'ValidationError';\n\n    this.message = `${name || ''} Invalid Options\\n\\n`;\n\n    this.errors = errors.map((err) => {\n      err.dataPath = err.dataPath.replace(/\\//g, '.');\n\n      return err;\n    });\n\n    this.errors.forEach((err) => {\n      this.message += `options${err.dataPath} ${err.message}\\n`;\n    });\n\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\nmodule.exports = ValidationError;\n"]},"metadata":{},"sourceType":"script"}