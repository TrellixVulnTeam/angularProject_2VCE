{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Parser = require(\"./Parser\");\n\nvar Template = require(\"./Template\");\n\nvar _require = require(\"webpack-sources\"),\n    ConcatSource = _require.ConcatSource;\n\nvar JavascriptGenerator = require(\"./JavascriptGenerator\");\n\nvar createHash = require(\"./util/createHash\");\n\nvar JavascriptModulesPlugin = /*#__PURE__*/function () {\n  function JavascriptModulesPlugin() {\n    _classCallCheck(this, JavascriptModulesPlugin);\n  }\n\n  _createClass(JavascriptModulesPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.compilation.tap(\"JavascriptModulesPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        normalModuleFactory.hooks.createParser.for(\"javascript/auto\").tap(\"JavascriptModulesPlugin\", function (options) {\n          return new Parser(options, \"auto\");\n        });\n        normalModuleFactory.hooks.createParser.for(\"javascript/dynamic\").tap(\"JavascriptModulesPlugin\", function (options) {\n          return new Parser(options, \"script\");\n        });\n        normalModuleFactory.hooks.createParser.for(\"javascript/esm\").tap(\"JavascriptModulesPlugin\", function (options) {\n          return new Parser(options, \"module\");\n        });\n        normalModuleFactory.hooks.createGenerator.for(\"javascript/auto\").tap(\"JavascriptModulesPlugin\", function () {\n          return new JavascriptGenerator();\n        });\n        normalModuleFactory.hooks.createGenerator.for(\"javascript/dynamic\").tap(\"JavascriptModulesPlugin\", function () {\n          return new JavascriptGenerator();\n        });\n        normalModuleFactory.hooks.createGenerator.for(\"javascript/esm\").tap(\"JavascriptModulesPlugin\", function () {\n          return new JavascriptGenerator();\n        });\n        compilation.mainTemplate.hooks.renderManifest.tap(\"JavascriptModulesPlugin\", function (result, options) {\n          var chunk = options.chunk;\n          var hash = options.hash;\n          var fullHash = options.fullHash;\n          var outputOptions = options.outputOptions;\n          var moduleTemplates = options.moduleTemplates;\n          var dependencyTemplates = options.dependencyTemplates;\n          var filenameTemplate = chunk.filenameTemplate || outputOptions.filename;\n          var useChunkHash = compilation.mainTemplate.useChunkHash(chunk);\n          result.push({\n            render: function render() {\n              return compilation.mainTemplate.render(hash, chunk, moduleTemplates.javascript, dependencyTemplates);\n            },\n            filenameTemplate: filenameTemplate,\n            pathOptions: {\n              noChunkHash: !useChunkHash,\n              contentHashType: \"javascript\",\n              chunk: chunk\n            },\n            identifier: \"chunk\".concat(chunk.id),\n            hash: useChunkHash ? chunk.hash : fullHash\n          });\n          return result;\n        });\n        compilation.mainTemplate.hooks.modules.tap(\"JavascriptModulesPlugin\", function (source, chunk, hash, moduleTemplate, dependencyTemplates) {\n          return Template.renderChunkModules(chunk, function (m) {\n            return typeof m.source === \"function\";\n          }, moduleTemplate, dependencyTemplates, \"/******/ \");\n        });\n        compilation.chunkTemplate.hooks.renderManifest.tap(\"JavascriptModulesPlugin\", function (result, options) {\n          var chunk = options.chunk;\n          var outputOptions = options.outputOptions;\n          var moduleTemplates = options.moduleTemplates;\n          var dependencyTemplates = options.dependencyTemplates;\n          var filenameTemplate = chunk.filenameTemplate || outputOptions.chunkFilename;\n          result.push({\n            render: function render() {\n              return _this.renderJavascript(compilation.chunkTemplate, chunk, moduleTemplates.javascript, dependencyTemplates);\n            },\n            filenameTemplate: filenameTemplate,\n            pathOptions: {\n              chunk: chunk,\n              contentHashType: \"javascript\"\n            },\n            identifier: \"chunk\".concat(chunk.id),\n            hash: chunk.hash\n          });\n          return result;\n        });\n        compilation.hooks.contentHash.tap(\"JavascriptModulesPlugin\", function (chunk) {\n          var outputOptions = compilation.outputOptions;\n          var hashSalt = outputOptions.hashSalt,\n              hashDigest = outputOptions.hashDigest,\n              hashDigestLength = outputOptions.hashDigestLength,\n              hashFunction = outputOptions.hashFunction;\n          var hash = createHash(hashFunction);\n          if (hashSalt) hash.update(hashSalt);\n          var template = chunk.hasRuntime() ? compilation.mainTemplate : compilation.chunkTemplate;\n          hash.update(\"\".concat(chunk.id, \" \"));\n          hash.update(chunk.ids ? chunk.ids.join(\",\") : \"\");\n          template.updateHashForChunk(hash, chunk, compilation.moduleTemplates.javascript, compilation.dependencyTemplates);\n\n          var _iterator = _createForOfIteratorHelper(chunk.modulesIterable),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var m = _step.value;\n\n              if (typeof m.source === \"function\") {\n                hash.update(m.hash);\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          var digest =\n          /** @type {string} */\n          hash.digest(hashDigest);\n          chunk.contentHash.javascript = digest.substr(0, hashDigestLength);\n        });\n      });\n    }\n  }, {\n    key: \"renderJavascript\",\n    value: function renderJavascript(chunkTemplate, chunk, moduleTemplate, dependencyTemplates) {\n      var moduleSources = Template.renderChunkModules(chunk, function (m) {\n        return typeof m.source === \"function\";\n      }, moduleTemplate, dependencyTemplates);\n      var core = chunkTemplate.hooks.modules.call(moduleSources, chunk, moduleTemplate, dependencyTemplates);\n      var source = chunkTemplate.hooks.render.call(core, chunk, moduleTemplate, dependencyTemplates);\n\n      if (chunk.hasEntryModule()) {\n        source = chunkTemplate.hooks.renderWithEntry.call(source, chunk);\n      }\n\n      chunk.rendered = true;\n      return new ConcatSource(source, \";\");\n    }\n  }]);\n\n  return JavascriptModulesPlugin;\n}();\n\nmodule.exports = JavascriptModulesPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/JavascriptModulesPlugin.js"],"names":["Parser","require","Template","ConcatSource","JavascriptGenerator","createHash","JavascriptModulesPlugin","compiler","hooks","compilation","tap","normalModuleFactory","createParser","for","options","createGenerator","mainTemplate","renderManifest","result","chunk","hash","fullHash","outputOptions","moduleTemplates","dependencyTemplates","filenameTemplate","filename","useChunkHash","push","render","javascript","pathOptions","noChunkHash","contentHashType","identifier","id","modules","source","moduleTemplate","renderChunkModules","m","chunkTemplate","chunkFilename","renderJavascript","contentHash","hashSalt","hashDigest","hashDigestLength","hashFunction","update","template","hasRuntime","ids","join","updateHashForChunk","modulesIterable","digest","substr","moduleSources","core","call","hasEntryModule","renderWithEntry","rendered","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Parser = require(\"./Parser\");\nconst Template = require(\"./Template\");\nconst { ConcatSource } = require(\"webpack-sources\");\nconst JavascriptGenerator = require(\"./JavascriptGenerator\");\nconst createHash = require(\"./util/createHash\");\n\nclass JavascriptModulesPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"JavascriptModulesPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", options => {\n\t\t\t\t\t\treturn new Parser(options, \"auto\");\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", options => {\n\t\t\t\t\t\treturn new Parser(options, \"script\");\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", options => {\n\t\t\t\t\t\treturn new Parser(options, \"module\");\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JavascriptGenerator();\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JavascriptGenerator();\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JavascriptGenerator();\n\t\t\t\t\t});\n\t\t\t\tcompilation.mainTemplate.hooks.renderManifest.tap(\n\t\t\t\t\t\"JavascriptModulesPlugin\",\n\t\t\t\t\t(result, options) => {\n\t\t\t\t\t\tconst chunk = options.chunk;\n\t\t\t\t\t\tconst hash = options.hash;\n\t\t\t\t\t\tconst fullHash = options.fullHash;\n\t\t\t\t\t\tconst outputOptions = options.outputOptions;\n\t\t\t\t\t\tconst moduleTemplates = options.moduleTemplates;\n\t\t\t\t\t\tconst dependencyTemplates = options.dependencyTemplates;\n\n\t\t\t\t\t\tconst filenameTemplate =\n\t\t\t\t\t\t\tchunk.filenameTemplate || outputOptions.filename;\n\n\t\t\t\t\t\tconst useChunkHash = compilation.mainTemplate.useChunkHash(chunk);\n\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\trender: () =>\n\t\t\t\t\t\t\t\tcompilation.mainTemplate.render(\n\t\t\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\tmoduleTemplates.javascript,\n\t\t\t\t\t\t\t\t\tdependencyTemplates\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tfilenameTemplate,\n\t\t\t\t\t\t\tpathOptions: {\n\t\t\t\t\t\t\t\tnoChunkHash: !useChunkHash,\n\t\t\t\t\t\t\t\tcontentHashType: \"javascript\",\n\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tidentifier: `chunk${chunk.id}`,\n\t\t\t\t\t\t\thash: useChunkHash ? chunk.hash : fullHash\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.mainTemplate.hooks.modules.tap(\n\t\t\t\t\t\"JavascriptModulesPlugin\",\n\t\t\t\t\t(source, chunk, hash, moduleTemplate, dependencyTemplates) => {\n\t\t\t\t\t\treturn Template.renderChunkModules(\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tm => typeof m.source === \"function\",\n\t\t\t\t\t\t\tmoduleTemplate,\n\t\t\t\t\t\t\tdependencyTemplates,\n\t\t\t\t\t\t\t\"/******/ \"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.chunkTemplate.hooks.renderManifest.tap(\n\t\t\t\t\t\"JavascriptModulesPlugin\",\n\t\t\t\t\t(result, options) => {\n\t\t\t\t\t\tconst chunk = options.chunk;\n\t\t\t\t\t\tconst outputOptions = options.outputOptions;\n\t\t\t\t\t\tconst moduleTemplates = options.moduleTemplates;\n\t\t\t\t\t\tconst dependencyTemplates = options.dependencyTemplates;\n\t\t\t\t\t\tconst filenameTemplate =\n\t\t\t\t\t\t\tchunk.filenameTemplate || outputOptions.chunkFilename;\n\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\trender: () =>\n\t\t\t\t\t\t\t\tthis.renderJavascript(\n\t\t\t\t\t\t\t\t\tcompilation.chunkTemplate,\n\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\tmoduleTemplates.javascript,\n\t\t\t\t\t\t\t\t\tdependencyTemplates\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tfilenameTemplate,\n\t\t\t\t\t\t\tpathOptions: {\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tidentifier: `chunk${chunk.id}`,\n\t\t\t\t\t\t\thash: chunk.hash\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.contentHash.tap(\"JavascriptModulesPlugin\", chunk => {\n\t\t\t\t\tconst outputOptions = compilation.outputOptions;\n\t\t\t\t\tconst {\n\t\t\t\t\t\thashSalt,\n\t\t\t\t\t\thashDigest,\n\t\t\t\t\t\thashDigestLength,\n\t\t\t\t\t\thashFunction\n\t\t\t\t\t} = outputOptions;\n\t\t\t\t\tconst hash = createHash(hashFunction);\n\t\t\t\t\tif (hashSalt) hash.update(hashSalt);\n\t\t\t\t\tconst template = chunk.hasRuntime()\n\t\t\t\t\t\t? compilation.mainTemplate\n\t\t\t\t\t\t: compilation.chunkTemplate;\n\t\t\t\t\thash.update(`${chunk.id} `);\n\t\t\t\t\thash.update(chunk.ids ? chunk.ids.join(\",\") : \"\");\n\t\t\t\t\ttemplate.updateHashForChunk(\n\t\t\t\t\t\thash,\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tcompilation.moduleTemplates.javascript,\n\t\t\t\t\t\tcompilation.dependencyTemplates\n\t\t\t\t\t);\n\t\t\t\t\tfor (const m of chunk.modulesIterable) {\n\t\t\t\t\t\tif (typeof m.source === \"function\") {\n\t\t\t\t\t\t\thash.update(m.hash);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst digest = /** @type {string} */ (hash.digest(hashDigest));\n\t\t\t\t\tchunk.contentHash.javascript = digest.substr(0, hashDigestLength);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\trenderJavascript(chunkTemplate, chunk, moduleTemplate, dependencyTemplates) {\n\t\tconst moduleSources = Template.renderChunkModules(\n\t\t\tchunk,\n\t\t\tm => typeof m.source === \"function\",\n\t\t\tmoduleTemplate,\n\t\t\tdependencyTemplates\n\t\t);\n\t\tconst core = chunkTemplate.hooks.modules.call(\n\t\t\tmoduleSources,\n\t\t\tchunk,\n\t\t\tmoduleTemplate,\n\t\t\tdependencyTemplates\n\t\t);\n\t\tlet source = chunkTemplate.hooks.render.call(\n\t\t\tcore,\n\t\t\tchunk,\n\t\t\tmoduleTemplate,\n\t\t\tdependencyTemplates\n\t\t);\n\t\tif (chunk.hasEntryModule()) {\n\t\t\tsource = chunkTemplate.hooks.renderWithEntry.call(source, chunk);\n\t\t}\n\t\tchunk.rendered = true;\n\t\treturn new ConcatSource(source, \";\");\n\t}\n}\n\nmodule.exports = JavascriptModulesPlugin;\n"]},"metadata":{},"sourceType":"script"}