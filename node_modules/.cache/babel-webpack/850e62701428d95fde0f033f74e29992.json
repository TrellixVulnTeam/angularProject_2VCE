{"ast":null,"code":"\"use strict\";\n\nvar _toArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/toArray\");\n\nvar _regeneratorRuntime = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSourceMappingURL = getSourceMappingURL;\nexports.fetchFromURL = fetchFromURL;\nexports.flattenSourceMap = flattenSourceMap;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _url = _interopRequireDefault(require(\"url\"));\n\nvar _sourceMap = _interopRequireDefault(require(\"source-map\"));\n\nvar _iconvLite = require(\"iconv-lite\");\n\nvar _loaderUtils = require(\"loader-utils\");\n\nvar _parseDataUrl = _interopRequireDefault(require(\"./parse-data-url\"));\n\nvar _labelsToNames = _interopRequireDefault(require(\"./labels-to-names\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // Matches only the last occurrence of sourceMappingURL\n\n\nvar innerRegex = /\\s*[#@]\\s*sourceMappingURL\\s*=\\s*([^\\s'\"]*)\\s*/;\n/* eslint-disable prefer-template */\n\nvar sourceMappingURLRegex = RegExp('(?:' + '/\\\\*' + '(?:\\\\s*\\r?\\n(?://)?)?' + '(?:' + innerRegex.source + ')' + '\\\\s*' + '\\\\*/' + '|' + '//(?:' + innerRegex.source + ')' + ')' + '\\\\s*');\n/* eslint-enable prefer-template */\n\nfunction labelToName(label) {\n  var labelLowercase = String(label).trim().toLowerCase();\n  return _labelsToNames.default[labelLowercase] || null;\n}\n\nfunction flattenSourceMap(_x) {\n  return _flattenSourceMap.apply(this, arguments);\n}\n\nfunction _flattenSourceMap() {\n  _flattenSourceMap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(map) {\n    var consumer, generatedMap;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return new _sourceMap.default.SourceMapConsumer(map);\n\n          case 2:\n            consumer = _context.sent;\n            generatedMap = map.file ? new _sourceMap.default.SourceMapGenerator({\n              file: map.file\n            }) : new _sourceMap.default.SourceMapGenerator();\n            consumer.sources.forEach(function (sourceFile) {\n              var sourceContent = consumer.sourceContentFor(sourceFile, true);\n              generatedMap.setSourceContent(sourceFile, sourceContent);\n            });\n            consumer.eachMapping(function (mapping) {\n              var _consumer$originalPos = consumer.originalPositionFor({\n                line: mapping.generatedLine,\n                column: mapping.generatedColumn\n              }),\n                  source = _consumer$originalPos.source;\n\n              var mappings = {\n                source: source,\n                original: {\n                  line: mapping.originalLine,\n                  column: mapping.originalColumn\n                },\n                generated: {\n                  line: mapping.generatedLine,\n                  column: mapping.generatedColumn\n                }\n              };\n\n              if (source) {\n                generatedMap.addMapping(mappings);\n              }\n            });\n            return _context.abrupt(\"return\", generatedMap.toJSON());\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _flattenSourceMap.apply(this, arguments);\n}\n\nfunction getSourceMappingURL(code) {\n  var lines = code.split(/^/m);\n  var match;\n\n  for (var i = lines.length - 1; i >= 0; i--) {\n    match = lines[i].match(sourceMappingURLRegex);\n\n    if (match) {\n      break;\n    }\n  }\n\n  return {\n    sourceMappingURL: match ? match[1] || match[2] || '' : null,\n    replacementString: match ? match[0] : null\n  };\n}\n\nfunction getAbsolutePath(context, url, sourceRoot) {\n  var request = (0, _loaderUtils.urlToRequest)(url, true);\n\n  if (sourceRoot) {\n    if (_path.default.isAbsolute(sourceRoot)) {\n      return _path.default.join(sourceRoot, request);\n    }\n\n    return _path.default.join(context, (0, _loaderUtils.urlToRequest)(sourceRoot, true), request);\n  }\n\n  return _path.default.join(context, request);\n}\n\nfunction fetchFromDataURL(loaderContext, sourceURL) {\n  var dataURL = (0, _parseDataUrl.default)(sourceURL);\n\n  if (dataURL) {\n    dataURL.encodingName = labelToName(dataURL.mimeType.parameters.get('charset')) || 'UTF-8';\n    return (0, _iconvLite.decode)(dataURL.body, dataURL.encodingName);\n  }\n\n  throw new Error(\"Failed to parse source map from \\\"data\\\" URL: \".concat(sourceURL));\n}\n\nfunction fetchFromFilesystem(_x2, _x3) {\n  return _fetchFromFilesystem.apply(this, arguments);\n}\n\nfunction _fetchFromFilesystem() {\n  _fetchFromFilesystem = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(loaderContext, sourceURL) {\n    var buffer;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return new Promise(function (resolve, reject) {\n              loaderContext.fs.readFile(sourceURL, function (error, data) {\n                if (error) {\n                  return reject(error);\n                }\n\n                return resolve(data);\n              });\n            });\n\n          case 3:\n            buffer = _context2.sent;\n            _context2.next = 9;\n            break;\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            throw new Error(\"Failed to parse source map from '\".concat(sourceURL, \"' file: \").concat(_context2.t0));\n\n          case 9:\n            return _context2.abrupt(\"return\", buffer.toString());\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 6]]);\n  }));\n  return _fetchFromFilesystem.apply(this, arguments);\n}\n\nfunction fetchPathsFromFilesystem(_x4, _x5) {\n  return _fetchPathsFromFilesystem.apply(this, arguments);\n}\n\nfunction _fetchPathsFromFilesystem() {\n  _fetchPathsFromFilesystem = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(loaderContext, possibleRequests) {\n    var errorsAccumulator,\n        result,\n        _possibleRequests,\n        tailPossibleRequests,\n        _args3 = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            errorsAccumulator = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : '';\n            _context3.prev = 1;\n            _context3.next = 4;\n            return fetchFromFilesystem(loaderContext, possibleRequests[0], errorsAccumulator);\n\n          case 4:\n            result = _context3.sent;\n            _context3.next = 15;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](1);\n            // eslint-disable-next-line no-param-reassign\n            errorsAccumulator += \"\".concat(_context3.t0.message, \"\\n\\n\");\n            _possibleRequests = _toArray(possibleRequests), tailPossibleRequests = _possibleRequests.slice(1);\n\n            if (!(tailPossibleRequests.length === 0)) {\n              _context3.next = 14;\n              break;\n            }\n\n            _context3.t0.message = errorsAccumulator;\n            throw _context3.t0;\n\n          case 14:\n            return _context3.abrupt(\"return\", fetchPathsFromFilesystem(loaderContext, tailPossibleRequests, errorsAccumulator));\n\n          case 15:\n            return _context3.abrupt(\"return\", result);\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 7]]);\n  }));\n  return _fetchPathsFromFilesystem.apply(this, arguments);\n}\n\nfunction fetchFromURL(_x6, _x7, _x8, _x9) {\n  return _fetchFromURL.apply(this, arguments);\n}\n\nfunction _fetchFromURL() {\n  _fetchFromURL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(loaderContext, context, url, sourceRoot) {\n    var skipReading,\n        _url$default$parse,\n        protocol,\n        _sourceContent,\n        pathFromURL,\n        _sourceURL,\n        _sourceContent2,\n        _sourceURL2,\n        _sourceContent3,\n        possibleRequests,\n        sourceURL,\n        sourceContent,\n        _args4 = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            skipReading = _args4.length > 4 && _args4[4] !== undefined ? _args4[4] : false;\n\n            if (!(/^[a-z][a-z0-9+.-]*:/i.test(url) && !_path.default.win32.isAbsolute(url))) {\n              _context4.next = 18;\n              break;\n            }\n\n            _url$default$parse = _url.default.parse(url), protocol = _url$default$parse.protocol;\n\n            if (!(protocol === 'data:')) {\n              _context4.next = 8;\n              break;\n            }\n\n            if (!skipReading) {\n              _context4.next = 6;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", {\n              sourceURL: ''\n            });\n\n          case 6:\n            _sourceContent = fetchFromDataURL(loaderContext, url);\n            return _context4.abrupt(\"return\", {\n              sourceURL: '',\n              sourceContent: _sourceContent\n            });\n\n          case 8:\n            if (!skipReading) {\n              _context4.next = 10;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", {\n              sourceURL: url\n            });\n\n          case 10:\n            if (!(protocol === 'file:')) {\n              _context4.next = 17;\n              break;\n            }\n\n            pathFromURL = _url.default.fileURLToPath(url);\n            _sourceURL = _path.default.normalize(pathFromURL);\n            _context4.next = 15;\n            return fetchFromFilesystem(loaderContext, _sourceURL);\n\n          case 15:\n            _sourceContent2 = _context4.sent;\n            return _context4.abrupt(\"return\", {\n              sourceURL: _sourceURL,\n              sourceContent: _sourceContent2\n            });\n\n          case 17:\n            throw new Error(\"Failed to parse source map: '\".concat(url, \"' URL is not supported\"));\n\n          case 18:\n            if (!/^\\/\\//.test(url)) {\n              _context4.next = 20;\n              break;\n            }\n\n            throw new Error(\"Failed to parse source map: '\".concat(url, \"' URL is not supported\"));\n\n          case 20:\n            if (!_path.default.isAbsolute(url)) {\n              _context4.next = 29;\n              break;\n            }\n\n            _sourceURL2 = _path.default.normalize(url);\n\n            if (skipReading) {\n              _context4.next = 28;\n              break;\n            }\n\n            possibleRequests = [_sourceURL2];\n\n            if (url.startsWith('/')) {\n              possibleRequests.push(getAbsolutePath(context, _sourceURL2.slice(1), sourceRoot));\n            }\n\n            _context4.next = 27;\n            return fetchPathsFromFilesystem(loaderContext, possibleRequests);\n\n          case 27:\n            _sourceContent3 = _context4.sent;\n\n          case 28:\n            return _context4.abrupt(\"return\", {\n              sourceURL: _sourceURL2,\n              sourceContent: _sourceContent3\n            });\n\n          case 29:\n            // 4. Relative path\n            sourceURL = getAbsolutePath(context, url, sourceRoot);\n\n            if (skipReading) {\n              _context4.next = 34;\n              break;\n            }\n\n            _context4.next = 33;\n            return fetchFromFilesystem(loaderContext, sourceURL);\n\n          case 33:\n            sourceContent = _context4.sent;\n\n          case 34:\n            return _context4.abrupt(\"return\", {\n              sourceURL: sourceURL,\n              sourceContent: sourceContent\n            });\n\n          case 35:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _fetchFromURL.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/source-map-loader/dist/utils.js"],"names":["Object","defineProperty","exports","value","getSourceMappingURL","fetchFromURL","flattenSourceMap","_path","_interopRequireDefault","require","_url","_sourceMap","_iconvLite","_loaderUtils","_parseDataUrl","_labelsToNames","obj","__esModule","default","innerRegex","sourceMappingURLRegex","RegExp","source","labelToName","label","labelLowercase","String","trim","toLowerCase","map","SourceMapConsumer","consumer","generatedMap","file","SourceMapGenerator","sources","forEach","sourceFile","sourceContent","sourceContentFor","setSourceContent","eachMapping","mapping","originalPositionFor","line","generatedLine","column","generatedColumn","mappings","original","originalLine","originalColumn","generated","addMapping","toJSON","code","lines","split","match","i","length","sourceMappingURL","replacementString","getAbsolutePath","context","url","sourceRoot","request","urlToRequest","isAbsolute","join","fetchFromDataURL","loaderContext","sourceURL","dataURL","encodingName","mimeType","parameters","get","decode","body","Error","fetchFromFilesystem","Promise","resolve","reject","fs","readFile","error","data","buffer","toString","fetchPathsFromFilesystem","possibleRequests","errorsAccumulator","result","message","tailPossibleRequests","skipReading","test","win32","parse","protocol","pathFromURL","fileURLToPath","normalize","startsWith","push","slice"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSourceMappingURL = getSourceMappingURL;\nexports.fetchFromURL = fetchFromURL;\nexports.flattenSourceMap = flattenSourceMap;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _url = _interopRequireDefault(require(\"url\"));\n\nvar _sourceMap = _interopRequireDefault(require(\"source-map\"));\n\nvar _iconvLite = require(\"iconv-lite\");\n\nvar _loaderUtils = require(\"loader-utils\");\n\nvar _parseDataUrl = _interopRequireDefault(require(\"./parse-data-url\"));\n\nvar _labelsToNames = _interopRequireDefault(require(\"./labels-to-names\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Matches only the last occurrence of sourceMappingURL\nconst innerRegex = /\\s*[#@]\\s*sourceMappingURL\\s*=\\s*([^\\s'\"]*)\\s*/;\n/* eslint-disable prefer-template */\n\nconst sourceMappingURLRegex = RegExp('(?:' + '/\\\\*' + '(?:\\\\s*\\r?\\n(?://)?)?' + '(?:' + innerRegex.source + ')' + '\\\\s*' + '\\\\*/' + '|' + '//(?:' + innerRegex.source + ')' + ')' + '\\\\s*');\n/* eslint-enable prefer-template */\n\nfunction labelToName(label) {\n  const labelLowercase = String(label).trim().toLowerCase();\n  return _labelsToNames.default[labelLowercase] || null;\n}\n\nasync function flattenSourceMap(map) {\n  const consumer = await new _sourceMap.default.SourceMapConsumer(map);\n  const generatedMap = map.file ? new _sourceMap.default.SourceMapGenerator({\n    file: map.file\n  }) : new _sourceMap.default.SourceMapGenerator();\n  consumer.sources.forEach(sourceFile => {\n    const sourceContent = consumer.sourceContentFor(sourceFile, true);\n    generatedMap.setSourceContent(sourceFile, sourceContent);\n  });\n  consumer.eachMapping(mapping => {\n    const {\n      source\n    } = consumer.originalPositionFor({\n      line: mapping.generatedLine,\n      column: mapping.generatedColumn\n    });\n    const mappings = {\n      source,\n      original: {\n        line: mapping.originalLine,\n        column: mapping.originalColumn\n      },\n      generated: {\n        line: mapping.generatedLine,\n        column: mapping.generatedColumn\n      }\n    };\n\n    if (source) {\n      generatedMap.addMapping(mappings);\n    }\n  });\n  return generatedMap.toJSON();\n}\n\nfunction getSourceMappingURL(code) {\n  const lines = code.split(/^/m);\n  let match;\n\n  for (let i = lines.length - 1; i >= 0; i--) {\n    match = lines[i].match(sourceMappingURLRegex);\n\n    if (match) {\n      break;\n    }\n  }\n\n  return {\n    sourceMappingURL: match ? match[1] || match[2] || '' : null,\n    replacementString: match ? match[0] : null\n  };\n}\n\nfunction getAbsolutePath(context, url, sourceRoot) {\n  const request = (0, _loaderUtils.urlToRequest)(url, true);\n\n  if (sourceRoot) {\n    if (_path.default.isAbsolute(sourceRoot)) {\n      return _path.default.join(sourceRoot, request);\n    }\n\n    return _path.default.join(context, (0, _loaderUtils.urlToRequest)(sourceRoot, true), request);\n  }\n\n  return _path.default.join(context, request);\n}\n\nfunction fetchFromDataURL(loaderContext, sourceURL) {\n  const dataURL = (0, _parseDataUrl.default)(sourceURL);\n\n  if (dataURL) {\n    dataURL.encodingName = labelToName(dataURL.mimeType.parameters.get('charset')) || 'UTF-8';\n    return (0, _iconvLite.decode)(dataURL.body, dataURL.encodingName);\n  }\n\n  throw new Error(`Failed to parse source map from \"data\" URL: ${sourceURL}`);\n}\n\nasync function fetchFromFilesystem(loaderContext, sourceURL) {\n  let buffer;\n\n  try {\n    buffer = await new Promise((resolve, reject) => {\n      loaderContext.fs.readFile(sourceURL, (error, data) => {\n        if (error) {\n          return reject(error);\n        }\n\n        return resolve(data);\n      });\n    });\n  } catch (error) {\n    throw new Error(`Failed to parse source map from '${sourceURL}' file: ${error}`);\n  }\n\n  return buffer.toString();\n}\n\nasync function fetchPathsFromFilesystem(loaderContext, possibleRequests, errorsAccumulator = '') {\n  let result;\n\n  try {\n    result = await fetchFromFilesystem(loaderContext, possibleRequests[0], errorsAccumulator);\n  } catch (error) {\n    // eslint-disable-next-line no-param-reassign\n    errorsAccumulator += `${error.message}\\n\\n`;\n    const [, ...tailPossibleRequests] = possibleRequests;\n\n    if (tailPossibleRequests.length === 0) {\n      error.message = errorsAccumulator;\n      throw error;\n    }\n\n    return fetchPathsFromFilesystem(loaderContext, tailPossibleRequests, errorsAccumulator);\n  }\n\n  return result;\n}\n\nasync function fetchFromURL(loaderContext, context, url, sourceRoot, skipReading = false) {\n  // 1. It's an absolute url and it is not `windows` path like `C:\\dir\\file`\n  if (/^[a-z][a-z0-9+.-]*:/i.test(url) && !_path.default.win32.isAbsolute(url)) {\n    const {\n      protocol\n    } = _url.default.parse(url);\n\n    if (protocol === 'data:') {\n      if (skipReading) {\n        return {\n          sourceURL: ''\n        };\n      }\n\n      const sourceContent = fetchFromDataURL(loaderContext, url);\n      return {\n        sourceURL: '',\n        sourceContent\n      };\n    }\n\n    if (skipReading) {\n      return {\n        sourceURL: url\n      };\n    }\n\n    if (protocol === 'file:') {\n      const pathFromURL = _url.default.fileURLToPath(url);\n\n      const sourceURL = _path.default.normalize(pathFromURL);\n\n      const sourceContent = await fetchFromFilesystem(loaderContext, sourceURL);\n      return {\n        sourceURL,\n        sourceContent\n      };\n    }\n\n    throw new Error(`Failed to parse source map: '${url}' URL is not supported`);\n  } // 2. It's a scheme-relative\n\n\n  if (/^\\/\\//.test(url)) {\n    throw new Error(`Failed to parse source map: '${url}' URL is not supported`);\n  } // 3. Absolute path\n\n\n  if (_path.default.isAbsolute(url)) {\n    const sourceURL = _path.default.normalize(url);\n\n    let sourceContent;\n\n    if (!skipReading) {\n      const possibleRequests = [sourceURL];\n\n      if (url.startsWith('/')) {\n        possibleRequests.push(getAbsolutePath(context, sourceURL.slice(1), sourceRoot));\n      }\n\n      sourceContent = await fetchPathsFromFilesystem(loaderContext, possibleRequests);\n    }\n\n    return {\n      sourceURL,\n      sourceContent\n    };\n  } // 4. Relative path\n\n\n  const sourceURL = getAbsolutePath(context, url, sourceRoot);\n  let sourceContent;\n\n  if (!skipReading) {\n    sourceContent = await fetchFromFilesystem(loaderContext, sourceURL);\n  }\n\n  return {\n    sourceURL,\n    sourceContent\n  };\n}"]},"metadata":{},"sourceType":"script"}