{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _defineProperty = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _objectSpread = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar path = require(\"path\");\n\nvar DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\n/** @typedef {{name: string|Array<string>, forceRelative: boolean}} MainFieldOptions */\n\n\nvar alreadyTriedMainField = Symbol(\"alreadyTriedMainField\");\n\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {MainFieldOptions} options options\n   * @param {string | ResolveStepHook} target target\n   */\n  function MainFieldPlugin(source, options, target) {\n    _classCallCheck(this, MainFieldPlugin);\n\n    this.source = source;\n    this.options = options;\n    this.target = target;\n  }\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n\n\n  _createClass(MainFieldPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"MainFieldPlugin\", function (request, resolveContext, callback) {\n        if (request.path !== request.descriptionFileRoot || request[alreadyTriedMainField] === request.descriptionFilePath || !request.descriptionFilePath) return callback();\n        var filename = path.basename(request.descriptionFilePath);\n        var mainModule = DescriptionFileUtils.getField(request.descriptionFileData, _this.options.name);\n\n        if (!mainModule || typeof mainModule !== \"string\" || mainModule === \".\" || mainModule === \"./\") {\n          return callback();\n        }\n\n        if (_this.options.forceRelative && !/^\\.\\.?\\//.test(mainModule)) mainModule = \"./\" + mainModule;\n\n        var obj = _objectSpread(_objectSpread({}, request), {}, _defineProperty({\n          request: mainModule,\n          module: false,\n          directory: mainModule.endsWith(\"/\")\n        }, alreadyTriedMainField, request.descriptionFilePath));\n\n        return resolver.doResolve(target, obj, \"use \" + mainModule + \" from \" + _this.options.name + \" in \" + filename, resolveContext, callback);\n      });\n    }\n  }]);\n\n  return MainFieldPlugin;\n}();","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/enhanced-resolve/lib/MainFieldPlugin.js"],"names":["path","require","DescriptionFileUtils","alreadyTriedMainField","Symbol","module","exports","source","options","target","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","descriptionFileRoot","descriptionFilePath","filename","basename","mainModule","getField","descriptionFileData","name","forceRelative","test","obj","directory","endsWith","doResolve"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,oBAAoB,GAAGD,OAAO,CAAC,wBAAD,CAApC;AAEA;;AACA;;AACA;;;AAEA,IAAME,qBAAqB,GAAGC,MAAM,CAAC,uBAAD,CAApC;;AAEAC,MAAM,CAACC,OAAP;AACC;AACD;AACA;AACA;AACA;AACC,2BAAYC,MAAZ,EAAoBC,OAApB,EAA6BC,MAA7B,EAAqC;AAAA;;AACpC,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA;AAED;AACD;AACA;AACA;;;AAfA;AAAA;AAAA,WAgBC,eAAMC,QAAN,EAAgB;AAAA;;AACf,UAAMD,MAAM,GAAGC,QAAQ,CAACC,UAAT,CAAoB,KAAKF,MAAzB,CAAf;AACAC,MAAAA,QAAQ,CACNE,OADF,CACU,KAAKL,MADf,EAEEM,QAFF,CAEW,iBAFX,EAE8B,UAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,EAAuC;AACnE,YACCF,OAAO,CAACd,IAAR,KAAiBc,OAAO,CAACG,mBAAzB,IACAH,OAAO,CAACX,qBAAD,CAAP,KAAmCW,OAAO,CAACI,mBAD3C,IAEA,CAACJ,OAAO,CAACI,mBAHV,EAKC,OAAOF,QAAQ,EAAf;AACD,YAAMG,QAAQ,GAAGnB,IAAI,CAACoB,QAAL,CAAcN,OAAO,CAACI,mBAAtB,CAAjB;AACA,YAAIG,UAAU,GAAGnB,oBAAoB,CAACoB,QAArB,CAChBR,OAAO,CAACS,mBADQ,EAEhB,KAAI,CAACf,OAAL,CAAagB,IAFG,CAAjB;;AAKA,YACC,CAACH,UAAD,IACA,OAAOA,UAAP,KAAsB,QADtB,IAEAA,UAAU,KAAK,GAFf,IAGAA,UAAU,KAAK,IAJhB,EAKE;AACD,iBAAOL,QAAQ,EAAf;AACA;;AACD,YAAI,KAAI,CAACR,OAAL,CAAaiB,aAAb,IAA8B,CAAC,WAAWC,IAAX,CAAgBL,UAAhB,CAAnC,EACCA,UAAU,GAAG,OAAOA,UAApB;;AACD,YAAMM,GAAG,mCACLb,OADK;AAERA,UAAAA,OAAO,EAAEO,UAFD;AAGRhB,UAAAA,MAAM,EAAE,KAHA;AAIRuB,UAAAA,SAAS,EAAEP,UAAU,CAACQ,QAAX,CAAoB,GAApB;AAJH,WAKP1B,qBALO,EAKiBW,OAAO,CAACI,mBALzB,EAAT;;AAOA,eAAOR,QAAQ,CAACoB,SAAT,CACNrB,MADM,EAENkB,GAFM,EAGN,SACCN,UADD,GAEC,QAFD,GAGC,KAAI,CAACb,OAAL,CAAagB,IAHd,GAIC,MAJD,GAKCL,QARK,EASNJ,cATM,EAUNC,QAVM,CAAP;AAYA,OA5CF;AA6CA;AA/DF;;AAAA;AAAA","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst path = require(\"path\");\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {{name: string|Array<string>, forceRelative: boolean}} MainFieldOptions */\n\nconst alreadyTriedMainField = Symbol(\"alreadyTriedMainField\");\n\nmodule.exports = class MainFieldPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {MainFieldOptions} options options\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, options, target) {\n\t\tthis.source = source;\n\t\tthis.options = options;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MainFieldPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (\n\t\t\t\t\trequest.path !== request.descriptionFileRoot ||\n\t\t\t\t\trequest[alreadyTriedMainField] === request.descriptionFilePath ||\n\t\t\t\t\t!request.descriptionFilePath\n\t\t\t\t)\n\t\t\t\t\treturn callback();\n\t\t\t\tconst filename = path.basename(request.descriptionFilePath);\n\t\t\t\tlet mainModule = DescriptionFileUtils.getField(\n\t\t\t\t\trequest.descriptionFileData,\n\t\t\t\t\tthis.options.name\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\t!mainModule ||\n\t\t\t\t\ttypeof mainModule !== \"string\" ||\n\t\t\t\t\tmainModule === \".\" ||\n\t\t\t\t\tmainModule === \"./\"\n\t\t\t\t) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tif (this.options.forceRelative && !/^\\.\\.?\\//.test(mainModule))\n\t\t\t\t\tmainModule = \"./\" + mainModule;\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\trequest: mainModule,\n\t\t\t\t\tmodule: false,\n\t\t\t\t\tdirectory: mainModule.endsWith(\"/\"),\n\t\t\t\t\t[alreadyTriedMainField]: request.descriptionFilePath\n\t\t\t\t};\n\t\t\t\treturn resolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"use \" +\n\t\t\t\t\t\tmainModule +\n\t\t\t\t\t\t\" from \" +\n\t\t\t\t\t\tthis.options.name +\n\t\t\t\t\t\t\" in \" +\n\t\t\t\t\t\tfilename,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}