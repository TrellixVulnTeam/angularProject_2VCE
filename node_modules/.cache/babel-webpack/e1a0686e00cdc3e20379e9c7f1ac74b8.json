{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar Queue = require(\"./util/Queue\");\n\nvar addToSet = function addToSet(a, b) {\n  var _iterator = _createForOfIteratorHelper(b),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n      a.add(item);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n};\n\nvar FlagDependencyExportsPlugin = /*#__PURE__*/function () {\n  function FlagDependencyExportsPlugin() {\n    _classCallCheck(this, FlagDependencyExportsPlugin);\n  }\n\n  _createClass(FlagDependencyExportsPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.compilation.tap(\"FlagDependencyExportsPlugin\", function (compilation) {\n        compilation.hooks.finishModules.tap(\"FlagDependencyExportsPlugin\", function (modules) {\n          var dependencies = new Map();\n          var queue = new Queue();\n          var module;\n          var moduleWithExports;\n          var moduleProvidedExports;\n          var providedExportsAreTemporary;\n\n          var processDependenciesBlock = function processDependenciesBlock(depBlock) {\n            var _iterator2 = _createForOfIteratorHelper(depBlock.dependencies),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var dep = _step2.value;\n                if (processDependency(dep)) return true;\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n\n            var _iterator3 = _createForOfIteratorHelper(depBlock.variables),\n                _step3;\n\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var variable = _step3.value;\n\n                var _iterator5 = _createForOfIteratorHelper(variable.dependencies),\n                    _step5;\n\n                try {\n                  for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                    var _dep = _step5.value;\n                    if (processDependency(_dep)) return true;\n                  }\n                } catch (err) {\n                  _iterator5.e(err);\n                } finally {\n                  _iterator5.f();\n                }\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n\n            var _iterator4 = _createForOfIteratorHelper(depBlock.blocks),\n                _step4;\n\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var block = _step4.value;\n                if (processDependenciesBlock(block)) return true;\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n\n            return false;\n          };\n\n          var processDependency = function processDependency(dep) {\n            var exportDesc = dep.getExports && dep.getExports();\n            if (!exportDesc) return;\n            moduleWithExports = true;\n            var exports = exportDesc.exports; // break early if it's only in the worst state\n\n            if (module.buildMeta.providedExports === true) {\n              return true;\n            } // break if it should move to the worst state\n\n\n            if (exports === true) {\n              module.buildMeta.providedExports = true;\n              return true;\n            } // merge in new exports\n\n\n            if (Array.isArray(exports)) {\n              addToSet(moduleProvidedExports, exports);\n            } // store dependencies\n\n\n            var exportDeps = exportDesc.dependencies;\n\n            if (exportDeps) {\n              providedExportsAreTemporary = true;\n\n              var _iterator6 = _createForOfIteratorHelper(exportDeps),\n                  _step6;\n\n              try {\n                for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                  var exportDependency = _step6.value;\n                  // add dependency for this module\n                  var set = dependencies.get(exportDependency);\n\n                  if (set === undefined) {\n                    dependencies.set(exportDependency, new Set([module]));\n                  } else {\n                    set.add(module);\n                  }\n                }\n              } catch (err) {\n                _iterator6.e(err);\n              } finally {\n                _iterator6.f();\n              }\n            }\n\n            return false;\n          };\n\n          var notifyDependencies = function notifyDependencies() {\n            var deps = dependencies.get(module);\n\n            if (deps !== undefined) {\n              var _iterator7 = _createForOfIteratorHelper(deps),\n                  _step7;\n\n              try {\n                for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                  var dep = _step7.value;\n                  queue.enqueue(dep);\n                }\n              } catch (err) {\n                _iterator7.e(err);\n              } finally {\n                _iterator7.f();\n              }\n            }\n          };\n\n          var notifyDependenciesIfDifferent = function notifyDependenciesIfDifferent(set, array) {\n            var deps = dependencies.get(module);\n\n            if (deps !== undefined) {\n              if (set.size === array.length) {\n                var i = 0;\n                var different = false;\n\n                var _iterator8 = _createForOfIteratorHelper(set),\n                    _step8;\n\n                try {\n                  for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                    var item = _step8.value;\n\n                    if (item !== array[i++]) {\n                      different = true;\n                      break;\n                    }\n                  }\n                } catch (err) {\n                  _iterator8.e(err);\n                } finally {\n                  _iterator8.f();\n                }\n\n                if (!different) return;\n              }\n\n              var _iterator9 = _createForOfIteratorHelper(deps),\n                  _step9;\n\n              try {\n                for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                  var dep = _step9.value;\n                  queue.enqueue(dep);\n                }\n              } catch (err) {\n                _iterator9.e(err);\n              } finally {\n                _iterator9.f();\n              }\n            }\n          }; // Start with all modules without provided exports\n\n\n          var _iterator10 = _createForOfIteratorHelper(modules),\n              _step10;\n\n          try {\n            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n              var _module = _step10.value;\n\n              if (_module.buildInfo.temporaryProvidedExports) {\n                // Clear exports when they are temporary\n                // and recreate them\n                _module.buildMeta.providedExports = null;\n                queue.enqueue(_module);\n              } else if (!_module.buildMeta.providedExports) {\n                queue.enqueue(_module);\n              }\n            }\n          } catch (err) {\n            _iterator10.e(err);\n          } finally {\n            _iterator10.f();\n          }\n\n          while (queue.length > 0) {\n            module = queue.dequeue();\n\n            if (module.buildMeta.providedExports !== true) {\n              moduleWithExports = module.buildMeta && module.buildMeta.exportsType;\n              moduleProvidedExports = new Set();\n              providedExportsAreTemporary = false;\n              processDependenciesBlock(module);\n              module.buildInfo.temporaryProvidedExports = providedExportsAreTemporary;\n\n              if (!moduleWithExports) {\n                notifyDependencies();\n                module.buildMeta.providedExports = true;\n              } else if (module.buildMeta.providedExports === true) {\n                notifyDependencies();\n              } else if (!module.buildMeta.providedExports) {\n                notifyDependencies();\n                module.buildMeta.providedExports = Array.from(moduleProvidedExports);\n              } else {\n                notifyDependenciesIfDifferent(moduleProvidedExports, module.buildMeta.providedExports);\n                module.buildMeta.providedExports = Array.from(moduleProvidedExports);\n              }\n            }\n          }\n        });\n        var providedExportsCache = new WeakMap();\n        compilation.hooks.rebuildModule.tap(\"FlagDependencyExportsPlugin\", function (module) {\n          providedExportsCache.set(module, module.buildMeta.providedExports);\n        });\n        compilation.hooks.finishRebuildingModule.tap(\"FlagDependencyExportsPlugin\", function (module) {\n          module.buildMeta.providedExports = providedExportsCache.get(module);\n        });\n      });\n    }\n  }]);\n\n  return FlagDependencyExportsPlugin;\n}();\n\nmodule.exports = FlagDependencyExportsPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/FlagDependencyExportsPlugin.js"],"names":["Queue","require","addToSet","a","b","item","add","FlagDependencyExportsPlugin","compiler","hooks","compilation","tap","finishModules","modules","dependencies","Map","queue","module","moduleWithExports","moduleProvidedExports","providedExportsAreTemporary","processDependenciesBlock","depBlock","dep","processDependency","variables","variable","blocks","block","exportDesc","getExports","exports","buildMeta","providedExports","Array","isArray","exportDeps","exportDependency","set","get","undefined","Set","notifyDependencies","deps","enqueue","notifyDependenciesIfDifferent","array","size","length","i","different","buildInfo","temporaryProvidedExports","dequeue","exportsType","from","providedExportsCache","WeakMap","rebuildModule","finishRebuildingModule"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Queue = require(\"./util/Queue\");\n\nconst addToSet = (a, b) => {\n\tfor (const item of b) {\n\t\ta.add(item);\n\t}\n};\n\nclass FlagDependencyExportsPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"FlagDependencyExportsPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.finishModules.tap(\n\t\t\t\t\t\"FlagDependencyExportsPlugin\",\n\t\t\t\t\tmodules => {\n\t\t\t\t\t\tconst dependencies = new Map();\n\n\t\t\t\t\t\tconst queue = new Queue();\n\n\t\t\t\t\t\tlet module;\n\t\t\t\t\t\tlet moduleWithExports;\n\t\t\t\t\t\tlet moduleProvidedExports;\n\t\t\t\t\t\tlet providedExportsAreTemporary;\n\n\t\t\t\t\t\tconst processDependenciesBlock = depBlock => {\n\t\t\t\t\t\t\tfor (const dep of depBlock.dependencies) {\n\t\t\t\t\t\t\t\tif (processDependency(dep)) return true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (const variable of depBlock.variables) {\n\t\t\t\t\t\t\t\tfor (const dep of variable.dependencies) {\n\t\t\t\t\t\t\t\t\tif (processDependency(dep)) return true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (const block of depBlock.blocks) {\n\t\t\t\t\t\t\t\tif (processDependenciesBlock(block)) return true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst processDependency = dep => {\n\t\t\t\t\t\t\tconst exportDesc = dep.getExports && dep.getExports();\n\t\t\t\t\t\t\tif (!exportDesc) return;\n\t\t\t\t\t\t\tmoduleWithExports = true;\n\t\t\t\t\t\t\tconst exports = exportDesc.exports;\n\t\t\t\t\t\t\t// break early if it's only in the worst state\n\t\t\t\t\t\t\tif (module.buildMeta.providedExports === true) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// break if it should move to the worst state\n\t\t\t\t\t\t\tif (exports === true) {\n\t\t\t\t\t\t\t\tmodule.buildMeta.providedExports = true;\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// merge in new exports\n\t\t\t\t\t\t\tif (Array.isArray(exports)) {\n\t\t\t\t\t\t\t\taddToSet(moduleProvidedExports, exports);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// store dependencies\n\t\t\t\t\t\t\tconst exportDeps = exportDesc.dependencies;\n\t\t\t\t\t\t\tif (exportDeps) {\n\t\t\t\t\t\t\t\tprovidedExportsAreTemporary = true;\n\t\t\t\t\t\t\t\tfor (const exportDependency of exportDeps) {\n\t\t\t\t\t\t\t\t\t// add dependency for this module\n\t\t\t\t\t\t\t\t\tconst set = dependencies.get(exportDependency);\n\t\t\t\t\t\t\t\t\tif (set === undefined) {\n\t\t\t\t\t\t\t\t\t\tdependencies.set(exportDependency, new Set([module]));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tset.add(module);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst notifyDependencies = () => {\n\t\t\t\t\t\t\tconst deps = dependencies.get(module);\n\t\t\t\t\t\t\tif (deps !== undefined) {\n\t\t\t\t\t\t\t\tfor (const dep of deps) {\n\t\t\t\t\t\t\t\t\tqueue.enqueue(dep);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst notifyDependenciesIfDifferent = (set, array) => {\n\t\t\t\t\t\t\tconst deps = dependencies.get(module);\n\t\t\t\t\t\t\tif (deps !== undefined) {\n\t\t\t\t\t\t\t\tif (set.size === array.length) {\n\t\t\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\t\t\tlet different = false;\n\t\t\t\t\t\t\t\t\tfor (const item of set) {\n\t\t\t\t\t\t\t\t\t\tif (item !== array[i++]) {\n\t\t\t\t\t\t\t\t\t\t\tdifferent = true;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!different) return;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const dep of deps) {\n\t\t\t\t\t\t\t\t\tqueue.enqueue(dep);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Start with all modules without provided exports\n\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\tif (module.buildInfo.temporaryProvidedExports) {\n\t\t\t\t\t\t\t\t// Clear exports when they are temporary\n\t\t\t\t\t\t\t\t// and recreate them\n\t\t\t\t\t\t\t\tmodule.buildMeta.providedExports = null;\n\t\t\t\t\t\t\t\tqueue.enqueue(module);\n\t\t\t\t\t\t\t} else if (!module.buildMeta.providedExports) {\n\t\t\t\t\t\t\t\tqueue.enqueue(module);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twhile (queue.length > 0) {\n\t\t\t\t\t\t\tmodule = queue.dequeue();\n\n\t\t\t\t\t\t\tif (module.buildMeta.providedExports !== true) {\n\t\t\t\t\t\t\t\tmoduleWithExports =\n\t\t\t\t\t\t\t\t\tmodule.buildMeta && module.buildMeta.exportsType;\n\t\t\t\t\t\t\t\tmoduleProvidedExports = new Set();\n\t\t\t\t\t\t\t\tprovidedExportsAreTemporary = false;\n\t\t\t\t\t\t\t\tprocessDependenciesBlock(module);\n\t\t\t\t\t\t\t\tmodule.buildInfo.temporaryProvidedExports = providedExportsAreTemporary;\n\t\t\t\t\t\t\t\tif (!moduleWithExports) {\n\t\t\t\t\t\t\t\t\tnotifyDependencies();\n\t\t\t\t\t\t\t\t\tmodule.buildMeta.providedExports = true;\n\t\t\t\t\t\t\t\t} else if (module.buildMeta.providedExports === true) {\n\t\t\t\t\t\t\t\t\tnotifyDependencies();\n\t\t\t\t\t\t\t\t} else if (!module.buildMeta.providedExports) {\n\t\t\t\t\t\t\t\t\tnotifyDependencies();\n\t\t\t\t\t\t\t\t\tmodule.buildMeta.providedExports = Array.from(\n\t\t\t\t\t\t\t\t\t\tmoduleProvidedExports\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnotifyDependenciesIfDifferent(\n\t\t\t\t\t\t\t\t\t\tmoduleProvidedExports,\n\t\t\t\t\t\t\t\t\t\tmodule.buildMeta.providedExports\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tmodule.buildMeta.providedExports = Array.from(\n\t\t\t\t\t\t\t\t\t\tmoduleProvidedExports\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst providedExportsCache = new WeakMap();\n\t\t\t\tcompilation.hooks.rebuildModule.tap(\n\t\t\t\t\t\"FlagDependencyExportsPlugin\",\n\t\t\t\t\tmodule => {\n\t\t\t\t\t\tprovidedExportsCache.set(module, module.buildMeta.providedExports);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.finishRebuildingModule.tap(\n\t\t\t\t\t\"FlagDependencyExportsPlugin\",\n\t\t\t\t\tmodule => {\n\t\t\t\t\t\tmodule.buildMeta.providedExports = providedExportsCache.get(module);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = FlagDependencyExportsPlugin;\n"]},"metadata":{},"sourceType":"script"}