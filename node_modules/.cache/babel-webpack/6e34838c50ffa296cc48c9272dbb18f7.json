{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"./Module\")} Module */\n\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n\n/** @typedef {false | true | string[]} UsedExports */\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar addToSet = function addToSet(a, b) {\n  var _iterator = _createForOfIteratorHelper(b),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n      if (!a.includes(item)) a.push(item);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return a;\n};\n\nvar isSubset = function isSubset(biggerSet, subset) {\n  if (biggerSet === true) return true;\n  if (subset === true) return false;\n  return subset.every(function (item) {\n    return biggerSet.indexOf(item) >= 0;\n  });\n};\n\nvar FlagDependencyUsagePlugin = /*#__PURE__*/function () {\n  function FlagDependencyUsagePlugin() {\n    _classCallCheck(this, FlagDependencyUsagePlugin);\n  }\n\n  _createClass(FlagDependencyUsagePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.compilation.tap(\"FlagDependencyUsagePlugin\", function (compilation) {\n        compilation.hooks.optimizeDependencies.tap(\"FlagDependencyUsagePlugin\", function (modules) {\n          var processModule = function processModule(module, usedExports) {\n            module.used = true;\n            if (module.usedExports === true) return;\n\n            if (usedExports === true) {\n              module.usedExports = true;\n            } else if (Array.isArray(usedExports)) {\n              var old = module.usedExports ? module.usedExports.length : -1;\n              module.usedExports = addToSet(module.usedExports || [], usedExports);\n\n              if (module.usedExports.length === old) {\n                return;\n              }\n            } else if (Array.isArray(module.usedExports)) {\n              return;\n            } else {\n              module.usedExports = false;\n            } // for a module without side effects we stop tracking usage here when no export is used\n            // This module won't be evaluated in this case\n\n\n            if (module.factoryMeta.sideEffectFree) {\n              if (module.usedExports === false) return;\n              if (Array.isArray(module.usedExports) && module.usedExports.length === 0) return;\n            }\n\n            queue.push([module, module, module.usedExports]);\n          };\n\n          var processDependenciesBlock = function processDependenciesBlock(module, depBlock, usedExports) {\n            var _iterator2 = _createForOfIteratorHelper(depBlock.dependencies),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var dep = _step2.value;\n                processDependency(module, dep);\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n\n            var _iterator3 = _createForOfIteratorHelper(depBlock.variables),\n                _step3;\n\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var variable = _step3.value;\n\n                var _iterator5 = _createForOfIteratorHelper(variable.dependencies),\n                    _step5;\n\n                try {\n                  for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                    var _dep = _step5.value;\n                    processDependency(module, _dep);\n                  }\n                } catch (err) {\n                  _iterator5.e(err);\n                } finally {\n                  _iterator5.f();\n                }\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n\n            var _iterator4 = _createForOfIteratorHelper(depBlock.blocks),\n                _step4;\n\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var block = _step4.value;\n                queue.push([module, block, usedExports]);\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n          };\n\n          var processDependency = function processDependency(module, dep) {\n            var reference = compilation.getDependencyReference(module, dep);\n            if (!reference) return;\n            var referenceModule = reference.module;\n            var importedNames = reference.importedNames;\n            var oldUsed = referenceModule.used;\n            var oldUsedExports = referenceModule.usedExports;\n\n            if (!oldUsed || importedNames && (!oldUsedExports || !isSubset(oldUsedExports, importedNames))) {\n              processModule(referenceModule, importedNames);\n            }\n          };\n\n          var _iterator6 = _createForOfIteratorHelper(modules),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var _module = _step6.value;\n              if (!_module.used) _module.used = false;\n            }\n            /** @type {[Module, DependenciesBlock, UsedExports][]} */\n\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n\n          var queue = [];\n\n          var _iterator7 = _createForOfIteratorHelper(compilation._preparedEntrypoints),\n              _step7;\n\n          try {\n            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n              var preparedEntrypoint = _step7.value;\n\n              if (preparedEntrypoint.module) {\n                processModule(preparedEntrypoint.module, true);\n              }\n            }\n          } catch (err) {\n            _iterator7.e(err);\n          } finally {\n            _iterator7.f();\n          }\n\n          while (queue.length) {\n            var queueItem = queue.pop();\n            processDependenciesBlock(queueItem[0], queueItem[1], queueItem[2]);\n          }\n        });\n      });\n    }\n  }]);\n\n  return FlagDependencyUsagePlugin;\n}();\n\nmodule.exports = FlagDependencyUsagePlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/FlagDependencyUsagePlugin.js"],"names":["addToSet","a","b","item","includes","push","isSubset","biggerSet","subset","every","indexOf","FlagDependencyUsagePlugin","compiler","hooks","compilation","tap","optimizeDependencies","modules","processModule","module","usedExports","used","Array","isArray","old","length","factoryMeta","sideEffectFree","queue","processDependenciesBlock","depBlock","dependencies","dep","processDependency","variables","variable","blocks","block","reference","getDependencyReference","referenceModule","importedNames","oldUsed","oldUsedExports","_preparedEntrypoints","preparedEntrypoint","queueItem","pop","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n\n/** @typedef {false | true | string[]} UsedExports */\n\nconst addToSet = (a, b) => {\n\tfor (const item of b) {\n\t\tif (!a.includes(item)) a.push(item);\n\t}\n\treturn a;\n};\n\nconst isSubset = (biggerSet, subset) => {\n\tif (biggerSet === true) return true;\n\tif (subset === true) return false;\n\treturn subset.every(item => biggerSet.indexOf(item) >= 0);\n};\n\nclass FlagDependencyUsagePlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"FlagDependencyUsagePlugin\", compilation => {\n\t\t\tcompilation.hooks.optimizeDependencies.tap(\n\t\t\t\t\"FlagDependencyUsagePlugin\",\n\t\t\t\tmodules => {\n\t\t\t\t\tconst processModule = (module, usedExports) => {\n\t\t\t\t\t\tmodule.used = true;\n\t\t\t\t\t\tif (module.usedExports === true) return;\n\t\t\t\t\t\tif (usedExports === true) {\n\t\t\t\t\t\t\tmodule.usedExports = true;\n\t\t\t\t\t\t} else if (Array.isArray(usedExports)) {\n\t\t\t\t\t\t\tconst old = module.usedExports ? module.usedExports.length : -1;\n\t\t\t\t\t\t\tmodule.usedExports = addToSet(\n\t\t\t\t\t\t\t\tmodule.usedExports || [],\n\t\t\t\t\t\t\t\tusedExports\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (module.usedExports.length === old) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (Array.isArray(module.usedExports)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmodule.usedExports = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// for a module without side effects we stop tracking usage here when no export is used\n\t\t\t\t\t\t// This module won't be evaluated in this case\n\t\t\t\t\t\tif (module.factoryMeta.sideEffectFree) {\n\t\t\t\t\t\t\tif (module.usedExports === false) return;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tArray.isArray(module.usedExports) &&\n\t\t\t\t\t\t\t\tmodule.usedExports.length === 0\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tqueue.push([module, module, module.usedExports]);\n\t\t\t\t\t};\n\n\t\t\t\t\tconst processDependenciesBlock = (module, depBlock, usedExports) => {\n\t\t\t\t\t\tfor (const dep of depBlock.dependencies) {\n\t\t\t\t\t\t\tprocessDependency(module, dep);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const variable of depBlock.variables) {\n\t\t\t\t\t\t\tfor (const dep of variable.dependencies) {\n\t\t\t\t\t\t\t\tprocessDependency(module, dep);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const block of depBlock.blocks) {\n\t\t\t\t\t\t\tqueue.push([module, block, usedExports]);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tconst processDependency = (module, dep) => {\n\t\t\t\t\t\tconst reference = compilation.getDependencyReference(module, dep);\n\t\t\t\t\t\tif (!reference) return;\n\t\t\t\t\t\tconst referenceModule = reference.module;\n\t\t\t\t\t\tconst importedNames = reference.importedNames;\n\t\t\t\t\t\tconst oldUsed = referenceModule.used;\n\t\t\t\t\t\tconst oldUsedExports = referenceModule.usedExports;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!oldUsed ||\n\t\t\t\t\t\t\t(importedNames &&\n\t\t\t\t\t\t\t\t(!oldUsedExports || !isSubset(oldUsedExports, importedNames)))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tprocessModule(referenceModule, importedNames);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\tif (!module.used) module.used = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t/** @type {[Module, DependenciesBlock, UsedExports][]} */\n\t\t\t\t\tconst queue = [];\n\t\t\t\t\tfor (const preparedEntrypoint of compilation._preparedEntrypoints) {\n\t\t\t\t\t\tif (preparedEntrypoint.module) {\n\t\t\t\t\t\t\tprocessModule(preparedEntrypoint.module, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (queue.length) {\n\t\t\t\t\t\tconst queueItem = queue.pop();\n\t\t\t\t\t\tprocessDependenciesBlock(queueItem[0], queueItem[1], queueItem[2]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = FlagDependencyUsagePlugin;\n"]},"metadata":{},"sourceType":"script"}