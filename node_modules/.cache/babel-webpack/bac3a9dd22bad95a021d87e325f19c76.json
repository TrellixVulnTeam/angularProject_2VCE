{"ast":null,"code":"'use strict';\n/* eslint-disable\n  no-shadow,\n  no-undefined,\n  func-names\n*/\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar tls = require('tls');\n\nvar url = require('url');\n\nvar http = require('http');\n\nvar https = require('https');\n\nvar ip = require('ip');\n\nvar semver = require('semver');\n\nvar killable = require('killable');\n\nvar chokidar = require('chokidar');\n\nvar express = require('express');\n\nvar httpProxyMiddleware = require('http-proxy-middleware');\n\nvar historyApiFallback = require('connect-history-api-fallback');\n\nvar compress = require('compression');\n\nvar serveIndex = require('serve-index');\n\nvar webpack = require('webpack');\n\nvar webpackDevMiddleware = require('webpack-dev-middleware');\n\nvar validateOptions = require('schema-utils');\n\nvar isAbsoluteUrl = require('is-absolute-url');\n\nvar normalizeOptions = require('./utils/normalizeOptions');\n\nvar updateCompiler = require('./utils/updateCompiler');\n\nvar createLogger = require('./utils/createLogger');\n\nvar getCertificate = require('./utils/getCertificate');\n\nvar status = require('./utils/status');\n\nvar createDomain = require('./utils/createDomain');\n\nvar runBonjour = require('./utils/runBonjour');\n\nvar routes = require('./utils/routes');\n\nvar getSocketServerImplementation = require('./utils/getSocketServerImplementation');\n\nvar schema = require('./options.json'); // Workaround for node ^8.6.0, ^9.0.0\n// DEFAULT_ECDH_CURVE is default to prime256v1 in these version\n// breaking connection when certificate is not signed with prime256v1\n// change it to auto allows OpenSSL to select the curve automatically\n// See https://github.com/nodejs/node/issues/16196 for more information\n\n\nif (semver.satisfies(process.version, '8.6.0 - 9')) {\n  tls.DEFAULT_ECDH_CURVE = 'auto';\n}\n\nif (!process.env.WEBPACK_DEV_SERVER) {\n  process.env.WEBPACK_DEV_SERVER = true;\n}\n\nvar Server = /*#__PURE__*/function () {\n  function Server(compiler) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _log = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, Server);\n\n    if (options.lazy && !options.filename) {\n      throw new Error(\"'filename' option must be set in lazy mode.\");\n    }\n\n    validateOptions(schema, options, 'webpack Dev Server');\n    this.compiler = compiler;\n    this.options = options;\n    this.log = _log || createLogger(options);\n\n    if (this.options.transportMode !== undefined) {\n      this.log.warn('transportMode is an experimental option, meaning its usage could potentially change without warning');\n    }\n\n    normalizeOptions(this.compiler, this.options);\n    updateCompiler(this.compiler, this.options);\n    this.heartbeatInterval = 30000; // this.SocketServerImplementation is a class, so it must be instantiated before use\n\n    this.socketServerImplementation = getSocketServerImplementation(this.options);\n    this.originalStats = this.options.stats && Object.keys(this.options.stats).length ? this.options.stats : {};\n    this.sockets = [];\n    this.contentBaseWatchers = []; // TODO this.<property> is deprecated (remove them in next major release.) in favor this.options.<property>\n\n    this.hot = this.options.hot || this.options.hotOnly;\n    this.headers = this.options.headers;\n    this.progress = this.options.progress;\n    this.serveIndex = this.options.serveIndex;\n    this.clientOverlay = this.options.overlay;\n    this.clientLogLevel = this.options.clientLogLevel;\n    this.publicHost = this.options.public;\n    this.allowedHosts = this.options.allowedHosts;\n    this.disableHostCheck = !!this.options.disableHostCheck;\n    this.watchOptions = options.watchOptions || {}; // Replace leading and trailing slashes to normalize path\n\n    this.sockPath = \"/\".concat(this.options.sockPath ? this.options.sockPath.replace(/^\\/|\\/$/g, '') : 'sockjs-node');\n\n    if (this.progress) {\n      this.setupProgressPlugin();\n    }\n\n    this.setupHooks();\n    this.setupApp();\n    this.setupCheckHostRoute();\n    this.setupDevMiddleware(); // set express routes\n\n    routes(this); // Keep track of websocket proxies for external websocket upgrade.\n\n    this.websocketProxies = [];\n    this.setupFeatures();\n    this.setupHttps();\n    this.createServer();\n    killable(this.listeningApp); // Proxy websockets without the initial http request\n    // https://github.com/chimurai/http-proxy-middleware#external-websocket-upgrade\n\n    this.websocketProxies.forEach(function (wsProxy) {\n      this.listeningApp.on('upgrade', wsProxy.upgrade);\n    }, this);\n  }\n\n  _createClass(Server, [{\n    key: \"setupProgressPlugin\",\n    value: function setupProgressPlugin() {\n      var _this = this;\n\n      // for CLI output\n      new webpack.ProgressPlugin({\n        profile: !!this.options.profile\n      }).apply(this.compiler); // for browser console output\n\n      new webpack.ProgressPlugin(function (percent, msg, addInfo) {\n        percent = Math.floor(percent * 100);\n\n        if (percent === 100) {\n          msg = 'Compilation completed';\n        }\n\n        if (addInfo) {\n          msg = \"\".concat(msg, \" (\").concat(addInfo, \")\");\n        }\n\n        _this.sockWrite(_this.sockets, 'progress-update', {\n          percent: percent,\n          msg: msg\n        });\n\n        if (_this.listeningApp) {\n          _this.listeningApp.emit('progress-update', {\n            percent: percent,\n            msg: msg\n          });\n        }\n      }).apply(this.compiler);\n    }\n  }, {\n    key: \"setupApp\",\n    value: function setupApp() {\n      // Init express server\n      // eslint-disable-next-line new-cap\n      this.app = new express();\n    }\n  }, {\n    key: \"setupHooks\",\n    value: function setupHooks() {\n      var _this2 = this;\n\n      // Listening for events\n      var invalidPlugin = function invalidPlugin() {\n        _this2.sockWrite(_this2.sockets, 'invalid');\n      };\n\n      var addHooks = function addHooks(compiler) {\n        var _compiler$hooks = compiler.hooks,\n            compile = _compiler$hooks.compile,\n            invalid = _compiler$hooks.invalid,\n            done = _compiler$hooks.done;\n        compile.tap('webpack-dev-server', invalidPlugin);\n        invalid.tap('webpack-dev-server', invalidPlugin);\n        done.tap('webpack-dev-server', function (stats) {\n          _this2._sendStats(_this2.sockets, _this2.getStats(stats));\n\n          _this2._stats = stats;\n        });\n      };\n\n      if (this.compiler.compilers) {\n        this.compiler.compilers.forEach(addHooks);\n      } else {\n        addHooks(this.compiler);\n      }\n    }\n  }, {\n    key: \"setupCheckHostRoute\",\n    value: function setupCheckHostRoute() {\n      var _this3 = this;\n\n      this.app.all('*', function (req, res, next) {\n        if (_this3.checkHost(req.headers)) {\n          return next();\n        }\n\n        res.send('Invalid Host header');\n      });\n    }\n  }, {\n    key: \"setupDevMiddleware\",\n    value: function setupDevMiddleware() {\n      // middleware for serving webpack bundle\n      this.middleware = webpackDevMiddleware(this.compiler, Object.assign({}, this.options, {\n        logLevel: this.log.options.level\n      }));\n    }\n  }, {\n    key: \"setupCompressFeature\",\n    value: function setupCompressFeature() {\n      this.app.use(compress());\n    }\n  }, {\n    key: \"setupProxyFeature\",\n    value: function setupProxyFeature() {\n      var _this4 = this;\n\n      /**\n       * Assume a proxy configuration specified as:\n       * proxy: {\n       *   'context': { options }\n       * }\n       * OR\n       * proxy: {\n       *   'context': 'target'\n       * }\n       */\n      if (!Array.isArray(this.options.proxy)) {\n        if (Object.prototype.hasOwnProperty.call(this.options.proxy, 'target')) {\n          this.options.proxy = [this.options.proxy];\n        } else {\n          this.options.proxy = Object.keys(this.options.proxy).map(function (context) {\n            var proxyOptions; // For backwards compatibility reasons.\n\n            var correctedContext = context.replace(/^\\*$/, '**').replace(/\\/\\*$/, '');\n\n            if (typeof _this4.options.proxy[context] === 'string') {\n              proxyOptions = {\n                context: correctedContext,\n                target: _this4.options.proxy[context]\n              };\n            } else {\n              proxyOptions = Object.assign({}, _this4.options.proxy[context]);\n              proxyOptions.context = correctedContext;\n            }\n\n            proxyOptions.logLevel = proxyOptions.logLevel || 'warn';\n            return proxyOptions;\n          });\n        }\n      }\n\n      var getProxyMiddleware = function getProxyMiddleware(proxyConfig) {\n        var context = proxyConfig.context || proxyConfig.path; // It is possible to use the `bypass` method without a `target`.\n        // However, the proxy middleware has no use in this case, and will fail to instantiate.\n\n        if (proxyConfig.target) {\n          return httpProxyMiddleware(context, proxyConfig);\n        }\n      };\n      /**\n       * Assume a proxy configuration specified as:\n       * proxy: [\n       *   {\n       *     context: ...,\n       *     ...options...\n       *   },\n       *   // or:\n       *   function() {\n       *     return {\n       *       context: ...,\n       *       ...options...\n       *     };\n       *   }\n       * ]\n       */\n\n\n      this.options.proxy.forEach(function (proxyConfigOrCallback) {\n        var proxyMiddleware;\n        var proxyConfig = typeof proxyConfigOrCallback === 'function' ? proxyConfigOrCallback() : proxyConfigOrCallback;\n        proxyMiddleware = getProxyMiddleware(proxyConfig);\n\n        if (proxyConfig.ws) {\n          _this4.websocketProxies.push(proxyMiddleware);\n        }\n\n        var handle = function handle(req, res, next) {\n          if (typeof proxyConfigOrCallback === 'function') {\n            var newProxyConfig = proxyConfigOrCallback();\n\n            if (newProxyConfig !== proxyConfig) {\n              proxyConfig = newProxyConfig;\n              proxyMiddleware = getProxyMiddleware(proxyConfig);\n            }\n          } // - Check if we have a bypass function defined\n          // - In case the bypass function is defined we'll retrieve the\n          // bypassUrl from it otherwise bypassUrl would be null\n\n\n          var isByPassFuncDefined = typeof proxyConfig.bypass === 'function';\n          var bypassUrl = isByPassFuncDefined ? proxyConfig.bypass(req, res, proxyConfig) : null;\n\n          if (typeof bypassUrl === 'boolean') {\n            // skip the proxy\n            req.url = null;\n            next();\n          } else if (typeof bypassUrl === 'string') {\n            // byPass to that url\n            req.url = bypassUrl;\n            next();\n          } else if (proxyMiddleware) {\n            return proxyMiddleware(req, res, next);\n          } else {\n            next();\n          }\n        };\n\n        _this4.app.use(handle); // Also forward error requests to the proxy so it can handle them.\n\n\n        _this4.app.use(function (error, req, res, next) {\n          return handle(req, res, next);\n        });\n      });\n    }\n  }, {\n    key: \"setupHistoryApiFallbackFeature\",\n    value: function setupHistoryApiFallbackFeature() {\n      var fallback = typeof this.options.historyApiFallback === 'object' ? this.options.historyApiFallback : null; // Fall back to /index.html if nothing else matches.\n\n      this.app.use(historyApiFallback(fallback));\n    }\n  }, {\n    key: \"setupStaticFeature\",\n    value: function setupStaticFeature() {\n      var _this5 = this;\n\n      var contentBase = this.options.contentBase;\n      var contentBasePublicPath = this.options.contentBasePublicPath;\n\n      if (Array.isArray(contentBase)) {\n        contentBase.forEach(function (item, index) {\n          var publicPath = contentBasePublicPath;\n\n          if (Array.isArray(contentBasePublicPath) && contentBasePublicPath[index]) {\n            publicPath = contentBasePublicPath[index] || contentBasePublicPath[0];\n          }\n\n          _this5.app.use(publicPath, express.static(item));\n        });\n      } else if (isAbsoluteUrl(String(contentBase))) {\n        this.log.warn('Using a URL as contentBase is deprecated and will be removed in the next major version. Please use the proxy option instead.');\n        this.log.warn('proxy: {\\n\\t\"*\": \"<your current contentBase configuration>\"\\n}'); // Redirect every request to contentBase\n\n        this.app.get('*', function (req, res) {\n          res.writeHead(302, {\n            Location: contentBase + req.path + (req._parsedUrl.search || '')\n          });\n          res.end();\n        });\n      } else if (typeof contentBase === 'number') {\n        this.log.warn('Using a number as contentBase is deprecated and will be removed in the next major version. Please use the proxy option instead.');\n        this.log.warn('proxy: {\\n\\t\"*\": \"//localhost:<your current contentBase configuration>\"\\n}'); // Redirect every request to the port contentBase\n\n        this.app.get('*', function (req, res) {\n          res.writeHead(302, {\n            Location: \"//localhost:\".concat(contentBase).concat(req.path).concat(req._parsedUrl.search || '')\n          });\n          res.end();\n        });\n      } else {\n        // route content request\n        this.app.use(contentBasePublicPath, express.static(contentBase, this.options.staticOptions));\n      }\n    }\n  }, {\n    key: \"setupServeIndexFeature\",\n    value: function setupServeIndexFeature() {\n      var _this6 = this;\n\n      var contentBase = this.options.contentBase;\n      var contentBasePublicPath = this.options.contentBasePublicPath;\n\n      if (Array.isArray(contentBase)) {\n        contentBase.forEach(function (item) {\n          _this6.app.use(contentBasePublicPath, function (req, res, next) {\n            // serve-index doesn't fallthrough non-get/head request to next middleware\n            if (req.method !== 'GET' && req.method !== 'HEAD') {\n              return next();\n            }\n\n            serveIndex(item, {\n              icons: true\n            })(req, res, next);\n          });\n        });\n      } else if (typeof contentBase !== 'number' && !isAbsoluteUrl(String(contentBase))) {\n        this.app.use(contentBasePublicPath, function (req, res, next) {\n          // serve-index doesn't fallthrough non-get/head request to next middleware\n          if (req.method !== 'GET' && req.method !== 'HEAD') {\n            return next();\n          }\n\n          serveIndex(contentBase, {\n            icons: true\n          })(req, res, next);\n        });\n      }\n    }\n  }, {\n    key: \"setupWatchStaticFeature\",\n    value: function setupWatchStaticFeature() {\n      var _this7 = this;\n\n      var contentBase = this.options.contentBase;\n\n      if (isAbsoluteUrl(String(contentBase)) || typeof contentBase === 'number') {\n        throw new Error('Watching remote files is not supported.');\n      } else if (Array.isArray(contentBase)) {\n        contentBase.forEach(function (item) {\n          if (isAbsoluteUrl(String(item)) || typeof item === 'number') {\n            throw new Error('Watching remote files is not supported.');\n          }\n\n          _this7._watch(item);\n        });\n      } else {\n        this._watch(contentBase);\n      }\n    }\n  }, {\n    key: \"setupBeforeFeature\",\n    value: function setupBeforeFeature() {\n      // Todo rename onBeforeSetupMiddleware in next major release\n      // Todo pass only `this` argument\n      this.options.before(this.app, this, this.compiler);\n    }\n  }, {\n    key: \"setupMiddleware\",\n    value: function setupMiddleware() {\n      this.app.use(this.middleware);\n    }\n  }, {\n    key: \"setupAfterFeature\",\n    value: function setupAfterFeature() {\n      // Todo rename onAfterSetupMiddleware in next major release\n      // Todo pass only `this` argument\n      this.options.after(this.app, this, this.compiler);\n    }\n  }, {\n    key: \"setupHeadersFeature\",\n    value: function setupHeadersFeature() {\n      this.app.all('*', this.setContentHeaders.bind(this));\n    }\n  }, {\n    key: \"setupMagicHtmlFeature\",\n    value: function setupMagicHtmlFeature() {\n      this.app.get('*', this.serveMagicHtml.bind(this));\n    }\n  }, {\n    key: \"setupSetupFeature\",\n    value: function setupSetupFeature() {\n      this.log.warn('The `setup` option is deprecated and will be removed in v4. Please update your config to use `before`');\n      this.options.setup(this.app, this);\n    }\n  }, {\n    key: \"setupFeatures\",\n    value: function setupFeatures() {\n      var _this8 = this;\n\n      var features = {\n        compress: function compress() {\n          if (_this8.options.compress) {\n            _this8.setupCompressFeature();\n          }\n        },\n        proxy: function proxy() {\n          if (_this8.options.proxy) {\n            _this8.setupProxyFeature();\n          }\n        },\n        historyApiFallback: function historyApiFallback() {\n          if (_this8.options.historyApiFallback) {\n            _this8.setupHistoryApiFallbackFeature();\n          }\n        },\n        // Todo rename to `static` in future major release\n        contentBaseFiles: function contentBaseFiles() {\n          _this8.setupStaticFeature();\n        },\n        // Todo rename to `serveIndex` in future major release\n        contentBaseIndex: function contentBaseIndex() {\n          _this8.setupServeIndexFeature();\n        },\n        // Todo rename to `watchStatic` in future major release\n        watchContentBase: function watchContentBase() {\n          _this8.setupWatchStaticFeature();\n        },\n        before: function before() {\n          if (typeof _this8.options.before === 'function') {\n            _this8.setupBeforeFeature();\n          }\n        },\n        middleware: function middleware() {\n          // include our middleware to ensure\n          // it is able to handle '/index.html' request after redirect\n          _this8.setupMiddleware();\n        },\n        after: function after() {\n          if (typeof _this8.options.after === 'function') {\n            _this8.setupAfterFeature();\n          }\n        },\n        headers: function headers() {\n          _this8.setupHeadersFeature();\n        },\n        magicHtml: function magicHtml() {\n          _this8.setupMagicHtmlFeature();\n        },\n        setup: function setup() {\n          if (typeof _this8.options.setup === 'function') {\n            _this8.setupSetupFeature();\n          }\n        }\n      };\n      var runnableFeatures = []; // compress is placed last and uses unshift so that it will be the first middleware used\n\n      if (this.options.compress) {\n        runnableFeatures.push('compress');\n      }\n\n      runnableFeatures.push('setup', 'before', 'headers', 'middleware');\n\n      if (this.options.proxy) {\n        runnableFeatures.push('proxy', 'middleware');\n      }\n\n      if (this.options.contentBase !== false) {\n        runnableFeatures.push('contentBaseFiles');\n      }\n\n      if (this.options.historyApiFallback) {\n        runnableFeatures.push('historyApiFallback', 'middleware');\n\n        if (this.options.contentBase !== false) {\n          runnableFeatures.push('contentBaseFiles');\n        }\n      } // checking if it's set to true or not set (Default : undefined => true)\n\n\n      this.serveIndex = this.serveIndex || this.serveIndex === undefined;\n\n      if (this.options.contentBase && this.serveIndex) {\n        runnableFeatures.push('contentBaseIndex');\n      }\n\n      if (this.options.watchContentBase) {\n        runnableFeatures.push('watchContentBase');\n      }\n\n      runnableFeatures.push('magicHtml');\n\n      if (this.options.after) {\n        runnableFeatures.push('after');\n      }\n\n      (this.options.features || runnableFeatures).forEach(function (feature) {\n        features[feature]();\n      });\n    }\n  }, {\n    key: \"setupHttps\",\n    value: function setupHttps() {\n      // if the user enables http2, we can safely enable https\n      if (this.options.http2 && !this.options.https) {\n        this.options.https = true;\n      }\n\n      if (this.options.https) {\n        // for keep supporting CLI parameters\n        if (typeof this.options.https === 'boolean') {\n          this.options.https = {\n            ca: this.options.ca,\n            pfx: this.options.pfx,\n            key: this.options.key,\n            cert: this.options.cert,\n            passphrase: this.options.pfxPassphrase,\n            requestCert: this.options.requestCert || false\n          };\n        }\n\n        for (var _i = 0, _arr = ['ca', 'pfx', 'key', 'cert']; _i < _arr.length; _i++) {\n          var property = _arr[_i];\n          var value = this.options.https[property];\n          var isBuffer = value instanceof Buffer;\n\n          if (value && !isBuffer) {\n            var stats = null;\n\n            try {\n              stats = fs.lstatSync(fs.realpathSync(value)).isFile();\n            } catch (error) {// ignore error\n            } // It is file\n\n\n            this.options.https[property] = stats ? fs.readFileSync(path.resolve(value)) : value;\n          }\n        }\n\n        var fakeCert;\n\n        if (!this.options.https.key || !this.options.https.cert) {\n          fakeCert = getCertificate(this.log);\n        }\n\n        this.options.https.key = this.options.https.key || fakeCert;\n        this.options.https.cert = this.options.https.cert || fakeCert; // note that options.spdy never existed. The user was able\n        // to set options.https.spdy before, though it was not in the\n        // docs. Keep options.https.spdy if the user sets it for\n        // backwards compatibility, but log a deprecation warning.\n\n        if (this.options.https.spdy) {\n          // for backwards compatibility: if options.https.spdy was passed in before,\n          // it was not altered in any way\n          this.log.warn('Providing custom spdy server options is deprecated and will be removed in the next major version.');\n        } else {\n          // if the normal https server gets this option, it will not affect it.\n          this.options.https.spdy = {\n            protocols: ['h2', 'http/1.1']\n          };\n        }\n      }\n    }\n  }, {\n    key: \"createServer\",\n    value: function createServer() {\n      var _this9 = this;\n\n      if (this.options.https) {\n        // Only prevent HTTP/2 if http2 is explicitly set to false\n        var isHttp2 = this.options.http2 !== false; // `spdy` is effectively unmaintained, and as a consequence of an\n        // implementation that extensively relies on Node’s non-public APIs, broken\n        // on Node 10 and above. In those cases, only https will be used for now.\n        // Once express supports Node's built-in HTTP/2 support, migrating over to\n        // that should be the best way to go.\n        // The relevant issues are:\n        // - https://github.com/nodejs/node/issues/21665\n        // - https://github.com/webpack/webpack-dev-server/issues/1449\n        // - https://github.com/expressjs/express/issues/3388\n\n        if (semver.gte(process.version, '10.0.0') || !isHttp2) {\n          if (this.options.http2) {\n            // the user explicitly requested http2 but is not getting it because\n            // of the node version.\n            this.log.warn('HTTP/2 is currently unsupported for Node 10.0.0 and above, but will be supported once Express supports it');\n          }\n\n          this.listeningApp = https.createServer(this.options.https, this.app);\n        } else {\n          // The relevant issues are:\n          // https://github.com/spdy-http2/node-spdy/issues/350\n          // https://github.com/webpack/webpack-dev-server/issues/1592\n          this.listeningApp = require('spdy').createServer(this.options.https, this.app);\n        }\n      } else {\n        this.listeningApp = http.createServer(this.app);\n      }\n\n      this.listeningApp.on('error', function (err) {\n        _this9.log.error(err);\n      });\n    }\n  }, {\n    key: \"createSocketServer\",\n    value: function createSocketServer() {\n      var _this10 = this;\n\n      var SocketServerImplementation = this.socketServerImplementation;\n      this.socketServer = new SocketServerImplementation(this);\n      this.socketServer.onConnection(function (connection, headers) {\n        if (!connection) {\n          return;\n        }\n\n        if (!headers) {\n          _this10.log.warn('transportMode.server implementation must pass headers to the callback of onConnection(f) ' + 'via f(connection, headers) in order for clients to pass a headers security check');\n        }\n\n        if (!headers || !_this10.checkHost(headers) || !_this10.checkOrigin(headers)) {\n          _this10.sockWrite([connection], 'error', 'Invalid Host/Origin header');\n\n          _this10.socketServer.close(connection);\n\n          return;\n        }\n\n        _this10.sockets.push(connection);\n\n        _this10.socketServer.onConnectionClose(connection, function () {\n          var idx = _this10.sockets.indexOf(connection);\n\n          if (idx >= 0) {\n            _this10.sockets.splice(idx, 1);\n          }\n        });\n\n        if (_this10.clientLogLevel) {\n          _this10.sockWrite([connection], 'log-level', _this10.clientLogLevel);\n        }\n\n        if (_this10.hot) {\n          _this10.sockWrite([connection], 'hot');\n        } // TODO: change condition at major version\n\n\n        if (_this10.options.liveReload !== false) {\n          _this10.sockWrite([connection], 'liveReload', _this10.options.liveReload);\n        }\n\n        if (_this10.progress) {\n          _this10.sockWrite([connection], 'progress', _this10.progress);\n        }\n\n        if (_this10.clientOverlay) {\n          _this10.sockWrite([connection], 'overlay', _this10.clientOverlay);\n        }\n\n        if (!_this10._stats) {\n          return;\n        }\n\n        _this10._sendStats([connection], _this10.getStats(_this10._stats), true);\n      });\n    }\n  }, {\n    key: \"showStatus\",\n    value: function showStatus() {\n      var suffix = this.options.inline !== false || this.options.lazy === true ? '/' : '/webpack-dev-server/';\n      var uri = \"\".concat(createDomain(this.options, this.listeningApp)).concat(suffix);\n      status(uri, this.options, this.log, this.options.stats && this.options.stats.colors);\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(port, hostname, fn) {\n      var _this11 = this;\n\n      this.hostname = hostname;\n      return this.listeningApp.listen(port, hostname, function (err) {\n        _this11.createSocketServer();\n\n        if (_this11.options.bonjour) {\n          runBonjour(_this11.options);\n        }\n\n        _this11.showStatus();\n\n        if (fn) {\n          fn.call(_this11.listeningApp, err);\n        }\n\n        if (typeof _this11.options.onListening === 'function') {\n          _this11.options.onListening(_this11);\n        }\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close(cb) {\n      var _this12 = this;\n\n      this.sockets.forEach(function (socket) {\n        _this12.socketServer.close(socket);\n      });\n      this.sockets = [];\n      this.contentBaseWatchers.forEach(function (watcher) {\n        watcher.close();\n      });\n      this.contentBaseWatchers = [];\n      this.listeningApp.kill(function () {\n        _this12.middleware.close(cb);\n      });\n    }\n  }, {\n    key: \"getStats\",\n    value: function getStats(statsObj) {\n      var stats = Server.DEFAULT_STATS;\n\n      if (this.originalStats.warningsFilter) {\n        stats.warningsFilter = this.originalStats.warningsFilter;\n      }\n\n      return statsObj.toJson(stats);\n    }\n  }, {\n    key: \"use\",\n    value: function use() {\n      // eslint-disable-next-line\n      this.app.use.apply(this.app, arguments);\n    }\n  }, {\n    key: \"setContentHeaders\",\n    value: function setContentHeaders(req, res, next) {\n      if (this.headers) {\n        // eslint-disable-next-line\n        for (var name in this.headers) {\n          res.setHeader(name, this.headers[name]);\n        }\n      }\n\n      next();\n    }\n  }, {\n    key: \"checkHost\",\n    value: function checkHost(headers) {\n      return this.checkHeaders(headers, 'host');\n    }\n  }, {\n    key: \"checkOrigin\",\n    value: function checkOrigin(headers) {\n      return this.checkHeaders(headers, 'origin');\n    }\n  }, {\n    key: \"checkHeaders\",\n    value: function checkHeaders(headers, headerToCheck) {\n      // allow user to opt-out this security check, at own risk\n      if (this.disableHostCheck) {\n        return true;\n      }\n\n      if (!headerToCheck) {\n        headerToCheck = 'host';\n      } // get the Host header and extract hostname\n      // we don't care about port not matching\n\n\n      var hostHeader = headers[headerToCheck];\n\n      if (!hostHeader) {\n        return false;\n      } // use the node url-parser to retrieve the hostname from the host-header.\n\n\n      var hostname = url.parse( // if hostHeader doesn't have scheme, add // for parsing.\n      /^(.+:)?\\/\\//.test(hostHeader) ? hostHeader : \"//\".concat(hostHeader), false, true).hostname; // always allow requests with explicit IPv4 or IPv6-address.\n      // A note on IPv6 addresses:\n      // hostHeader will always contain the brackets denoting\n      // an IPv6-address in URLs,\n      // these are removed from the hostname in url.parse(),\n      // so we have the pure IPv6-address in hostname.\n      // always allow localhost host, for convenience (hostname === 'localhost')\n      // allow hostname of listening address  (hostname === this.hostname)\n\n      var isValidHostname = ip.isV4Format(hostname) || ip.isV6Format(hostname) || hostname === 'localhost' || hostname === this.hostname;\n\n      if (isValidHostname) {\n        return true;\n      } // always allow localhost host, for convenience\n      // allow if hostname is in allowedHosts\n\n\n      if (this.allowedHosts && this.allowedHosts.length) {\n        for (var hostIdx = 0; hostIdx < this.allowedHosts.length; hostIdx++) {\n          var allowedHost = this.allowedHosts[hostIdx];\n\n          if (allowedHost === hostname) {\n            return true;\n          } // support \".\" as a subdomain wildcard\n          // e.g. \".example.com\" will allow \"example.com\", \"www.example.com\", \"subdomain.example.com\", etc\n\n\n          if (allowedHost[0] === '.') {\n            // \"example.com\"  (hostname === allowedHost.substring(1))\n            // \"*.example.com\"  (hostname.endsWith(allowedHost))\n            if (hostname === allowedHost.substring(1) || hostname.endsWith(allowedHost)) {\n              return true;\n            }\n          }\n        }\n      } // also allow public hostname if provided\n\n\n      if (typeof this.publicHost === 'string') {\n        var idxPublic = this.publicHost.indexOf(':');\n        var publicHostname = idxPublic >= 0 ? this.publicHost.substr(0, idxPublic) : this.publicHost;\n\n        if (hostname === publicHostname) {\n          return true;\n        }\n      } // disallow\n\n\n      return false;\n    } // eslint-disable-next-line\n\n  }, {\n    key: \"sockWrite\",\n    value: function sockWrite(sockets, type, data) {\n      var _this13 = this;\n\n      sockets.forEach(function (socket) {\n        _this13.socketServer.send(socket, JSON.stringify({\n          type: type,\n          data: data\n        }));\n      });\n    }\n  }, {\n    key: \"serveMagicHtml\",\n    value: function serveMagicHtml(req, res, next) {\n      var _path = req.path;\n\n      try {\n        var isFile = this.middleware.fileSystem.statSync(this.middleware.getFilenameFromUrl(\"\".concat(_path, \".js\"))).isFile();\n\n        if (!isFile) {\n          return next();\n        } // Serve a page that executes the javascript\n\n\n        var queries = req._parsedUrl.search || '';\n        var responsePage = \"<!DOCTYPE html><html><head><meta charset=\\\"utf-8\\\"/></head><body><script type=\\\"text/javascript\\\" charset=\\\"utf-8\\\" src=\\\"\".concat(_path, \".js\").concat(queries, \"\\\"></script></body></html>\");\n        res.send(responsePage);\n      } catch (err) {\n        return next();\n      }\n    } // send stats to a socket or multiple sockets\n\n  }, {\n    key: \"_sendStats\",\n    value: function _sendStats(sockets, stats, force) {\n      var shouldEmit = !force && stats && (!stats.errors || stats.errors.length === 0) && stats.assets && stats.assets.every(function (asset) {\n        return !asset.emitted;\n      });\n\n      if (shouldEmit) {\n        return this.sockWrite(sockets, 'still-ok');\n      }\n\n      this.sockWrite(sockets, 'hash', stats.hash);\n\n      if (stats.errors.length > 0) {\n        this.sockWrite(sockets, 'errors', stats.errors);\n      } else if (stats.warnings.length > 0) {\n        this.sockWrite(sockets, 'warnings', stats.warnings);\n      } else {\n        this.sockWrite(sockets, 'ok');\n      }\n    }\n  }, {\n    key: \"_watch\",\n    value: function _watch(watchPath) {\n      var _this14 = this;\n\n      // duplicate the same massaging of options that watchpack performs\n      // https://github.com/webpack/watchpack/blob/master/lib/DirectoryWatcher.js#L49\n      // this isn't an elegant solution, but we'll improve it in the future\n      var usePolling = this.watchOptions.poll ? true : undefined;\n      var interval = typeof this.watchOptions.poll === 'number' ? this.watchOptions.poll : undefined;\n      var watchOptions = {\n        ignoreInitial: true,\n        persistent: true,\n        followSymlinks: false,\n        atomic: false,\n        alwaysStat: true,\n        ignorePermissionErrors: true,\n        ignored: this.watchOptions.ignored,\n        usePolling: usePolling,\n        interval: interval\n      };\n      var watcher = chokidar.watch(watchPath, watchOptions); // disabling refreshing on changing the content\n\n      if (this.options.liveReload !== false) {\n        watcher.on('change', function () {\n          _this14.sockWrite(_this14.sockets, 'content-changed');\n        });\n      }\n\n      this.contentBaseWatchers.push(watcher);\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate(callback) {\n      if (this.middleware) {\n        this.middleware.invalidate(callback);\n      }\n    }\n  }], [{\n    key: \"DEFAULT_STATS\",\n    get: function get() {\n      return {\n        all: false,\n        hash: true,\n        assets: true,\n        warnings: true,\n        errors: true,\n        errorDetails: false\n      };\n    }\n  }]);\n\n  return Server;\n}(); // Export this logic,\n// so that other implementations,\n// like task-runners can use it\n\n\nServer.addDevServerEntrypoints = require('./utils/addEntries');\nmodule.exports = Server;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack-dev-server/lib/Server.js"],"names":["fs","require","path","tls","url","http","https","ip","semver","killable","chokidar","express","httpProxyMiddleware","historyApiFallback","compress","serveIndex","webpack","webpackDevMiddleware","validateOptions","isAbsoluteUrl","normalizeOptions","updateCompiler","createLogger","getCertificate","status","createDomain","runBonjour","routes","getSocketServerImplementation","schema","satisfies","process","version","DEFAULT_ECDH_CURVE","env","WEBPACK_DEV_SERVER","Server","compiler","options","_log","lazy","filename","Error","log","transportMode","undefined","warn","heartbeatInterval","socketServerImplementation","originalStats","stats","Object","keys","length","sockets","contentBaseWatchers","hot","hotOnly","headers","progress","clientOverlay","overlay","clientLogLevel","publicHost","public","allowedHosts","disableHostCheck","watchOptions","sockPath","replace","setupProgressPlugin","setupHooks","setupApp","setupCheckHostRoute","setupDevMiddleware","websocketProxies","setupFeatures","setupHttps","createServer","listeningApp","forEach","wsProxy","on","upgrade","ProgressPlugin","profile","apply","percent","msg","addInfo","Math","floor","sockWrite","emit","app","invalidPlugin","addHooks","hooks","compile","invalid","done","tap","_sendStats","getStats","_stats","compilers","all","req","res","next","checkHost","send","middleware","assign","logLevel","level","use","Array","isArray","proxy","prototype","hasOwnProperty","call","map","context","proxyOptions","correctedContext","target","getProxyMiddleware","proxyConfig","proxyConfigOrCallback","proxyMiddleware","ws","push","handle","newProxyConfig","isByPassFuncDefined","bypass","bypassUrl","error","fallback","contentBase","contentBasePublicPath","item","index","publicPath","static","String","get","writeHead","Location","_parsedUrl","search","end","staticOptions","method","icons","_watch","before","after","setContentHeaders","bind","serveMagicHtml","setup","features","setupCompressFeature","setupProxyFeature","setupHistoryApiFallbackFeature","contentBaseFiles","setupStaticFeature","contentBaseIndex","setupServeIndexFeature","watchContentBase","setupWatchStaticFeature","setupBeforeFeature","setupMiddleware","setupAfterFeature","setupHeadersFeature","magicHtml","setupMagicHtmlFeature","setupSetupFeature","runnableFeatures","feature","http2","ca","pfx","key","cert","passphrase","pfxPassphrase","requestCert","property","value","isBuffer","Buffer","lstatSync","realpathSync","isFile","readFileSync","resolve","fakeCert","spdy","protocols","isHttp2","gte","err","SocketServerImplementation","socketServer","onConnection","connection","checkOrigin","close","onConnectionClose","idx","indexOf","splice","liveReload","suffix","inline","uri","colors","port","hostname","fn","listen","createSocketServer","bonjour","showStatus","onListening","cb","socket","watcher","kill","statsObj","DEFAULT_STATS","warningsFilter","toJson","arguments","name","setHeader","checkHeaders","headerToCheck","hostHeader","parse","test","isValidHostname","isV4Format","isV6Format","hostIdx","allowedHost","substring","endsWith","idxPublic","publicHostname","substr","type","data","JSON","stringify","_path","fileSystem","statSync","getFilenameFromUrl","queries","responsePage","force","shouldEmit","errors","assets","every","asset","emitted","hash","warnings","watchPath","usePolling","poll","interval","ignoreInitial","persistent","followSymlinks","atomic","alwaysStat","ignorePermissionErrors","ignored","watch","callback","invalidate","errorDetails","addDevServerEntrypoints","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* eslint-disable\n  no-shadow,\n  no-undefined,\n  func-names\n*/\nconst fs = require('fs');\nconst path = require('path');\nconst tls = require('tls');\nconst url = require('url');\nconst http = require('http');\nconst https = require('https');\nconst ip = require('ip');\nconst semver = require('semver');\nconst killable = require('killable');\nconst chokidar = require('chokidar');\nconst express = require('express');\nconst httpProxyMiddleware = require('http-proxy-middleware');\nconst historyApiFallback = require('connect-history-api-fallback');\nconst compress = require('compression');\nconst serveIndex = require('serve-index');\nconst webpack = require('webpack');\nconst webpackDevMiddleware = require('webpack-dev-middleware');\nconst validateOptions = require('schema-utils');\nconst isAbsoluteUrl = require('is-absolute-url');\nconst normalizeOptions = require('./utils/normalizeOptions');\nconst updateCompiler = require('./utils/updateCompiler');\nconst createLogger = require('./utils/createLogger');\nconst getCertificate = require('./utils/getCertificate');\nconst status = require('./utils/status');\nconst createDomain = require('./utils/createDomain');\nconst runBonjour = require('./utils/runBonjour');\nconst routes = require('./utils/routes');\nconst getSocketServerImplementation = require('./utils/getSocketServerImplementation');\nconst schema = require('./options.json');\n\n// Workaround for node ^8.6.0, ^9.0.0\n// DEFAULT_ECDH_CURVE is default to prime256v1 in these version\n// breaking connection when certificate is not signed with prime256v1\n// change it to auto allows OpenSSL to select the curve automatically\n// See https://github.com/nodejs/node/issues/16196 for more information\nif (semver.satisfies(process.version, '8.6.0 - 9')) {\n  tls.DEFAULT_ECDH_CURVE = 'auto';\n}\n\nif (!process.env.WEBPACK_DEV_SERVER) {\n  process.env.WEBPACK_DEV_SERVER = true;\n}\n\nclass Server {\n  constructor(compiler, options = {}, _log) {\n    if (options.lazy && !options.filename) {\n      throw new Error(\"'filename' option must be set in lazy mode.\");\n    }\n\n    validateOptions(schema, options, 'webpack Dev Server');\n\n    this.compiler = compiler;\n    this.options = options;\n\n    this.log = _log || createLogger(options);\n\n    if (this.options.transportMode !== undefined) {\n      this.log.warn(\n        'transportMode is an experimental option, meaning its usage could potentially change without warning'\n      );\n    }\n\n    normalizeOptions(this.compiler, this.options);\n\n    updateCompiler(this.compiler, this.options);\n\n    this.heartbeatInterval = 30000;\n    // this.SocketServerImplementation is a class, so it must be instantiated before use\n    this.socketServerImplementation = getSocketServerImplementation(\n      this.options\n    );\n\n    this.originalStats =\n      this.options.stats && Object.keys(this.options.stats).length\n        ? this.options.stats\n        : {};\n\n    this.sockets = [];\n    this.contentBaseWatchers = [];\n\n    // TODO this.<property> is deprecated (remove them in next major release.) in favor this.options.<property>\n    this.hot = this.options.hot || this.options.hotOnly;\n    this.headers = this.options.headers;\n    this.progress = this.options.progress;\n\n    this.serveIndex = this.options.serveIndex;\n\n    this.clientOverlay = this.options.overlay;\n    this.clientLogLevel = this.options.clientLogLevel;\n\n    this.publicHost = this.options.public;\n    this.allowedHosts = this.options.allowedHosts;\n    this.disableHostCheck = !!this.options.disableHostCheck;\n\n    this.watchOptions = options.watchOptions || {};\n\n    // Replace leading and trailing slashes to normalize path\n    this.sockPath = `/${\n      this.options.sockPath\n        ? this.options.sockPath.replace(/^\\/|\\/$/g, '')\n        : 'sockjs-node'\n    }`;\n\n    if (this.progress) {\n      this.setupProgressPlugin();\n    }\n\n    this.setupHooks();\n    this.setupApp();\n    this.setupCheckHostRoute();\n    this.setupDevMiddleware();\n\n    // set express routes\n    routes(this);\n\n    // Keep track of websocket proxies for external websocket upgrade.\n    this.websocketProxies = [];\n\n    this.setupFeatures();\n    this.setupHttps();\n    this.createServer();\n\n    killable(this.listeningApp);\n\n    // Proxy websockets without the initial http request\n    // https://github.com/chimurai/http-proxy-middleware#external-websocket-upgrade\n    this.websocketProxies.forEach(function(wsProxy) {\n      this.listeningApp.on('upgrade', wsProxy.upgrade);\n    }, this);\n  }\n\n  setupProgressPlugin() {\n    // for CLI output\n    new webpack.ProgressPlugin({\n      profile: !!this.options.profile,\n    }).apply(this.compiler);\n\n    // for browser console output\n    new webpack.ProgressPlugin((percent, msg, addInfo) => {\n      percent = Math.floor(percent * 100);\n\n      if (percent === 100) {\n        msg = 'Compilation completed';\n      }\n\n      if (addInfo) {\n        msg = `${msg} (${addInfo})`;\n      }\n\n      this.sockWrite(this.sockets, 'progress-update', { percent, msg });\n\n      if (this.listeningApp) {\n        this.listeningApp.emit('progress-update', { percent, msg });\n      }\n    }).apply(this.compiler);\n  }\n\n  setupApp() {\n    // Init express server\n    // eslint-disable-next-line new-cap\n    this.app = new express();\n  }\n\n  setupHooks() {\n    // Listening for events\n    const invalidPlugin = () => {\n      this.sockWrite(this.sockets, 'invalid');\n    };\n\n    const addHooks = (compiler) => {\n      const { compile, invalid, done } = compiler.hooks;\n\n      compile.tap('webpack-dev-server', invalidPlugin);\n      invalid.tap('webpack-dev-server', invalidPlugin);\n      done.tap('webpack-dev-server', (stats) => {\n        this._sendStats(this.sockets, this.getStats(stats));\n        this._stats = stats;\n      });\n    };\n\n    if (this.compiler.compilers) {\n      this.compiler.compilers.forEach(addHooks);\n    } else {\n      addHooks(this.compiler);\n    }\n  }\n\n  setupCheckHostRoute() {\n    this.app.all('*', (req, res, next) => {\n      if (this.checkHost(req.headers)) {\n        return next();\n      }\n\n      res.send('Invalid Host header');\n    });\n  }\n\n  setupDevMiddleware() {\n    // middleware for serving webpack bundle\n    this.middleware = webpackDevMiddleware(\n      this.compiler,\n      Object.assign({}, this.options, { logLevel: this.log.options.level })\n    );\n  }\n\n  setupCompressFeature() {\n    this.app.use(compress());\n  }\n\n  setupProxyFeature() {\n    /**\n     * Assume a proxy configuration specified as:\n     * proxy: {\n     *   'context': { options }\n     * }\n     * OR\n     * proxy: {\n     *   'context': 'target'\n     * }\n     */\n    if (!Array.isArray(this.options.proxy)) {\n      if (Object.prototype.hasOwnProperty.call(this.options.proxy, 'target')) {\n        this.options.proxy = [this.options.proxy];\n      } else {\n        this.options.proxy = Object.keys(this.options.proxy).map((context) => {\n          let proxyOptions;\n          // For backwards compatibility reasons.\n          const correctedContext = context\n            .replace(/^\\*$/, '**')\n            .replace(/\\/\\*$/, '');\n\n          if (typeof this.options.proxy[context] === 'string') {\n            proxyOptions = {\n              context: correctedContext,\n              target: this.options.proxy[context],\n            };\n          } else {\n            proxyOptions = Object.assign({}, this.options.proxy[context]);\n            proxyOptions.context = correctedContext;\n          }\n\n          proxyOptions.logLevel = proxyOptions.logLevel || 'warn';\n\n          return proxyOptions;\n        });\n      }\n    }\n\n    const getProxyMiddleware = (proxyConfig) => {\n      const context = proxyConfig.context || proxyConfig.path;\n\n      // It is possible to use the `bypass` method without a `target`.\n      // However, the proxy middleware has no use in this case, and will fail to instantiate.\n      if (proxyConfig.target) {\n        return httpProxyMiddleware(context, proxyConfig);\n      }\n    };\n    /**\n     * Assume a proxy configuration specified as:\n     * proxy: [\n     *   {\n     *     context: ...,\n     *     ...options...\n     *   },\n     *   // or:\n     *   function() {\n     *     return {\n     *       context: ...,\n     *       ...options...\n     *     };\n     *   }\n     * ]\n     */\n    this.options.proxy.forEach((proxyConfigOrCallback) => {\n      let proxyMiddleware;\n\n      let proxyConfig =\n        typeof proxyConfigOrCallback === 'function'\n          ? proxyConfigOrCallback()\n          : proxyConfigOrCallback;\n\n      proxyMiddleware = getProxyMiddleware(proxyConfig);\n\n      if (proxyConfig.ws) {\n        this.websocketProxies.push(proxyMiddleware);\n      }\n\n      const handle = (req, res, next) => {\n        if (typeof proxyConfigOrCallback === 'function') {\n          const newProxyConfig = proxyConfigOrCallback();\n\n          if (newProxyConfig !== proxyConfig) {\n            proxyConfig = newProxyConfig;\n            proxyMiddleware = getProxyMiddleware(proxyConfig);\n          }\n        }\n\n        // - Check if we have a bypass function defined\n        // - In case the bypass function is defined we'll retrieve the\n        // bypassUrl from it otherwise bypassUrl would be null\n        const isByPassFuncDefined = typeof proxyConfig.bypass === 'function';\n        const bypassUrl = isByPassFuncDefined\n          ? proxyConfig.bypass(req, res, proxyConfig)\n          : null;\n\n        if (typeof bypassUrl === 'boolean') {\n          // skip the proxy\n          req.url = null;\n          next();\n        } else if (typeof bypassUrl === 'string') {\n          // byPass to that url\n          req.url = bypassUrl;\n          next();\n        } else if (proxyMiddleware) {\n          return proxyMiddleware(req, res, next);\n        } else {\n          next();\n        }\n      };\n\n      this.app.use(handle);\n      // Also forward error requests to the proxy so it can handle them.\n      this.app.use((error, req, res, next) => handle(req, res, next));\n    });\n  }\n\n  setupHistoryApiFallbackFeature() {\n    const fallback =\n      typeof this.options.historyApiFallback === 'object'\n        ? this.options.historyApiFallback\n        : null;\n\n    // Fall back to /index.html if nothing else matches.\n    this.app.use(historyApiFallback(fallback));\n  }\n\n  setupStaticFeature() {\n    const contentBase = this.options.contentBase;\n    const contentBasePublicPath = this.options.contentBasePublicPath;\n\n    if (Array.isArray(contentBase)) {\n      contentBase.forEach((item, index) => {\n        let publicPath = contentBasePublicPath;\n\n        if (\n          Array.isArray(contentBasePublicPath) &&\n          contentBasePublicPath[index]\n        ) {\n          publicPath = contentBasePublicPath[index] || contentBasePublicPath[0];\n        }\n\n        this.app.use(publicPath, express.static(item));\n      });\n    } else if (isAbsoluteUrl(String(contentBase))) {\n      this.log.warn(\n        'Using a URL as contentBase is deprecated and will be removed in the next major version. Please use the proxy option instead.'\n      );\n\n      this.log.warn(\n        'proxy: {\\n\\t\"*\": \"<your current contentBase configuration>\"\\n}'\n      );\n\n      // Redirect every request to contentBase\n      this.app.get('*', (req, res) => {\n        res.writeHead(302, {\n          Location: contentBase + req.path + (req._parsedUrl.search || ''),\n        });\n\n        res.end();\n      });\n    } else if (typeof contentBase === 'number') {\n      this.log.warn(\n        'Using a number as contentBase is deprecated and will be removed in the next major version. Please use the proxy option instead.'\n      );\n\n      this.log.warn(\n        'proxy: {\\n\\t\"*\": \"//localhost:<your current contentBase configuration>\"\\n}'\n      );\n\n      // Redirect every request to the port contentBase\n      this.app.get('*', (req, res) => {\n        res.writeHead(302, {\n          Location: `//localhost:${contentBase}${req.path}${req._parsedUrl\n            .search || ''}`,\n        });\n\n        res.end();\n      });\n    } else {\n      // route content request\n      this.app.use(\n        contentBasePublicPath,\n        express.static(contentBase, this.options.staticOptions)\n      );\n    }\n  }\n\n  setupServeIndexFeature() {\n    const contentBase = this.options.contentBase;\n    const contentBasePublicPath = this.options.contentBasePublicPath;\n\n    if (Array.isArray(contentBase)) {\n      contentBase.forEach((item) => {\n        this.app.use(contentBasePublicPath, (req, res, next) => {\n          // serve-index doesn't fallthrough non-get/head request to next middleware\n          if (req.method !== 'GET' && req.method !== 'HEAD') {\n            return next();\n          }\n\n          serveIndex(item, { icons: true })(req, res, next);\n        });\n      });\n    } else if (\n      typeof contentBase !== 'number' &&\n      !isAbsoluteUrl(String(contentBase))\n    ) {\n      this.app.use(contentBasePublicPath, (req, res, next) => {\n        // serve-index doesn't fallthrough non-get/head request to next middleware\n        if (req.method !== 'GET' && req.method !== 'HEAD') {\n          return next();\n        }\n\n        serveIndex(contentBase, { icons: true })(req, res, next);\n      });\n    }\n  }\n\n  setupWatchStaticFeature() {\n    const contentBase = this.options.contentBase;\n\n    if (isAbsoluteUrl(String(contentBase)) || typeof contentBase === 'number') {\n      throw new Error('Watching remote files is not supported.');\n    } else if (Array.isArray(contentBase)) {\n      contentBase.forEach((item) => {\n        if (isAbsoluteUrl(String(item)) || typeof item === 'number') {\n          throw new Error('Watching remote files is not supported.');\n        }\n        this._watch(item);\n      });\n    } else {\n      this._watch(contentBase);\n    }\n  }\n\n  setupBeforeFeature() {\n    // Todo rename onBeforeSetupMiddleware in next major release\n    // Todo pass only `this` argument\n    this.options.before(this.app, this, this.compiler);\n  }\n\n  setupMiddleware() {\n    this.app.use(this.middleware);\n  }\n\n  setupAfterFeature() {\n    // Todo rename onAfterSetupMiddleware in next major release\n    // Todo pass only `this` argument\n    this.options.after(this.app, this, this.compiler);\n  }\n\n  setupHeadersFeature() {\n    this.app.all('*', this.setContentHeaders.bind(this));\n  }\n\n  setupMagicHtmlFeature() {\n    this.app.get('*', this.serveMagicHtml.bind(this));\n  }\n\n  setupSetupFeature() {\n    this.log.warn(\n      'The `setup` option is deprecated and will be removed in v4. Please update your config to use `before`'\n    );\n\n    this.options.setup(this.app, this);\n  }\n\n  setupFeatures() {\n    const features = {\n      compress: () => {\n        if (this.options.compress) {\n          this.setupCompressFeature();\n        }\n      },\n      proxy: () => {\n        if (this.options.proxy) {\n          this.setupProxyFeature();\n        }\n      },\n      historyApiFallback: () => {\n        if (this.options.historyApiFallback) {\n          this.setupHistoryApiFallbackFeature();\n        }\n      },\n      // Todo rename to `static` in future major release\n      contentBaseFiles: () => {\n        this.setupStaticFeature();\n      },\n      // Todo rename to `serveIndex` in future major release\n      contentBaseIndex: () => {\n        this.setupServeIndexFeature();\n      },\n      // Todo rename to `watchStatic` in future major release\n      watchContentBase: () => {\n        this.setupWatchStaticFeature();\n      },\n      before: () => {\n        if (typeof this.options.before === 'function') {\n          this.setupBeforeFeature();\n        }\n      },\n      middleware: () => {\n        // include our middleware to ensure\n        // it is able to handle '/index.html' request after redirect\n        this.setupMiddleware();\n      },\n      after: () => {\n        if (typeof this.options.after === 'function') {\n          this.setupAfterFeature();\n        }\n      },\n      headers: () => {\n        this.setupHeadersFeature();\n      },\n      magicHtml: () => {\n        this.setupMagicHtmlFeature();\n      },\n      setup: () => {\n        if (typeof this.options.setup === 'function') {\n          this.setupSetupFeature();\n        }\n      },\n    };\n\n    const runnableFeatures = [];\n\n    // compress is placed last and uses unshift so that it will be the first middleware used\n    if (this.options.compress) {\n      runnableFeatures.push('compress');\n    }\n\n    runnableFeatures.push('setup', 'before', 'headers', 'middleware');\n\n    if (this.options.proxy) {\n      runnableFeatures.push('proxy', 'middleware');\n    }\n\n    if (this.options.contentBase !== false) {\n      runnableFeatures.push('contentBaseFiles');\n    }\n\n    if (this.options.historyApiFallback) {\n      runnableFeatures.push('historyApiFallback', 'middleware');\n\n      if (this.options.contentBase !== false) {\n        runnableFeatures.push('contentBaseFiles');\n      }\n    }\n\n    // checking if it's set to true or not set (Default : undefined => true)\n    this.serveIndex = this.serveIndex || this.serveIndex === undefined;\n\n    if (this.options.contentBase && this.serveIndex) {\n      runnableFeatures.push('contentBaseIndex');\n    }\n\n    if (this.options.watchContentBase) {\n      runnableFeatures.push('watchContentBase');\n    }\n\n    runnableFeatures.push('magicHtml');\n\n    if (this.options.after) {\n      runnableFeatures.push('after');\n    }\n\n    (this.options.features || runnableFeatures).forEach((feature) => {\n      features[feature]();\n    });\n  }\n\n  setupHttps() {\n    // if the user enables http2, we can safely enable https\n    if (this.options.http2 && !this.options.https) {\n      this.options.https = true;\n    }\n\n    if (this.options.https) {\n      // for keep supporting CLI parameters\n      if (typeof this.options.https === 'boolean') {\n        this.options.https = {\n          ca: this.options.ca,\n          pfx: this.options.pfx,\n          key: this.options.key,\n          cert: this.options.cert,\n          passphrase: this.options.pfxPassphrase,\n          requestCert: this.options.requestCert || false,\n        };\n      }\n\n      for (const property of ['ca', 'pfx', 'key', 'cert']) {\n        const value = this.options.https[property];\n        const isBuffer = value instanceof Buffer;\n\n        if (value && !isBuffer) {\n          let stats = null;\n\n          try {\n            stats = fs.lstatSync(fs.realpathSync(value)).isFile();\n          } catch (error) {\n            // ignore error\n          }\n\n          // It is file\n          this.options.https[property] = stats\n            ? fs.readFileSync(path.resolve(value))\n            : value;\n        }\n      }\n\n      let fakeCert;\n\n      if (!this.options.https.key || !this.options.https.cert) {\n        fakeCert = getCertificate(this.log);\n      }\n\n      this.options.https.key = this.options.https.key || fakeCert;\n      this.options.https.cert = this.options.https.cert || fakeCert;\n\n      // note that options.spdy never existed. The user was able\n      // to set options.https.spdy before, though it was not in the\n      // docs. Keep options.https.spdy if the user sets it for\n      // backwards compatibility, but log a deprecation warning.\n      if (this.options.https.spdy) {\n        // for backwards compatibility: if options.https.spdy was passed in before,\n        // it was not altered in any way\n        this.log.warn(\n          'Providing custom spdy server options is deprecated and will be removed in the next major version.'\n        );\n      } else {\n        // if the normal https server gets this option, it will not affect it.\n        this.options.https.spdy = {\n          protocols: ['h2', 'http/1.1'],\n        };\n      }\n    }\n  }\n\n  createServer() {\n    if (this.options.https) {\n      // Only prevent HTTP/2 if http2 is explicitly set to false\n      const isHttp2 = this.options.http2 !== false;\n\n      // `spdy` is effectively unmaintained, and as a consequence of an\n      // implementation that extensively relies on Node’s non-public APIs, broken\n      // on Node 10 and above. In those cases, only https will be used for now.\n      // Once express supports Node's built-in HTTP/2 support, migrating over to\n      // that should be the best way to go.\n      // The relevant issues are:\n      // - https://github.com/nodejs/node/issues/21665\n      // - https://github.com/webpack/webpack-dev-server/issues/1449\n      // - https://github.com/expressjs/express/issues/3388\n      if (semver.gte(process.version, '10.0.0') || !isHttp2) {\n        if (this.options.http2) {\n          // the user explicitly requested http2 but is not getting it because\n          // of the node version.\n          this.log.warn(\n            'HTTP/2 is currently unsupported for Node 10.0.0 and above, but will be supported once Express supports it'\n          );\n        }\n        this.listeningApp = https.createServer(this.options.https, this.app);\n      } else {\n        // The relevant issues are:\n        // https://github.com/spdy-http2/node-spdy/issues/350\n        // https://github.com/webpack/webpack-dev-server/issues/1592\n        this.listeningApp = require('spdy').createServer(\n          this.options.https,\n          this.app\n        );\n      }\n    } else {\n      this.listeningApp = http.createServer(this.app);\n    }\n\n    this.listeningApp.on('error', (err) => {\n      this.log.error(err);\n    });\n  }\n\n  createSocketServer() {\n    const SocketServerImplementation = this.socketServerImplementation;\n    this.socketServer = new SocketServerImplementation(this);\n\n    this.socketServer.onConnection((connection, headers) => {\n      if (!connection) {\n        return;\n      }\n\n      if (!headers) {\n        this.log.warn(\n          'transportMode.server implementation must pass headers to the callback of onConnection(f) ' +\n            'via f(connection, headers) in order for clients to pass a headers security check'\n        );\n      }\n\n      if (!headers || !this.checkHost(headers) || !this.checkOrigin(headers)) {\n        this.sockWrite([connection], 'error', 'Invalid Host/Origin header');\n\n        this.socketServer.close(connection);\n\n        return;\n      }\n\n      this.sockets.push(connection);\n\n      this.socketServer.onConnectionClose(connection, () => {\n        const idx = this.sockets.indexOf(connection);\n\n        if (idx >= 0) {\n          this.sockets.splice(idx, 1);\n        }\n      });\n\n      if (this.clientLogLevel) {\n        this.sockWrite([connection], 'log-level', this.clientLogLevel);\n      }\n\n      if (this.hot) {\n        this.sockWrite([connection], 'hot');\n      }\n\n      // TODO: change condition at major version\n      if (this.options.liveReload !== false) {\n        this.sockWrite([connection], 'liveReload', this.options.liveReload);\n      }\n\n      if (this.progress) {\n        this.sockWrite([connection], 'progress', this.progress);\n      }\n\n      if (this.clientOverlay) {\n        this.sockWrite([connection], 'overlay', this.clientOverlay);\n      }\n\n      if (!this._stats) {\n        return;\n      }\n\n      this._sendStats([connection], this.getStats(this._stats), true);\n    });\n  }\n\n  showStatus() {\n    const suffix =\n      this.options.inline !== false || this.options.lazy === true\n        ? '/'\n        : '/webpack-dev-server/';\n    const uri = `${createDomain(this.options, this.listeningApp)}${suffix}`;\n\n    status(\n      uri,\n      this.options,\n      this.log,\n      this.options.stats && this.options.stats.colors\n    );\n  }\n\n  listen(port, hostname, fn) {\n    this.hostname = hostname;\n\n    return this.listeningApp.listen(port, hostname, (err) => {\n      this.createSocketServer();\n\n      if (this.options.bonjour) {\n        runBonjour(this.options);\n      }\n\n      this.showStatus();\n\n      if (fn) {\n        fn.call(this.listeningApp, err);\n      }\n\n      if (typeof this.options.onListening === 'function') {\n        this.options.onListening(this);\n      }\n    });\n  }\n\n  close(cb) {\n    this.sockets.forEach((socket) => {\n      this.socketServer.close(socket);\n    });\n\n    this.sockets = [];\n\n    this.contentBaseWatchers.forEach((watcher) => {\n      watcher.close();\n    });\n\n    this.contentBaseWatchers = [];\n\n    this.listeningApp.kill(() => {\n      this.middleware.close(cb);\n    });\n  }\n\n  static get DEFAULT_STATS() {\n    return {\n      all: false,\n      hash: true,\n      assets: true,\n      warnings: true,\n      errors: true,\n      errorDetails: false,\n    };\n  }\n\n  getStats(statsObj) {\n    const stats = Server.DEFAULT_STATS;\n\n    if (this.originalStats.warningsFilter) {\n      stats.warningsFilter = this.originalStats.warningsFilter;\n    }\n\n    return statsObj.toJson(stats);\n  }\n\n  use() {\n    // eslint-disable-next-line\n    this.app.use.apply(this.app, arguments);\n  }\n\n  setContentHeaders(req, res, next) {\n    if (this.headers) {\n      // eslint-disable-next-line\n      for (const name in this.headers) {\n        res.setHeader(name, this.headers[name]);\n      }\n    }\n\n    next();\n  }\n\n  checkHost(headers) {\n    return this.checkHeaders(headers, 'host');\n  }\n\n  checkOrigin(headers) {\n    return this.checkHeaders(headers, 'origin');\n  }\n\n  checkHeaders(headers, headerToCheck) {\n    // allow user to opt-out this security check, at own risk\n    if (this.disableHostCheck) {\n      return true;\n    }\n\n    if (!headerToCheck) {\n      headerToCheck = 'host';\n    }\n\n    // get the Host header and extract hostname\n    // we don't care about port not matching\n    const hostHeader = headers[headerToCheck];\n\n    if (!hostHeader) {\n      return false;\n    }\n\n    // use the node url-parser to retrieve the hostname from the host-header.\n    const hostname = url.parse(\n      // if hostHeader doesn't have scheme, add // for parsing.\n      /^(.+:)?\\/\\//.test(hostHeader) ? hostHeader : `//${hostHeader}`,\n      false,\n      true\n    ).hostname;\n    // always allow requests with explicit IPv4 or IPv6-address.\n    // A note on IPv6 addresses:\n    // hostHeader will always contain the brackets denoting\n    // an IPv6-address in URLs,\n    // these are removed from the hostname in url.parse(),\n    // so we have the pure IPv6-address in hostname.\n    // always allow localhost host, for convenience (hostname === 'localhost')\n    // allow hostname of listening address  (hostname === this.hostname)\n    const isValidHostname =\n      ip.isV4Format(hostname) ||\n      ip.isV6Format(hostname) ||\n      hostname === 'localhost' ||\n      hostname === this.hostname;\n\n    if (isValidHostname) {\n      return true;\n    }\n    // always allow localhost host, for convenience\n    // allow if hostname is in allowedHosts\n    if (this.allowedHosts && this.allowedHosts.length) {\n      for (let hostIdx = 0; hostIdx < this.allowedHosts.length; hostIdx++) {\n        const allowedHost = this.allowedHosts[hostIdx];\n\n        if (allowedHost === hostname) {\n          return true;\n        }\n\n        // support \".\" as a subdomain wildcard\n        // e.g. \".example.com\" will allow \"example.com\", \"www.example.com\", \"subdomain.example.com\", etc\n        if (allowedHost[0] === '.') {\n          // \"example.com\"  (hostname === allowedHost.substring(1))\n          // \"*.example.com\"  (hostname.endsWith(allowedHost))\n          if (\n            hostname === allowedHost.substring(1) ||\n            hostname.endsWith(allowedHost)\n          ) {\n            return true;\n          }\n        }\n      }\n    }\n\n    // also allow public hostname if provided\n    if (typeof this.publicHost === 'string') {\n      const idxPublic = this.publicHost.indexOf(':');\n      const publicHostname =\n        idxPublic >= 0 ? this.publicHost.substr(0, idxPublic) : this.publicHost;\n\n      if (hostname === publicHostname) {\n        return true;\n      }\n    }\n\n    // disallow\n    return false;\n  }\n\n  // eslint-disable-next-line\n  sockWrite(sockets, type, data) {\n    sockets.forEach((socket) => {\n      this.socketServer.send(socket, JSON.stringify({ type, data }));\n    });\n  }\n\n  serveMagicHtml(req, res, next) {\n    const _path = req.path;\n\n    try {\n      const isFile = this.middleware.fileSystem\n        .statSync(this.middleware.getFilenameFromUrl(`${_path}.js`))\n        .isFile();\n\n      if (!isFile) {\n        return next();\n      }\n      // Serve a page that executes the javascript\n      const queries = req._parsedUrl.search || '';\n      const responsePage = `<!DOCTYPE html><html><head><meta charset=\"utf-8\"/></head><body><script type=\"text/javascript\" charset=\"utf-8\" src=\"${_path}.js${queries}\"></script></body></html>`;\n      res.send(responsePage);\n    } catch (err) {\n      return next();\n    }\n  }\n\n  // send stats to a socket or multiple sockets\n  _sendStats(sockets, stats, force) {\n    const shouldEmit =\n      !force &&\n      stats &&\n      (!stats.errors || stats.errors.length === 0) &&\n      stats.assets &&\n      stats.assets.every((asset) => !asset.emitted);\n\n    if (shouldEmit) {\n      return this.sockWrite(sockets, 'still-ok');\n    }\n\n    this.sockWrite(sockets, 'hash', stats.hash);\n\n    if (stats.errors.length > 0) {\n      this.sockWrite(sockets, 'errors', stats.errors);\n    } else if (stats.warnings.length > 0) {\n      this.sockWrite(sockets, 'warnings', stats.warnings);\n    } else {\n      this.sockWrite(sockets, 'ok');\n    }\n  }\n\n  _watch(watchPath) {\n    // duplicate the same massaging of options that watchpack performs\n    // https://github.com/webpack/watchpack/blob/master/lib/DirectoryWatcher.js#L49\n    // this isn't an elegant solution, but we'll improve it in the future\n    const usePolling = this.watchOptions.poll ? true : undefined;\n    const interval =\n      typeof this.watchOptions.poll === 'number'\n        ? this.watchOptions.poll\n        : undefined;\n\n    const watchOptions = {\n      ignoreInitial: true,\n      persistent: true,\n      followSymlinks: false,\n      atomic: false,\n      alwaysStat: true,\n      ignorePermissionErrors: true,\n      ignored: this.watchOptions.ignored,\n      usePolling,\n      interval,\n    };\n\n    const watcher = chokidar.watch(watchPath, watchOptions);\n    // disabling refreshing on changing the content\n    if (this.options.liveReload !== false) {\n      watcher.on('change', () => {\n        this.sockWrite(this.sockets, 'content-changed');\n      });\n    }\n    this.contentBaseWatchers.push(watcher);\n  }\n\n  invalidate(callback) {\n    if (this.middleware) {\n      this.middleware.invalidate(callback);\n    }\n  }\n}\n\n// Export this logic,\n// so that other implementations,\n// like task-runners can use it\nServer.addDevServerEntrypoints = require('./utils/addEntries');\n\nmodule.exports = Server;\n"]},"metadata":{},"sourceType":"script"}