{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\n\nvar AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\n\nvar AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\n\nvar AMDRequireDependenciesBlock = require(\"./AMDRequireDependenciesBlock\");\n\nvar UnsupportedDependency = require(\"./UnsupportedDependency\");\n\nvar LocalModuleDependency = require(\"./LocalModuleDependency\");\n\nvar ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\n\nvar LocalModulesHelpers = require(\"./LocalModulesHelpers\");\n\nvar ConstDependency = require(\"./ConstDependency\");\n\nvar getFunctionExpression = require(\"./getFunctionExpression\");\n\nvar UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\n\nvar AMDRequireDependenciesBlockParserPlugin = /*#__PURE__*/function () {\n  function AMDRequireDependenciesBlockParserPlugin(options) {\n    _classCallCheck(this, AMDRequireDependenciesBlockParserPlugin);\n\n    this.options = options;\n  }\n\n  _createClass(AMDRequireDependenciesBlockParserPlugin, [{\n    key: \"processFunctionArgument\",\n    value: function processFunctionArgument(parser, expression) {\n      var bindThis = true;\n      var fnData = getFunctionExpression(expression);\n\n      if (fnData) {\n        parser.inScope(fnData.fn.params.filter(function (i) {\n          return ![\"require\", \"module\", \"exports\"].includes(i.name);\n        }), function () {\n          if (fnData.fn.body.type === \"BlockStatement\") {\n            parser.walkStatement(fnData.fn.body);\n          } else {\n            parser.walkExpression(fnData.fn.body);\n          }\n        });\n        parser.walkExpressions(fnData.expressions);\n\n        if (fnData.needThis === false) {\n          bindThis = false;\n        }\n      } else {\n        parser.walkExpression(expression);\n      }\n\n      return bindThis;\n    }\n  }, {\n    key: \"apply\",\n    value: function apply(parser) {\n      parser.hooks.call.for(\"require\").tap(\"AMDRequireDependenciesBlockParserPlugin\", this.processCallRequire.bind(this, parser));\n    }\n  }, {\n    key: \"processArray\",\n    value: function processArray(parser, expr, param) {\n      if (param.isArray()) {\n        var _iterator = _createForOfIteratorHelper(param.items),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var p = _step.value;\n            var result = this.processItem(parser, expr, p);\n\n            if (result === undefined) {\n              this.processContext(parser, expr, p);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        return true;\n      } else if (param.isConstArray()) {\n        var deps = [];\n\n        var _iterator2 = _createForOfIteratorHelper(param.array),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var request = _step2.value;\n\n            var _dep = void 0,\n                localModule = void 0;\n\n            if (request === \"require\") {\n              _dep = \"__webpack_require__\";\n            } else if ([\"exports\", \"module\"].includes(request)) {\n              _dep = request;\n            } else if (localModule = LocalModulesHelpers.getLocalModule(parser.state, request)) {\n              _dep = new LocalModuleDependency(localModule, undefined, false);\n              _dep.loc = expr.loc;\n              parser.state.current.addDependency(_dep);\n            } else {\n              _dep = this.newRequireItemDependency(request);\n              _dep.loc = expr.loc;\n              _dep.optional = !!parser.scope.inTry;\n              parser.state.current.addDependency(_dep);\n            }\n\n            deps.push(_dep);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        var dep = this.newRequireArrayDependency(deps, param.range);\n        dep.loc = expr.loc;\n        dep.optional = !!parser.scope.inTry;\n        parser.state.current.addDependency(dep);\n        return true;\n      }\n    }\n  }, {\n    key: \"processItem\",\n    value: function processItem(parser, expr, param) {\n      if (param.isConditional()) {\n        var _iterator3 = _createForOfIteratorHelper(param.options),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var p = _step3.value;\n            var result = this.processItem(parser, expr, p);\n\n            if (result === undefined) {\n              this.processContext(parser, expr, p);\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        return true;\n      } else if (param.isString()) {\n        var dep, localModule;\n\n        if (param.string === \"require\") {\n          dep = new ConstDependency(\"__webpack_require__\", param.string);\n        } else if (param.string === \"module\") {\n          dep = new ConstDependency(parser.state.module.buildInfo.moduleArgument, param.range);\n        } else if (param.string === \"exports\") {\n          dep = new ConstDependency(parser.state.module.buildInfo.exportsArgument, param.range);\n        } else if (localModule = LocalModulesHelpers.getLocalModule(parser.state, param.string)) {\n          dep = new LocalModuleDependency(localModule, param.range, false);\n        } else {\n          dep = this.newRequireItemDependency(param.string, param.range);\n        }\n\n        dep.loc = expr.loc;\n        dep.optional = !!parser.scope.inTry;\n        parser.state.current.addDependency(dep);\n        return true;\n      }\n    }\n  }, {\n    key: \"processContext\",\n    value: function processContext(parser, expr, param) {\n      var dep = ContextDependencyHelpers.create(AMDRequireContextDependency, param.range, param, expr, this.options, {}, parser);\n      if (!dep) return;\n      dep.loc = expr.loc;\n      dep.optional = !!parser.scope.inTry;\n      parser.state.current.addDependency(dep);\n      return true;\n    }\n  }, {\n    key: \"processArrayForRequestString\",\n    value: function processArrayForRequestString(param) {\n      var _this = this;\n\n      if (param.isArray()) {\n        var result = param.items.map(function (item) {\n          return _this.processItemForRequestString(item);\n        });\n        if (result.every(Boolean)) return result.join(\" \");\n      } else if (param.isConstArray()) {\n        return param.array.join(\" \");\n      }\n    }\n  }, {\n    key: \"processItemForRequestString\",\n    value: function processItemForRequestString(param) {\n      var _this2 = this;\n\n      if (param.isConditional()) {\n        var result = param.options.map(function (item) {\n          return _this2.processItemForRequestString(item);\n        });\n        if (result.every(Boolean)) return result.join(\"|\");\n      } else if (param.isString()) {\n        return param.string;\n      }\n    }\n  }, {\n    key: \"processCallRequire\",\n    value: function processCallRequire(parser, expr) {\n      var _this3 = this;\n\n      var param;\n      var dep;\n      var result;\n      var old = parser.state.current;\n\n      if (expr.arguments.length >= 1) {\n        param = parser.evaluateExpression(expr.arguments[0]);\n        dep = this.newRequireDependenciesBlock(expr, param.range, expr.arguments.length > 1 ? expr.arguments[1].range : null, expr.arguments.length > 2 ? expr.arguments[2].range : null, parser.state.module, expr.loc, this.processArrayForRequestString(param));\n        parser.state.current = dep;\n      }\n\n      if (expr.arguments.length === 1) {\n        parser.inScope([], function () {\n          result = _this3.processArray(parser, expr, param);\n        });\n        parser.state.current = old;\n        if (!result) return;\n        parser.state.current.addBlock(dep);\n        return true;\n      }\n\n      if (expr.arguments.length === 2 || expr.arguments.length === 3) {\n        try {\n          parser.inScope([], function () {\n            result = _this3.processArray(parser, expr, param);\n          });\n\n          if (!result) {\n            dep = new UnsupportedDependency(\"unsupported\", expr.range);\n            old.addDependency(dep);\n\n            if (parser.state.module) {\n              parser.state.module.errors.push(new UnsupportedFeatureWarning(parser.state.module, \"Cannot statically analyse 'require(…, …)' in line \" + expr.loc.start.line, expr.loc));\n            }\n\n            dep = null;\n            return true;\n          }\n\n          dep.functionBindThis = this.processFunctionArgument(parser, expr.arguments[1]);\n\n          if (expr.arguments.length === 3) {\n            dep.errorCallbackBindThis = this.processFunctionArgument(parser, expr.arguments[2]);\n          }\n        } finally {\n          parser.state.current = old;\n          if (dep) parser.state.current.addBlock(dep);\n        }\n\n        return true;\n      }\n    }\n  }, {\n    key: \"newRequireDependenciesBlock\",\n    value: function newRequireDependenciesBlock(expr, arrayRange, functionRange, errorCallbackRange, module, loc, request) {\n      return new AMDRequireDependenciesBlock(expr, arrayRange, functionRange, errorCallbackRange, module, loc, request);\n    }\n  }, {\n    key: \"newRequireItemDependency\",\n    value: function newRequireItemDependency(request, range) {\n      return new AMDRequireItemDependency(request, range);\n    }\n  }, {\n    key: \"newRequireArrayDependency\",\n    value: function newRequireArrayDependency(depsArray, range) {\n      return new AMDRequireArrayDependency(depsArray, range);\n    }\n  }]);\n\n  return AMDRequireDependenciesBlockParserPlugin;\n}();\n\nmodule.exports = AMDRequireDependenciesBlockParserPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/dependencies/AMDRequireDependenciesBlockParserPlugin.js"],"names":["AMDRequireItemDependency","require","AMDRequireArrayDependency","AMDRequireContextDependency","AMDRequireDependenciesBlock","UnsupportedDependency","LocalModuleDependency","ContextDependencyHelpers","LocalModulesHelpers","ConstDependency","getFunctionExpression","UnsupportedFeatureWarning","AMDRequireDependenciesBlockParserPlugin","options","parser","expression","bindThis","fnData","inScope","fn","params","filter","i","includes","name","body","type","walkStatement","walkExpression","walkExpressions","expressions","needThis","hooks","call","for","tap","processCallRequire","bind","expr","param","isArray","items","p","result","processItem","undefined","processContext","isConstArray","deps","array","request","dep","localModule","getLocalModule","state","loc","current","addDependency","newRequireItemDependency","optional","scope","inTry","push","newRequireArrayDependency","range","isConditional","isString","string","module","buildInfo","moduleArgument","exportsArgument","create","map","item","processItemForRequestString","every","Boolean","join","old","arguments","length","evaluateExpression","newRequireDependenciesBlock","processArrayForRequestString","processArray","addBlock","errors","start","line","functionBindThis","processFunctionArgument","errorCallbackBindThis","arrayRange","functionRange","errorCallbackRange","depsArray","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\nconst AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\nconst AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\nconst AMDRequireDependenciesBlock = require(\"./AMDRequireDependenciesBlock\");\nconst UnsupportedDependency = require(\"./UnsupportedDependency\");\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\nconst LocalModulesHelpers = require(\"./LocalModulesHelpers\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst getFunctionExpression = require(\"./getFunctionExpression\");\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\n\nclass AMDRequireDependenciesBlockParserPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tprocessFunctionArgument(parser, expression) {\n\t\tlet bindThis = true;\n\t\tconst fnData = getFunctionExpression(expression);\n\t\tif (fnData) {\n\t\t\tparser.inScope(\n\t\t\t\tfnData.fn.params.filter(i => {\n\t\t\t\t\treturn ![\"require\", \"module\", \"exports\"].includes(i.name);\n\t\t\t\t}),\n\t\t\t\t() => {\n\t\t\t\t\tif (fnData.fn.body.type === \"BlockStatement\") {\n\t\t\t\t\t\tparser.walkStatement(fnData.fn.body);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparser.walkExpression(fnData.fn.body);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tparser.walkExpressions(fnData.expressions);\n\t\t\tif (fnData.needThis === false) {\n\t\t\t\tbindThis = false;\n\t\t\t}\n\t\t} else {\n\t\t\tparser.walkExpression(expression);\n\t\t}\n\t\treturn bindThis;\n\t}\n\n\tapply(parser) {\n\t\tparser.hooks.call\n\t\t\t.for(\"require\")\n\t\t\t.tap(\n\t\t\t\t\"AMDRequireDependenciesBlockParserPlugin\",\n\t\t\t\tthis.processCallRequire.bind(this, parser)\n\t\t\t);\n\t}\n\n\tprocessArray(parser, expr, param) {\n\t\tif (param.isArray()) {\n\t\t\tfor (const p of param.items) {\n\t\t\t\tconst result = this.processItem(parser, expr, p);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tthis.processContext(parser, expr, p);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (param.isConstArray()) {\n\t\t\tconst deps = [];\n\t\t\tfor (const request of param.array) {\n\t\t\t\tlet dep, localModule;\n\t\t\t\tif (request === \"require\") {\n\t\t\t\t\tdep = \"__webpack_require__\";\n\t\t\t\t} else if ([\"exports\", \"module\"].includes(request)) {\n\t\t\t\t\tdep = request;\n\t\t\t\t} else if (\n\t\t\t\t\t(localModule = LocalModulesHelpers.getLocalModule(\n\t\t\t\t\t\tparser.state,\n\t\t\t\t\t\trequest\n\t\t\t\t\t))\n\t\t\t\t) {\n\t\t\t\t\tdep = new LocalModuleDependency(localModule, undefined, false);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t} else {\n\t\t\t\t\tdep = this.newRequireItemDependency(request);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t}\n\t\t\t\tdeps.push(dep);\n\t\t\t}\n\t\t\tconst dep = this.newRequireArrayDependency(deps, param.range);\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t}\n\t}\n\tprocessItem(parser, expr, param) {\n\t\tif (param.isConditional()) {\n\t\t\tfor (const p of param.options) {\n\t\t\t\tconst result = this.processItem(parser, expr, p);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tthis.processContext(parser, expr, p);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (param.isString()) {\n\t\t\tlet dep, localModule;\n\t\t\tif (param.string === \"require\") {\n\t\t\t\tdep = new ConstDependency(\"__webpack_require__\", param.string);\n\t\t\t} else if (param.string === \"module\") {\n\t\t\t\tdep = new ConstDependency(\n\t\t\t\t\tparser.state.module.buildInfo.moduleArgument,\n\t\t\t\t\tparam.range\n\t\t\t\t);\n\t\t\t} else if (param.string === \"exports\") {\n\t\t\t\tdep = new ConstDependency(\n\t\t\t\t\tparser.state.module.buildInfo.exportsArgument,\n\t\t\t\t\tparam.range\n\t\t\t\t);\n\t\t\t} else if (\n\t\t\t\t(localModule = LocalModulesHelpers.getLocalModule(\n\t\t\t\t\tparser.state,\n\t\t\t\t\tparam.string\n\t\t\t\t))\n\t\t\t) {\n\t\t\t\tdep = new LocalModuleDependency(localModule, param.range, false);\n\t\t\t} else {\n\t\t\t\tdep = this.newRequireItemDependency(param.string, param.range);\n\t\t\t}\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t}\n\t}\n\tprocessContext(parser, expr, param) {\n\t\tconst dep = ContextDependencyHelpers.create(\n\t\t\tAMDRequireContextDependency,\n\t\t\tparam.range,\n\t\t\tparam,\n\t\t\texpr,\n\t\t\tthis.options,\n\t\t\t{},\n\t\t\tparser\n\t\t);\n\t\tif (!dep) return;\n\t\tdep.loc = expr.loc;\n\t\tdep.optional = !!parser.scope.inTry;\n\t\tparser.state.current.addDependency(dep);\n\t\treturn true;\n\t}\n\n\tprocessArrayForRequestString(param) {\n\t\tif (param.isArray()) {\n\t\t\tconst result = param.items.map(item =>\n\t\t\t\tthis.processItemForRequestString(item)\n\t\t\t);\n\t\t\tif (result.every(Boolean)) return result.join(\" \");\n\t\t} else if (param.isConstArray()) {\n\t\t\treturn param.array.join(\" \");\n\t\t}\n\t}\n\n\tprocessItemForRequestString(param) {\n\t\tif (param.isConditional()) {\n\t\t\tconst result = param.options.map(item =>\n\t\t\t\tthis.processItemForRequestString(item)\n\t\t\t);\n\t\t\tif (result.every(Boolean)) return result.join(\"|\");\n\t\t} else if (param.isString()) {\n\t\t\treturn param.string;\n\t\t}\n\t}\n\n\tprocessCallRequire(parser, expr) {\n\t\tlet param;\n\t\tlet dep;\n\t\tlet result;\n\n\t\tconst old = parser.state.current;\n\n\t\tif (expr.arguments.length >= 1) {\n\t\t\tparam = parser.evaluateExpression(expr.arguments[0]);\n\t\t\tdep = this.newRequireDependenciesBlock(\n\t\t\t\texpr,\n\t\t\t\tparam.range,\n\t\t\t\texpr.arguments.length > 1 ? expr.arguments[1].range : null,\n\t\t\t\texpr.arguments.length > 2 ? expr.arguments[2].range : null,\n\t\t\t\tparser.state.module,\n\t\t\t\texpr.loc,\n\t\t\t\tthis.processArrayForRequestString(param)\n\t\t\t);\n\t\t\tparser.state.current = dep;\n\t\t}\n\n\t\tif (expr.arguments.length === 1) {\n\t\t\tparser.inScope([], () => {\n\t\t\t\tresult = this.processArray(parser, expr, param);\n\t\t\t});\n\t\t\tparser.state.current = old;\n\t\t\tif (!result) return;\n\t\t\tparser.state.current.addBlock(dep);\n\t\t\treturn true;\n\t\t}\n\n\t\tif (expr.arguments.length === 2 || expr.arguments.length === 3) {\n\t\t\ttry {\n\t\t\t\tparser.inScope([], () => {\n\t\t\t\t\tresult = this.processArray(parser, expr, param);\n\t\t\t\t});\n\t\t\t\tif (!result) {\n\t\t\t\t\tdep = new UnsupportedDependency(\"unsupported\", expr.range);\n\t\t\t\t\told.addDependency(dep);\n\t\t\t\t\tif (parser.state.module) {\n\t\t\t\t\t\tparser.state.module.errors.push(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t\"Cannot statically analyse 'require(…, …)' in line \" +\n\t\t\t\t\t\t\t\t\texpr.loc.start.line,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tdep = null;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tdep.functionBindThis = this.processFunctionArgument(\n\t\t\t\t\tparser,\n\t\t\t\t\texpr.arguments[1]\n\t\t\t\t);\n\t\t\t\tif (expr.arguments.length === 3) {\n\t\t\t\t\tdep.errorCallbackBindThis = this.processFunctionArgument(\n\t\t\t\t\t\tparser,\n\t\t\t\t\t\texpr.arguments[2]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tparser.state.current = old;\n\t\t\t\tif (dep) parser.state.current.addBlock(dep);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tnewRequireDependenciesBlock(\n\t\texpr,\n\t\tarrayRange,\n\t\tfunctionRange,\n\t\terrorCallbackRange,\n\t\tmodule,\n\t\tloc,\n\t\trequest\n\t) {\n\t\treturn new AMDRequireDependenciesBlock(\n\t\t\texpr,\n\t\t\tarrayRange,\n\t\t\tfunctionRange,\n\t\t\terrorCallbackRange,\n\t\t\tmodule,\n\t\t\tloc,\n\t\t\trequest\n\t\t);\n\t}\n\tnewRequireItemDependency(request, range) {\n\t\treturn new AMDRequireItemDependency(request, range);\n\t}\n\tnewRequireArrayDependency(depsArray, range) {\n\t\treturn new AMDRequireArrayDependency(depsArray, range);\n\t}\n}\nmodule.exports = AMDRequireDependenciesBlockParserPlugin;\n"]},"metadata":{},"sourceType":"script"}