{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar GraphHelpers = require(\"../GraphHelpers\");\n\nvar EnsureChunkConditionsPlugin = /*#__PURE__*/function () {\n  function EnsureChunkConditionsPlugin() {\n    _classCallCheck(this, EnsureChunkConditionsPlugin);\n  }\n\n  _createClass(EnsureChunkConditionsPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.compilation.tap(\"EnsureChunkConditionsPlugin\", function (compilation) {\n        var handler = function handler(chunks) {\n          var changed = false;\n\n          var _iterator = _createForOfIteratorHelper(compilation.modules),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _module = _step.value;\n              if (!_module.chunkCondition) continue;\n              var sourceChunks = new Set();\n              var chunkGroups = new Set();\n\n              var _iterator2 = _createForOfIteratorHelper(_module.chunksIterable),\n                  _step2;\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var chunk = _step2.value;\n\n                  if (!_module.chunkCondition(chunk)) {\n                    sourceChunks.add(chunk);\n\n                    var _iterator6 = _createForOfIteratorHelper(chunk.groupsIterable),\n                        _step6;\n\n                    try {\n                      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                        var group = _step6.value;\n                        chunkGroups.add(group);\n                      }\n                    } catch (err) {\n                      _iterator6.e(err);\n                    } finally {\n                      _iterator6.f();\n                    }\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n\n              if (sourceChunks.size === 0) continue;\n              var targetChunks = new Set();\n\n              var _iterator3 = _createForOfIteratorHelper(chunkGroups),\n                  _step3;\n\n              try {\n                chunkGroupLoop: for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var chunkGroup = _step3.value;\n\n                  // Can module be placed in a chunk of this group?\n                  var _iterator7 = _createForOfIteratorHelper(chunkGroup.chunks),\n                      _step7;\n\n                  try {\n                    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                      var _chunk = _step7.value;\n\n                      if (_module.chunkCondition(_chunk)) {\n                        targetChunks.add(_chunk);\n                        continue chunkGroupLoop;\n                      }\n                    } // We reached the entrypoint: fail\n\n                  } catch (err) {\n                    _iterator7.e(err);\n                  } finally {\n                    _iterator7.f();\n                  }\n\n                  if (chunkGroup.isInitial()) {\n                    throw new Error(\"Cannot fullfil chunk condition of \" + _module.identifier());\n                  } // Try placing in all parents\n\n\n                  var _iterator8 = _createForOfIteratorHelper(chunkGroup.parentsIterable),\n                      _step8;\n\n                  try {\n                    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                      var _group = _step8.value;\n                      chunkGroups.add(_group);\n                    }\n                  } catch (err) {\n                    _iterator8.e(err);\n                  } finally {\n                    _iterator8.f();\n                  }\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n\n              var _iterator4 = _createForOfIteratorHelper(sourceChunks),\n                  _step4;\n\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  var sourceChunk = _step4.value;\n                  GraphHelpers.disconnectChunkAndModule(sourceChunk, _module);\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n\n              var _iterator5 = _createForOfIteratorHelper(targetChunks),\n                  _step5;\n\n              try {\n                for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                  var targetChunk = _step5.value;\n                  GraphHelpers.connectChunkAndModule(targetChunk, _module);\n                }\n              } catch (err) {\n                _iterator5.e(err);\n              } finally {\n                _iterator5.f();\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          if (changed) return true;\n        };\n\n        compilation.hooks.optimizeChunksBasic.tap(\"EnsureChunkConditionsPlugin\", handler);\n        compilation.hooks.optimizeExtractedChunksBasic.tap(\"EnsureChunkConditionsPlugin\", handler);\n      });\n    }\n  }]);\n\n  return EnsureChunkConditionsPlugin;\n}();\n\nmodule.exports = EnsureChunkConditionsPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/optimize/EnsureChunkConditionsPlugin.js"],"names":["GraphHelpers","require","EnsureChunkConditionsPlugin","compiler","hooks","compilation","tap","handler","chunks","changed","modules","module","chunkCondition","sourceChunks","Set","chunkGroups","chunksIterable","chunk","add","groupsIterable","group","size","targetChunks","chunkGroupLoop","chunkGroup","isInitial","Error","identifier","parentsIterable","sourceChunk","disconnectChunkAndModule","targetChunk","connectChunkAndModule","optimizeChunksBasic","optimizeExtractedChunksBasic","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst GraphHelpers = require(\"../GraphHelpers\");\n\nclass EnsureChunkConditionsPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"EnsureChunkConditionsPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tconst handler = chunks => {\n\t\t\t\t\tlet changed = false;\n\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\tif (!module.chunkCondition) continue;\n\t\t\t\t\t\tconst sourceChunks = new Set();\n\t\t\t\t\t\tconst chunkGroups = new Set();\n\t\t\t\t\t\tfor (const chunk of module.chunksIterable) {\n\t\t\t\t\t\t\tif (!module.chunkCondition(chunk)) {\n\t\t\t\t\t\t\t\tsourceChunks.add(chunk);\n\t\t\t\t\t\t\t\tfor (const group of chunk.groupsIterable) {\n\t\t\t\t\t\t\t\t\tchunkGroups.add(group);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (sourceChunks.size === 0) continue;\n\t\t\t\t\t\tconst targetChunks = new Set();\n\t\t\t\t\t\tchunkGroupLoop: for (const chunkGroup of chunkGroups) {\n\t\t\t\t\t\t\t// Can module be placed in a chunk of this group?\n\t\t\t\t\t\t\tfor (const chunk of chunkGroup.chunks) {\n\t\t\t\t\t\t\t\tif (module.chunkCondition(chunk)) {\n\t\t\t\t\t\t\t\t\ttargetChunks.add(chunk);\n\t\t\t\t\t\t\t\t\tcontinue chunkGroupLoop;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// We reached the entrypoint: fail\n\t\t\t\t\t\t\tif (chunkGroup.isInitial()) {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\"Cannot fullfil chunk condition of \" + module.identifier()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Try placing in all parents\n\t\t\t\t\t\t\tfor (const group of chunkGroup.parentsIterable) {\n\t\t\t\t\t\t\t\tchunkGroups.add(group);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const sourceChunk of sourceChunks) {\n\t\t\t\t\t\t\tGraphHelpers.disconnectChunkAndModule(sourceChunk, module);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const targetChunk of targetChunks) {\n\t\t\t\t\t\t\tGraphHelpers.connectChunkAndModule(targetChunk, module);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (changed) return true;\n\t\t\t\t};\n\t\t\t\tcompilation.hooks.optimizeChunksBasic.tap(\n\t\t\t\t\t\"EnsureChunkConditionsPlugin\",\n\t\t\t\t\thandler\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.optimizeExtractedChunksBasic.tap(\n\t\t\t\t\t\"EnsureChunkConditionsPlugin\",\n\t\t\t\t\thandler\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = EnsureChunkConditionsPlugin;\n"]},"metadata":{},"sourceType":"script"}