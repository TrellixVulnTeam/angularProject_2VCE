{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar LRU = require('lru-cache');\n\nvar MAX_SIZE = 50 * 1024 * 1024; // 50MB\n\nvar MAX_AGE = 3 * 60 * 1000;\nvar MEMOIZED = new LRU({\n  max: MAX_SIZE,\n  maxAge: MAX_AGE,\n  length: function length(entry, key) {\n    return key.startsWith('key:') ? entry.data.length : entry.length;\n  }\n});\nmodule.exports.clearMemoized = clearMemoized;\n\nfunction clearMemoized() {\n  var old = {};\n  MEMOIZED.forEach(function (v, k) {\n    old[k] = v;\n  });\n  MEMOIZED.reset();\n  return old;\n}\n\nmodule.exports.put = put;\n\nfunction put(cache, entry, data, opts) {\n  pickMem(opts).set(\"key:\".concat(cache, \":\").concat(entry.key), {\n    entry: entry,\n    data: data\n  });\n  putDigest(cache, entry.integrity, data, opts);\n}\n\nmodule.exports.put.byDigest = putDigest;\n\nfunction putDigest(cache, integrity, data, opts) {\n  pickMem(opts).set(\"digest:\".concat(cache, \":\").concat(integrity), data);\n}\n\nmodule.exports.get = get;\n\nfunction get(cache, key, opts) {\n  return pickMem(opts).get(\"key:\".concat(cache, \":\").concat(key));\n}\n\nmodule.exports.get.byDigest = getDigest;\n\nfunction getDigest(cache, integrity, opts) {\n  return pickMem(opts).get(\"digest:\".concat(cache, \":\").concat(integrity));\n}\n\nvar ObjProxy = /*#__PURE__*/function () {\n  function ObjProxy(obj) {\n    _classCallCheck(this, ObjProxy);\n\n    this.obj = obj;\n  }\n\n  _createClass(ObjProxy, [{\n    key: \"get\",\n    value: function get(key) {\n      return this.obj[key];\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, val) {\n      this.obj[key] = val;\n    }\n  }]);\n\n  return ObjProxy;\n}();\n\nfunction pickMem(opts) {\n  if (!opts || !opts.memoize) {\n    return MEMOIZED;\n  } else if (opts.memoize.get && opts.memoize.set) {\n    return opts.memoize;\n  } else if (typeof opts.memoize === 'object') {\n    return new ObjProxy(opts.memoize);\n  } else {\n    return MEMOIZED;\n  }\n}","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/cacache/lib/memoization.js"],"names":["LRU","require","MAX_SIZE","MAX_AGE","MEMOIZED","max","maxAge","length","entry","key","startsWith","data","module","exports","clearMemoized","old","forEach","v","k","reset","put","cache","opts","pickMem","set","putDigest","integrity","byDigest","get","getDigest","ObjProxy","obj","val","memoize"],"mappings":"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","sourcesContent":["'use strict'\n\nconst LRU = require('lru-cache')\n\nconst MAX_SIZE = 50 * 1024 * 1024 // 50MB\nconst MAX_AGE = 3 * 60 * 1000\n\nconst MEMOIZED = new LRU({\n  max: MAX_SIZE,\n  maxAge: MAX_AGE,\n  length: (entry, key) => key.startsWith('key:') ? entry.data.length : entry.length\n})\n\nmodule.exports.clearMemoized = clearMemoized\n\nfunction clearMemoized () {\n  const old = {}\n  MEMOIZED.forEach((v, k) => {\n    old[k] = v\n  })\n  MEMOIZED.reset()\n  return old\n}\n\nmodule.exports.put = put\n\nfunction put (cache, entry, data, opts) {\n  pickMem(opts).set(`key:${cache}:${entry.key}`, { entry, data })\n  putDigest(cache, entry.integrity, data, opts)\n}\n\nmodule.exports.put.byDigest = putDigest\n\nfunction putDigest (cache, integrity, data, opts) {\n  pickMem(opts).set(`digest:${cache}:${integrity}`, data)\n}\n\nmodule.exports.get = get\n\nfunction get (cache, key, opts) {\n  return pickMem(opts).get(`key:${cache}:${key}`)\n}\n\nmodule.exports.get.byDigest = getDigest\n\nfunction getDigest (cache, integrity, opts) {\n  return pickMem(opts).get(`digest:${cache}:${integrity}`)\n}\n\nclass ObjProxy {\n  constructor (obj) {\n    this.obj = obj\n  }\n\n  get (key) {\n    return this.obj[key]\n  }\n\n  set (key, val) {\n    this.obj[key] = val\n  }\n}\n\nfunction pickMem (opts) {\n  if (!opts || !opts.memoize) {\n    return MEMOIZED\n  } else if (opts.memoize.get && opts.memoize.set) {\n    return opts.memoize\n  } else if (typeof opts.memoize === 'object') {\n    return new ObjProxy(opts.memoize)\n  } else {\n    return MEMOIZED\n  }\n}\n"]},"metadata":{},"sourceType":"script"}