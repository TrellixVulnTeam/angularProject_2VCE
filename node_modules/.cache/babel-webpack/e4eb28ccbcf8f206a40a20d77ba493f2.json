{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _asyncIterator = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Explorer = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _ExplorerBase = require(\"./ExplorerBase\");\n\nvar _readFile = require(\"./readFile\");\n\nvar _cacheWrapper = require(\"./cacheWrapper\");\n\nvar _getDirectory = require(\"./getDirectory\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Explorer = /*#__PURE__*/function (_ExplorerBase$Explore) {\n  _inherits(Explorer, _ExplorerBase$Explore);\n\n  var _super = _createSuper(Explorer);\n\n  function Explorer(options) {\n    _classCallCheck(this, Explorer);\n\n    return _super.call(this, options);\n  }\n\n  _createClass(Explorer, [{\n    key: \"search\",\n    value: function () {\n      var _search = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var searchFrom,\n            startDirectory,\n            result,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                searchFrom = _args.length > 0 && _args[0] !== undefined ? _args[0] : process.cwd();\n                _context.next = 3;\n                return (0, _getDirectory.getDirectory)(searchFrom);\n\n              case 3:\n                startDirectory = _context.sent;\n                _context.next = 6;\n                return this.searchFromDirectory(startDirectory);\n\n              case 6:\n                result = _context.sent;\n                return _context.abrupt(\"return\", result);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function search() {\n        return _search.apply(this, arguments);\n      }\n\n      return search;\n    }()\n  }, {\n    key: \"searchFromDirectory\",\n    value: function () {\n      var _searchFromDirectory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dir) {\n        var _this = this;\n\n        var absoluteDir, run;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                absoluteDir = _path.default.resolve(process.cwd(), dir);\n\n                run = /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                    var result, nextDir, transformResult;\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.next = 2;\n                            return _this.searchDirectory(absoluteDir);\n\n                          case 2:\n                            result = _context2.sent;\n                            nextDir = _this.nextDirectoryToSearch(absoluteDir, result);\n\n                            if (!nextDir) {\n                              _context2.next = 6;\n                              break;\n                            }\n\n                            return _context2.abrupt(\"return\", _this.searchFromDirectory(nextDir));\n\n                          case 6:\n                            _context2.next = 8;\n                            return _this.config.transform(result);\n\n                          case 8:\n                            transformResult = _context2.sent;\n                            return _context2.abrupt(\"return\", transformResult);\n\n                          case 10:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function run() {\n                    return _ref.apply(this, arguments);\n                  };\n                }();\n\n                if (!this.searchCache) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", (0, _cacheWrapper.cacheWrapper)(this.searchCache, absoluteDir, run));\n\n              case 4:\n                return _context3.abrupt(\"return\", run());\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function searchFromDirectory(_x) {\n        return _searchFromDirectory.apply(this, arguments);\n      }\n\n      return searchFromDirectory;\n    }()\n  }, {\n    key: \"searchDirectory\",\n    value: function () {\n      var _searchDirectory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dir) {\n        var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, place, placeResult;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _context4.prev = 2;\n                _iterator = _asyncIterator(this.config.searchPlaces);\n\n              case 4:\n                _context4.next = 6;\n                return _iterator.next();\n\n              case 6:\n                _step = _context4.sent;\n                _iteratorNormalCompletion = _step.done;\n                _context4.next = 10;\n                return _step.value;\n\n              case 10:\n                _value = _context4.sent;\n\n                if (_iteratorNormalCompletion) {\n                  _context4.next = 21;\n                  break;\n                }\n\n                place = _value;\n                _context4.next = 15;\n                return this.loadSearchPlace(dir, place);\n\n              case 15:\n                placeResult = _context4.sent;\n\n                if (!(this.shouldSearchStopWithResult(placeResult) === true)) {\n                  _context4.next = 18;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", placeResult);\n\n              case 18:\n                _iteratorNormalCompletion = true;\n                _context4.next = 4;\n                break;\n\n              case 21:\n                _context4.next = 27;\n                break;\n\n              case 23:\n                _context4.prev = 23;\n                _context4.t0 = _context4[\"catch\"](2);\n                _didIteratorError = true;\n                _iteratorError = _context4.t0;\n\n              case 27:\n                _context4.prev = 27;\n                _context4.prev = 28;\n\n                if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                  _context4.next = 32;\n                  break;\n                }\n\n                _context4.next = 32;\n                return _iterator.return();\n\n              case 32:\n                _context4.prev = 32;\n\n                if (!_didIteratorError) {\n                  _context4.next = 35;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 35:\n                return _context4.finish(32);\n\n              case 36:\n                return _context4.finish(27);\n\n              case 37:\n                return _context4.abrupt(\"return\", null);\n\n              case 38:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[2, 23, 27, 37], [28,, 32, 36]]);\n      }));\n\n      function searchDirectory(_x2) {\n        return _searchDirectory.apply(this, arguments);\n      }\n\n      return searchDirectory;\n    }()\n  }, {\n    key: \"loadSearchPlace\",\n    value: function () {\n      var _loadSearchPlace = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dir, place) {\n        var filepath, fileContents, result;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                filepath = _path.default.join(dir, place);\n                _context5.next = 3;\n                return (0, _readFile.readFile)(filepath);\n\n              case 3:\n                fileContents = _context5.sent;\n                _context5.next = 6;\n                return this.createCosmiconfigResult(filepath, fileContents);\n\n              case 6:\n                result = _context5.sent;\n                return _context5.abrupt(\"return\", result);\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function loadSearchPlace(_x3, _x4) {\n        return _loadSearchPlace.apply(this, arguments);\n      }\n\n      return loadSearchPlace;\n    }()\n  }, {\n    key: \"loadFileContent\",\n    value: function () {\n      var _loadFileContent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(filepath, content) {\n        var loader, loaderResult;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!(content === null)) {\n                  _context6.next = 2;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", null);\n\n              case 2:\n                if (!(content.trim() === '')) {\n                  _context6.next = 4;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", undefined);\n\n              case 4:\n                loader = this.getLoaderEntryForFile(filepath);\n                _context6.next = 7;\n                return loader(filepath, content);\n\n              case 7:\n                loaderResult = _context6.sent;\n                return _context6.abrupt(\"return\", loaderResult);\n\n              case 9:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function loadFileContent(_x5, _x6) {\n        return _loadFileContent.apply(this, arguments);\n      }\n\n      return loadFileContent;\n    }()\n  }, {\n    key: \"createCosmiconfigResult\",\n    value: function () {\n      var _createCosmiconfigResult = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(filepath, content) {\n        var fileContent, result;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.loadFileContent(filepath, content);\n\n              case 2:\n                fileContent = _context7.sent;\n                result = this.loadedContentToCosmiconfigResult(filepath, fileContent);\n                return _context7.abrupt(\"return\", result);\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function createCosmiconfigResult(_x7, _x8) {\n        return _createCosmiconfigResult.apply(this, arguments);\n      }\n\n      return createCosmiconfigResult;\n    }()\n  }, {\n    key: \"load\",\n    value: function () {\n      var _load = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(filepath) {\n        var _this2 = this;\n\n        var absoluteFilePath, runLoad;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this.validateFilePath(filepath);\n                absoluteFilePath = _path.default.resolve(process.cwd(), filepath);\n\n                runLoad = /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n                    var fileContents, result, transformResult;\n                    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                      while (1) {\n                        switch (_context8.prev = _context8.next) {\n                          case 0:\n                            _context8.next = 2;\n                            return (0, _readFile.readFile)(absoluteFilePath, {\n                              throwNotFound: true\n                            });\n\n                          case 2:\n                            fileContents = _context8.sent;\n                            _context8.next = 5;\n                            return _this2.createCosmiconfigResult(absoluteFilePath, fileContents);\n\n                          case 5:\n                            result = _context8.sent;\n                            _context8.next = 8;\n                            return _this2.config.transform(result);\n\n                          case 8:\n                            transformResult = _context8.sent;\n                            return _context8.abrupt(\"return\", transformResult);\n\n                          case 10:\n                          case \"end\":\n                            return _context8.stop();\n                        }\n                      }\n                    }, _callee8);\n                  }));\n\n                  return function runLoad() {\n                    return _ref2.apply(this, arguments);\n                  };\n                }();\n\n                if (!this.loadCache) {\n                  _context9.next = 5;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\", (0, _cacheWrapper.cacheWrapper)(this.loadCache, absoluteFilePath, runLoad));\n\n              case 5:\n                return _context9.abrupt(\"return\", runLoad());\n\n              case 6:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function load(_x9) {\n        return _load.apply(this, arguments);\n      }\n\n      return load;\n    }()\n  }]);\n\n  return Explorer;\n}(_ExplorerBase.ExplorerBase);\n\nexports.Explorer = Explorer;","map":{"version":3,"sources":["../src/Explorer.ts"],"names":["ExplorerBase","searchFrom","process","startDirectory","result","absoluteDir","path","run","nextDir","transformResult","placeResult","filepath","fileContents","content","loader","loaderResult","fileContent","absoluteFilePath","runLoad","throwNotFound"],"mappings":"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","sourcesContent":["import path from 'path';\nimport { ExplorerBase } from './ExplorerBase';\nimport { readFile } from './readFile';\nimport { cacheWrapper } from './cacheWrapper';\nimport { getDirectory } from './getDirectory';\nimport { CosmiconfigResult, ExplorerOptions, LoadedFileContent } from './types';\n\nclass Explorer extends ExplorerBase<ExplorerOptions> {\n  public constructor(options: ExplorerOptions) {\n    super(options);\n  }\n\n  public async search(\n    searchFrom: string = process.cwd(),\n  ): Promise<CosmiconfigResult> {\n    const startDirectory = await getDirectory(searchFrom);\n    const result = await this.searchFromDirectory(startDirectory);\n\n    return result;\n  }\n\n  private async searchFromDirectory(dir: string): Promise<CosmiconfigResult> {\n    const absoluteDir = path.resolve(process.cwd(), dir);\n\n    const run = async (): Promise<CosmiconfigResult> => {\n      const result = await this.searchDirectory(absoluteDir);\n      const nextDir = this.nextDirectoryToSearch(absoluteDir, result);\n\n      if (nextDir) {\n        return this.searchFromDirectory(nextDir);\n      }\n\n      const transformResult = await this.config.transform(result);\n\n      return transformResult;\n    };\n\n    if (this.searchCache) {\n      return cacheWrapper(this.searchCache, absoluteDir, run);\n    }\n\n    return run();\n  }\n\n  private async searchDirectory(dir: string): Promise<CosmiconfigResult> {\n    for await (const place of this.config.searchPlaces) {\n      const placeResult = await this.loadSearchPlace(dir, place);\n\n      if (this.shouldSearchStopWithResult(placeResult) === true) {\n        return placeResult;\n      }\n    }\n\n    // config not found\n    return null;\n  }\n\n  private async loadSearchPlace(\n    dir: string,\n    place: string,\n  ): Promise<CosmiconfigResult> {\n    const filepath = path.join(dir, place);\n    const fileContents = await readFile(filepath);\n\n    const result = await this.createCosmiconfigResult(filepath, fileContents);\n\n    return result;\n  }\n\n  private async loadFileContent(\n    filepath: string,\n    content: string | null,\n  ): Promise<LoadedFileContent> {\n    if (content === null) {\n      return null;\n    }\n    if (content.trim() === '') {\n      return undefined;\n    }\n    const loader = this.getLoaderEntryForFile(filepath);\n    const loaderResult = await loader(filepath, content);\n    return loaderResult;\n  }\n\n  private async createCosmiconfigResult(\n    filepath: string,\n    content: string | null,\n  ): Promise<CosmiconfigResult> {\n    const fileContent = await this.loadFileContent(filepath, content);\n    const result = this.loadedContentToCosmiconfigResult(filepath, fileContent);\n\n    return result;\n  }\n\n  public async load(filepath: string): Promise<CosmiconfigResult> {\n    this.validateFilePath(filepath);\n    const absoluteFilePath = path.resolve(process.cwd(), filepath);\n\n    const runLoad = async (): Promise<CosmiconfigResult> => {\n      const fileContents = await readFile(absoluteFilePath, {\n        throwNotFound: true,\n      });\n\n      const result = await this.createCosmiconfigResult(\n        absoluteFilePath,\n        fileContents,\n      );\n\n      const transformResult = await this.config.transform(result);\n\n      return transformResult;\n    };\n\n    if (this.loadCache) {\n      return cacheWrapper(this.loadCache, absoluteFilePath, runLoad);\n    }\n\n    return runLoad();\n  }\n}\n\nexport { Explorer };\n"]},"metadata":{},"sourceType":"script"}