{"ast":null,"code":"'use strict';\n\nmodule.exports.disposer = disposer;\n\nfunction disposer(creatorFn, disposerFn, fn) {\n  var runDisposer = function runDisposer(resource, result) {\n    var shouldThrow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    return disposerFn(resource).then( // disposer resolved, do something with original fn's promise\n    function () {\n      if (shouldThrow) {\n        throw result;\n      }\n\n      return result;\n    }, // Disposer fn failed, crash process\n    function (err) {\n      throw err; // Or process.exit?\n    });\n  };\n\n  return creatorFn.then(function (resource) {\n    // fn(resource) can throw, so wrap in a promise here\n    return Promise.resolve().then(function () {\n      return fn(resource);\n    }).then(function (result) {\n      return runDisposer(resource, result);\n    }).catch(function (err) {\n      return runDisposer(resource, err, true);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/cacache/lib/util/disposer.js"],"names":["module","exports","disposer","creatorFn","disposerFn","fn","runDisposer","resource","result","shouldThrow","then","err","Promise","resolve","catch"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,CAAeC,QAAf,GAA0BA,QAA1B;;AAEA,SAASA,QAAT,CAAmBC,SAAnB,EAA8BC,UAA9B,EAA0CC,EAA1C,EAA8C;AAC5C,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAWC,MAAX,EAA2C;AAAA,QAAxBC,WAAwB,uEAAV,KAAU;AAC7D,WAAOL,UAAU,CAACG,QAAD,CAAV,CACJG,IADI,EAEH;AACA,gBAAM;AACJ,UAAID,WAAJ,EAAiB;AACf,cAAMD,MAAN;AACD;;AACD,aAAOA,MAAP;AACD,KARE,EASH;AACA,cAACG,GAAD,EAAS;AACP,YAAMA,GAAN,CADO,CAEP;AACD,KAbE,CAAP;AAcD,GAfD;;AAiBA,SAAOR,SAAS,CACbO,IADI,CACC,UAACH,QAAD,EAAc;AAClB;AACA,WAAOK,OAAO,CAACC,OAAR,GAAkBH,IAAlB,CAAuB;AAAA,aAAML,EAAE,CAACE,QAAD,CAAR;AAAA,KAAvB,EACJG,IADI,CACC,UAACF,MAAD;AAAA,aAAYF,WAAW,CAACC,QAAD,EAAWC,MAAX,CAAvB;AAAA,KADD,EAEJM,KAFI,CAEE,UAACH,GAAD;AAAA,aAASL,WAAW,CAACC,QAAD,EAAWI,GAAX,EAAgB,IAAhB,CAApB;AAAA,KAFF,CAAP;AAGD,GANI,CAAP;AAOD","sourcesContent":["'use strict'\n\nmodule.exports.disposer = disposer\n\nfunction disposer (creatorFn, disposerFn, fn) {\n  const runDisposer = (resource, result, shouldThrow = false) => {\n    return disposerFn(resource)\n      .then(\n        // disposer resolved, do something with original fn's promise\n        () => {\n          if (shouldThrow) {\n            throw result\n          }\n          return result\n        },\n        // Disposer fn failed, crash process\n        (err) => {\n          throw err\n          // Or process.exit?\n        })\n  }\n\n  return creatorFn\n    .then((resource) => {\n      // fn(resource) can throw, so wrap in a promise here\n      return Promise.resolve().then(() => fn(resource))\n        .then((result) => runDisposer(resource, result))\n        .catch((err) => runDisposer(resource, err, true))\n    })\n}\n"]},"metadata":{},"sourceType":"script"}