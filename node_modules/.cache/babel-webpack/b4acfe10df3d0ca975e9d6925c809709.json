{"ast":null,"code":"var _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar RollingFileWriteStream = require('./RollingFileWriteStream'); // just to adapt the previous version\n\n\nvar RollingFileStream = /*#__PURE__*/function (_RollingFileWriteStre) {\n  \"use strict\";\n\n  _inherits(RollingFileStream, _RollingFileWriteStre);\n\n  var _super = _createSuper(RollingFileStream);\n\n  function RollingFileStream(filename, size, backups, options) {\n    var _this;\n\n    _classCallCheck(this, RollingFileStream);\n\n    if (!options) {\n      options = {};\n    }\n\n    if (size) {\n      options.maxSize = size;\n    }\n\n    if (!backups) {\n      backups = 1;\n    }\n\n    options.numToKeep = backups;\n    _this = _super.call(this, filename, options);\n    _this.backups = _this.options.numToKeep;\n    _this.size = _this.options.maxSize;\n    return _this;\n  }\n\n  _createClass(RollingFileStream, [{\n    key: \"theStream\",\n    get: function get() {\n      return this.currentFileStream;\n    }\n  }]);\n\n  return RollingFileStream;\n}(RollingFileWriteStream);\n\nmodule.exports = RollingFileStream;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/streamroller/lib/RollingFileStream.js"],"names":["RollingFileWriteStream","require","RollingFileStream","filename","size","backups","options","maxSize","numToKeep","currentFileStream","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,sBAAsB,GAAGC,OAAO,CAAC,0BAAD,CAAtC,C,CAEA;;;IACMC,iB;;;;;;;AACJ,6BAAYC,QAAZ,EAAsBC,IAAtB,EAA4BC,OAA5B,EAAqCC,OAArC,EAA8C;AAAA;;AAAA;;AAC5C,QAAI,CAACA,OAAL,EAAc;AACZA,MAAAA,OAAO,GAAG,EAAV;AACD;;AACD,QAAIF,IAAJ,EAAU;AACRE,MAAAA,OAAO,CAACC,OAAR,GAAkBH,IAAlB;AACD;;AACD,QAAI,CAACC,OAAL,EAAc;AACZA,MAAAA,OAAO,GAAG,CAAV;AACD;;AACDC,IAAAA,OAAO,CAACE,SAAR,GAAoBH,OAApB;AACA,8BAAMF,QAAN,EAAgBG,OAAhB;AACA,UAAKD,OAAL,GAAe,MAAKC,OAAL,CAAaE,SAA5B;AACA,UAAKJ,IAAL,GAAY,MAAKE,OAAL,CAAaC,OAAzB;AAb4C;AAc7C;;;;SAED,eAAgB;AACd,aAAO,KAAKE,iBAAZ;AACD;;;;EAnB6BT,sB;;AAuBhCU,MAAM,CAACC,OAAP,GAAiBT,iBAAjB","sourcesContent":["const RollingFileWriteStream = require('./RollingFileWriteStream');\n\n// just to adapt the previous version\nclass RollingFileStream extends RollingFileWriteStream {\n  constructor(filename, size, backups, options) {\n    if (!options) {\n      options = {};\n    }\n    if (size) {\n      options.maxSize = size;\n    }\n    if (!backups) {\n      backups = 1;\n    }\n    options.numToKeep = backups;\n    super(filename, options);\n    this.backups = this.options.numToKeep;\n    this.size = this.options.maxSize;\n  }\n\n  get theStream() {\n    return this.currentFileStream;\n  }\n\n}\n\nmodule.exports = RollingFileStream;\n"]},"metadata":{},"sourceType":"script"}