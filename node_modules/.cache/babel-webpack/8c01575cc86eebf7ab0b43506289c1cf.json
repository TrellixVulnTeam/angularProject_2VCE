{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nvar _BaseWorkerPool = _interopRequireDefault(require('./base/BaseWorkerPool'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar canUseWorkerThreads = function canUseWorkerThreads() {\n  try {\n    require('worker_threads');\n\n    return true;\n  } catch (_unused) {\n    return false;\n  }\n};\n\nvar WorkerPool = /*#__PURE__*/function (_BaseWorkerPool$defau) {\n  _inherits(WorkerPool, _BaseWorkerPool$defau);\n\n  var _super = _createSuper(WorkerPool);\n\n  function WorkerPool() {\n    _classCallCheck(this, WorkerPool);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(WorkerPool, [{\n    key: \"send\",\n    value: function send(workerId, request, onStart, onEnd, onCustomMessage) {\n      this.getWorkerById(workerId).send(request, onStart, onEnd, onCustomMessage);\n    }\n  }, {\n    key: \"createWorker\",\n    value: function createWorker(workerOptions) {\n      var Worker;\n\n      if (this._options.enableWorkerThreads && canUseWorkerThreads()) {\n        Worker = require('./workers/NodeThreadsWorker').default;\n      } else {\n        Worker = require('./workers/ChildProcessWorker').default;\n      }\n\n      return new Worker(workerOptions);\n    }\n  }]);\n\n  return WorkerPool;\n}(_BaseWorkerPool.default);\n\nvar _default = WorkerPool;\nexports.default = _default;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/jest-worker/build/WorkerPool.js"],"names":["Object","defineProperty","exports","value","default","_BaseWorkerPool","_interopRequireDefault","require","obj","__esModule","canUseWorkerThreads","WorkerPool","workerId","request","onStart","onEnd","onCustomMessage","getWorkerById","send","workerOptions","Worker","_options","enableWorkerThreads","_default"],"mappings":"AAAA;;;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,eAAe,GAAGC,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAA5C;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AACnC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAACJ,IAAAA,OAAO,EAAEI;AAAV,GAArC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,MAAI;AACFH,IAAAA,OAAO,CAAC,gBAAD,CAAP;;AAEA,WAAO,IAAP;AACD,GAJD,CAIE,gBAAM;AACN,WAAO,KAAP;AACD;AACF,CARD;;IAUMI,U;;;;;;;;;;;;;WACJ,cAAKC,QAAL,EAAeC,OAAf,EAAwBC,OAAxB,EAAiCC,KAAjC,EAAwCC,eAAxC,EAAyD;AACvD,WAAKC,aAAL,CAAmBL,QAAnB,EAA6BM,IAA7B,CAAkCL,OAAlC,EAA2CC,OAA3C,EAAoDC,KAApD,EAA2DC,eAA3D;AACD;;;WAED,sBAAaG,aAAb,EAA4B;AAC1B,UAAIC,MAAJ;;AAEA,UAAI,KAAKC,QAAL,CAAcC,mBAAd,IAAqCZ,mBAAmB,EAA5D,EAAgE;AAC9DU,QAAAA,MAAM,GAAGb,OAAO,CAAC,6BAAD,CAAP,CAAuCH,OAAhD;AACD,OAFD,MAEO;AACLgB,QAAAA,MAAM,GAAGb,OAAO,CAAC,8BAAD,CAAP,CAAwCH,OAAjD;AACD;;AAED,aAAO,IAAIgB,MAAJ,CAAWD,aAAX,CAAP;AACD;;;;EAfsBd,eAAe,CAACD,O;;AAkBzC,IAAImB,QAAQ,GAAGZ,UAAf;AACAT,OAAO,CAACE,OAAR,GAAkBmB,QAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nvar _BaseWorkerPool = _interopRequireDefault(require('./base/BaseWorkerPool'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst canUseWorkerThreads = () => {\n  try {\n    require('worker_threads');\n\n    return true;\n  } catch {\n    return false;\n  }\n};\n\nclass WorkerPool extends _BaseWorkerPool.default {\n  send(workerId, request, onStart, onEnd, onCustomMessage) {\n    this.getWorkerById(workerId).send(request, onStart, onEnd, onCustomMessage);\n  }\n\n  createWorker(workerOptions) {\n    let Worker;\n\n    if (this._options.enableWorkerThreads && canUseWorkerThreads()) {\n      Worker = require('./workers/NodeThreadsWorker').default;\n    } else {\n      Worker = require('./workers/ChildProcessWorker').default;\n    }\n\n    return new Worker(workerOptions);\n  }\n}\n\nvar _default = WorkerPool;\nexports.default = _default;\n"]},"metadata":{},"sourceType":"script"}