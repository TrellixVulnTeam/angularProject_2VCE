{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n\n  return ar;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nexports.__esModule = true;\n\nvar clone_deep_1 = __importDefault(require(\"clone-deep\"));\n\nvar merge_with_1 = __importDefault(require(\"./merge-with\"));\n\nvar utils_1 = require(\"./utils\");\n\nvar isArray = Array.isArray;\n\nfunction joinArrays(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      customizeArray = _b.customizeArray,\n      customizeObject = _b.customizeObject,\n      key = _b.key;\n\n  return function _joinArrays(a, b, k) {\n    var newKey = key ? key + \".\" + k : k;\n\n    if (utils_1.isFunction(a) && utils_1.isFunction(b)) {\n      return function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        return _joinArrays(a.apply(void 0, __spread(args)), b.apply(void 0, __spread(args)), k);\n      };\n    }\n\n    if (isArray(a) && isArray(b)) {\n      var customResult = customizeArray && customizeArray(a, b, newKey);\n      return customResult || __spread(a, b);\n    }\n\n    if (utils_1.isRegex(b)) {\n      return b;\n    }\n\n    if (utils_1.isPlainObject(a) && utils_1.isPlainObject(b)) {\n      var customResult = customizeObject && customizeObject(a, b, newKey);\n      return customResult || merge_with_1[\"default\"]([a, b], joinArrays({\n        customizeArray: customizeArray,\n        customizeObject: customizeObject,\n        key: newKey\n      }));\n    }\n\n    if (utils_1.isPlainObject(b)) {\n      return clone_deep_1[\"default\"](b);\n    }\n\n    if (isArray(b)) {\n      return __spread(b);\n    }\n\n    return b;\n  };\n}\n\nexports[\"default\"] = joinArrays;","map":{"version":3,"sources":["../src/join-arrays.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,YAAA,GAAA,eAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AAEA,IAAA,YAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,IAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;;AAEA,SAAwB,UAAxB,CAAmC,EAAnC,EAQM;MAR6B,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAQ/B,EAR+B,GAQ7B,E;MAPJ,cAAc,GAAA,EAAA,CAAA,c;MACd,eAAe,GAAA,EAAA,CAAA,e;MACf,GAAG,GAAA,EAAA,CAAA,G;;AAMH,SAAO,SAAS,WAAT,CAAqB,CAArB,EAA6B,CAA7B,EAAqC,CAArC,EAA2C;AAChD,QAAM,MAAM,GAAG,GAAG,GAAM,GAAG,GAAA,GAAH,GAAO,CAAb,GAAmB,CAArC;;AAEA,QAAI,OAAA,CAAA,UAAA,CAAW,CAAX,KAAiB,OAAA,CAAA,UAAA,CAAW,CAAX,CAArB,EAAoC;AAClC,aAAO,YAAA;AAAC,YAAA,IAAA,GAAA,EAAA;;aAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAc;AAAd,UAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAAmB,eAAA,WAAW,CAAC,CAAC,CAAA,KAAD,CAAC,KAAA,CAAD,EAAC,QAAA,CAAI,IAAJ,CAAD,CAAD,EAAa,CAAC,CAAA,KAAD,CAAC,KAAA,CAAD,EAAC,QAAA,CAAI,IAAJ,CAAD,CAAb,EAAyB,CAAzB,CAAX;AAAsC,OAAjE;AACD;;AAED,QAAI,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CAAzB,EAA8B;AAC5B,UAAM,YAAY,GAAG,cAAc,IAAI,cAAc,CAAC,CAAD,EAAI,CAAJ,EAAO,MAAP,CAArD;AAEA,aAAO,YAAY,IAAA,QAAA,CAAQ,CAAR,EAAc,CAAd,CAAnB;AACD;;AAED,QAAI,OAAA,CAAA,OAAA,CAAQ,CAAR,CAAJ,EAAgB;AACd,aAAO,CAAP;AACD;;AAED,QAAI,OAAA,CAAA,aAAA,CAAc,CAAd,KAAoB,OAAA,CAAA,aAAA,CAAc,CAAd,CAAxB,EAA0C;AACxC,UAAM,YAAY,GAAG,eAAe,IAAI,eAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,MAAP,CAAvD;AAEA,aACE,YAAY,IACZ,YAAA,CAAA,SAAA,CAAA,CACE,CAAC,CAAD,EAAI,CAAJ,CADF,EAEE,UAAU,CAAC;AACT,QAAA,cAAc,EAAA,cADL;AAET,QAAA,eAAe,EAAA,eAFN;AAGT,QAAA,GAAG,EAAE;AAHI,OAAD,CAFZ,CAFF;AAWD;;AAED,QAAI,OAAA,CAAA,aAAA,CAAc,CAAd,CAAJ,EAAsB;AACpB,aAAO,YAAA,CAAA,SAAA,CAAA,CAAU,CAAV,CAAP;AACD;;AAED,QAAI,OAAO,CAAC,CAAD,CAAX,EAAgB;AACd,aAAA,QAAA,CAAW,CAAX,CAAA;AACD;;AAED,WAAO,CAAP;AACD,GA1CD;AA2CD;;AApDD,OAAA,CAAA,SAAA,CAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nvar clone_deep_1 = __importDefault(require(\"clone-deep\"));\nvar merge_with_1 = __importDefault(require(\"./merge-with\"));\nvar utils_1 = require(\"./utils\");\nvar isArray = Array.isArray;\nfunction joinArrays(_a) {\n    var _b = _a === void 0 ? {} : _a, customizeArray = _b.customizeArray, customizeObject = _b.customizeObject, key = _b.key;\n    return function _joinArrays(a, b, k) {\n        var newKey = key ? key + \".\" + k : k;\n        if (utils_1.isFunction(a) && utils_1.isFunction(b)) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return _joinArrays(a.apply(void 0, __spread(args)), b.apply(void 0, __spread(args)), k);\n            };\n        }\n        if (isArray(a) && isArray(b)) {\n            var customResult = customizeArray && customizeArray(a, b, newKey);\n            return customResult || __spread(a, b);\n        }\n        if (utils_1.isRegex(b)) {\n            return b;\n        }\n        if (utils_1.isPlainObject(a) && utils_1.isPlainObject(b)) {\n            var customResult = customizeObject && customizeObject(a, b, newKey);\n            return (customResult ||\n                merge_with_1[\"default\"]([a, b], joinArrays({\n                    customizeArray: customizeArray,\n                    customizeObject: customizeObject,\n                    key: newKey\n                })));\n        }\n        if (utils_1.isPlainObject(b)) {\n            return clone_deep_1[\"default\"](b);\n        }\n        if (isArray(b)) {\n            return __spread(b);\n        }\n        return b;\n    };\n}\nexports[\"default\"] = joinArrays;\n//# sourceMappingURL=join-arrays.js.map"]},"metadata":{},"sourceType":"script"}