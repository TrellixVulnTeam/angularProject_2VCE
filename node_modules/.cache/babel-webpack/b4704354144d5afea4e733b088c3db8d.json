{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar validateOptions = require(\"schema-utils\");\n\nvar schema = require(\"../schemas/plugins/WatchIgnorePlugin.json\");\n/** @typedef {import(\"../declarations/plugins/WatchIgnorePlugin\").WatchIgnorePluginOptions} WatchIgnorePluginOptions */\n\n\nvar IgnoringWatchFileSystem = /*#__PURE__*/function () {\n  function IgnoringWatchFileSystem(wfs, paths) {\n    _classCallCheck(this, IgnoringWatchFileSystem);\n\n    this.wfs = wfs;\n    this.paths = paths;\n  }\n\n  _createClass(IgnoringWatchFileSystem, [{\n    key: \"watch\",\n    value: function watch(files, dirs, missing, startTime, options, callback, callbackUndelayed) {\n      var _this = this;\n\n      var ignored = function ignored(path) {\n        return _this.paths.some(function (p) {\n          return p instanceof RegExp ? p.test(path) : path.indexOf(p) === 0;\n        });\n      };\n\n      var notIgnored = function notIgnored(path) {\n        return !ignored(path);\n      };\n\n      var ignoredFiles = files.filter(ignored);\n      var ignoredDirs = dirs.filter(ignored);\n      var watcher = this.wfs.watch(files.filter(notIgnored), dirs.filter(notIgnored), missing, startTime, options, function (err, filesModified, dirsModified, missingModified, fileTimestamps, dirTimestamps, removedFiles) {\n        if (err) return callback(err);\n\n        var _iterator = _createForOfIteratorHelper(ignoredFiles),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var path = _step.value;\n            fileTimestamps.set(path, 1);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        var _iterator2 = _createForOfIteratorHelper(ignoredDirs),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _path = _step2.value;\n            dirTimestamps.set(_path, 1);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        callback(err, filesModified, dirsModified, missingModified, fileTimestamps, dirTimestamps, removedFiles);\n      }, callbackUndelayed);\n      return {\n        close: function close() {\n          return watcher.close();\n        },\n        pause: function pause() {\n          return watcher.pause();\n        },\n        getContextTimestamps: function getContextTimestamps() {\n          var dirTimestamps = watcher.getContextTimestamps();\n\n          var _iterator3 = _createForOfIteratorHelper(ignoredDirs),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var path = _step3.value;\n              dirTimestamps.set(path, 1);\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n\n          return dirTimestamps;\n        },\n        getFileTimestamps: function getFileTimestamps() {\n          var fileTimestamps = watcher.getFileTimestamps();\n\n          var _iterator4 = _createForOfIteratorHelper(ignoredFiles),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var path = _step4.value;\n              fileTimestamps.set(path, 1);\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n\n          return fileTimestamps;\n        }\n      };\n    }\n  }]);\n\n  return IgnoringWatchFileSystem;\n}();\n\nvar WatchIgnorePlugin = /*#__PURE__*/function () {\n  /**\n   * @param {WatchIgnorePluginOptions} paths list of paths\n   */\n  function WatchIgnorePlugin(paths) {\n    _classCallCheck(this, WatchIgnorePlugin);\n\n    validateOptions(schema, paths, \"Watch Ignore Plugin\");\n    this.paths = paths;\n  }\n\n  _createClass(WatchIgnorePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this2 = this;\n\n      compiler.hooks.afterEnvironment.tap(\"WatchIgnorePlugin\", function () {\n        compiler.watchFileSystem = new IgnoringWatchFileSystem(compiler.watchFileSystem, _this2.paths);\n      });\n    }\n  }]);\n\n  return WatchIgnorePlugin;\n}();\n\nmodule.exports = WatchIgnorePlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/WatchIgnorePlugin.js"],"names":["validateOptions","require","schema","IgnoringWatchFileSystem","wfs","paths","files","dirs","missing","startTime","options","callback","callbackUndelayed","ignored","path","some","p","RegExp","test","indexOf","notIgnored","ignoredFiles","filter","ignoredDirs","watcher","watch","err","filesModified","dirsModified","missingModified","fileTimestamps","dirTimestamps","removedFiles","set","close","pause","getContextTimestamps","getFileTimestamps","WatchIgnorePlugin","compiler","hooks","afterEnvironment","tap","watchFileSystem","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../schemas/plugins/WatchIgnorePlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/WatchIgnorePlugin\").WatchIgnorePluginOptions} WatchIgnorePluginOptions */\n\nclass IgnoringWatchFileSystem {\n\tconstructor(wfs, paths) {\n\t\tthis.wfs = wfs;\n\t\tthis.paths = paths;\n\t}\n\n\twatch(files, dirs, missing, startTime, options, callback, callbackUndelayed) {\n\t\tconst ignored = path =>\n\t\t\tthis.paths.some(p =>\n\t\t\t\tp instanceof RegExp ? p.test(path) : path.indexOf(p) === 0\n\t\t\t);\n\n\t\tconst notIgnored = path => !ignored(path);\n\n\t\tconst ignoredFiles = files.filter(ignored);\n\t\tconst ignoredDirs = dirs.filter(ignored);\n\n\t\tconst watcher = this.wfs.watch(\n\t\t\tfiles.filter(notIgnored),\n\t\t\tdirs.filter(notIgnored),\n\t\t\tmissing,\n\t\t\tstartTime,\n\t\t\toptions,\n\t\t\t(\n\t\t\t\terr,\n\t\t\t\tfilesModified,\n\t\t\t\tdirsModified,\n\t\t\t\tmissingModified,\n\t\t\t\tfileTimestamps,\n\t\t\t\tdirTimestamps,\n\t\t\t\tremovedFiles\n\t\t\t) => {\n\t\t\t\tif (err) return callback(err);\n\t\t\t\tfor (const path of ignoredFiles) {\n\t\t\t\t\tfileTimestamps.set(path, 1);\n\t\t\t\t}\n\n\t\t\t\tfor (const path of ignoredDirs) {\n\t\t\t\t\tdirTimestamps.set(path, 1);\n\t\t\t\t}\n\n\t\t\t\tcallback(\n\t\t\t\t\terr,\n\t\t\t\t\tfilesModified,\n\t\t\t\t\tdirsModified,\n\t\t\t\t\tmissingModified,\n\t\t\t\t\tfileTimestamps,\n\t\t\t\t\tdirTimestamps,\n\t\t\t\t\tremovedFiles\n\t\t\t\t);\n\t\t\t},\n\t\t\tcallbackUndelayed\n\t\t);\n\n\t\treturn {\n\t\t\tclose: () => watcher.close(),\n\t\t\tpause: () => watcher.pause(),\n\t\t\tgetContextTimestamps: () => {\n\t\t\t\tconst dirTimestamps = watcher.getContextTimestamps();\n\t\t\t\tfor (const path of ignoredDirs) {\n\t\t\t\t\tdirTimestamps.set(path, 1);\n\t\t\t\t}\n\t\t\t\treturn dirTimestamps;\n\t\t\t},\n\t\t\tgetFileTimestamps: () => {\n\t\t\t\tconst fileTimestamps = watcher.getFileTimestamps();\n\t\t\t\tfor (const path of ignoredFiles) {\n\t\t\t\t\tfileTimestamps.set(path, 1);\n\t\t\t\t}\n\t\t\t\treturn fileTimestamps;\n\t\t\t}\n\t\t};\n\t}\n}\n\nclass WatchIgnorePlugin {\n\t/**\n\t * @param {WatchIgnorePluginOptions} paths list of paths\n\t */\n\tconstructor(paths) {\n\t\tvalidateOptions(schema, paths, \"Watch Ignore Plugin\");\n\t\tthis.paths = paths;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.afterEnvironment.tap(\"WatchIgnorePlugin\", () => {\n\t\t\tcompiler.watchFileSystem = new IgnoringWatchFileSystem(\n\t\t\t\tcompiler.watchFileSystem,\n\t\t\t\tthis.paths\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = WatchIgnorePlugin;\n"]},"metadata":{},"sourceType":"script"}