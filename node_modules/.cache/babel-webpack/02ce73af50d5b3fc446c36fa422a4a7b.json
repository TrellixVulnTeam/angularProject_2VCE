{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler-cli/src/ngtsc/annotations/src/references_registry\", [\"require\", \"exports\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.NoopReferencesRegistry = void 0;\n  /**\n   * This registry does nothing, since ngtsc does not currently need\n   * this functionality.\n   * The ngcc tool implements a working version for its purposes.\n   */\n\n  var NoopReferencesRegistry =\n  /** @class */\n  function () {\n    function NoopReferencesRegistry() {}\n\n    NoopReferencesRegistry.prototype.add = function (source) {\n      var references = [];\n\n      for (var _i = 1; _i < arguments.length; _i++) {\n        references[_i - 1] = arguments[_i];\n      }\n    };\n\n    return NoopReferencesRegistry;\n  }();\n\n  exports.NoopReferencesRegistry = NoopReferencesRegistry;\n});","map":{"version":3,"sources":["../../../../../../../../../packages/compiler-cli/src/ngtsc/annotations/src/references_registry.ts"],"names":[],"mappings":"AAAA;;;;;;AAMG;;;;;;;;;;;;;;;AAiBH;;;;AAIG;;AACH,MAAA,sBAAA;AAAA;AAAA,cAAA;AAAA,aAAA,sBAAA,GAAA,CAEC;;AADC,IAAA,sBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,MAAJ,EAA2B;AAAE,UAAA,UAAA,GAAA,EAAA;;WAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAA2C;AAA3C,QAAA,UAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;AAAqD,KAAlF;;AACF,WAAA,sBAAA;AAAC,GAFD,EAAA;;AAAa,EAAA,OAAA,CAAA,sBAAA,GAAA,sBAAA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Reference} from '../../imports';\nimport {DeclarationNode} from '../../reflection';\n\n/**\n * Implement this interface if you want DecoratorHandlers to register\n * references that they find in their analysis of the code.\n */\nexport interface ReferencesRegistry {\n  /**\n   * Register one or more references in the registry.\n   * @param references A collection of references to register.\n   */\n  add(source: DeclarationNode, ...references: Reference<DeclarationNode>[]): void;\n}\n\n/**\n * This registry does nothing, since ngtsc does not currently need\n * this functionality.\n * The ngcc tool implements a working version for its purposes.\n */\nexport class NoopReferencesRegistry implements ReferencesRegistry {\n  add(source: DeclarationNode, ...references: Reference<DeclarationNode>[]): void {}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}