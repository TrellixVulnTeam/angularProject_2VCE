{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NodeModuleJobRegistry = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar src_1 = require(\"../../../src\");\n\nvar NodeModuleJobRegistry = /*#__PURE__*/function () {\n  function NodeModuleJobRegistry() {\n    _classCallCheck(this, NodeModuleJobRegistry);\n  }\n\n  _createClass(NodeModuleJobRegistry, [{\n    key: \"_resolve\",\n    value: function _resolve(name) {\n      try {\n        return require.resolve(name);\n      } catch (e) {\n        if (e.code === 'MODULE_NOT_FOUND') {\n          return null;\n        }\n\n        throw e;\n      }\n    }\n    /**\n     * Get a job description for a named job.\n     *\n     * @param name The name of the job.\n     * @returns A description, or null if the job is not registered.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      var _name$split = name.split(/#/, 2),\n          _name$split2 = _slicedToArray(_name$split, 2),\n          moduleName = _name$split2[0],\n          exportName = _name$split2[1];\n\n      var resolvedPath = this._resolve(moduleName);\n\n      if (!resolvedPath) {\n        return rxjs_1.of(null);\n      }\n\n      var pkg = require(resolvedPath);\n\n      var handler = pkg[exportName || 'default'];\n\n      if (!handler) {\n        return rxjs_1.of(null);\n      }\n\n      function _getValue() {\n        for (var _len = arguments.length, fields = new Array(_len), _key = 0; _key < _len; _key++) {\n          fields[_key] = arguments[_key];\n        }\n\n        return fields.find(function (x) {\n          return src_1.schema.isJsonSchema(x);\n        }) || true;\n      }\n\n      var argument = _getValue(pkg.argument, handler.argument);\n\n      var input = _getValue(pkg.input, handler.input);\n\n      var output = _getValue(pkg.output, handler.output);\n\n      var channels = _getValue(pkg.channels, handler.channels);\n\n      return rxjs_1.of(Object.assign(handler.bind(undefined), {\n        jobDescription: {\n          argument: argument,\n          input: input,\n          output: output,\n          channels: channels\n        }\n      }));\n    }\n  }]);\n\n  return NodeModuleJobRegistry;\n}();\n\nexports.NodeModuleJobRegistry = NodeModuleJobRegistry;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/@angular-devkit/core/node/experimental/jobs/job-registry.js"],"names":["Object","defineProperty","exports","value","NodeModuleJobRegistry","rxjs_1","require","src_1","name","resolve","e","code","split","moduleName","exportName","resolvedPath","_resolve","of","pkg","handler","_getValue","fields","find","x","schema","isJsonSchema","argument","input","output","channels","assign","bind","undefined","jobDescription"],"mappings":"AAAA;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,qBAAR,GAAgC,KAAK,CAArC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,MAAD,CAAtB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,cAAD,CAArB;;IACMF,qB;;;;;;;WACF,kBAASI,IAAT,EAAe;AACX,UAAI;AACA,eAAOF,OAAO,CAACG,OAAR,CAAgBD,IAAhB,CAAP;AACH,OAFD,CAGA,OAAOE,CAAP,EAAU;AACN,YAAIA,CAAC,CAACC,IAAF,KAAW,kBAAf,EAAmC;AAC/B,iBAAO,IAAP;AACH;;AACD,cAAMD,CAAN;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,aAAIF,IAAJ,EAAU;AACN,wBAAiCA,IAAI,CAACI,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAjC;AAAA;AAAA,UAAOC,UAAP;AAAA,UAAmBC,UAAnB;;AACA,UAAMC,YAAY,GAAG,KAAKC,QAAL,CAAcH,UAAd,CAArB;;AACA,UAAI,CAACE,YAAL,EAAmB;AACf,eAAOV,MAAM,CAACY,EAAP,CAAU,IAAV,CAAP;AACH;;AACD,UAAMC,GAAG,GAAGZ,OAAO,CAACS,YAAD,CAAnB;;AACA,UAAMI,OAAO,GAAGD,GAAG,CAACJ,UAAU,IAAI,SAAf,CAAnB;;AACA,UAAI,CAACK,OAAL,EAAc;AACV,eAAOd,MAAM,CAACY,EAAP,CAAU,IAAV,CAAP;AACH;;AACD,eAASG,SAAT,GAA8B;AAAA,0CAARC,MAAQ;AAARA,UAAAA,MAAQ;AAAA;;AAC1B,eAAOA,MAAM,CAACC,IAAP,CAAY,UAAAC,CAAC;AAAA,iBAAIhB,KAAK,CAACiB,MAAN,CAAaC,YAAb,CAA0BF,CAA1B,CAAJ;AAAA,SAAb,KAAkD,IAAzD;AACH;;AACD,UAAMG,QAAQ,GAAGN,SAAS,CAACF,GAAG,CAACQ,QAAL,EAAeP,OAAO,CAACO,QAAvB,CAA1B;;AACA,UAAMC,KAAK,GAAGP,SAAS,CAACF,GAAG,CAACS,KAAL,EAAYR,OAAO,CAACQ,KAApB,CAAvB;;AACA,UAAMC,MAAM,GAAGR,SAAS,CAACF,GAAG,CAACU,MAAL,EAAaT,OAAO,CAACS,MAArB,CAAxB;;AACA,UAAMC,QAAQ,GAAGT,SAAS,CAACF,GAAG,CAACW,QAAL,EAAeV,OAAO,CAACU,QAAvB,CAA1B;;AACA,aAAOxB,MAAM,CAACY,EAAP,CAAUjB,MAAM,CAAC8B,MAAP,CAAcX,OAAO,CAACY,IAAR,CAAaC,SAAb,CAAd,EAAuC;AACpDC,QAAAA,cAAc,EAAE;AACZP,UAAAA,QAAQ,EAARA,QADY;AAEZC,UAAAA,KAAK,EAALA,KAFY;AAGZC,UAAAA,MAAM,EAANA,MAHY;AAIZC,UAAAA,QAAQ,EAARA;AAJY;AADoC,OAAvC,CAAV,CAAP;AAQH;;;;;;AAEL3B,OAAO,CAACE,qBAAR,GAAgCA,qBAAhC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeModuleJobRegistry = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst rxjs_1 = require(\"rxjs\");\nconst src_1 = require(\"../../../src\");\nclass NodeModuleJobRegistry {\n    _resolve(name) {\n        try {\n            return require.resolve(name);\n        }\n        catch (e) {\n            if (e.code === 'MODULE_NOT_FOUND') {\n                return null;\n            }\n            throw e;\n        }\n    }\n    /**\n     * Get a job description for a named job.\n     *\n     * @param name The name of the job.\n     * @returns A description, or null if the job is not registered.\n     */\n    get(name) {\n        const [moduleName, exportName] = name.split(/#/, 2);\n        const resolvedPath = this._resolve(moduleName);\n        if (!resolvedPath) {\n            return rxjs_1.of(null);\n        }\n        const pkg = require(resolvedPath);\n        const handler = pkg[exportName || 'default'];\n        if (!handler) {\n            return rxjs_1.of(null);\n        }\n        function _getValue(...fields) {\n            return fields.find(x => src_1.schema.isJsonSchema(x)) || true;\n        }\n        const argument = _getValue(pkg.argument, handler.argument);\n        const input = _getValue(pkg.input, handler.input);\n        const output = _getValue(pkg.output, handler.output);\n        const channels = _getValue(pkg.channels, handler.channels);\n        return rxjs_1.of(Object.assign(handler.bind(undefined), {\n            jobDescription: {\n                argument,\n                input,\n                output,\n                channels,\n            },\n        }));\n    }\n}\nexports.NodeModuleJobRegistry = NodeModuleJobRegistry;\n"]},"metadata":{},"sourceType":"script"}