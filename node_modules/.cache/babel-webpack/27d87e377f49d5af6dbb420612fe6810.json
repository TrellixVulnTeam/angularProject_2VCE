{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/regenerator\");\n\nvar _toConsumableArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _slicedToArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _asyncToGenerator = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _icssUtils = require(\"icss-utils\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = _postcss.default.plugin('postcss-icss-parser', function (options) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(css) {\n      var importReplacements, _ref2, icssImports, icssExports, imports, tasks, _loop, url, _ret, results, index, _results$index, _url, prefix, tokens, newUrl, importKey, importName, _iterator, _step, _step$value, replacementIndex, token, replacementName, localName, _i, _Object$keys, name, value;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              importReplacements = Object.create(null);\n              _ref2 = (0, _icssUtils.extractICSS)(css), icssImports = _ref2.icssImports, icssExports = _ref2.icssExports;\n              imports = new Map();\n              tasks = []; // eslint-disable-next-line guard-for-in\n\n              _loop = function _loop(url) {\n                var tokens = icssImports[url];\n\n                if (Object.keys(tokens).length === 0) {\n                  // eslint-disable-next-line no-continue\n                  return \"continue\";\n                }\n\n                var normalizedUrl = url;\n                var prefix = '';\n                var queryParts = normalizedUrl.split('!');\n\n                if (queryParts.length > 1) {\n                  normalizedUrl = queryParts.pop();\n                  prefix = queryParts.join('!');\n                }\n\n                var request = (0, _utils.requestify)((0, _utils.normalizeUrl)(normalizedUrl, true), options.rootContext);\n\n                var doResolve = /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                    var resolver, context, resolvedUrl;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            resolver = options.resolver, context = options.context;\n                            _context.next = 3;\n                            return (0, _utils.resolveRequests)(resolver, context, _toConsumableArray(new Set([normalizedUrl, request])));\n\n                          case 3:\n                            resolvedUrl = _context.sent;\n                            return _context.abrupt(\"return\", {\n                              url: resolvedUrl,\n                              prefix: prefix,\n                              tokens: tokens\n                            });\n\n                          case 5:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function doResolve() {\n                    return _ref3.apply(this, arguments);\n                  };\n                }();\n\n                tasks.push(doResolve());\n              };\n\n              _context2.t0 = _regeneratorRuntime.keys(icssImports);\n\n            case 6:\n              if ((_context2.t1 = _context2.t0()).done) {\n                _context2.next = 13;\n                break;\n              }\n\n              url = _context2.t1.value;\n              _ret = _loop(url);\n\n              if (!(_ret === \"continue\")) {\n                _context2.next = 11;\n                break;\n              }\n\n              return _context2.abrupt(\"continue\", 6);\n\n            case 11:\n              _context2.next = 6;\n              break;\n\n            case 13:\n              _context2.next = 15;\n              return Promise.all(tasks);\n\n            case 15:\n              results = _context2.sent;\n\n              for (index = 0; index <= results.length - 1; index++) {\n                _results$index = results[index], _url = _results$index.url, prefix = _results$index.prefix, tokens = _results$index.tokens;\n                newUrl = prefix ? \"\".concat(prefix, \"!\").concat(_url) : _url;\n                importKey = newUrl;\n                importName = imports.get(importKey);\n\n                if (!importName) {\n                  importName = \"___CSS_LOADER_ICSS_IMPORT_\".concat(imports.size, \"___\");\n                  imports.set(importKey, importName);\n                  options.imports.push({\n                    importName: importName,\n                    url: options.urlHandler(newUrl),\n                    icss: true,\n                    index: index\n                  });\n                  options.api.push({\n                    importName: importName,\n                    dedupe: true,\n                    index: index\n                  });\n                }\n\n                _iterator = _createForOfIteratorHelper(Object.keys(tokens).entries());\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    _step$value = _slicedToArray(_step.value, 2), replacementIndex = _step$value[0], token = _step$value[1];\n                    replacementName = \"___CSS_LOADER_ICSS_IMPORT_\".concat(index, \"_REPLACEMENT_\").concat(replacementIndex, \"___\");\n                    localName = tokens[token];\n                    importReplacements[token] = replacementName;\n                    options.replacements.push({\n                      replacementName: replacementName,\n                      importName: importName,\n                      localName: localName\n                    });\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n              }\n\n              if (Object.keys(importReplacements).length > 0) {\n                (0, _icssUtils.replaceSymbols)(css, importReplacements);\n              }\n\n              for (_i = 0, _Object$keys = Object.keys(icssExports); _i < _Object$keys.length; _i++) {\n                name = _Object$keys[_i];\n                value = (0, _icssUtils.replaceValueSymbols)(icssExports[name], importReplacements);\n                options.exports.push({\n                  name: name,\n                  value: value\n                });\n              }\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n});\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/css-loader/dist/plugins/postcss-icss-parser.js"],"names":["Object","defineProperty","exports","value","default","_postcss","_interopRequireDefault","require","_icssUtils","_utils","obj","__esModule","_default","plugin","options","css","importReplacements","create","extractICSS","icssImports","icssExports","imports","Map","tasks","url","tokens","keys","length","normalizedUrl","prefix","queryParts","split","pop","join","request","requestify","normalizeUrl","rootContext","doResolve","resolver","context","resolveRequests","Set","resolvedUrl","push","Promise","all","results","index","newUrl","importKey","importName","get","size","set","urlHandler","icss","api","dedupe","entries","replacementIndex","token","replacementName","localName","replacements","replaceSymbols","name","replaceValueSymbols"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _icssUtils = require(\"icss-utils\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = _postcss.default.plugin('postcss-icss-parser', options => async css => {\n  const importReplacements = Object.create(null);\n  const {\n    icssImports,\n    icssExports\n  } = (0, _icssUtils.extractICSS)(css);\n  const imports = new Map();\n  const tasks = []; // eslint-disable-next-line guard-for-in\n\n  for (const url in icssImports) {\n    const tokens = icssImports[url];\n\n    if (Object.keys(tokens).length === 0) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    let normalizedUrl = url;\n    let prefix = '';\n    const queryParts = normalizedUrl.split('!');\n\n    if (queryParts.length > 1) {\n      normalizedUrl = queryParts.pop();\n      prefix = queryParts.join('!');\n    }\n\n    const request = (0, _utils.requestify)((0, _utils.normalizeUrl)(normalizedUrl, true), options.rootContext);\n\n    const doResolve = async () => {\n      const {\n        resolver,\n        context\n      } = options;\n      const resolvedUrl = await (0, _utils.resolveRequests)(resolver, context, [...new Set([normalizedUrl, request])]);\n      return {\n        url: resolvedUrl,\n        prefix,\n        tokens\n      };\n    };\n\n    tasks.push(doResolve());\n  }\n\n  const results = await Promise.all(tasks);\n\n  for (let index = 0; index <= results.length - 1; index++) {\n    const {\n      url,\n      prefix,\n      tokens\n    } = results[index];\n    const newUrl = prefix ? `${prefix}!${url}` : url;\n    const importKey = newUrl;\n    let importName = imports.get(importKey);\n\n    if (!importName) {\n      importName = `___CSS_LOADER_ICSS_IMPORT_${imports.size}___`;\n      imports.set(importKey, importName);\n      options.imports.push({\n        importName,\n        url: options.urlHandler(newUrl),\n        icss: true,\n        index\n      });\n      options.api.push({\n        importName,\n        dedupe: true,\n        index\n      });\n    }\n\n    for (const [replacementIndex, token] of Object.keys(tokens).entries()) {\n      const replacementName = `___CSS_LOADER_ICSS_IMPORT_${index}_REPLACEMENT_${replacementIndex}___`;\n      const localName = tokens[token];\n      importReplacements[token] = replacementName;\n      options.replacements.push({\n        replacementName,\n        importName,\n        localName\n      });\n    }\n  }\n\n  if (Object.keys(importReplacements).length > 0) {\n    (0, _icssUtils.replaceSymbols)(css, importReplacements);\n  }\n\n  for (const name of Object.keys(icssExports)) {\n    const value = (0, _icssUtils.replaceValueSymbols)(icssExports[name], importReplacements);\n    options.exports.push({\n      name,\n      value\n    });\n  }\n});\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}