{"ast":null,"code":"'use strict';\n/**\n * `input` type prompt\n */\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Input = require('./input');\n/**\n * Extention of the Input prompt specifically for use with number inputs.\n */\n\n\nvar NumberPrompt = /*#__PURE__*/function (_Input) {\n  _inherits(NumberPrompt, _Input);\n\n  var _super = _createSuper(NumberPrompt);\n\n  function NumberPrompt() {\n    _classCallCheck(this, NumberPrompt);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NumberPrompt, [{\n    key: \"filterInput\",\n    value: function filterInput(input) {\n      if (input && typeof input === 'string') {\n        input = input.trim(); // Match a number in the input\n\n        var numberMatch = input.match(/(^-?\\d+|^\\d+\\.\\d*|^\\d*\\.\\d+)(e\\d+)?$/); // If a number is found, return that input.\n\n        if (numberMatch) {\n          return Number(numberMatch[0]);\n        }\n      } // If the input was invalid return the default value.\n\n\n      return this.opt.default == null ? NaN : this.opt.default;\n    }\n  }]);\n\n  return NumberPrompt;\n}(Input);\n\nmodule.exports = NumberPrompt;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/inquirer/lib/prompts/number.js"],"names":["Input","require","NumberPrompt","input","trim","numberMatch","match","Number","opt","default","NaN","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;;;;;;;;;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;AAEA;AACA;AACA;;;IAEMC,Y;;;;;;;;;;;;;WACJ,qBAAYC,KAAZ,EAAmB;AACjB,UAAIA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;AACtCA,QAAAA,KAAK,GAAGA,KAAK,CAACC,IAAN,EAAR,CADsC,CAEtC;;AACA,YAAIC,WAAW,GAAGF,KAAK,CAACG,KAAN,CAAY,sCAAZ,CAAlB,CAHsC,CAItC;;AACA,YAAID,WAAJ,EAAiB;AACf,iBAAOE,MAAM,CAACF,WAAW,CAAC,CAAD,CAAZ,CAAb;AACD;AACF,OATgB,CAWjB;;;AACA,aAAO,KAAKG,GAAL,CAASC,OAAT,IAAoB,IAApB,GAA2BC,GAA3B,GAAiC,KAAKF,GAAL,CAASC,OAAjD;AACD;;;;EAdwBT,K;;AAiB3BW,MAAM,CAACC,OAAP,GAAiBV,YAAjB","sourcesContent":["'use strict';\n/**\n * `input` type prompt\n */\n\nvar Input = require('./input');\n\n/**\n * Extention of the Input prompt specifically for use with number inputs.\n */\n\nclass NumberPrompt extends Input {\n  filterInput(input) {\n    if (input && typeof input === 'string') {\n      input = input.trim();\n      // Match a number in the input\n      let numberMatch = input.match(/(^-?\\d+|^\\d+\\.\\d*|^\\d*\\.\\d+)(e\\d+)?$/);\n      // If a number is found, return that input.\n      if (numberMatch) {\n        return Number(numberMatch[0]);\n      }\n    }\n\n    // If the input was invalid return the default value.\n    return this.opt.default == null ? NaN : this.opt.default;\n  }\n}\n\nmodule.exports = NumberPrompt;\n"]},"metadata":{},"sourceType":"script"}