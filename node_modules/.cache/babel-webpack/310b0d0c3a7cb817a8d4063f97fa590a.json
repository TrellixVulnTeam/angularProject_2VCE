{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar path = require(\"path\");\n\nvar deep_1 = require(\"./filters/deep\");\n\nvar entry_1 = require(\"./filters/entry\");\n\nvar error_1 = require(\"./filters/error\");\n\nvar entry_2 = require(\"./transformers/entry\");\n\nvar Provider = /*#__PURE__*/function () {\n  function Provider(_settings) {\n    _classCallCheck(this, Provider);\n\n    this._settings = _settings;\n    this.errorFilter = new error_1.default(this._settings);\n    this.entryFilter = new entry_1.default(this._settings, this._getMicromatchOptions());\n    this.deepFilter = new deep_1.default(this._settings, this._getMicromatchOptions());\n    this.entryTransformer = new entry_2.default(this._settings);\n  }\n\n  _createClass(Provider, [{\n    key: \"_getRootDirectory\",\n    value: function _getRootDirectory(task) {\n      return path.resolve(this._settings.cwd, task.base);\n    }\n  }, {\n    key: \"_getReaderOptions\",\n    value: function _getReaderOptions(task) {\n      var basePath = task.base === '.' ? '' : task.base;\n      return {\n        basePath: basePath,\n        pathSegmentSeparator: '/',\n        concurrency: this._settings.concurrency,\n        deepFilter: this.deepFilter.getFilter(basePath, task.positive, task.negative),\n        entryFilter: this.entryFilter.getFilter(task.positive, task.negative),\n        errorFilter: this.errorFilter.getFilter(),\n        followSymbolicLinks: this._settings.followSymbolicLinks,\n        fs: this._settings.fs,\n        stats: this._settings.stats,\n        throwErrorOnBrokenSymbolicLink: this._settings.throwErrorOnBrokenSymbolicLink,\n        transform: this.entryTransformer.getTransformer()\n      };\n    }\n  }, {\n    key: \"_getMicromatchOptions\",\n    value: function _getMicromatchOptions() {\n      return {\n        dot: this._settings.dot,\n        matchBase: this._settings.baseNameMatch,\n        nobrace: !this._settings.braceExpansion,\n        nocase: !this._settings.caseSensitiveMatch,\n        noext: !this._settings.extglob,\n        noglobstar: !this._settings.globstar,\n        posix: true,\n        strictSlashes: false\n      };\n    }\n  }]);\n\n  return Provider;\n}();\n\nexports.default = Provider;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/fast-glob/out/providers/provider.js"],"names":["Object","defineProperty","exports","value","path","require","deep_1","entry_1","error_1","entry_2","Provider","_settings","errorFilter","default","entryFilter","_getMicromatchOptions","deepFilter","entryTransformer","task","resolve","cwd","base","basePath","pathSegmentSeparator","concurrency","getFilter","positive","negative","followSymbolicLinks","fs","stats","throwErrorOnBrokenSymbolicLink","transform","getTransformer","dot","matchBase","baseNameMatch","nobrace","braceExpansion","nocase","caseSensitiveMatch","noext","extglob","noglobstar","globstar","posix","strictSlashes"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path = require(\"path\");\r\nconst deep_1 = require(\"./filters/deep\");\r\nconst entry_1 = require(\"./filters/entry\");\r\nconst error_1 = require(\"./filters/error\");\r\nconst entry_2 = require(\"./transformers/entry\");\r\nclass Provider {\r\n    constructor(_settings) {\r\n        this._settings = _settings;\r\n        this.errorFilter = new error_1.default(this._settings);\r\n        this.entryFilter = new entry_1.default(this._settings, this._getMicromatchOptions());\r\n        this.deepFilter = new deep_1.default(this._settings, this._getMicromatchOptions());\r\n        this.entryTransformer = new entry_2.default(this._settings);\r\n    }\r\n    _getRootDirectory(task) {\r\n        return path.resolve(this._settings.cwd, task.base);\r\n    }\r\n    _getReaderOptions(task) {\r\n        const basePath = task.base === '.' ? '' : task.base;\r\n        return {\r\n            basePath,\r\n            pathSegmentSeparator: '/',\r\n            concurrency: this._settings.concurrency,\r\n            deepFilter: this.deepFilter.getFilter(basePath, task.positive, task.negative),\r\n            entryFilter: this.entryFilter.getFilter(task.positive, task.negative),\r\n            errorFilter: this.errorFilter.getFilter(),\r\n            followSymbolicLinks: this._settings.followSymbolicLinks,\r\n            fs: this._settings.fs,\r\n            stats: this._settings.stats,\r\n            throwErrorOnBrokenSymbolicLink: this._settings.throwErrorOnBrokenSymbolicLink,\r\n            transform: this.entryTransformer.getTransformer()\r\n        };\r\n    }\r\n    _getMicromatchOptions() {\r\n        return {\r\n            dot: this._settings.dot,\r\n            matchBase: this._settings.baseNameMatch,\r\n            nobrace: !this._settings.braceExpansion,\r\n            nocase: !this._settings.caseSensitiveMatch,\r\n            noext: !this._settings.extglob,\r\n            noglobstar: !this._settings.globstar,\r\n            posix: true,\r\n            strictSlashes: false\r\n        };\r\n    }\r\n}\r\nexports.default = Provider;\r\n"]},"metadata":{},"sourceType":"script"}