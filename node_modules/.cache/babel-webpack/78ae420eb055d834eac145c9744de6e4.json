{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler-cli/src/ngtsc/translator/src/context\", [\"require\", \"exports\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Context = void 0;\n  /**\n   * The current context of a translator visitor as it traverses the AST tree.\n   *\n   * It tracks whether we are in the process of outputting a statement or an expression.\n   */\n\n  var Context =\n  /** @class */\n  function () {\n    function Context(isStatement) {\n      this.isStatement = isStatement;\n    }\n\n    Object.defineProperty(Context.prototype, \"withExpressionMode\", {\n      get: function get() {\n        return this.isStatement ? new Context(false) : this;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"withStatementMode\", {\n      get: function get() {\n        return !this.isStatement ? new Context(true) : this;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    return Context;\n  }();\n\n  exports.Context = Context;\n});","map":{"version":3,"sources":["../../../../../../../../../packages/compiler-cli/src/ngtsc/translator/src/context.ts"],"names":[],"mappings":"AAAA;;;;;;AAMG;;;;;;;;;;;;;;;AAEH;;;;AAIG;;AACH,MAAA,OAAA;AAAA;AAAA,cAAA;AACE,aAAA,OAAA,CAAqB,WAArB,EAAyC;AAApB,WAAA,WAAA,GAAA,WAAA;AAAwB;;AAE7C,IAAA,MAAA,CAAA,cAAA,CAAI,OAAA,CAAA,SAAJ,EAAI,oBAAJ,EAAsB;WAAtB,eAAA;AACE,eAAO,KAAK,WAAL,GAAmB,IAAI,OAAJ,CAAY,KAAZ,CAAnB,GAAwC,IAA/C;AACD,OAFqB;uBAAA;;AAAA,KAAtB;AAIA,IAAA,MAAA,CAAA,cAAA,CAAI,OAAA,CAAA,SAAJ,EAAI,mBAAJ,EAAqB;WAArB,eAAA;AACE,eAAO,CAAC,KAAK,WAAN,GAAoB,IAAI,OAAJ,CAAY,IAAZ,CAApB,GAAwC,IAA/C;AACD,OAFoB;uBAAA;;AAAA,KAArB;AAGF,WAAA,OAAA;AAAC,GAVD,EAAA;;AAAa,EAAA,OAAA,CAAA,OAAA,GAAA,OAAA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The current context of a translator visitor as it traverses the AST tree.\n *\n * It tracks whether we are in the process of outputting a statement or an expression.\n */\nexport class Context {\n  constructor(readonly isStatement: boolean) {}\n\n  get withExpressionMode(): Context {\n    return this.isStatement ? new Context(false) : this;\n  }\n\n  get withStatementMode(): Context {\n    return !this.isStatement ? new Context(true) : this;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}