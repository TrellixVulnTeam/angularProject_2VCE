{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) {\n      if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n  }\n\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar WebpackChunkModuleIterator_1 = require(\"./WebpackChunkModuleIterator\");\n\nvar WebpackModuleFileIterator_1 = require(\"./WebpackModuleFileIterator\");\n\nvar PluginChunkReadHandler =\n/** @class */\nfunction () {\n  function PluginChunkReadHandler(logger, fileHandler, licenseTypeIdentifier, licenseTextReader, licensePolicy, fileSystem) {\n    this.logger = logger;\n    this.fileHandler = fileHandler;\n    this.licenseTypeIdentifier = licenseTypeIdentifier;\n    this.licenseTextReader = licenseTextReader;\n    this.licensePolicy = licensePolicy;\n    this.fileSystem = fileSystem;\n    this.moduleIterator = new WebpackChunkModuleIterator_1.WebpackChunkModuleIterator();\n    this.fileIterator = new WebpackModuleFileIterator_1.WebpackModuleFileIterator();\n  }\n\n  PluginChunkReadHandler.prototype.processChunk = function (compilation, chunk, moduleCache) {\n    var _this = this;\n\n    this.moduleIterator.iterateModules(chunk, function (module) {\n      _this.fileIterator.iterateFiles(module, function (filename) {\n        var module = _this.fileHandler.getModule(filename);\n\n        _this.processModule(compilation, chunk, moduleCache, module);\n      });\n    });\n  };\n\n  PluginChunkReadHandler.prototype.getPackageJson = function (directory) {\n    var filename = \"\" + directory + this.fileSystem.pathSeparator + \"package.json\";\n    return JSON.parse(this.fileSystem.readFileAsUtf8(filename));\n  };\n\n  PluginChunkReadHandler.prototype.processModule = function (compilation, chunk, moduleCache, module) {\n    if (module && !moduleCache.alreadySeenForChunk(chunk.name, module.name)) {\n      var alreadyIncludedModule = moduleCache.getModule(module.name);\n\n      if (alreadyIncludedModule !== null) {\n        moduleCache.registerModule(chunk.name, alreadyIncludedModule);\n      } else {\n        // module not yet in cache\n        var packageJson = this.getPackageJson(module.directory);\n        var licenseType = this.licenseTypeIdentifier.findLicenseIdentifier(compilation, module.name, packageJson);\n\n        if (this.licensePolicy.isLicenseUnacceptableFor(licenseType)) {\n          this.logger.error(compilation, \"unacceptable license found for \" + module.name + \": \" + licenseType);\n          this.licensePolicy.handleUnacceptableLicense(module.name, licenseType);\n        }\n\n        if (this.licensePolicy.isLicenseWrittenFor(licenseType)) {\n          var licenseText = this.licenseTextReader.readLicense(compilation, module, licenseType);\n          moduleCache.registerModule(chunk.name, __assign({\n            licenseText: licenseText,\n            packageJson: packageJson\n          }, module, {\n            licenseId: licenseType\n          }));\n        }\n      }\n\n      moduleCache.markSeenForChunk(chunk.name, module.name);\n    }\n  };\n\n  return PluginChunkReadHandler;\n}();\n\nexports.PluginChunkReadHandler = PluginChunkReadHandler;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/license-webpack-plugin/dist/PluginChunkReadHandler.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","defineProperty","exports","value","WebpackChunkModuleIterator_1","require","WebpackModuleFileIterator_1","PluginChunkReadHandler","logger","fileHandler","licenseTypeIdentifier","licenseTextReader","licensePolicy","fileSystem","moduleIterator","WebpackChunkModuleIterator","fileIterator","WebpackModuleFileIterator","processChunk","compilation","chunk","moduleCache","_this","iterateModules","module","iterateFiles","filename","getModule","processModule","getPackageJson","directory","pathSeparator","JSON","parse","readFileAsUtf8","alreadySeenForChunk","name","alreadyIncludedModule","registerModule","packageJson","licenseType","findLicenseIdentifier","isLicenseUnacceptableFor","error","handleUnacceptableLicense","isLicenseWrittenFor","licenseText","readLicense","licenseId","markSeenForChunk"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WebpackChunkModuleIterator_1 = require(\"./WebpackChunkModuleIterator\");\nvar WebpackModuleFileIterator_1 = require(\"./WebpackModuleFileIterator\");\nvar PluginChunkReadHandler = /** @class */ (function () {\n    function PluginChunkReadHandler(logger, fileHandler, licenseTypeIdentifier, licenseTextReader, licensePolicy, fileSystem) {\n        this.logger = logger;\n        this.fileHandler = fileHandler;\n        this.licenseTypeIdentifier = licenseTypeIdentifier;\n        this.licenseTextReader = licenseTextReader;\n        this.licensePolicy = licensePolicy;\n        this.fileSystem = fileSystem;\n        this.moduleIterator = new WebpackChunkModuleIterator_1.WebpackChunkModuleIterator();\n        this.fileIterator = new WebpackModuleFileIterator_1.WebpackModuleFileIterator();\n    }\n    PluginChunkReadHandler.prototype.processChunk = function (compilation, chunk, moduleCache) {\n        var _this = this;\n        this.moduleIterator.iterateModules(chunk, function (module) {\n            _this.fileIterator.iterateFiles(module, function (filename) {\n                var module = _this.fileHandler.getModule(filename);\n                _this.processModule(compilation, chunk, moduleCache, module);\n            });\n        });\n    };\n    PluginChunkReadHandler.prototype.getPackageJson = function (directory) {\n        var filename = \"\" + directory + this.fileSystem.pathSeparator + \"package.json\";\n        return JSON.parse(this.fileSystem.readFileAsUtf8(filename));\n    };\n    PluginChunkReadHandler.prototype.processModule = function (compilation, chunk, moduleCache, module) {\n        if (module && !moduleCache.alreadySeenForChunk(chunk.name, module.name)) {\n            var alreadyIncludedModule = moduleCache.getModule(module.name);\n            if (alreadyIncludedModule !== null) {\n                moduleCache.registerModule(chunk.name, alreadyIncludedModule);\n            }\n            else {\n                // module not yet in cache\n                var packageJson = this.getPackageJson(module.directory);\n                var licenseType = this.licenseTypeIdentifier.findLicenseIdentifier(compilation, module.name, packageJson);\n                if (this.licensePolicy.isLicenseUnacceptableFor(licenseType)) {\n                    this.logger.error(compilation, \"unacceptable license found for \" + module.name + \": \" + licenseType);\n                    this.licensePolicy.handleUnacceptableLicense(module.name, licenseType);\n                }\n                if (this.licensePolicy.isLicenseWrittenFor(licenseType)) {\n                    var licenseText = this.licenseTextReader.readLicense(compilation, module, licenseType);\n                    moduleCache.registerModule(chunk.name, __assign({ licenseText: licenseText,\n                        packageJson: packageJson }, module, { licenseId: licenseType }));\n                }\n            }\n            moduleCache.markSeenForChunk(chunk.name, module.name);\n        }\n    };\n    return PluginChunkReadHandler;\n}());\nexports.PluginChunkReadHandler = PluginChunkReadHandler;\n"]},"metadata":{},"sourceType":"script"}