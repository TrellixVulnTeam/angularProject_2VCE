{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar ImportDependency = require(\"./ImportDependency\");\n\nvar ImportEagerDependency = require(\"./ImportEagerDependency\");\n\nvar ImportWeakDependency = require(\"./ImportWeakDependency\");\n\nvar ImportContextDependency = require(\"./ImportContextDependency\");\n\nvar ImportParserPlugin = require(\"./ImportParserPlugin\");\n\nvar ImportPlugin = /*#__PURE__*/function () {\n  function ImportPlugin(options) {\n    _classCallCheck(this, ImportPlugin);\n\n    this.options = options;\n  }\n\n  _createClass(ImportPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var options = this.options;\n      compiler.hooks.compilation.tap(\"ImportPlugin\", function (compilation, _ref) {\n        var contextModuleFactory = _ref.contextModuleFactory,\n            normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(ImportDependency, normalModuleFactory);\n        compilation.dependencyTemplates.set(ImportDependency, new ImportDependency.Template());\n        compilation.dependencyFactories.set(ImportEagerDependency, normalModuleFactory);\n        compilation.dependencyTemplates.set(ImportEagerDependency, new ImportEagerDependency.Template());\n        compilation.dependencyFactories.set(ImportWeakDependency, normalModuleFactory);\n        compilation.dependencyTemplates.set(ImportWeakDependency, new ImportWeakDependency.Template());\n        compilation.dependencyFactories.set(ImportContextDependency, contextModuleFactory);\n        compilation.dependencyTemplates.set(ImportContextDependency, new ImportContextDependency.Template());\n\n        var handler = function handler(parser, parserOptions) {\n          if (parserOptions.import !== undefined && !parserOptions.import) return;\n          new ImportParserPlugin(options).apply(parser);\n        };\n\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"ImportPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"ImportPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"ImportPlugin\", handler);\n      });\n    }\n  }]);\n\n  return ImportPlugin;\n}();\n\nmodule.exports = ImportPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/dependencies/ImportPlugin.js"],"names":["ImportDependency","require","ImportEagerDependency","ImportWeakDependency","ImportContextDependency","ImportParserPlugin","ImportPlugin","options","compiler","hooks","compilation","tap","contextModuleFactory","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","import","undefined","apply","for","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAAhC;;AACA,IAAMC,qBAAqB,GAAGD,OAAO,CAAC,yBAAD,CAArC;;AACA,IAAME,oBAAoB,GAAGF,OAAO,CAAC,wBAAD,CAApC;;AACA,IAAMG,uBAAuB,GAAGH,OAAO,CAAC,2BAAD,CAAvC;;AACA,IAAMI,kBAAkB,GAAGJ,OAAO,CAAC,sBAAD,CAAlC;;IAEMK,Y;AACL,wBAAYC,OAAZ,EAAqB;AAAA;;AACpB,SAAKA,OAAL,GAAeA,OAAf;AACA;;;;WAED,eAAMC,QAAN,EAAgB;AACf,UAAMD,OAAO,GAAG,KAAKA,OAArB;AACAC,MAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,cADD,EAEC,UAACD,WAAD,QAAgE;AAAA,YAAhDE,oBAAgD,QAAhDA,oBAAgD;AAAA,YAA1BC,mBAA0B,QAA1BA,mBAA0B;AAC/DH,QAAAA,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCf,gBADD,EAECa,mBAFD;AAIAH,QAAAA,WAAW,CAACM,mBAAZ,CAAgCD,GAAhC,CACCf,gBADD,EAEC,IAAIA,gBAAgB,CAACiB,QAArB,EAFD;AAKAP,QAAAA,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCb,qBADD,EAECW,mBAFD;AAIAH,QAAAA,WAAW,CAACM,mBAAZ,CAAgCD,GAAhC,CACCb,qBADD,EAEC,IAAIA,qBAAqB,CAACe,QAA1B,EAFD;AAKAP,QAAAA,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCZ,oBADD,EAECU,mBAFD;AAIAH,QAAAA,WAAW,CAACM,mBAAZ,CAAgCD,GAAhC,CACCZ,oBADD,EAEC,IAAIA,oBAAoB,CAACc,QAAzB,EAFD;AAKAP,QAAAA,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCX,uBADD,EAECQ,oBAFD;AAIAF,QAAAA,WAAW,CAACM,mBAAZ,CAAgCD,GAAhC,CACCX,uBADD,EAEC,IAAIA,uBAAuB,CAACa,QAA5B,EAFD;;AAKA,YAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAASC,aAAT,EAA2B;AAC1C,cAAIA,aAAa,CAACC,MAAd,KAAyBC,SAAzB,IAAsC,CAACF,aAAa,CAACC,MAAzD,EACC;AAED,cAAIhB,kBAAJ,CAAuBE,OAAvB,EAAgCgB,KAAhC,CAAsCJ,MAAtC;AACA,SALD;;AAOAN,QAAAA,mBAAmB,CAACJ,KAApB,CAA0BU,MAA1B,CACEK,GADF,CACM,iBADN,EAEEb,GAFF,CAEM,cAFN,EAEsBO,OAFtB;AAGAL,QAAAA,mBAAmB,CAACJ,KAApB,CAA0BU,MAA1B,CACEK,GADF,CACM,oBADN,EAEEb,GAFF,CAEM,cAFN,EAEsBO,OAFtB;AAGAL,QAAAA,mBAAmB,CAACJ,KAApB,CAA0BU,MAA1B,CACEK,GADF,CACM,gBADN,EAEEb,GAFF,CAEM,cAFN,EAEsBO,OAFtB;AAGA,OAvDF;AAyDA;;;;;;AAEFO,MAAM,CAACC,OAAP,GAAiBpB,YAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ImportDependency = require(\"./ImportDependency\");\nconst ImportEagerDependency = require(\"./ImportEagerDependency\");\nconst ImportWeakDependency = require(\"./ImportWeakDependency\");\nconst ImportContextDependency = require(\"./ImportContextDependency\");\nconst ImportParserPlugin = require(\"./ImportParserPlugin\");\n\nclass ImportPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ImportPlugin\",\n\t\t\t(compilation, { contextModuleFactory, normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportDependency,\n\t\t\t\t\tnew ImportDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportEagerDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportEagerDependency,\n\t\t\t\t\tnew ImportEagerDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportWeakDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportWeakDependency,\n\t\t\t\t\tnew ImportWeakDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportContextDependency,\n\t\t\t\t\tnew ImportContextDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.import !== undefined && !parserOptions.import)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew ImportParserPlugin(options).apply(parser);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ImportPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"ImportPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"ImportPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = ImportPlugin;\n"]},"metadata":{},"sourceType":"script"}