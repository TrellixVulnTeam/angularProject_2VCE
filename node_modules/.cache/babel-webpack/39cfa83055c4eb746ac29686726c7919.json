{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar SetVarMainTemplatePlugin = require(\"./SetVarMainTemplatePlugin\");\n/** @typedef {import(\"../declarations/WebpackOptions\").LibraryCustomUmdObject} LibraryCustomUmdObject */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\n\n\nvar accessorToObjectAccess = function accessorToObjectAccess(accessor) {\n  return accessor.map(function (a) {\n    return \"[\".concat(JSON.stringify(a), \"]\");\n  }).join(\"\");\n};\n/**\n * @param {string=} base the path prefix\n * @param {string|string[]|LibraryCustomUmdObject} accessor the accessor\n * @param {\"amd\" | \"commonjs\" | \"root\"} umdProperty property used when a custom umd object is provided\n * @param {string=} joinWith the element separator\n * @returns {string} the path\n */\n\n\nvar accessorAccess = function accessorAccess(base, accessor, umdProperty) {\n  var joinWith = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"; \";\n  var normalizedAccessor = typeof accessor === \"object\" && !Array.isArray(accessor) ? accessor[umdProperty] : accessor;\n  var accessors = Array.isArray(normalizedAccessor) ? normalizedAccessor : [normalizedAccessor];\n  return accessors.map(function (_, idx) {\n    var a = base ? base + accessorToObjectAccess(accessors.slice(0, idx + 1)) : accessors[0] + accessorToObjectAccess(accessors.slice(1, idx + 1));\n    if (idx === accessors.length - 1) return a;\n\n    if (idx === 0 && base === undefined) {\n      return \"\".concat(a, \" = typeof \").concat(a, \" === \\\"object\\\" ? \").concat(a, \" : {}\");\n    }\n\n    return \"\".concat(a, \" = \").concat(a, \" || {}\");\n  }).join(joinWith);\n};\n\nvar LibraryTemplatePlugin = /*#__PURE__*/function () {\n  /**\n   * @param {string|string[]|LibraryCustomUmdObject} name name of library\n   * @param {string} target type of library\n   * @param {boolean} umdNamedDefine setting this to true will name the UMD module\n   * @param {string|TODO} auxiliaryComment comment in the UMD wrapper\n   * @param {string|string[]} exportProperty which export should be exposed as library\n   */\n  function LibraryTemplatePlugin(name, target, umdNamedDefine, auxiliaryComment, exportProperty) {\n    _classCallCheck(this, LibraryTemplatePlugin);\n\n    this.name = name;\n    this.target = target;\n    this.umdNamedDefine = umdNamedDefine;\n    this.auxiliaryComment = auxiliaryComment;\n    this.exportProperty = exportProperty;\n  }\n  /**\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  _createClass(LibraryTemplatePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.thisCompilation.tap(\"LibraryTemplatePlugin\", function (compilation) {\n        if (_this.exportProperty) {\n          var ExportPropertyMainTemplatePlugin = require(\"./ExportPropertyMainTemplatePlugin\");\n\n          new ExportPropertyMainTemplatePlugin(_this.exportProperty).apply(compilation);\n        }\n\n        switch (_this.target) {\n          case \"var\":\n            if (!_this.name || typeof _this.name === \"object\" && !Array.isArray(_this.name)) {\n              throw new Error(\"library name must be set and not an UMD custom object for non-UMD target\");\n            }\n\n            new SetVarMainTemplatePlugin(\"var \".concat(accessorAccess(undefined, _this.name, \"root\")), false).apply(compilation);\n            break;\n\n          case \"assign\":\n            new SetVarMainTemplatePlugin(accessorAccess(undefined, _this.name, \"root\"), false).apply(compilation);\n            break;\n\n          case \"this\":\n          case \"self\":\n          case \"window\":\n            if (_this.name) {\n              new SetVarMainTemplatePlugin(accessorAccess(_this.target, _this.name, \"root\"), false).apply(compilation);\n            } else {\n              new SetVarMainTemplatePlugin(_this.target, true).apply(compilation);\n            }\n\n            break;\n\n          case \"global\":\n            if (_this.name) {\n              new SetVarMainTemplatePlugin(accessorAccess(compilation.runtimeTemplate.outputOptions.globalObject, _this.name, \"root\"), false).apply(compilation);\n            } else {\n              new SetVarMainTemplatePlugin(compilation.runtimeTemplate.outputOptions.globalObject, true).apply(compilation);\n            }\n\n            break;\n\n          case \"commonjs\":\n            if (_this.name) {\n              new SetVarMainTemplatePlugin(accessorAccess(\"exports\", _this.name, \"commonjs\"), false).apply(compilation);\n            } else {\n              new SetVarMainTemplatePlugin(\"exports\", true).apply(compilation);\n            }\n\n            break;\n\n          case \"commonjs2\":\n          case \"commonjs-module\":\n            new SetVarMainTemplatePlugin(\"module.exports\", false).apply(compilation);\n            break;\n\n          case \"amd\":\n          case \"amd-require\":\n            {\n              var AmdMainTemplatePlugin = require(\"./AmdMainTemplatePlugin\");\n\n              if (_this.name && typeof _this.name !== \"string\") {\n                throw new Error(\"library name must be a string for amd target\");\n              }\n\n              new AmdMainTemplatePlugin({\n                name: _this.name,\n                requireAsWrapper: _this.target === \"amd-require\"\n              }).apply(compilation);\n              break;\n            }\n\n          case \"umd\":\n          case \"umd2\":\n            {\n              var UmdMainTemplatePlugin = require(\"./UmdMainTemplatePlugin\");\n\n              new UmdMainTemplatePlugin(_this.name, {\n                optionalAmdExternalAsGlobal: _this.target === \"umd2\",\n                namedDefine: _this.umdNamedDefine,\n                auxiliaryComment: _this.auxiliaryComment\n              }).apply(compilation);\n              break;\n            }\n\n          case \"jsonp\":\n            {\n              var JsonpExportMainTemplatePlugin = require(\"./web/JsonpExportMainTemplatePlugin\");\n\n              if (typeof _this.name !== \"string\") throw new Error(\"library name must be a string for jsonp target\");\n              new JsonpExportMainTemplatePlugin(_this.name).apply(compilation);\n              break;\n            }\n\n          case \"system\":\n            {\n              var SystemMainTemplatePlugin = require(\"./SystemMainTemplatePlugin\");\n\n              new SystemMainTemplatePlugin({\n                name: _this.name\n              }).apply(compilation);\n              break;\n            }\n\n          default:\n            throw new Error(\"\".concat(_this.target, \" is not a valid Library target\"));\n        }\n      });\n    }\n  }]);\n\n  return LibraryTemplatePlugin;\n}();\n\nmodule.exports = LibraryTemplatePlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/LibraryTemplatePlugin.js"],"names":["SetVarMainTemplatePlugin","require","accessorToObjectAccess","accessor","map","a","JSON","stringify","join","accessorAccess","base","umdProperty","joinWith","normalizedAccessor","Array","isArray","accessors","_","idx","slice","length","undefined","LibraryTemplatePlugin","name","target","umdNamedDefine","auxiliaryComment","exportProperty","compiler","hooks","thisCompilation","tap","compilation","ExportPropertyMainTemplatePlugin","apply","Error","runtimeTemplate","outputOptions","globalObject","AmdMainTemplatePlugin","requireAsWrapper","UmdMainTemplatePlugin","optionalAmdExternalAsGlobal","namedDefine","JsonpExportMainTemplatePlugin","SystemMainTemplatePlugin","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst SetVarMainTemplatePlugin = require(\"./SetVarMainTemplatePlugin\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").LibraryCustomUmdObject} LibraryCustomUmdObject */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\nconst accessorToObjectAccess = accessor => {\n\treturn accessor.map(a => `[${JSON.stringify(a)}]`).join(\"\");\n};\n\n/**\n * @param {string=} base the path prefix\n * @param {string|string[]|LibraryCustomUmdObject} accessor the accessor\n * @param {\"amd\" | \"commonjs\" | \"root\"} umdProperty property used when a custom umd object is provided\n * @param {string=} joinWith the element separator\n * @returns {string} the path\n */\nconst accessorAccess = (base, accessor, umdProperty, joinWith = \"; \") => {\n\tconst normalizedAccessor =\n\t\ttypeof accessor === \"object\" && !Array.isArray(accessor)\n\t\t\t? accessor[umdProperty]\n\t\t\t: accessor;\n\tconst accessors = Array.isArray(normalizedAccessor)\n\t\t? normalizedAccessor\n\t\t: [normalizedAccessor];\n\treturn accessors\n\t\t.map((_, idx) => {\n\t\t\tconst a = base\n\t\t\t\t? base + accessorToObjectAccess(accessors.slice(0, idx + 1))\n\t\t\t\t: accessors[0] + accessorToObjectAccess(accessors.slice(1, idx + 1));\n\t\t\tif (idx === accessors.length - 1) return a;\n\t\t\tif (idx === 0 && base === undefined) {\n\t\t\t\treturn `${a} = typeof ${a} === \"object\" ? ${a} : {}`;\n\t\t\t}\n\t\t\treturn `${a} = ${a} || {}`;\n\t\t})\n\t\t.join(joinWith);\n};\n\nclass LibraryTemplatePlugin {\n\t/**\n\t * @param {string|string[]|LibraryCustomUmdObject} name name of library\n\t * @param {string} target type of library\n\t * @param {boolean} umdNamedDefine setting this to true will name the UMD module\n\t * @param {string|TODO} auxiliaryComment comment in the UMD wrapper\n\t * @param {string|string[]} exportProperty which export should be exposed as library\n\t */\n\tconstructor(name, target, umdNamedDefine, auxiliaryComment, exportProperty) {\n\t\tthis.name = name;\n\t\tthis.target = target;\n\t\tthis.umdNamedDefine = umdNamedDefine;\n\t\tthis.auxiliaryComment = auxiliaryComment;\n\t\tthis.exportProperty = exportProperty;\n\t}\n\n\t/**\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\"LibraryTemplatePlugin\", compilation => {\n\t\t\tif (this.exportProperty) {\n\t\t\t\tconst ExportPropertyMainTemplatePlugin = require(\"./ExportPropertyMainTemplatePlugin\");\n\t\t\t\tnew ExportPropertyMainTemplatePlugin(this.exportProperty).apply(\n\t\t\t\t\tcompilation\n\t\t\t\t);\n\t\t\t}\n\t\t\tswitch (this.target) {\n\t\t\t\tcase \"var\":\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.name ||\n\t\t\t\t\t\t(typeof this.name === \"object\" && !Array.isArray(this.name))\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\"library name must be set and not an UMD custom object for non-UMD target\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t`var ${accessorAccess(undefined, this.name, \"root\")}`,\n\t\t\t\t\t\tfalse\n\t\t\t\t\t).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"assign\":\n\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\taccessorAccess(undefined, this.name, \"root\"),\n\t\t\t\t\t\tfalse\n\t\t\t\t\t).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"this\":\n\t\t\t\tcase \"self\":\n\t\t\t\tcase \"window\":\n\t\t\t\t\tif (this.name) {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t\taccessorAccess(this.target, this.name, \"root\"),\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t).apply(compilation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(this.target, true).apply(compilation);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"global\":\n\t\t\t\t\tif (this.name) {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t\taccessorAccess(\n\t\t\t\t\t\t\t\tcompilation.runtimeTemplate.outputOptions.globalObject,\n\t\t\t\t\t\t\t\tthis.name,\n\t\t\t\t\t\t\t\t\"root\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t).apply(compilation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t\tcompilation.runtimeTemplate.outputOptions.globalObject,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t).apply(compilation);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"commonjs\":\n\t\t\t\t\tif (this.name) {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t\taccessorAccess(\"exports\", this.name, \"commonjs\"),\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t).apply(compilation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\"exports\", true).apply(compilation);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"commonjs2\":\n\t\t\t\tcase \"commonjs-module\":\n\t\t\t\t\tnew SetVarMainTemplatePlugin(\"module.exports\", false).apply(\n\t\t\t\t\t\tcompilation\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"amd\":\n\t\t\t\tcase \"amd-require\": {\n\t\t\t\t\tconst AmdMainTemplatePlugin = require(\"./AmdMainTemplatePlugin\");\n\t\t\t\t\tif (this.name && typeof this.name !== \"string\") {\n\t\t\t\t\t\tthrow new Error(\"library name must be a string for amd target\");\n\t\t\t\t\t}\n\t\t\t\t\tnew AmdMainTemplatePlugin({\n\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\trequireAsWrapper: this.target === \"amd-require\"\n\t\t\t\t\t}).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"umd\":\n\t\t\t\tcase \"umd2\": {\n\t\t\t\t\tconst UmdMainTemplatePlugin = require(\"./UmdMainTemplatePlugin\");\n\t\t\t\t\tnew UmdMainTemplatePlugin(this.name, {\n\t\t\t\t\t\toptionalAmdExternalAsGlobal: this.target === \"umd2\",\n\t\t\t\t\t\tnamedDefine: this.umdNamedDefine,\n\t\t\t\t\t\tauxiliaryComment: this.auxiliaryComment\n\t\t\t\t\t}).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"jsonp\": {\n\t\t\t\t\tconst JsonpExportMainTemplatePlugin = require(\"./web/JsonpExportMainTemplatePlugin\");\n\t\t\t\t\tif (typeof this.name !== \"string\")\n\t\t\t\t\t\tthrow new Error(\"library name must be a string for jsonp target\");\n\t\t\t\t\tnew JsonpExportMainTemplatePlugin(this.name).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"system\": {\n\t\t\t\t\tconst SystemMainTemplatePlugin = require(\"./SystemMainTemplatePlugin\");\n\t\t\t\t\tnew SystemMainTemplatePlugin({\n\t\t\t\t\t\tname: this.name\n\t\t\t\t\t}).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`${this.target} is not a valid Library target`);\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = LibraryTemplatePlugin;\n"]},"metadata":{},"sourceType":"script"}