{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar ConstDependency = require(\"./dependencies/ConstDependency\");\n\nvar NullFactory = require(\"./NullFactory\");\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n\nvar CompatibilityPlugin = /*#__PURE__*/function () {\n  function CompatibilityPlugin() {\n    _classCallCheck(this, CompatibilityPlugin);\n  }\n\n  _createClass(CompatibilityPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler Webpack Compiler\n     * @returns {void}\n     */\n    function apply(compiler) {\n      compiler.hooks.compilation.tap(\"CompatibilityPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(ConstDependency, new NullFactory());\n        compilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"CompatibilityPlugin\", function (parser, parserOptions) {\n          if (parserOptions.browserify !== undefined && !parserOptions.browserify) return;\n          parser.hooks.call.for(\"require\").tap(\"CompatibilityPlugin\", function (expr) {\n            // support for browserify style require delegator: \"require(o, !0)\"\n            if (expr.arguments.length !== 2) return;\n            var second = parser.evaluateExpression(expr.arguments[1]);\n            if (!second.isBoolean()) return;\n            if (second.asBool() !== true) return;\n            var dep = new ConstDependency(\"require\", expr.callee.range);\n            dep.loc = expr.loc;\n\n            if (parser.state.current.dependencies.length > 1) {\n              var last = parser.state.current.dependencies[parser.state.current.dependencies.length - 1];\n              if (last.critical && last.options && last.options.request === \".\" && last.userRequest === \".\" && last.options.recursive) parser.state.current.dependencies.pop();\n            }\n\n            parser.state.current.addDependency(dep);\n            return true;\n          });\n        });\n      });\n    }\n  }]);\n\n  return CompatibilityPlugin;\n}();\n\nmodule.exports = CompatibilityPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/CompatibilityPlugin.js"],"names":["ConstDependency","require","NullFactory","CompatibilityPlugin","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","parser","for","parserOptions","browserify","undefined","call","expr","arguments","length","second","evaluateExpression","isBoolean","asBool","dep","callee","range","loc","state","current","dependencies","last","critical","options","request","userRequest","recursive","pop","addDependency","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,IAAMA,eAAe,GAAGC,OAAO,CAAC,gCAAD,CAA/B;;AAEA,IAAMC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAA3B;AAEA;;;IAEME,mB;;;;;;;;AACL;AACD;AACA;AACA;AACA;AACC,mBAAMC,QAAN,EAAgB;AACfA,MAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,qBADD,EAEC,UAACD,WAAD,QAA0C;AAAA,YAA1BE,mBAA0B,QAA1BA,mBAA0B;AACzCF,QAAAA,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CAAoCV,eAApC,EAAqD,IAAIE,WAAJ,EAArD;AACAI,QAAAA,WAAW,CAACK,mBAAZ,CAAgCD,GAAhC,CACCV,eADD,EAEC,IAAIA,eAAe,CAACY,QAApB,EAFD;AAKAJ,QAAAA,mBAAmB,CAACH,KAApB,CAA0BQ,MAA1B,CACEC,GADF,CACM,iBADN,EAEEP,GAFF,CAEM,qBAFN,EAE6B,UAACM,MAAD,EAASE,aAAT,EAA2B;AACtD,cACCA,aAAa,CAACC,UAAd,KAA6BC,SAA7B,IACA,CAACF,aAAa,CAACC,UAFhB,EAIC;AAEDH,UAAAA,MAAM,CAACR,KAAP,CAAaa,IAAb,CACEJ,GADF,CACM,SADN,EAEEP,GAFF,CAEM,qBAFN,EAE6B,UAAAY,IAAI,EAAI;AACnC;AACA,gBAAIA,IAAI,CAACC,SAAL,CAAeC,MAAf,KAA0B,CAA9B,EAAiC;AACjC,gBAAMC,MAAM,GAAGT,MAAM,CAACU,kBAAP,CAA0BJ,IAAI,CAACC,SAAL,CAAe,CAAf,CAA1B,CAAf;AACA,gBAAI,CAACE,MAAM,CAACE,SAAP,EAAL,EAAyB;AACzB,gBAAIF,MAAM,CAACG,MAAP,OAAoB,IAAxB,EAA8B;AAC9B,gBAAMC,GAAG,GAAG,IAAI1B,eAAJ,CAAoB,SAApB,EAA+BmB,IAAI,CAACQ,MAAL,CAAYC,KAA3C,CAAZ;AACAF,YAAAA,GAAG,CAACG,GAAJ,GAAUV,IAAI,CAACU,GAAf;;AACA,gBAAIhB,MAAM,CAACiB,KAAP,CAAaC,OAAb,CAAqBC,YAArB,CAAkCX,MAAlC,GAA2C,CAA/C,EAAkD;AACjD,kBAAMY,IAAI,GACTpB,MAAM,CAACiB,KAAP,CAAaC,OAAb,CAAqBC,YAArB,CACCnB,MAAM,CAACiB,KAAP,CAAaC,OAAb,CAAqBC,YAArB,CAAkCX,MAAlC,GAA2C,CAD5C,CADD;AAIA,kBACCY,IAAI,CAACC,QAAL,IACAD,IAAI,CAACE,OADL,IAEAF,IAAI,CAACE,OAAL,CAAaC,OAAb,KAAyB,GAFzB,IAGAH,IAAI,CAACI,WAAL,KAAqB,GAHrB,IAIAJ,IAAI,CAACE,OAAL,CAAaG,SALd,EAOCzB,MAAM,CAACiB,KAAP,CAAaC,OAAb,CAAqBC,YAArB,CAAkCO,GAAlC;AACD;;AACD1B,YAAAA,MAAM,CAACiB,KAAP,CAAaC,OAAb,CAAqBS,aAArB,CAAmCd,GAAnC;AACA,mBAAO,IAAP;AACA,WA1BF;AA2BA,SApCF;AAqCA,OA9CF;AAgDA;;;;;;AAEFe,MAAM,CAACC,OAAP,GAAiBvC,mBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\nconst NullFactory = require(\"./NullFactory\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass CompatibilityPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler Webpack Compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"CompatibilityPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"CompatibilityPlugin\", (parser, parserOptions) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tparserOptions.browserify !== undefined &&\n\t\t\t\t\t\t\t!parserOptions.browserify\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\tparser.hooks.call\n\t\t\t\t\t\t\t.for(\"require\")\n\t\t\t\t\t\t\t.tap(\"CompatibilityPlugin\", expr => {\n\t\t\t\t\t\t\t\t// support for browserify style require delegator: \"require(o, !0)\"\n\t\t\t\t\t\t\t\tif (expr.arguments.length !== 2) return;\n\t\t\t\t\t\t\t\tconst second = parser.evaluateExpression(expr.arguments[1]);\n\t\t\t\t\t\t\t\tif (!second.isBoolean()) return;\n\t\t\t\t\t\t\t\tif (second.asBool() !== true) return;\n\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\"require\", expr.callee.range);\n\t\t\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\t\t\tif (parser.state.current.dependencies.length > 1) {\n\t\t\t\t\t\t\t\t\tconst last =\n\t\t\t\t\t\t\t\t\t\tparser.state.current.dependencies[\n\t\t\t\t\t\t\t\t\t\t\tparser.state.current.dependencies.length - 1\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tlast.critical &&\n\t\t\t\t\t\t\t\t\t\tlast.options &&\n\t\t\t\t\t\t\t\t\t\tlast.options.request === \".\" &&\n\t\t\t\t\t\t\t\t\t\tlast.userRequest === \".\" &&\n\t\t\t\t\t\t\t\t\t\tlast.options.recursive\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\tparser.state.current.dependencies.pop();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = CompatibilityPlugin;\n"]},"metadata":{},"sourceType":"script"}