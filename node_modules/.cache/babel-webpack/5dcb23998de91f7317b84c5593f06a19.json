{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Stats = require(\"./Stats\");\n\nvar optionOrFallback = function optionOrFallback(optionValue, fallbackValue) {\n  return optionValue !== undefined ? optionValue : fallbackValue;\n};\n\nvar MultiStats = /*#__PURE__*/function () {\n  function MultiStats(stats) {\n    _classCallCheck(this, MultiStats);\n\n    this.stats = stats;\n    this.hash = stats.map(function (stat) {\n      return stat.hash;\n    }).join(\"\");\n  }\n\n  _createClass(MultiStats, [{\n    key: \"hasErrors\",\n    value: function hasErrors() {\n      return this.stats.map(function (stat) {\n        return stat.hasErrors();\n      }).reduce(function (a, b) {\n        return a || b;\n      }, false);\n    }\n  }, {\n    key: \"hasWarnings\",\n    value: function hasWarnings() {\n      return this.stats.map(function (stat) {\n        return stat.hasWarnings();\n      }).reduce(function (a, b) {\n        return a || b;\n      }, false);\n    }\n  }, {\n    key: \"toJson\",\n    value: function toJson(options, forToString) {\n      if (typeof options === \"boolean\" || typeof options === \"string\") {\n        options = Stats.presetToOptions(options);\n      } else if (!options) {\n        options = {};\n      }\n\n      var jsons = this.stats.map(function (stat, idx) {\n        var childOptions = Stats.getChildOptions(options, idx);\n        var obj = stat.toJson(childOptions, forToString);\n        obj.name = stat.compilation && stat.compilation.name;\n        return obj;\n      });\n      var showVersion = options.version === undefined ? jsons.every(function (j) {\n        return j.version;\n      }) : options.version !== false;\n      var showHash = options.hash === undefined ? jsons.every(function (j) {\n        return j.hash;\n      }) : options.hash !== false;\n\n      if (showVersion) {\n        var _iterator = _createForOfIteratorHelper(jsons),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var j = _step.value;\n            delete j.version;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      var obj = {\n        errors: jsons.reduce(function (arr, j) {\n          return arr.concat(j.errors.map(function (msg) {\n            return \"(\".concat(j.name, \") \").concat(msg);\n          }));\n        }, []),\n        warnings: jsons.reduce(function (arr, j) {\n          return arr.concat(j.warnings.map(function (msg) {\n            return \"(\".concat(j.name, \") \").concat(msg);\n          }));\n        }, [])\n      };\n      if (showVersion) obj.version = require(\"../package.json\").version;\n      if (showHash) obj.hash = this.hash;\n      if (options.children !== false) obj.children = jsons;\n      return obj;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(options) {\n      if (typeof options === \"boolean\" || typeof options === \"string\") {\n        options = Stats.presetToOptions(options);\n      } else if (!options) {\n        options = {};\n      }\n\n      var useColors = optionOrFallback(options.colors, false);\n      var obj = this.toJson(options, true);\n      return Stats.jsonToString(obj, useColors);\n    }\n  }]);\n\n  return MultiStats;\n}();\n\nmodule.exports = MultiStats;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/MultiStats.js"],"names":["Stats","require","optionOrFallback","optionValue","fallbackValue","undefined","MultiStats","stats","hash","map","stat","join","hasErrors","reduce","a","b","hasWarnings","options","forToString","presetToOptions","jsons","idx","childOptions","getChildOptions","obj","toJson","name","compilation","showVersion","version","every","j","showHash","errors","arr","concat","msg","warnings","children","useColors","colors","jsonToString","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Stats = require(\"./Stats\");\n\nconst optionOrFallback = (optionValue, fallbackValue) =>\n\toptionValue !== undefined ? optionValue : fallbackValue;\n\nclass MultiStats {\n\tconstructor(stats) {\n\t\tthis.stats = stats;\n\t\tthis.hash = stats.map(stat => stat.hash).join(\"\");\n\t}\n\n\thasErrors() {\n\t\treturn this.stats\n\t\t\t.map(stat => stat.hasErrors())\n\t\t\t.reduce((a, b) => a || b, false);\n\t}\n\n\thasWarnings() {\n\t\treturn this.stats\n\t\t\t.map(stat => stat.hasWarnings())\n\t\t\t.reduce((a, b) => a || b, false);\n\t}\n\n\ttoJson(options, forToString) {\n\t\tif (typeof options === \"boolean\" || typeof options === \"string\") {\n\t\t\toptions = Stats.presetToOptions(options);\n\t\t} else if (!options) {\n\t\t\toptions = {};\n\t\t}\n\t\tconst jsons = this.stats.map((stat, idx) => {\n\t\t\tconst childOptions = Stats.getChildOptions(options, idx);\n\t\t\tconst obj = stat.toJson(childOptions, forToString);\n\t\t\tobj.name = stat.compilation && stat.compilation.name;\n\t\t\treturn obj;\n\t\t});\n\t\tconst showVersion =\n\t\t\toptions.version === undefined\n\t\t\t\t? jsons.every(j => j.version)\n\t\t\t\t: options.version !== false;\n\t\tconst showHash =\n\t\t\toptions.hash === undefined\n\t\t\t\t? jsons.every(j => j.hash)\n\t\t\t\t: options.hash !== false;\n\t\tif (showVersion) {\n\t\t\tfor (const j of jsons) {\n\t\t\t\tdelete j.version;\n\t\t\t}\n\t\t}\n\t\tconst obj = {\n\t\t\terrors: jsons.reduce((arr, j) => {\n\t\t\t\treturn arr.concat(\n\t\t\t\t\tj.errors.map(msg => {\n\t\t\t\t\t\treturn `(${j.name}) ${msg}`;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}, []),\n\t\t\twarnings: jsons.reduce((arr, j) => {\n\t\t\t\treturn arr.concat(\n\t\t\t\t\tj.warnings.map(msg => {\n\t\t\t\t\t\treturn `(${j.name}) ${msg}`;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}, [])\n\t\t};\n\t\tif (showVersion) obj.version = require(\"../package.json\").version;\n\t\tif (showHash) obj.hash = this.hash;\n\t\tif (options.children !== false) obj.children = jsons;\n\t\treturn obj;\n\t}\n\n\ttoString(options) {\n\t\tif (typeof options === \"boolean\" || typeof options === \"string\") {\n\t\t\toptions = Stats.presetToOptions(options);\n\t\t} else if (!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tconst useColors = optionOrFallback(options.colors, false);\n\n\t\tconst obj = this.toJson(options, true);\n\n\t\treturn Stats.jsonToString(obj, useColors);\n\t}\n}\n\nmodule.exports = MultiStats;\n"]},"metadata":{},"sourceType":"script"}