{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createWebpackInputHost = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar core_1 = require(\"@angular-devkit/core\"); // Host is used instead of ReadonlyHost due to most decorators only supporting Hosts\n\n\nfunction createWebpackInputHost(inputFileSystem) {\n  return core_1.virtualFs.createSyncHost({\n    write: function write() {\n      throw new Error('Not supported.');\n    },\n    delete: function _delete() {\n      throw new Error('Not supported.');\n    },\n    rename: function rename() {\n      throw new Error('Not supported.');\n    },\n    read: function read(path) {\n      var data = inputFileSystem.readFileSync(core_1.getSystemPath(path));\n      return new Uint8Array(data).buffer;\n    },\n    list: function list(path) {\n      // readdirSync exists but is not in the Webpack typings\n      var names = inputFileSystem.readdirSync(core_1.getSystemPath(path));\n      return names.map(function (name) {\n        return core_1.fragment(name);\n      });\n    },\n    exists: function exists(path) {\n      return !!this.stat(path);\n    },\n    isDirectory: function isDirectory(path) {\n      var _a, _b;\n\n      return (_b = (_a = this.stat(path)) === null || _a === void 0 ? void 0 : _a.isDirectory()) !== null && _b !== void 0 ? _b : false;\n    },\n    isFile: function isFile(path) {\n      var _a, _b;\n\n      return (_b = (_a = this.stat(path)) === null || _a === void 0 ? void 0 : _a.isFile()) !== null && _b !== void 0 ? _b : false;\n    },\n    stat: function stat(path) {\n      try {\n        return inputFileSystem.statSync(core_1.getSystemPath(path));\n      } catch (e) {\n        if (e.code === 'ENOENT') {\n          return null;\n        }\n\n        throw e;\n      }\n    }\n  });\n}\n\nexports.createWebpackInputHost = createWebpackInputHost;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@ngtools/webpack/src/webpack-input-host.js"],"names":["Object","defineProperty","exports","value","createWebpackInputHost","core_1","require","inputFileSystem","virtualFs","createSyncHost","write","Error","delete","rename","read","path","data","readFileSync","getSystemPath","Uint8Array","buffer","list","names","readdirSync","map","name","fragment","exists","stat","isDirectory","_a","_b","isFile","statSync","e","code"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,sBAAR,GAAiC,KAAK,CAAtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,sBAAD,CAAtB,C,CACA;;;AACA,SAASF,sBAAT,CAAgCG,eAAhC,EAAiD;AAC7C,SAAOF,MAAM,CAACG,SAAP,CAAiBC,cAAjB,CAAgC;AACnCC,IAAAA,KADmC,mBAC3B;AACJ,YAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AACH,KAHkC;AAInCC,IAAAA,MAJmC,qBAI1B;AACL,YAAM,IAAID,KAAJ,CAAU,gBAAV,CAAN;AACH,KANkC;AAOnCE,IAAAA,MAPmC,oBAO1B;AACL,YAAM,IAAIF,KAAJ,CAAU,gBAAV,CAAN;AACH,KATkC;AAUnCG,IAAAA,IAVmC,gBAU9BC,IAV8B,EAUxB;AACP,UAAMC,IAAI,GAAGT,eAAe,CAACU,YAAhB,CAA6BZ,MAAM,CAACa,aAAP,CAAqBH,IAArB,CAA7B,CAAb;AACA,aAAO,IAAII,UAAJ,CAAeH,IAAf,EAAqBI,MAA5B;AACH,KAbkC;AAcnCC,IAAAA,IAdmC,gBAc9BN,IAd8B,EAcxB;AACP;AACA,UAAMO,KAAK,GAAGf,eAAe,CAACgB,WAAhB,CAA4BlB,MAAM,CAACa,aAAP,CAAqBH,IAArB,CAA5B,CAAd;AACA,aAAOO,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD;AAAA,eAAUpB,MAAM,CAACqB,QAAP,CAAgBD,IAAhB,CAAV;AAAA,OAAV,CAAP;AACH,KAlBkC;AAmBnCE,IAAAA,MAnBmC,kBAmB5BZ,IAnB4B,EAmBtB;AACT,aAAO,CAAC,CAAC,KAAKa,IAAL,CAAUb,IAAV,CAAT;AACH,KArBkC;AAsBnCc,IAAAA,WAtBmC,uBAsBvBd,IAtBuB,EAsBjB;AACd,UAAIe,EAAJ,EAAQC,EAAR;;AACA,aAAO,CAACA,EAAE,GAAG,CAACD,EAAE,GAAG,KAAKF,IAAL,CAAUb,IAAV,CAAN,MAA2B,IAA3B,IAAmCe,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAACD,WAAH,EAAlE,MAAwF,IAAxF,IAAgGE,EAAE,KAAK,KAAK,CAA5G,GAAgHA,EAAhH,GAAqH,KAA5H;AACH,KAzBkC;AA0BnCC,IAAAA,MA1BmC,kBA0B5BjB,IA1B4B,EA0BtB;AACT,UAAIe,EAAJ,EAAQC,EAAR;;AACA,aAAO,CAACA,EAAE,GAAG,CAACD,EAAE,GAAG,KAAKF,IAAL,CAAUb,IAAV,CAAN,MAA2B,IAA3B,IAAmCe,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAACE,MAAH,EAAlE,MAAmF,IAAnF,IAA2FD,EAAE,KAAK,KAAK,CAAvG,GAA2GA,EAA3G,GAAgH,KAAvH;AACH,KA7BkC;AA8BnCH,IAAAA,IA9BmC,gBA8B9Bb,IA9B8B,EA8BxB;AACP,UAAI;AACA,eAAOR,eAAe,CAAC0B,QAAhB,CAAyB5B,MAAM,CAACa,aAAP,CAAqBH,IAArB,CAAzB,CAAP;AACH,OAFD,CAGA,OAAOmB,CAAP,EAAU;AACN,YAAIA,CAAC,CAACC,IAAF,KAAW,QAAf,EAAyB;AACrB,iBAAO,IAAP;AACH;;AACD,cAAMD,CAAN;AACH;AACJ;AAxCkC,GAAhC,CAAP;AA0CH;;AACDhC,OAAO,CAACE,sBAAR,GAAiCA,sBAAjC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createWebpackInputHost = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst core_1 = require(\"@angular-devkit/core\");\n// Host is used instead of ReadonlyHost due to most decorators only supporting Hosts\nfunction createWebpackInputHost(inputFileSystem) {\n    return core_1.virtualFs.createSyncHost({\n        write() {\n            throw new Error('Not supported.');\n        },\n        delete() {\n            throw new Error('Not supported.');\n        },\n        rename() {\n            throw new Error('Not supported.');\n        },\n        read(path) {\n            const data = inputFileSystem.readFileSync(core_1.getSystemPath(path));\n            return new Uint8Array(data).buffer;\n        },\n        list(path) {\n            // readdirSync exists but is not in the Webpack typings\n            const names = inputFileSystem.readdirSync(core_1.getSystemPath(path));\n            return names.map((name) => core_1.fragment(name));\n        },\n        exists(path) {\n            return !!this.stat(path);\n        },\n        isDirectory(path) {\n            var _a, _b;\n            return (_b = (_a = this.stat(path)) === null || _a === void 0 ? void 0 : _a.isDirectory()) !== null && _b !== void 0 ? _b : false;\n        },\n        isFile(path) {\n            var _a, _b;\n            return (_b = (_a = this.stat(path)) === null || _a === void 0 ? void 0 : _a.isFile()) !== null && _b !== void 0 ? _b : false;\n        },\n        stat(path) {\n            try {\n                return inputFileSystem.statSync(core_1.getSystemPath(path));\n            }\n            catch (e) {\n                if (e.code === 'ENOENT') {\n                    return null;\n                }\n                throw e;\n            }\n        },\n    });\n}\nexports.createWebpackInputHost = createWebpackInputHost;\n"]},"metadata":{},"sourceType":"script"}