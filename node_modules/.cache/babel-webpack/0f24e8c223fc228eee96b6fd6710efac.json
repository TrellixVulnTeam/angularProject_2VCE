{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar HarmonyImportDependency = require(\"../dependencies/HarmonyImportDependency\");\n\nvar ModuleHotAcceptDependency = require(\"../dependencies/ModuleHotAcceptDependency\");\n\nvar ModuleHotDeclineDependency = require(\"../dependencies/ModuleHotDeclineDependency\");\n\nvar ConcatenatedModule = require(\"./ConcatenatedModule\");\n\nvar HarmonyCompatibilityDependency = require(\"../dependencies/HarmonyCompatibilityDependency\");\n\nvar StackedSetMap = require(\"../util/StackedSetMap\");\n\nvar formatBailoutReason = function formatBailoutReason(msg) {\n  return \"ModuleConcatenation bailout: \" + msg;\n};\n\nvar ModuleConcatenationPlugin = /*#__PURE__*/function () {\n  function ModuleConcatenationPlugin(options) {\n    _classCallCheck(this, ModuleConcatenationPlugin);\n\n    if (typeof options !== \"object\") options = {};\n    this.options = options;\n  }\n\n  _createClass(ModuleConcatenationPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.compilation.tap(\"ModuleConcatenationPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n\n        var handler = function handler(parser, parserOptions) {\n          parser.hooks.call.for(\"eval\").tap(\"ModuleConcatenationPlugin\", function () {\n            // Because of variable renaming we can't use modules with eval.\n            parser.state.module.buildMeta.moduleConcatenationBailout = \"eval()\";\n          });\n        };\n\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"ModuleConcatenationPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"ModuleConcatenationPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"ModuleConcatenationPlugin\", handler);\n        var bailoutReasonMap = new Map();\n\n        var setBailoutReason = function setBailoutReason(module, reason) {\n          bailoutReasonMap.set(module, reason);\n          module.optimizationBailout.push(typeof reason === \"function\" ? function (rs) {\n            return formatBailoutReason(reason(rs));\n          } : formatBailoutReason(reason));\n        };\n\n        var getBailoutReason = function getBailoutReason(module, requestShortener) {\n          var reason = bailoutReasonMap.get(module);\n          if (typeof reason === \"function\") return reason(requestShortener);\n          return reason;\n        };\n\n        compilation.hooks.optimizeChunkModules.tap(\"ModuleConcatenationPlugin\", function (allChunks, modules) {\n          var relevantModules = [];\n          var possibleInners = new Set();\n\n          var _iterator = _createForOfIteratorHelper(modules),\n              _step;\n\n          try {\n            var _loop2 = function _loop2() {\n              var module = _step.value;\n\n              // Only harmony modules are valid for optimization\n              if (!module.buildMeta || module.buildMeta.exportsType !== \"namespace\" || !module.dependencies.some(function (d) {\n                return d instanceof HarmonyCompatibilityDependency;\n              })) {\n                setBailoutReason(module, \"Module is not an ECMAScript module\");\n                return \"continue\";\n              } // Some expressions are not compatible with module concatenation\n              // because they may produce unexpected results. The plugin bails out\n              // if some were detected upfront.\n\n\n              if (module.buildMeta && module.buildMeta.moduleConcatenationBailout) {\n                setBailoutReason(module, \"Module uses \".concat(module.buildMeta.moduleConcatenationBailout));\n                return \"continue\";\n              } // Exports must be known (and not dynamic)\n\n\n              if (!Array.isArray(module.buildMeta.providedExports)) {\n                setBailoutReason(module, \"Module exports are unknown\");\n                return \"continue\";\n              } // Using dependency variables is not possible as this wraps the code in a function\n\n\n              if (module.variables.length > 0) {\n                setBailoutReason(module, \"Module uses injected variables (\".concat(module.variables.map(function (v) {\n                  return v.name;\n                }).join(\", \"), \")\"));\n                return \"continue\";\n              } // Hot Module Replacement need it's own module to work correctly\n\n\n              if (module.dependencies.some(function (dep) {\n                return dep instanceof ModuleHotAcceptDependency || dep instanceof ModuleHotDeclineDependency;\n              })) {\n                setBailoutReason(module, \"Module uses Hot Module Replacement\");\n                return \"continue\";\n              }\n\n              relevantModules.push(module); // Module must not be the entry points\n\n              if (module.isEntryModule()) {\n                setBailoutReason(module, \"Module is an entry point\");\n                return \"continue\";\n              } // Module must be in any chunk (we don't want to do useless work)\n\n\n              if (module.getNumberOfChunks() === 0) {\n                setBailoutReason(module, \"Module is not in any chunk\");\n                return \"continue\";\n              } // Module must only be used by Harmony Imports\n\n\n              var nonHarmonyReasons = module.reasons.filter(function (reason) {\n                return !reason.dependency || !(reason.dependency instanceof HarmonyImportDependency);\n              });\n\n              if (nonHarmonyReasons.length > 0) {\n                var importingModules = new Set(nonHarmonyReasons.map(function (r) {\n                  return r.module;\n                }).filter(Boolean));\n                var importingExplanations = new Set(nonHarmonyReasons.map(function (r) {\n                  return r.explanation;\n                }).filter(Boolean));\n                var importingModuleTypes = new Map(Array.from(importingModules).map(function (m) {\n                  return (\n                    /** @type {[string, Set]} */\n                    [m, new Set(nonHarmonyReasons.filter(function (r) {\n                      return r.module === m;\n                    }).map(function (r) {\n                      return r.dependency.type;\n                    }).sort())]\n                  );\n                }));\n                setBailoutReason(module, function (requestShortener) {\n                  var names = Array.from(importingModules).map(function (m) {\n                    return \"\".concat(m.readableIdentifier(requestShortener), \" (referenced with \").concat(Array.from(importingModuleTypes.get(m)).join(\", \"), \")\");\n                  }).sort();\n                  var explanations = Array.from(importingExplanations).sort();\n\n                  if (names.length > 0 && explanations.length === 0) {\n                    return \"Module is referenced from these modules with unsupported syntax: \".concat(names.join(\", \"));\n                  } else if (names.length === 0 && explanations.length > 0) {\n                    return \"Module is referenced by: \".concat(explanations.join(\", \"));\n                  } else if (names.length > 0 && explanations.length > 0) {\n                    return \"Module is referenced from these modules with unsupported syntax: \".concat(names.join(\", \"), \" and by: \").concat(explanations.join(\", \"));\n                  } else {\n                    return \"Module is referenced in a unsupported way\";\n                  }\n                });\n                return \"continue\";\n              }\n\n              possibleInners.add(module);\n            };\n\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _ret = _loop2();\n\n              if (_ret === \"continue\") continue;\n            } // sort by depth\n            // modules with lower depth are more likely suited as roots\n            // this improves performance, because modules already selected as inner are skipped\n\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          relevantModules.sort(function (a, b) {\n            return a.depth - b.depth;\n          });\n          var concatConfigurations = [];\n          var usedAsInner = new Set();\n\n          for (var _i = 0, _relevantModules = relevantModules; _i < _relevantModules.length; _i++) {\n            var currentRoot = _relevantModules[_i];\n            // when used by another configuration as inner:\n            // the other configuration is better and we can skip this one\n            if (usedAsInner.has(currentRoot)) continue; // create a configuration with the root\n\n            var currentConfiguration = new ConcatConfiguration(currentRoot); // cache failures to add modules\n\n            var failureCache = new Map(); // try to add all imports\n\n            var _iterator2 = _createForOfIteratorHelper(_this._getImports(compilation, currentRoot)),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var imp = _step2.value;\n\n                var problem = _this._tryToAdd(compilation, currentConfiguration, imp, possibleInners, failureCache);\n\n                if (problem) {\n                  failureCache.set(imp, problem);\n                  currentConfiguration.addWarning(imp, problem);\n                }\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n\n            if (!currentConfiguration.isEmpty()) {\n              concatConfigurations.push(currentConfiguration);\n\n              var _iterator3 = _createForOfIteratorHelper(currentConfiguration.getModules()),\n                  _step3;\n\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var _module = _step3.value;\n\n                  if (_module !== currentConfiguration.rootModule) {\n                    usedAsInner.add(_module);\n                  }\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n            }\n          } // HACK: Sort configurations by length and start with the longest one\n          // to get the biggers groups possible. Used modules are marked with usedModules\n          // TODO: Allow to reuse existing configuration while trying to add dependencies.\n          // This would improve performance. O(n^2) -> O(n)\n\n\n          concatConfigurations.sort(function (a, b) {\n            return b.modules.size - a.modules.size;\n          });\n          var usedModules = new Set();\n\n          for (var _i2 = 0, _concatConfigurations = concatConfigurations; _i2 < _concatConfigurations.length; _i2++) {\n            var concatConfiguration = _concatConfigurations[_i2];\n            if (usedModules.has(concatConfiguration.rootModule)) continue;\n\n            var _modules = concatConfiguration.getModules();\n\n            var rootModule = concatConfiguration.rootModule;\n            var newModule = new ConcatenatedModule(rootModule, Array.from(_modules), ConcatenatedModule.createConcatenationList(rootModule, _modules, compilation));\n\n            var _iterator4 = _createForOfIteratorHelper(concatConfiguration.getWarningsSorted()),\n                _step4;\n\n            try {\n              var _loop = function _loop() {\n                var warning = _step4.value;\n                newModule.optimizationBailout.push(function (requestShortener) {\n                  var reason = getBailoutReason(warning[0], requestShortener);\n                  var reasonWithPrefix = reason ? \" (<- \".concat(reason, \")\") : \"\";\n\n                  if (warning[0] === warning[1]) {\n                    return formatBailoutReason(\"Cannot concat with \".concat(warning[0].readableIdentifier(requestShortener)).concat(reasonWithPrefix));\n                  } else {\n                    return formatBailoutReason(\"Cannot concat with \".concat(warning[0].readableIdentifier(requestShortener), \" because of \").concat(warning[1].readableIdentifier(requestShortener)).concat(reasonWithPrefix));\n                  }\n                });\n              };\n\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                _loop();\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n\n            var chunks = concatConfiguration.rootModule.getChunks();\n\n            var _iterator5 = _createForOfIteratorHelper(_modules),\n                _step5;\n\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                var m = _step5.value;\n                usedModules.add(m);\n\n                var _iterator9 = _createForOfIteratorHelper(chunks),\n                    _step9;\n\n                try {\n                  for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                    var chunk = _step9.value;\n                    chunk.removeModule(m);\n                  }\n                } catch (err) {\n                  _iterator9.e(err);\n                } finally {\n                  _iterator9.f();\n                }\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n\n            var _iterator6 = _createForOfIteratorHelper(chunks),\n                _step6;\n\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                var _chunk = _step6.value;\n\n                _chunk.addModule(newModule);\n\n                newModule.addChunk(_chunk);\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n\n            var _iterator7 = _createForOfIteratorHelper(allChunks),\n                _step7;\n\n            try {\n              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                var _chunk2 = _step7.value;\n\n                if (_chunk2.entryModule === concatConfiguration.rootModule) {\n                  _chunk2.entryModule = newModule;\n                }\n              }\n            } catch (err) {\n              _iterator7.e(err);\n            } finally {\n              _iterator7.f();\n            }\n\n            compilation.modules.push(newModule);\n\n            var _iterator8 = _createForOfIteratorHelper(newModule.reasons),\n                _step8;\n\n            try {\n              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                var _reason = _step8.value;\n                if (_reason.dependency.module === concatConfiguration.rootModule) _reason.dependency.module = newModule;\n                if (_reason.dependency.redirectedModule === concatConfiguration.rootModule) _reason.dependency.redirectedModule = newModule;\n              } // TODO: remove when LTS node version contains fixed v8 version\n              // @see https://github.com/webpack/webpack/pull/6613\n              // Turbofan does not correctly inline for-of loops with polymorphic input arrays.\n              // Work around issue by using a standard for loop and assigning dep.module.reasons\n\n            } catch (err) {\n              _iterator8.e(err);\n            } finally {\n              _iterator8.f();\n            }\n\n            for (var i = 0; i < newModule.dependencies.length; i++) {\n              var dep = newModule.dependencies[i];\n\n              if (dep.module) {\n                var reasons = dep.module.reasons;\n\n                for (var j = 0; j < reasons.length; j++) {\n                  var reason = reasons[j];\n\n                  if (reason.dependency === dep) {\n                    reason.module = newModule;\n                  }\n                }\n              }\n            }\n          }\n\n          compilation.modules = compilation.modules.filter(function (m) {\n            return !usedModules.has(m);\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_getImports\",\n    value: function _getImports(compilation, module) {\n      return new Set(module.dependencies // Get reference info only for harmony Dependencies\n      .map(function (dep) {\n        if (!(dep instanceof HarmonyImportDependency)) return null;\n        if (!compilation) return dep.getReference();\n        return compilation.getDependencyReference(module, dep);\n      }) // Reference is valid and has a module\n      // Dependencies are simple enough to concat them\n      .filter(function (ref) {\n        return ref && ref.module && (Array.isArray(ref.importedNames) || Array.isArray(ref.module.buildMeta.providedExports));\n      }) // Take the imported module\n      .map(function (ref) {\n        return ref.module;\n      }));\n    }\n  }, {\n    key: \"_tryToAdd\",\n    value: function _tryToAdd(compilation, config, module, possibleModules, failureCache) {\n      var cacheEntry = failureCache.get(module);\n\n      if (cacheEntry) {\n        return cacheEntry;\n      } // Already added?\n\n\n      if (config.has(module)) {\n        return null;\n      } // Not possible to add?\n\n\n      if (!possibleModules.has(module)) {\n        failureCache.set(module, module); // cache failures for performance\n\n        return module;\n      } // module must be in the same chunks\n\n\n      if (!config.rootModule.hasEqualsChunks(module)) {\n        failureCache.set(module, module); // cache failures for performance\n\n        return module;\n      } // Clone config to make experimental changes\n\n\n      var testConfig = config.clone(); // Add the module\n\n      testConfig.add(module); // Every module which depends on the added module must be in the configuration too.\n\n      var _iterator10 = _createForOfIteratorHelper(module.reasons),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var reason = _step10.value;\n          // Modules that are not used can be ignored\n          if (reason.module.factoryMeta.sideEffectFree && reason.module.used === false) continue;\n\n          var problem = this._tryToAdd(compilation, testConfig, reason.module, possibleModules, failureCache);\n\n          if (problem) {\n            failureCache.set(module, problem); // cache failures for performance\n\n            return problem;\n          }\n        } // Commit experimental changes\n\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n\n      config.set(testConfig); // Eagerly try to add imports too if possible\n\n      var _iterator11 = _createForOfIteratorHelper(this._getImports(compilation, module)),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var imp = _step11.value;\n\n          var _problem = this._tryToAdd(compilation, config, imp, possibleModules, failureCache);\n\n          if (_problem) {\n            config.addWarning(imp, _problem);\n          }\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n\n      return null;\n    }\n  }]);\n\n  return ModuleConcatenationPlugin;\n}();\n\nvar ConcatConfiguration = /*#__PURE__*/function () {\n  function ConcatConfiguration(rootModule, cloneFrom) {\n    _classCallCheck(this, ConcatConfiguration);\n\n    this.rootModule = rootModule;\n\n    if (cloneFrom) {\n      this.modules = cloneFrom.modules.createChild(5);\n      this.warnings = cloneFrom.warnings.createChild(5);\n    } else {\n      this.modules = new StackedSetMap();\n      this.modules.add(rootModule);\n      this.warnings = new StackedSetMap();\n    }\n  }\n\n  _createClass(ConcatConfiguration, [{\n    key: \"add\",\n    value: function add(module) {\n      this.modules.add(module);\n    }\n  }, {\n    key: \"has\",\n    value: function has(module) {\n      return this.modules.has(module);\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.modules.size === 1;\n    }\n  }, {\n    key: \"addWarning\",\n    value: function addWarning(module, problem) {\n      this.warnings.set(module, problem);\n    }\n  }, {\n    key: \"getWarningsSorted\",\n    value: function getWarningsSorted() {\n      return new Map(this.warnings.asPairArray().sort(function (a, b) {\n        var ai = a[0].identifier();\n        var bi = b[0].identifier();\n        if (ai < bi) return -1;\n        if (ai > bi) return 1;\n        return 0;\n      }));\n    }\n  }, {\n    key: \"getModules\",\n    value: function getModules() {\n      return this.modules.asSet();\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ConcatConfiguration(this.rootModule, this);\n    }\n  }, {\n    key: \"set\",\n    value: function set(config) {\n      this.rootModule = config.rootModule;\n      this.modules = config.modules;\n      this.warnings = config.warnings;\n    }\n  }]);\n\n  return ConcatConfiguration;\n}();\n\nmodule.exports = ModuleConcatenationPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/optimize/ModuleConcatenationPlugin.js"],"names":["HarmonyImportDependency","require","ModuleHotAcceptDependency","ModuleHotDeclineDependency","ConcatenatedModule","HarmonyCompatibilityDependency","StackedSetMap","formatBailoutReason","msg","ModuleConcatenationPlugin","options","compiler","hooks","compilation","tap","normalModuleFactory","handler","parser","parserOptions","call","for","state","module","buildMeta","moduleConcatenationBailout","bailoutReasonMap","Map","setBailoutReason","reason","set","optimizationBailout","push","rs","getBailoutReason","requestShortener","get","optimizeChunkModules","allChunks","modules","relevantModules","possibleInners","Set","exportsType","dependencies","some","d","Array","isArray","providedExports","variables","length","map","v","name","join","dep","isEntryModule","getNumberOfChunks","nonHarmonyReasons","reasons","filter","dependency","importingModules","r","Boolean","importingExplanations","explanation","importingModuleTypes","from","m","type","sort","names","readableIdentifier","explanations","add","a","b","depth","concatConfigurations","usedAsInner","currentRoot","has","currentConfiguration","ConcatConfiguration","failureCache","_getImports","imp","problem","_tryToAdd","addWarning","isEmpty","getModules","rootModule","size","usedModules","concatConfiguration","newModule","createConcatenationList","getWarningsSorted","warning","reasonWithPrefix","chunks","getChunks","chunk","removeModule","addModule","addChunk","entryModule","redirectedModule","i","j","getReference","getDependencyReference","ref","importedNames","config","possibleModules","cacheEntry","hasEqualsChunks","testConfig","clone","factoryMeta","sideEffectFree","used","cloneFrom","createChild","warnings","asPairArray","ai","identifier","bi","asSet","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst HarmonyImportDependency = require(\"../dependencies/HarmonyImportDependency\");\nconst ModuleHotAcceptDependency = require(\"../dependencies/ModuleHotAcceptDependency\");\nconst ModuleHotDeclineDependency = require(\"../dependencies/ModuleHotDeclineDependency\");\nconst ConcatenatedModule = require(\"./ConcatenatedModule\");\nconst HarmonyCompatibilityDependency = require(\"../dependencies/HarmonyCompatibilityDependency\");\nconst StackedSetMap = require(\"../util/StackedSetMap\");\n\nconst formatBailoutReason = msg => {\n\treturn \"ModuleConcatenation bailout: \" + msg;\n};\n\nclass ModuleConcatenationPlugin {\n\tconstructor(options) {\n\t\tif (typeof options !== \"object\") options = {};\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ModuleConcatenationPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tparser.hooks.call.for(\"eval\").tap(\"ModuleConcatenationPlugin\", () => {\n\t\t\t\t\t\t// Because of variable renaming we can't use modules with eval.\n\t\t\t\t\t\tparser.state.module.buildMeta.moduleConcatenationBailout = \"eval()\";\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ModuleConcatenationPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"ModuleConcatenationPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"ModuleConcatenationPlugin\", handler);\n\n\t\t\t\tconst bailoutReasonMap = new Map();\n\n\t\t\t\tconst setBailoutReason = (module, reason) => {\n\t\t\t\t\tbailoutReasonMap.set(module, reason);\n\t\t\t\t\tmodule.optimizationBailout.push(\n\t\t\t\t\t\ttypeof reason === \"function\"\n\t\t\t\t\t\t\t? rs => formatBailoutReason(reason(rs))\n\t\t\t\t\t\t\t: formatBailoutReason(reason)\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tconst getBailoutReason = (module, requestShortener) => {\n\t\t\t\t\tconst reason = bailoutReasonMap.get(module);\n\t\t\t\t\tif (typeof reason === \"function\") return reason(requestShortener);\n\t\t\t\t\treturn reason;\n\t\t\t\t};\n\n\t\t\t\tcompilation.hooks.optimizeChunkModules.tap(\n\t\t\t\t\t\"ModuleConcatenationPlugin\",\n\t\t\t\t\t(allChunks, modules) => {\n\t\t\t\t\t\tconst relevantModules = [];\n\t\t\t\t\t\tconst possibleInners = new Set();\n\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\t// Only harmony modules are valid for optimization\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!module.buildMeta ||\n\t\t\t\t\t\t\t\tmodule.buildMeta.exportsType !== \"namespace\" ||\n\t\t\t\t\t\t\t\t!module.dependencies.some(\n\t\t\t\t\t\t\t\t\td => d instanceof HarmonyCompatibilityDependency\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsetBailoutReason(module, \"Module is not an ECMAScript module\");\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Some expressions are not compatible with module concatenation\n\t\t\t\t\t\t\t// because they may produce unexpected results. The plugin bails out\n\t\t\t\t\t\t\t// if some were detected upfront.\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tmodule.buildMeta &&\n\t\t\t\t\t\t\t\tmodule.buildMeta.moduleConcatenationBailout\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsetBailoutReason(\n\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\t`Module uses ${module.buildMeta.moduleConcatenationBailout}`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Exports must be known (and not dynamic)\n\t\t\t\t\t\t\tif (!Array.isArray(module.buildMeta.providedExports)) {\n\t\t\t\t\t\t\t\tsetBailoutReason(module, \"Module exports are unknown\");\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Using dependency variables is not possible as this wraps the code in a function\n\t\t\t\t\t\t\tif (module.variables.length > 0) {\n\t\t\t\t\t\t\t\tsetBailoutReason(\n\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\t`Module uses injected variables (${module.variables\n\t\t\t\t\t\t\t\t\t\t.map(v => v.name)\n\t\t\t\t\t\t\t\t\t\t.join(\", \")})`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Hot Module Replacement need it's own module to work correctly\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tmodule.dependencies.some(\n\t\t\t\t\t\t\t\t\tdep =>\n\t\t\t\t\t\t\t\t\t\tdep instanceof ModuleHotAcceptDependency ||\n\t\t\t\t\t\t\t\t\t\tdep instanceof ModuleHotDeclineDependency\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsetBailoutReason(module, \"Module uses Hot Module Replacement\");\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\trelevantModules.push(module);\n\n\t\t\t\t\t\t\t// Module must not be the entry points\n\t\t\t\t\t\t\tif (module.isEntryModule()) {\n\t\t\t\t\t\t\t\tsetBailoutReason(module, \"Module is an entry point\");\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Module must be in any chunk (we don't want to do useless work)\n\t\t\t\t\t\t\tif (module.getNumberOfChunks() === 0) {\n\t\t\t\t\t\t\t\tsetBailoutReason(module, \"Module is not in any chunk\");\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Module must only be used by Harmony Imports\n\t\t\t\t\t\t\tconst nonHarmonyReasons = module.reasons.filter(\n\t\t\t\t\t\t\t\treason =>\n\t\t\t\t\t\t\t\t\t!reason.dependency ||\n\t\t\t\t\t\t\t\t\t!(reason.dependency instanceof HarmonyImportDependency)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (nonHarmonyReasons.length > 0) {\n\t\t\t\t\t\t\t\tconst importingModules = new Set(\n\t\t\t\t\t\t\t\t\tnonHarmonyReasons.map(r => r.module).filter(Boolean)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst importingExplanations = new Set(\n\t\t\t\t\t\t\t\t\tnonHarmonyReasons.map(r => r.explanation).filter(Boolean)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst importingModuleTypes = new Map(\n\t\t\t\t\t\t\t\t\tArray.from(importingModules).map(\n\t\t\t\t\t\t\t\t\t\tm => /** @type {[string, Set]} */ ([\n\t\t\t\t\t\t\t\t\t\t\tm,\n\t\t\t\t\t\t\t\t\t\t\tnew Set(\n\t\t\t\t\t\t\t\t\t\t\t\tnonHarmonyReasons\n\t\t\t\t\t\t\t\t\t\t\t\t\t.filter(r => r.module === m)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map(r => r.dependency.type)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.sort()\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetBailoutReason(module, requestShortener => {\n\t\t\t\t\t\t\t\t\tconst names = Array.from(importingModules)\n\t\t\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t\t\tm =>\n\t\t\t\t\t\t\t\t\t\t\t\t`${m.readableIdentifier(\n\t\t\t\t\t\t\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t\t\t\t\t\t\t)} (referenced with ${Array.from(\n\t\t\t\t\t\t\t\t\t\t\t\t\timportingModuleTypes.get(m)\n\t\t\t\t\t\t\t\t\t\t\t\t).join(\", \")})`\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t.sort();\n\t\t\t\t\t\t\t\t\tconst explanations = Array.from(importingExplanations).sort();\n\t\t\t\t\t\t\t\t\tif (names.length > 0 && explanations.length === 0) {\n\t\t\t\t\t\t\t\t\t\treturn `Module is referenced from these modules with unsupported syntax: ${names.join(\n\t\t\t\t\t\t\t\t\t\t\t\", \"\n\t\t\t\t\t\t\t\t\t\t)}`;\n\t\t\t\t\t\t\t\t\t} else if (names.length === 0 && explanations.length > 0) {\n\t\t\t\t\t\t\t\t\t\treturn `Module is referenced by: ${explanations.join(\n\t\t\t\t\t\t\t\t\t\t\t\", \"\n\t\t\t\t\t\t\t\t\t\t)}`;\n\t\t\t\t\t\t\t\t\t} else if (names.length > 0 && explanations.length > 0) {\n\t\t\t\t\t\t\t\t\t\treturn `Module is referenced from these modules with unsupported syntax: ${names.join(\n\t\t\t\t\t\t\t\t\t\t\t\", \"\n\t\t\t\t\t\t\t\t\t\t)} and by: ${explanations.join(\", \")}`;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn \"Module is referenced in a unsupported way\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpossibleInners.add(module);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// sort by depth\n\t\t\t\t\t\t// modules with lower depth are more likely suited as roots\n\t\t\t\t\t\t// this improves performance, because modules already selected as inner are skipped\n\t\t\t\t\t\trelevantModules.sort((a, b) => {\n\t\t\t\t\t\t\treturn a.depth - b.depth;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst concatConfigurations = [];\n\t\t\t\t\t\tconst usedAsInner = new Set();\n\t\t\t\t\t\tfor (const currentRoot of relevantModules) {\n\t\t\t\t\t\t\t// when used by another configuration as inner:\n\t\t\t\t\t\t\t// the other configuration is better and we can skip this one\n\t\t\t\t\t\t\tif (usedAsInner.has(currentRoot)) continue;\n\n\t\t\t\t\t\t\t// create a configuration with the root\n\t\t\t\t\t\t\tconst currentConfiguration = new ConcatConfiguration(currentRoot);\n\n\t\t\t\t\t\t\t// cache failures to add modules\n\t\t\t\t\t\t\tconst failureCache = new Map();\n\n\t\t\t\t\t\t\t// try to add all imports\n\t\t\t\t\t\t\tfor (const imp of this._getImports(compilation, currentRoot)) {\n\t\t\t\t\t\t\t\tconst problem = this._tryToAdd(\n\t\t\t\t\t\t\t\t\tcompilation,\n\t\t\t\t\t\t\t\t\tcurrentConfiguration,\n\t\t\t\t\t\t\t\t\timp,\n\t\t\t\t\t\t\t\t\tpossibleInners,\n\t\t\t\t\t\t\t\t\tfailureCache\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (problem) {\n\t\t\t\t\t\t\t\t\tfailureCache.set(imp, problem);\n\t\t\t\t\t\t\t\t\tcurrentConfiguration.addWarning(imp, problem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!currentConfiguration.isEmpty()) {\n\t\t\t\t\t\t\t\tconcatConfigurations.push(currentConfiguration);\n\t\t\t\t\t\t\t\tfor (const module of currentConfiguration.getModules()) {\n\t\t\t\t\t\t\t\t\tif (module !== currentConfiguration.rootModule) {\n\t\t\t\t\t\t\t\t\t\tusedAsInner.add(module);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// HACK: Sort configurations by length and start with the longest one\n\t\t\t\t\t\t// to get the biggers groups possible. Used modules are marked with usedModules\n\t\t\t\t\t\t// TODO: Allow to reuse existing configuration while trying to add dependencies.\n\t\t\t\t\t\t// This would improve performance. O(n^2) -> O(n)\n\t\t\t\t\t\tconcatConfigurations.sort((a, b) => {\n\t\t\t\t\t\t\treturn b.modules.size - a.modules.size;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst usedModules = new Set();\n\t\t\t\t\t\tfor (const concatConfiguration of concatConfigurations) {\n\t\t\t\t\t\t\tif (usedModules.has(concatConfiguration.rootModule)) continue;\n\t\t\t\t\t\t\tconst modules = concatConfiguration.getModules();\n\t\t\t\t\t\t\tconst rootModule = concatConfiguration.rootModule;\n\t\t\t\t\t\t\tconst newModule = new ConcatenatedModule(\n\t\t\t\t\t\t\t\trootModule,\n\t\t\t\t\t\t\t\tArray.from(modules),\n\t\t\t\t\t\t\t\tConcatenatedModule.createConcatenationList(\n\t\t\t\t\t\t\t\t\trootModule,\n\t\t\t\t\t\t\t\t\tmodules,\n\t\t\t\t\t\t\t\t\tcompilation\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tfor (const warning of concatConfiguration.getWarningsSorted()) {\n\t\t\t\t\t\t\t\tnewModule.optimizationBailout.push(requestShortener => {\n\t\t\t\t\t\t\t\t\tconst reason = getBailoutReason(warning[0], requestShortener);\n\t\t\t\t\t\t\t\t\tconst reasonWithPrefix = reason ? ` (<- ${reason})` : \"\";\n\t\t\t\t\t\t\t\t\tif (warning[0] === warning[1]) {\n\t\t\t\t\t\t\t\t\t\treturn formatBailoutReason(\n\t\t\t\t\t\t\t\t\t\t\t`Cannot concat with ${warning[0].readableIdentifier(\n\t\t\t\t\t\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t\t\t\t\t\t)}${reasonWithPrefix}`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn formatBailoutReason(\n\t\t\t\t\t\t\t\t\t\t\t`Cannot concat with ${warning[0].readableIdentifier(\n\t\t\t\t\t\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t\t\t\t\t\t)} because of ${warning[1].readableIdentifier(\n\t\t\t\t\t\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t\t\t\t\t\t)}${reasonWithPrefix}`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst chunks = concatConfiguration.rootModule.getChunks();\n\t\t\t\t\t\t\tfor (const m of modules) {\n\t\t\t\t\t\t\t\tusedModules.add(m);\n\t\t\t\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\t\t\t\tchunk.removeModule(m);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\t\t\tchunk.addModule(newModule);\n\t\t\t\t\t\t\t\tnewModule.addChunk(chunk);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (const chunk of allChunks) {\n\t\t\t\t\t\t\t\tif (chunk.entryModule === concatConfiguration.rootModule) {\n\t\t\t\t\t\t\t\t\tchunk.entryModule = newModule;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcompilation.modules.push(newModule);\n\t\t\t\t\t\t\tfor (const reason of newModule.reasons) {\n\t\t\t\t\t\t\t\tif (reason.dependency.module === concatConfiguration.rootModule)\n\t\t\t\t\t\t\t\t\treason.dependency.module = newModule;\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\treason.dependency.redirectedModule ===\n\t\t\t\t\t\t\t\t\tconcatConfiguration.rootModule\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\treason.dependency.redirectedModule = newModule;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// TODO: remove when LTS node version contains fixed v8 version\n\t\t\t\t\t\t\t// @see https://github.com/webpack/webpack/pull/6613\n\t\t\t\t\t\t\t// Turbofan does not correctly inline for-of loops with polymorphic input arrays.\n\t\t\t\t\t\t\t// Work around issue by using a standard for loop and assigning dep.module.reasons\n\t\t\t\t\t\t\tfor (let i = 0; i < newModule.dependencies.length; i++) {\n\t\t\t\t\t\t\t\tlet dep = newModule.dependencies[i];\n\t\t\t\t\t\t\t\tif (dep.module) {\n\t\t\t\t\t\t\t\t\tlet reasons = dep.module.reasons;\n\t\t\t\t\t\t\t\t\tfor (let j = 0; j < reasons.length; j++) {\n\t\t\t\t\t\t\t\t\t\tlet reason = reasons[j];\n\t\t\t\t\t\t\t\t\t\tif (reason.dependency === dep) {\n\t\t\t\t\t\t\t\t\t\t\treason.module = newModule;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcompilation.modules = compilation.modules.filter(\n\t\t\t\t\t\t\tm => !usedModules.has(m)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n\n\t_getImports(compilation, module) {\n\t\treturn new Set(\n\t\t\tmodule.dependencies\n\n\t\t\t\t// Get reference info only for harmony Dependencies\n\t\t\t\t.map(dep => {\n\t\t\t\t\tif (!(dep instanceof HarmonyImportDependency)) return null;\n\t\t\t\t\tif (!compilation) return dep.getReference();\n\t\t\t\t\treturn compilation.getDependencyReference(module, dep);\n\t\t\t\t})\n\n\t\t\t\t// Reference is valid and has a module\n\t\t\t\t// Dependencies are simple enough to concat them\n\t\t\t\t.filter(\n\t\t\t\t\tref =>\n\t\t\t\t\t\tref &&\n\t\t\t\t\t\tref.module &&\n\t\t\t\t\t\t(Array.isArray(ref.importedNames) ||\n\t\t\t\t\t\t\tArray.isArray(ref.module.buildMeta.providedExports))\n\t\t\t\t)\n\n\t\t\t\t// Take the imported module\n\t\t\t\t.map(ref => ref.module)\n\t\t);\n\t}\n\n\t_tryToAdd(compilation, config, module, possibleModules, failureCache) {\n\t\tconst cacheEntry = failureCache.get(module);\n\t\tif (cacheEntry) {\n\t\t\treturn cacheEntry;\n\t\t}\n\n\t\t// Already added?\n\t\tif (config.has(module)) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Not possible to add?\n\t\tif (!possibleModules.has(module)) {\n\t\t\tfailureCache.set(module, module); // cache failures for performance\n\t\t\treturn module;\n\t\t}\n\n\t\t// module must be in the same chunks\n\t\tif (!config.rootModule.hasEqualsChunks(module)) {\n\t\t\tfailureCache.set(module, module); // cache failures for performance\n\t\t\treturn module;\n\t\t}\n\n\t\t// Clone config to make experimental changes\n\t\tconst testConfig = config.clone();\n\n\t\t// Add the module\n\t\ttestConfig.add(module);\n\n\t\t// Every module which depends on the added module must be in the configuration too.\n\t\tfor (const reason of module.reasons) {\n\t\t\t// Modules that are not used can be ignored\n\t\t\tif (\n\t\t\t\treason.module.factoryMeta.sideEffectFree &&\n\t\t\t\treason.module.used === false\n\t\t\t)\n\t\t\t\tcontinue;\n\n\t\t\tconst problem = this._tryToAdd(\n\t\t\t\tcompilation,\n\t\t\t\ttestConfig,\n\t\t\t\treason.module,\n\t\t\t\tpossibleModules,\n\t\t\t\tfailureCache\n\t\t\t);\n\t\t\tif (problem) {\n\t\t\t\tfailureCache.set(module, problem); // cache failures for performance\n\t\t\t\treturn problem;\n\t\t\t}\n\t\t}\n\n\t\t// Commit experimental changes\n\t\tconfig.set(testConfig);\n\n\t\t// Eagerly try to add imports too if possible\n\t\tfor (const imp of this._getImports(compilation, module)) {\n\t\t\tconst problem = this._tryToAdd(\n\t\t\t\tcompilation,\n\t\t\t\tconfig,\n\t\t\t\timp,\n\t\t\t\tpossibleModules,\n\t\t\t\tfailureCache\n\t\t\t);\n\t\t\tif (problem) {\n\t\t\t\tconfig.addWarning(imp, problem);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nclass ConcatConfiguration {\n\tconstructor(rootModule, cloneFrom) {\n\t\tthis.rootModule = rootModule;\n\t\tif (cloneFrom) {\n\t\t\tthis.modules = cloneFrom.modules.createChild(5);\n\t\t\tthis.warnings = cloneFrom.warnings.createChild(5);\n\t\t} else {\n\t\t\tthis.modules = new StackedSetMap();\n\t\t\tthis.modules.add(rootModule);\n\t\t\tthis.warnings = new StackedSetMap();\n\t\t}\n\t}\n\n\tadd(module) {\n\t\tthis.modules.add(module);\n\t}\n\n\thas(module) {\n\t\treturn this.modules.has(module);\n\t}\n\n\tisEmpty() {\n\t\treturn this.modules.size === 1;\n\t}\n\n\taddWarning(module, problem) {\n\t\tthis.warnings.set(module, problem);\n\t}\n\n\tgetWarningsSorted() {\n\t\treturn new Map(\n\t\t\tthis.warnings.asPairArray().sort((a, b) => {\n\t\t\t\tconst ai = a[0].identifier();\n\t\t\t\tconst bi = b[0].identifier();\n\t\t\t\tif (ai < bi) return -1;\n\t\t\t\tif (ai > bi) return 1;\n\t\t\t\treturn 0;\n\t\t\t})\n\t\t);\n\t}\n\n\tgetModules() {\n\t\treturn this.modules.asSet();\n\t}\n\n\tclone() {\n\t\treturn new ConcatConfiguration(this.rootModule, this);\n\t}\n\n\tset(config) {\n\t\tthis.rootModule = config.rootModule;\n\t\tthis.modules = config.modules;\n\t\tthis.warnings = config.warnings;\n\t}\n}\n\nmodule.exports = ModuleConcatenationPlugin;\n"]},"metadata":{},"sourceType":"script"}