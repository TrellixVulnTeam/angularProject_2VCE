{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar RequireIncludeDependency = require(\"./RequireIncludeDependency\");\n\nmodule.exports = /*#__PURE__*/function () {\n  function RequireIncludeDependencyParserPlugin() {\n    _classCallCheck(this, RequireIncludeDependencyParserPlugin);\n  }\n\n  _createClass(RequireIncludeDependencyParserPlugin, [{\n    key: \"apply\",\n    value: function apply(parser) {\n      parser.hooks.call.for(\"require.include\").tap(\"RequireIncludeDependencyParserPlugin\", function (expr) {\n        if (expr.arguments.length !== 1) return;\n        var param = parser.evaluateExpression(expr.arguments[0]);\n        if (!param.isString()) return;\n        var dep = new RequireIncludeDependency(param.string, expr.range);\n        dep.loc = expr.loc;\n        parser.state.current.addDependency(dep);\n        return true;\n      });\n    }\n  }]);\n\n  return RequireIncludeDependencyParserPlugin;\n}();","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/dependencies/RequireIncludeDependencyParserPlugin.js"],"names":["RequireIncludeDependency","require","module","exports","parser","hooks","call","for","tap","expr","arguments","length","param","evaluateExpression","isString","dep","string","range","loc","state","current","addDependency"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,IAAMA,wBAAwB,GAAGC,OAAO,CAAC,4BAAD,CAAxC;;AAEAC,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WACC,eAAMC,MAAN,EAAc;AACbA,MAAAA,MAAM,CAACC,KAAP,CAAaC,IAAb,CACEC,GADF,CACM,iBADN,EAEEC,GAFF,CAEM,sCAFN,EAE8C,UAAAC,IAAI,EAAI;AACpD,YAAIA,IAAI,CAACC,SAAL,CAAeC,MAAf,KAA0B,CAA9B,EAAiC;AACjC,YAAMC,KAAK,GAAGR,MAAM,CAACS,kBAAP,CAA0BJ,IAAI,CAACC,SAAL,CAAe,CAAf,CAA1B,CAAd;AACA,YAAI,CAACE,KAAK,CAACE,QAAN,EAAL,EAAuB;AACvB,YAAMC,GAAG,GAAG,IAAIf,wBAAJ,CAA6BY,KAAK,CAACI,MAAnC,EAA2CP,IAAI,CAACQ,KAAhD,CAAZ;AACAF,QAAAA,GAAG,CAACG,GAAJ,GAAUT,IAAI,CAACS,GAAf;AACAd,QAAAA,MAAM,CAACe,KAAP,CAAaC,OAAb,CAAqBC,aAArB,CAAmCN,GAAnC;AACA,eAAO,IAAP;AACA,OAVF;AAWA;AAbF;;AAAA;AAAA","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireIncludeDependency = require(\"./RequireIncludeDependency\");\n\nmodule.exports = class RequireIncludeDependencyParserPlugin {\n\tapply(parser) {\n\t\tparser.hooks.call\n\t\t\t.for(\"require.include\")\n\t\t\t.tap(\"RequireIncludeDependencyParserPlugin\", expr => {\n\t\t\t\tif (expr.arguments.length !== 1) return;\n\t\t\t\tconst param = parser.evaluateExpression(expr.arguments[0]);\n\t\t\t\tif (!param.isString()) return;\n\t\t\t\tconst dep = new RequireIncludeDependency(param.string, expr.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}