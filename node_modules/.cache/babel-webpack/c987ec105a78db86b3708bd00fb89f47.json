{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nmodule.exports = /*#__PURE__*/function () {\n  function JoinRequestPlugin(source, target) {\n    _classCallCheck(this, JoinRequestPlugin);\n\n    this.source = source;\n    this.target = target;\n  }\n\n  _createClass(JoinRequestPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"JoinRequestPlugin\", function (request, resolveContext, callback) {\n        var obj = Object.assign({}, request, {\n          path: resolver.join(request.path, request.request),\n          relativePath: request.relativePath && resolver.join(request.relativePath, request.request),\n          request: undefined\n        });\n        resolver.doResolve(target, obj, null, resolveContext, callback);\n      });\n    }\n  }]);\n\n  return JoinRequestPlugin;\n}();","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/node_modules/enhanced-resolve/lib/JoinRequestPlugin.js"],"names":["module","exports","source","target","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","obj","Object","assign","path","join","relativePath","undefined","doResolve"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AAEAA,MAAM,CAACC,OAAP;AACC,6BAAYC,MAAZ,EAAoBC,MAApB,EAA4B;AAAA;;AAC3B,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA;;AAJF;AAAA;AAAA,WAMC,eAAMC,QAAN,EAAgB;AACf,UAAMD,MAAM,GAAGC,QAAQ,CAACC,UAAT,CAAoB,KAAKF,MAAzB,CAAf;AACAC,MAAAA,QAAQ,CACNE,OADF,CACU,KAAKJ,MADf,EAEEK,QAFF,CAEW,mBAFX,EAEgC,UAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,EAAuC;AACrE,YAAMC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,OAAlB,EAA2B;AACtCM,UAAAA,IAAI,EAAEV,QAAQ,CAACW,IAAT,CAAcP,OAAO,CAACM,IAAtB,EAA4BN,OAAO,CAACA,OAApC,CADgC;AAEtCQ,UAAAA,YAAY,EACXR,OAAO,CAACQ,YAAR,IACAZ,QAAQ,CAACW,IAAT,CAAcP,OAAO,CAACQ,YAAtB,EAAoCR,OAAO,CAACA,OAA5C,CAJqC;AAKtCA,UAAAA,OAAO,EAAES;AAL6B,SAA3B,CAAZ;AAOAb,QAAAA,QAAQ,CAACc,SAAT,CAAmBf,MAAnB,EAA2BQ,GAA3B,EAAgC,IAAhC,EAAsCF,cAAtC,EAAsDC,QAAtD;AACA,OAXF;AAYA;AApBF;;AAAA;AAAA","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = class JoinRequestPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"JoinRequestPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst obj = Object.assign({}, request, {\n\t\t\t\t\tpath: resolver.join(request.path, request.request),\n\t\t\t\t\trelativePath:\n\t\t\t\t\t\trequest.relativePath &&\n\t\t\t\t\t\tresolver.join(request.relativePath, request.request),\n\t\t\t\t\trequest: undefined\n\t\t\t\t});\n\t\t\t\tresolver.doResolve(target, obj, null, resolveContext, callback);\n\t\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}