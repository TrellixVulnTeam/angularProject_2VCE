{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\n\nvar SourceMapDevToolModuleOptionsPlugin = /*#__PURE__*/function () {\n  function SourceMapDevToolModuleOptionsPlugin(options) {\n    _classCallCheck(this, SourceMapDevToolModuleOptionsPlugin);\n\n    this.options = options;\n  }\n\n  _createClass(SourceMapDevToolModuleOptionsPlugin, [{\n    key: \"apply\",\n    value: function apply(compilation) {\n      var options = this.options;\n\n      if (options.module !== false) {\n        compilation.hooks.buildModule.tap(\"SourceMapDevToolModuleOptionsPlugin\", function (module) {\n          module.useSourceMap = true;\n        });\n      }\n\n      if (options.lineToLine === true) {\n        compilation.hooks.buildModule.tap(\"SourceMapDevToolModuleOptionsPlugin\", function (module) {\n          module.lineToLine = true;\n        });\n      } else if (options.lineToLine) {\n        compilation.hooks.buildModule.tap(\"SourceMapDevToolModuleOptionsPlugin\", function (module) {\n          if (!module.resource) return;\n          var resourcePath = module.resource;\n          var idx = resourcePath.indexOf(\"?\");\n          if (idx >= 0) resourcePath = resourcePath.substr(0, idx);\n          module.lineToLine = ModuleFilenameHelpers.matchObject(options.lineToLine, resourcePath);\n        });\n      }\n    }\n  }]);\n\n  return SourceMapDevToolModuleOptionsPlugin;\n}();\n\nmodule.exports = SourceMapDevToolModuleOptionsPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/SourceMapDevToolModuleOptionsPlugin.js"],"names":["ModuleFilenameHelpers","require","SourceMapDevToolModuleOptionsPlugin","options","compilation","module","hooks","buildModule","tap","useSourceMap","lineToLine","resource","resourcePath","idx","indexOf","substr","matchObject","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,IAAMA,qBAAqB,GAAGC,OAAO,CAAC,yBAAD,CAArC;;IAEMC,mC;AACL,+CAAYC,OAAZ,EAAqB;AAAA;;AACpB,SAAKA,OAAL,GAAeA,OAAf;AACA;;;;WAED,eAAMC,WAAN,EAAmB;AAClB,UAAMD,OAAO,GAAG,KAAKA,OAArB;;AACA,UAAIA,OAAO,CAACE,MAAR,KAAmB,KAAvB,EAA8B;AAC7BD,QAAAA,WAAW,CAACE,KAAZ,CAAkBC,WAAlB,CAA8BC,GAA9B,CACC,qCADD,EAEC,UAAAH,MAAM,EAAI;AACTA,UAAAA,MAAM,CAACI,YAAP,GAAsB,IAAtB;AACA,SAJF;AAMA;;AACD,UAAIN,OAAO,CAACO,UAAR,KAAuB,IAA3B,EAAiC;AAChCN,QAAAA,WAAW,CAACE,KAAZ,CAAkBC,WAAlB,CAA8BC,GAA9B,CACC,qCADD,EAEC,UAAAH,MAAM,EAAI;AACTA,UAAAA,MAAM,CAACK,UAAP,GAAoB,IAApB;AACA,SAJF;AAMA,OAPD,MAOO,IAAIP,OAAO,CAACO,UAAZ,EAAwB;AAC9BN,QAAAA,WAAW,CAACE,KAAZ,CAAkBC,WAAlB,CAA8BC,GAA9B,CACC,qCADD,EAEC,UAAAH,MAAM,EAAI;AACT,cAAI,CAACA,MAAM,CAACM,QAAZ,EAAsB;AACtB,cAAIC,YAAY,GAAGP,MAAM,CAACM,QAA1B;AACA,cAAME,GAAG,GAAGD,YAAY,CAACE,OAAb,CAAqB,GAArB,CAAZ;AACA,cAAID,GAAG,IAAI,CAAX,EAAcD,YAAY,GAAGA,YAAY,CAACG,MAAb,CAAoB,CAApB,EAAuBF,GAAvB,CAAf;AACdR,UAAAA,MAAM,CAACK,UAAP,GAAoBV,qBAAqB,CAACgB,WAAtB,CACnBb,OAAO,CAACO,UADW,EAEnBE,YAFmB,CAApB;AAIA,SAXF;AAaA;AACD;;;;;;AAGFP,MAAM,CAACY,OAAP,GAAiBf,mCAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\n\nclass SourceMapDevToolModuleOptionsPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(compilation) {\n\t\tconst options = this.options;\n\t\tif (options.module !== false) {\n\t\t\tcompilation.hooks.buildModule.tap(\n\t\t\t\t\"SourceMapDevToolModuleOptionsPlugin\",\n\t\t\t\tmodule => {\n\t\t\t\t\tmodule.useSourceMap = true;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\tif (options.lineToLine === true) {\n\t\t\tcompilation.hooks.buildModule.tap(\n\t\t\t\t\"SourceMapDevToolModuleOptionsPlugin\",\n\t\t\t\tmodule => {\n\t\t\t\t\tmodule.lineToLine = true;\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (options.lineToLine) {\n\t\t\tcompilation.hooks.buildModule.tap(\n\t\t\t\t\"SourceMapDevToolModuleOptionsPlugin\",\n\t\t\t\tmodule => {\n\t\t\t\t\tif (!module.resource) return;\n\t\t\t\t\tlet resourcePath = module.resource;\n\t\t\t\t\tconst idx = resourcePath.indexOf(\"?\");\n\t\t\t\t\tif (idx >= 0) resourcePath = resourcePath.substr(0, idx);\n\t\t\t\t\tmodule.lineToLine = ModuleFilenameHelpers.matchObject(\n\t\t\t\t\t\toptions.lineToLine,\n\t\t\t\t\t\tresourcePath\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n}\n\nmodule.exports = SourceMapDevToolModuleOptionsPlugin;\n"]},"metadata":{},"sourceType":"script"}