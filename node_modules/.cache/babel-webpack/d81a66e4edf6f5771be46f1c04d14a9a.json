{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Hook = require(\"./Hook\");\n\nvar HookCodeFactory = require(\"./HookCodeFactory\");\n\nvar SyncWaterfallHookCodeFactory = /*#__PURE__*/function (_HookCodeFactory) {\n  _inherits(SyncWaterfallHookCodeFactory, _HookCodeFactory);\n\n  var _super = _createSuper(SyncWaterfallHookCodeFactory);\n\n  function SyncWaterfallHookCodeFactory() {\n    _classCallCheck(this, SyncWaterfallHookCodeFactory);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SyncWaterfallHookCodeFactory, [{\n    key: \"content\",\n    value: function content(_ref) {\n      var _this = this;\n\n      var _onError = _ref.onError,\n          onResult = _ref.onResult,\n          resultReturns = _ref.resultReturns,\n          rethrowIfPossible = _ref.rethrowIfPossible;\n      return this.callTapsSeries({\n        onError: function onError(i, err) {\n          return _onError(err);\n        },\n        onResult: function onResult(i, result, next) {\n          var code = \"\";\n          code += \"if(\".concat(result, \" !== undefined) {\\n\");\n          code += \"\".concat(_this._args[0], \" = \").concat(result, \";\\n\");\n          code += \"}\\n\";\n          code += next();\n          return code;\n        },\n        onDone: function onDone() {\n          return onResult(_this._args[0]);\n        },\n        doneReturns: resultReturns,\n        rethrowIfPossible: rethrowIfPossible\n      });\n    }\n  }]);\n\n  return SyncWaterfallHookCodeFactory;\n}(HookCodeFactory);\n\nvar factory = new SyncWaterfallHookCodeFactory();\n\nvar SyncWaterfallHook = /*#__PURE__*/function (_Hook) {\n  _inherits(SyncWaterfallHook, _Hook);\n\n  var _super2 = _createSuper(SyncWaterfallHook);\n\n  function SyncWaterfallHook(args) {\n    var _this2;\n\n    _classCallCheck(this, SyncWaterfallHook);\n\n    _this2 = _super2.call(this, args);\n    if (args.length < 1) throw new Error(\"Waterfall hooks must have at least one argument\");\n    return _this2;\n  }\n\n  _createClass(SyncWaterfallHook, [{\n    key: \"tapAsync\",\n    value: function tapAsync() {\n      throw new Error(\"tapAsync is not supported on a SyncWaterfallHook\");\n    }\n  }, {\n    key: \"tapPromise\",\n    value: function tapPromise() {\n      throw new Error(\"tapPromise is not supported on a SyncWaterfallHook\");\n    }\n  }, {\n    key: \"compile\",\n    value: function compile(options) {\n      factory.setup(this, options);\n      return factory.create(options);\n    }\n  }]);\n\n  return SyncWaterfallHook;\n}(Hook);\n\nmodule.exports = SyncWaterfallHook;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/tapable/lib/SyncWaterfallHook.js"],"names":["Hook","require","HookCodeFactory","SyncWaterfallHookCodeFactory","onError","onResult","resultReturns","rethrowIfPossible","callTapsSeries","i","err","result","next","code","_args","onDone","doneReturns","factory","SyncWaterfallHook","args","length","Error","options","setup","create","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;IAEME,4B;;;;;;;;;;;;;WACL,uBAAiE;AAAA;;AAAA,UAAvDC,QAAuD,QAAvDA,OAAuD;AAAA,UAA9CC,QAA8C,QAA9CA,QAA8C;AAAA,UAApCC,aAAoC,QAApCA,aAAoC;AAAA,UAArBC,iBAAqB,QAArBA,iBAAqB;AAChE,aAAO,KAAKC,cAAL,CAAoB;AAC1BJ,QAAAA,OAAO,EAAE,iBAACK,CAAD,EAAIC,GAAJ;AAAA,iBAAYN,QAAO,CAACM,GAAD,CAAnB;AAAA,SADiB;AAE1BL,QAAAA,QAAQ,EAAE,kBAACI,CAAD,EAAIE,MAAJ,EAAYC,IAAZ,EAAqB;AAC9B,cAAIC,IAAI,GAAG,EAAX;AACAA,UAAAA,IAAI,iBAAUF,MAAV,wBAAJ;AACAE,UAAAA,IAAI,cAAO,KAAI,CAACC,KAAL,CAAW,CAAX,CAAP,gBAA0BH,MAA1B,QAAJ;AACAE,UAAAA,IAAI,SAAJ;AACAA,UAAAA,IAAI,IAAID,IAAI,EAAZ;AACA,iBAAOC,IAAP;AACA,SATyB;AAU1BE,QAAAA,MAAM,EAAE;AAAA,iBAAMV,QAAQ,CAAC,KAAI,CAACS,KAAL,CAAW,CAAX,CAAD,CAAd;AAAA,SAVkB;AAW1BE,QAAAA,WAAW,EAAEV,aAXa;AAY1BC,QAAAA,iBAAiB,EAAjBA;AAZ0B,OAApB,CAAP;AAcA;;;;EAhByCL,e;;AAmB3C,IAAMe,OAAO,GAAG,IAAId,4BAAJ,EAAhB;;IAEMe,iB;;;;;AACL,6BAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACjB,gCAAMA,IAAN;AACA,QAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EACC,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AAHgB;AAIjB;;;;WAED,oBAAW;AACV,YAAM,IAAIA,KAAJ,CAAU,kDAAV,CAAN;AACA;;;WAED,sBAAa;AACZ,YAAM,IAAIA,KAAJ,CAAU,oDAAV,CAAN;AACA;;;WAED,iBAAQC,OAAR,EAAiB;AAChBL,MAAAA,OAAO,CAACM,KAAR,CAAc,IAAd,EAAoBD,OAApB;AACA,aAAOL,OAAO,CAACO,MAAR,CAAeF,OAAf,CAAP;AACA;;;;EAlB8BtB,I;;AAqBhCyB,MAAM,CAACC,OAAP,GAAiBR,iBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass SyncWaterfallHookCodeFactory extends HookCodeFactory {\n\tcontent({ onError, onResult, resultReturns, rethrowIfPossible }) {\n\t\treturn this.callTapsSeries({\n\t\t\tonError: (i, err) => onError(err),\n\t\t\tonResult: (i, result, next) => {\n\t\t\t\tlet code = \"\";\n\t\t\t\tcode += `if(${result} !== undefined) {\\n`;\n\t\t\t\tcode += `${this._args[0]} = ${result};\\n`;\n\t\t\t\tcode += `}\\n`;\n\t\t\t\tcode += next();\n\t\t\t\treturn code;\n\t\t\t},\n\t\t\tonDone: () => onResult(this._args[0]),\n\t\t\tdoneReturns: resultReturns,\n\t\t\trethrowIfPossible\n\t\t});\n\t}\n}\n\nconst factory = new SyncWaterfallHookCodeFactory();\n\nclass SyncWaterfallHook extends Hook {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tif (args.length < 1)\n\t\t\tthrow new Error(\"Waterfall hooks must have at least one argument\");\n\t}\n\n\ttapAsync() {\n\t\tthrow new Error(\"tapAsync is not supported on a SyncWaterfallHook\");\n\t}\n\n\ttapPromise() {\n\t\tthrow new Error(\"tapPromise is not supported on a SyncWaterfallHook\");\n\t}\n\n\tcompile(options) {\n\t\tfactory.setup(this, options);\n\t\treturn factory.create(options);\n\t}\n}\n\nmodule.exports = SyncWaterfallHook;\n"]},"metadata":{},"sourceType":"script"}