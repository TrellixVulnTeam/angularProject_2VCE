{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PriorityQueue = void 0;\n/** Naive priority queue; not intended for large datasets */\n\nvar PriorityQueue = /*#__PURE__*/function () {\n  function PriorityQueue(_comparator) {\n    _classCallCheck(this, PriorityQueue);\n\n    this._comparator = _comparator;\n    this._items = new Array();\n  }\n\n  _createClass(PriorityQueue, [{\n    key: \"clear\",\n    value: function clear() {\n      this._items = new Array();\n    }\n  }, {\n    key: \"push\",\n    value: function push(item) {\n      var _this = this;\n\n      var index = this._items.findIndex(function (existing) {\n        return _this._comparator(item, existing) <= 0;\n      });\n\n      if (index === -1) {\n        this._items.push(item);\n      } else {\n        this._items.splice(index, 0, item);\n      }\n    }\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      if (this._items.length === 0) {\n        return undefined;\n      }\n\n      return this._items.splice(0, 1)[0];\n    }\n  }, {\n    key: \"peek\",\n    value: function peek() {\n      if (this._items.length === 0) {\n        return undefined;\n      }\n\n      return this._items[0];\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this._items.length;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return this._items.slice();\n    }\n  }]);\n\n  return PriorityQueue;\n}();\n\nexports.PriorityQueue = PriorityQueue;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/@angular-devkit/core/src/utils/priority-queue.js"],"names":["Object","defineProperty","exports","value","PriorityQueue","_comparator","_items","Array","item","index","findIndex","existing","push","splice","length","undefined","slice"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwB,KAAK,CAA7B;AACA;;IACMA,a;AACF,yBAAYC,WAAZ,EAAyB;AAAA;;AACrB,SAAKA,WAAL,GAAmBA,WAAnB;AACA,SAAKC,MAAL,GAAc,IAAIC,KAAJ,EAAd;AACH;;;;WACD,iBAAQ;AACJ,WAAKD,MAAL,GAAc,IAAIC,KAAJ,EAAd;AACH;;;WACD,cAAKC,IAAL,EAAW;AAAA;;AACP,UAAMC,KAAK,GAAG,KAAKH,MAAL,CAAYI,SAAZ,CAAsB,UAAAC,QAAQ;AAAA,eAAI,KAAI,CAACN,WAAL,CAAiBG,IAAjB,EAAuBG,QAAvB,KAAoC,CAAxC;AAAA,OAA9B,CAAd;;AACA,UAAIF,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,aAAKH,MAAL,CAAYM,IAAZ,CAAiBJ,IAAjB;AACH,OAFD,MAGK;AACD,aAAKF,MAAL,CAAYO,MAAZ,CAAmBJ,KAAnB,EAA0B,CAA1B,EAA6BD,IAA7B;AACH;AACJ;;;WACD,eAAM;AACF,UAAI,KAAKF,MAAL,CAAYQ,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,eAAOC,SAAP;AACH;;AACD,aAAO,KAAKT,MAAL,CAAYO,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAP;AACH;;;WACD,gBAAO;AACH,UAAI,KAAKP,MAAL,CAAYQ,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,eAAOC,SAAP;AACH;;AACD,aAAO,KAAKT,MAAL,CAAY,CAAZ,CAAP;AACH;;;SACD,eAAW;AACP,aAAO,KAAKA,MAAL,CAAYQ,MAAnB;AACH;;;WACD,mBAAU;AACN,aAAO,KAAKR,MAAL,CAAYU,KAAZ,EAAP;AACH;;;;;;AAELd,OAAO,CAACE,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PriorityQueue = void 0;\n/** Naive priority queue; not intended for large datasets */\nclass PriorityQueue {\n    constructor(_comparator) {\n        this._comparator = _comparator;\n        this._items = new Array();\n    }\n    clear() {\n        this._items = new Array();\n    }\n    push(item) {\n        const index = this._items.findIndex(existing => this._comparator(item, existing) <= 0);\n        if (index === -1) {\n            this._items.push(item);\n        }\n        else {\n            this._items.splice(index, 0, item);\n        }\n    }\n    pop() {\n        if (this._items.length === 0) {\n            return undefined;\n        }\n        return this._items.splice(0, 1)[0];\n    }\n    peek() {\n        if (this._items.length === 0) {\n            return undefined;\n        }\n        return this._items[0];\n    }\n    get size() {\n        return this._items.length;\n    }\n    toArray() {\n        return this._items.slice();\n    }\n}\nexports.PriorityQueue = PriorityQueue;\n"]},"metadata":{},"sourceType":"script"}