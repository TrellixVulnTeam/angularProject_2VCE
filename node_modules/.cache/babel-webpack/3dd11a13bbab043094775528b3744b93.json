{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _color = require('color');\n\nvar _color2 = _interopRequireDefault(_color);\n\nvar _keywords = require('./keywords.json');\n\nvar _keywords2 = _interopRequireDefault(_keywords);\n\nvar _toShorthand = require('./lib/toShorthand');\n\nvar _toShorthand2 = _interopRequireDefault(_toShorthand);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar shorter = function shorter(a, b) {\n  return (a && a.length < b.length ? a : b).toLowerCase();\n};\n\nexports.default = function (colour) {\n  var isLegacy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var cache = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var key = colour + \"|\" + isLegacy;\n\n  if (cache && cache[key]) {\n    return cache[key];\n  }\n\n  try {\n    var parsed = (0, _color2.default)(colour.toLowerCase());\n    var alpha = parsed.alpha();\n\n    if (alpha === 1) {\n      var toHex = (0, _toShorthand2.default)(parsed.hex().toLowerCase());\n      var result = shorter(_keywords2.default[toHex], toHex);\n\n      if (cache) {\n        cache[key] = result;\n      }\n\n      return result;\n    } else {\n      var rgb = parsed.rgb();\n\n      if (!isLegacy && !rgb.color[0] && !rgb.color[1] && !rgb.color[2] && !alpha) {\n        var _result2 = 'transparent';\n\n        if (cache) {\n          cache[key] = _result2;\n        }\n\n        return _result2;\n      }\n\n      var hsla = parsed.hsl().string();\n      var rgba = rgb.string();\n\n      var _result = hsla.length < rgba.length ? hsla : rgba;\n\n      if (cache) {\n        cache[key] = _result;\n      }\n\n      return _result;\n    }\n  } catch (e) {\n    // Possibly malformed, so pass through\n    var _result3 = colour;\n\n    if (cache) {\n      cache[key] = _result3;\n    }\n\n    return _result3;\n  }\n};","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/postcss-colormin/dist/colours.js"],"names":["Object","defineProperty","exports","value","_color","require","_color2","_interopRequireDefault","_keywords","_keywords2","_toShorthand","_toShorthand2","obj","__esModule","default","shorter","a","b","length","toLowerCase","colour","isLegacy","cache","key","parsed","alpha","toHex","hex","result","rgb","color","hsla","hsl","string","rgba","e"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;;AAIA,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACH,MAAD,CAApC;;AAEA,IAAII,SAAS,GAAGH,OAAO,CAAC,iBAAD,CAAvB;;AAEA,IAAII,UAAU,GAAGF,sBAAsB,CAACC,SAAD,CAAvC;;AAEA,IAAIE,YAAY,GAAGL,OAAO,CAAC,mBAAD,CAA1B;;AAEA,IAAIM,aAAa,GAAGJ,sBAAsB,CAACG,YAAD,CAA1C;;AAEA,SAASH,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD,EAAIC,CAAJ;AAAA,SAAU,CAACD,CAAC,IAAIA,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAAlB,GAA2BF,CAA3B,GAA+BC,CAAhC,EAAmCE,WAAnC,EAAV;AAAA,CAAhB;;AAEAjB,OAAO,CAACY,OAAR,GAAkB,UAACM,MAAD,EAA6C;AAAA,MAApCC,QAAoC,uEAAzB,KAAyB;AAAA,MAAlBC,KAAkB,uEAAV,KAAU;AAC3D,MAAMC,GAAG,GAAGH,MAAM,GAAG,GAAT,GAAeC,QAA3B;;AAEA,MAAIC,KAAK,IAAIA,KAAK,CAACC,GAAD,CAAlB,EAAyB;AACrB,WAAOD,KAAK,CAACC,GAAD,CAAZ;AACH;;AAED,MAAI;AACA,QAAMC,MAAM,GAAG,CAAC,GAAGlB,OAAO,CAACQ,OAAZ,EAAqBM,MAAM,CAACD,WAAP,EAArB,CAAf;AACA,QAAMM,KAAK,GAAGD,MAAM,CAACC,KAAP,EAAd;;AAEA,QAAIA,KAAK,KAAK,CAAd,EAAiB;AACb,UAAMC,KAAK,GAAG,CAAC,GAAGf,aAAa,CAACG,OAAlB,EAA2BU,MAAM,CAACG,GAAP,GAAaR,WAAb,EAA3B,CAAd;AACA,UAAMS,MAAM,GAAGb,OAAO,CAACN,UAAU,CAACK,OAAX,CAAmBY,KAAnB,CAAD,EAA4BA,KAA5B,CAAtB;;AAEA,UAAIJ,KAAJ,EAAW;AACPA,QAAAA,KAAK,CAACC,GAAD,CAAL,GAAaK,MAAb;AACH;;AAED,aAAOA,MAAP;AACH,KATD,MASO;AACH,UAAMC,GAAG,GAAGL,MAAM,CAACK,GAAP,EAAZ;;AAEA,UAAI,CAACR,QAAD,IAAa,CAACQ,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAd,IAA8B,CAACD,GAAG,CAACC,KAAJ,CAAU,CAAV,CAA/B,IAA+C,CAACD,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAhD,IAAgE,CAACL,KAArE,EAA4E;AACxE,YAAMG,QAAM,GAAG,aAAf;;AAEA,YAAIN,KAAJ,EAAW;AACPA,UAAAA,KAAK,CAACC,GAAD,CAAL,GAAaK,QAAb;AACH;;AAED,eAAOA,QAAP;AACH;;AAED,UAAIG,IAAI,GAAGP,MAAM,CAACQ,GAAP,GAAaC,MAAb,EAAX;AACA,UAAIC,IAAI,GAAGL,GAAG,CAACI,MAAJ,EAAX;;AACA,UAAIL,OAAM,GAAGG,IAAI,CAACb,MAAL,GAAcgB,IAAI,CAAChB,MAAnB,GAA4Ba,IAA5B,GAAmCG,IAAhD;;AAEA,UAAIZ,KAAJ,EAAW;AACPA,QAAAA,KAAK,CAACC,GAAD,CAAL,GAAaK,OAAb;AACH;;AAED,aAAOA,OAAP;AACH;AACJ,GApCD,CAoCE,OAAOO,CAAP,EAAU;AACR;AACA,QAAMP,QAAM,GAAGR,MAAf;;AAEA,QAAIE,KAAJ,EAAW;AACPA,MAAAA,KAAK,CAACC,GAAD,CAAL,GAAaK,QAAb;AACH;;AAED,WAAOA,QAAP;AACH;AACJ,CArDD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _color = require('color');\n\nvar _color2 = _interopRequireDefault(_color);\n\nvar _keywords = require('./keywords.json');\n\nvar _keywords2 = _interopRequireDefault(_keywords);\n\nvar _toShorthand = require('./lib/toShorthand');\n\nvar _toShorthand2 = _interopRequireDefault(_toShorthand);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst shorter = (a, b) => (a && a.length < b.length ? a : b).toLowerCase();\n\nexports.default = (colour, isLegacy = false, cache = false) => {\n    const key = colour + \"|\" + isLegacy;\n\n    if (cache && cache[key]) {\n        return cache[key];\n    }\n\n    try {\n        const parsed = (0, _color2.default)(colour.toLowerCase());\n        const alpha = parsed.alpha();\n\n        if (alpha === 1) {\n            const toHex = (0, _toShorthand2.default)(parsed.hex().toLowerCase());\n            const result = shorter(_keywords2.default[toHex], toHex);\n\n            if (cache) {\n                cache[key] = result;\n            }\n\n            return result;\n        } else {\n            const rgb = parsed.rgb();\n\n            if (!isLegacy && !rgb.color[0] && !rgb.color[1] && !rgb.color[2] && !alpha) {\n                const result = 'transparent';\n\n                if (cache) {\n                    cache[key] = result;\n                }\n\n                return result;\n            }\n\n            let hsla = parsed.hsl().string();\n            let rgba = rgb.string();\n            let result = hsla.length < rgba.length ? hsla : rgba;\n\n            if (cache) {\n                cache[key] = result;\n            }\n\n            return result;\n        }\n    } catch (e) {\n        // Possibly malformed, so pass through\n        const result = colour;\n\n        if (cache) {\n            cache[key] = result;\n        }\n\n        return result;\n    }\n};"]},"metadata":{},"sourceType":"script"}