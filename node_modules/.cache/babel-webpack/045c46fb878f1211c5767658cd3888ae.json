{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/regenerator\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar babel = require(\"@babel/core\");\n\nvar promisify = require(\"pify\");\n\nvar LoaderError = require(\"./Error\");\n\nvar transform = promisify(babel.transform);\n\nmodule.exports = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(source, options) {\n    var result, _result, ast, code, map, metadata, sourceType;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return transform(source, options);\n\n          case 3:\n            result = _context.sent;\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            throw _context.t0.message && _context.t0.codeFrame ? new LoaderError(_context.t0) : _context.t0;\n\n          case 9:\n            if (result) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"return\", null);\n\n          case 11:\n            // We don't return the full result here because some entries are not\n            // really serializable. For a full list of properties see here:\n            // https://github.com/babel/babel/blob/master/packages/babel-core/src/transformation/index.js\n            // For discussion on this topic see here:\n            // https://github.com/babel/babel-loader/pull/629\n            _result = result, ast = _result.ast, code = _result.code, map = _result.map, metadata = _result.metadata, sourceType = _result.sourceType;\n\n            if (map && (!map.sourcesContent || !map.sourcesContent.length)) {\n              map.sourcesContent = [source];\n            }\n\n            return _context.abrupt(\"return\", {\n              ast: ast,\n              code: code,\n              map: map,\n              metadata: metadata,\n              sourceType: sourceType\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports.version = babel.version;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/babel-loader/lib/transform.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","babel","require","promisify","LoaderError","transform","module","exports","_ref","source","options","result","message","codeFrame","ast","code","map","metadata","sourceType","sourcesContent","length","_x","_x2","version"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nconst babel = require(\"@babel/core\");\n\nconst promisify = require(\"pify\");\n\nconst LoaderError = require(\"./Error\");\n\nconst transform = promisify(babel.transform);\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(function* (source, options) {\n    let result;\n\n    try {\n      result = yield transform(source, options);\n    } catch (err) {\n      throw err.message && err.codeFrame ? new LoaderError(err) : err;\n    }\n\n    if (!result) return null; // We don't return the full result here because some entries are not\n    // really serializable. For a full list of properties see here:\n    // https://github.com/babel/babel/blob/master/packages/babel-core/src/transformation/index.js\n    // For discussion on this topic see here:\n    // https://github.com/babel/babel-loader/pull/629\n\n    const {\n      ast,\n      code,\n      map,\n      metadata,\n      sourceType\n    } = result;\n\n    if (map && (!map.sourcesContent || !map.sourcesContent.length)) {\n      map.sourcesContent = [source];\n    }\n\n    return {\n      ast,\n      code,\n      map,\n      metadata,\n      sourceType\n    };\n  });\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports.version = babel.version;"]},"metadata":{},"sourceType":"script"}