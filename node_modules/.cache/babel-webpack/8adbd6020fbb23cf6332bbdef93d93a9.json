{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ChunkIncludeExcludeTester_1 = require(\"./ChunkIncludeExcludeTester\");\n\nvar PluginChunkReadHandler_1 = require(\"./PluginChunkReadHandler\");\n\nvar PluginFileHandler_1 = require(\"./PluginFileHandler\");\n\nvar WebpackFileSystem_1 = require(\"./WebpackFileSystem\");\n\nvar PluginLicenseTypeIdentifier_1 = require(\"./PluginLicenseTypeIdentifier\");\n\nvar LicenseTextReader_1 = require(\"./LicenseTextReader\");\n\nvar WebpackCompilerHandler_1 = require(\"./WebpackCompilerHandler\");\n\nvar PluginModuleCache_1 = require(\"./PluginModuleCache\");\n\nvar WebpackAssetManager_1 = require(\"./WebpackAssetManager\");\n\nvar PluginLicensesRenderer_1 = require(\"./PluginLicensesRenderer\");\n\nvar PluginLicensePolicy_1 = require(\"./PluginLicensePolicy\");\n\nvar PluginLicenseTestRunner_1 = require(\"./PluginLicenseTestRunner\");\n\nvar PluginOptionsReader_1 = require(\"./PluginOptionsReader\");\n\nvar Logger_1 = require(\"./Logger\");\n\nvar LicenseWebpackPlugin =\n/** @class */\nfunction () {\n  function LicenseWebpackPlugin(pluginOptions) {\n    if (pluginOptions === void 0) {\n      pluginOptions = {};\n    }\n\n    this.pluginOptions = pluginOptions;\n  }\n\n  LicenseWebpackPlugin.prototype.apply = function (compiler) {\n    var fileSystem = new WebpackFileSystem_1.WebpackFileSystem(compiler.inputFileSystem);\n    var optionsReader = new PluginOptionsReader_1.PluginOptionsReader(compiler.context);\n    var options = optionsReader.readOptions(this.pluginOptions);\n    var logger = new Logger_1.Logger(options.stats);\n    var fileHandler = new PluginFileHandler_1.PluginFileHandler(fileSystem, options.buildRoot, options.modulesDirectories, options.excludedPackageTest);\n    var licenseTypeIdentifier = new PluginLicenseTypeIdentifier_1.PluginLicenseTypeIdentifier(logger, options.licenseTypeOverrides, options.preferredLicenseTypes, options.handleLicenseAmbiguity, options.handleMissingLicenseType);\n    var licenseTextReader = new LicenseTextReader_1.LicenseTextReader(logger, fileSystem, options.licenseFileOverrides, options.licenseTextOverrides, options.licenseTemplateDir, options.handleMissingLicenseText);\n    var licenseTestRunner = new PluginLicenseTestRunner_1.PluginLicenseTestRunner(options.licenseInclusionTest);\n    var unacceptableLicenseTestRunner = new PluginLicenseTestRunner_1.PluginLicenseTestRunner(options.unacceptableLicenseTest);\n    var policy = new PluginLicensePolicy_1.PluginLicensePolicy(licenseTestRunner, unacceptableLicenseTestRunner, options.handleUnacceptableLicense, options.handleMissingLicenseText);\n    var readHandler = new PluginChunkReadHandler_1.PluginChunkReadHandler(logger, fileHandler, licenseTypeIdentifier, licenseTextReader, policy, fileSystem);\n    var licenseRenderer = new PluginLicensesRenderer_1.PluginLicensesRenderer(options.renderLicenses, options.renderBanner);\n    var moduleCache = new PluginModuleCache_1.PluginModuleCache();\n    var assetManager = new WebpackAssetManager_1.WebpackAssetManager(options.outputFilename, licenseRenderer);\n    var chunkIncludeExcludeTester = new ChunkIncludeExcludeTester_1.ChunkIncludeExcludeTester(options.chunkIncludeExcludeTest);\n    var handler = new WebpackCompilerHandler_1.WebpackCompilerHandler(chunkIncludeExcludeTester, readHandler, assetManager, moduleCache, options.addBanner, options.perChunkOutput, options.additionalChunkModules, options.additionalModules, options.skipChildCompilers);\n    handler.handleCompiler(compiler);\n  };\n\n  return LicenseWebpackPlugin;\n}();\n\nexports.LicenseWebpackPlugin = LicenseWebpackPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/license-webpack-plugin/dist/LicenseWebpackPlugin.js"],"names":["Object","defineProperty","exports","value","ChunkIncludeExcludeTester_1","require","PluginChunkReadHandler_1","PluginFileHandler_1","WebpackFileSystem_1","PluginLicenseTypeIdentifier_1","LicenseTextReader_1","WebpackCompilerHandler_1","PluginModuleCache_1","WebpackAssetManager_1","PluginLicensesRenderer_1","PluginLicensePolicy_1","PluginLicenseTestRunner_1","PluginOptionsReader_1","Logger_1","LicenseWebpackPlugin","pluginOptions","prototype","apply","compiler","fileSystem","WebpackFileSystem","inputFileSystem","optionsReader","PluginOptionsReader","context","options","readOptions","logger","Logger","stats","fileHandler","PluginFileHandler","buildRoot","modulesDirectories","excludedPackageTest","licenseTypeIdentifier","PluginLicenseTypeIdentifier","licenseTypeOverrides","preferredLicenseTypes","handleLicenseAmbiguity","handleMissingLicenseType","licenseTextReader","LicenseTextReader","licenseFileOverrides","licenseTextOverrides","licenseTemplateDir","handleMissingLicenseText","licenseTestRunner","PluginLicenseTestRunner","licenseInclusionTest","unacceptableLicenseTestRunner","unacceptableLicenseTest","policy","PluginLicensePolicy","handleUnacceptableLicense","readHandler","PluginChunkReadHandler","licenseRenderer","PluginLicensesRenderer","renderLicenses","renderBanner","moduleCache","PluginModuleCache","assetManager","WebpackAssetManager","outputFilename","chunkIncludeExcludeTester","ChunkIncludeExcludeTester","chunkIncludeExcludeTest","handler","WebpackCompilerHandler","addBanner","perChunkOutput","additionalChunkModules","additionalModules","skipChildCompilers","handleCompiler"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChunkIncludeExcludeTester_1 = require(\"./ChunkIncludeExcludeTester\");\nvar PluginChunkReadHandler_1 = require(\"./PluginChunkReadHandler\");\nvar PluginFileHandler_1 = require(\"./PluginFileHandler\");\nvar WebpackFileSystem_1 = require(\"./WebpackFileSystem\");\nvar PluginLicenseTypeIdentifier_1 = require(\"./PluginLicenseTypeIdentifier\");\nvar LicenseTextReader_1 = require(\"./LicenseTextReader\");\nvar WebpackCompilerHandler_1 = require(\"./WebpackCompilerHandler\");\nvar PluginModuleCache_1 = require(\"./PluginModuleCache\");\nvar WebpackAssetManager_1 = require(\"./WebpackAssetManager\");\nvar PluginLicensesRenderer_1 = require(\"./PluginLicensesRenderer\");\nvar PluginLicensePolicy_1 = require(\"./PluginLicensePolicy\");\nvar PluginLicenseTestRunner_1 = require(\"./PluginLicenseTestRunner\");\nvar PluginOptionsReader_1 = require(\"./PluginOptionsReader\");\nvar Logger_1 = require(\"./Logger\");\nvar LicenseWebpackPlugin = /** @class */ (function () {\n    function LicenseWebpackPlugin(pluginOptions) {\n        if (pluginOptions === void 0) { pluginOptions = {}; }\n        this.pluginOptions = pluginOptions;\n    }\n    LicenseWebpackPlugin.prototype.apply = function (compiler) {\n        var fileSystem = new WebpackFileSystem_1.WebpackFileSystem(compiler.inputFileSystem);\n        var optionsReader = new PluginOptionsReader_1.PluginOptionsReader(compiler.context);\n        var options = optionsReader.readOptions(this.pluginOptions);\n        var logger = new Logger_1.Logger(options.stats);\n        var fileHandler = new PluginFileHandler_1.PluginFileHandler(fileSystem, options.buildRoot, options.modulesDirectories, options.excludedPackageTest);\n        var licenseTypeIdentifier = new PluginLicenseTypeIdentifier_1.PluginLicenseTypeIdentifier(logger, options.licenseTypeOverrides, options.preferredLicenseTypes, options.handleLicenseAmbiguity, options.handleMissingLicenseType);\n        var licenseTextReader = new LicenseTextReader_1.LicenseTextReader(logger, fileSystem, options.licenseFileOverrides, options.licenseTextOverrides, options.licenseTemplateDir, options.handleMissingLicenseText);\n        var licenseTestRunner = new PluginLicenseTestRunner_1.PluginLicenseTestRunner(options.licenseInclusionTest);\n        var unacceptableLicenseTestRunner = new PluginLicenseTestRunner_1.PluginLicenseTestRunner(options.unacceptableLicenseTest);\n        var policy = new PluginLicensePolicy_1.PluginLicensePolicy(licenseTestRunner, unacceptableLicenseTestRunner, options.handleUnacceptableLicense, options.handleMissingLicenseText);\n        var readHandler = new PluginChunkReadHandler_1.PluginChunkReadHandler(logger, fileHandler, licenseTypeIdentifier, licenseTextReader, policy, fileSystem);\n        var licenseRenderer = new PluginLicensesRenderer_1.PluginLicensesRenderer(options.renderLicenses, options.renderBanner);\n        var moduleCache = new PluginModuleCache_1.PluginModuleCache();\n        var assetManager = new WebpackAssetManager_1.WebpackAssetManager(options.outputFilename, licenseRenderer);\n        var chunkIncludeExcludeTester = new ChunkIncludeExcludeTester_1.ChunkIncludeExcludeTester(options.chunkIncludeExcludeTest);\n        var handler = new WebpackCompilerHandler_1.WebpackCompilerHandler(chunkIncludeExcludeTester, readHandler, assetManager, moduleCache, options.addBanner, options.perChunkOutput, options.additionalChunkModules, options.additionalModules, options.skipChildCompilers);\n        handler.handleCompiler(compiler);\n    };\n    return LicenseWebpackPlugin;\n}());\nexports.LicenseWebpackPlugin = LicenseWebpackPlugin;\n"]},"metadata":{},"sourceType":"script"}