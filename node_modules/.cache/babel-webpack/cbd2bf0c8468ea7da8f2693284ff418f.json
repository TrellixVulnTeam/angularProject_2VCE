{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _slicedToArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Generator = require(\"../Generator\");\n\nvar Template = require(\"../Template\");\n\nvar _require = require(\"webpack-sources\"),\n    RawSource = _require.RawSource;\n\nvar WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\nvar WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../Dependency\").DependencyTemplate} DependencyTemplate */\n\n\nvar WebAssemblyJavascriptGenerator = /*#__PURE__*/function (_Generator) {\n  _inherits(WebAssemblyJavascriptGenerator, _Generator);\n\n  var _super = _createSuper(WebAssemblyJavascriptGenerator);\n\n  function WebAssemblyJavascriptGenerator() {\n    _classCallCheck(this, WebAssemblyJavascriptGenerator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(WebAssemblyJavascriptGenerator, [{\n    key: \"generate\",\n    value:\n    /**\n     * @param {NormalModule} module module for which the code should be generated\n     * @param {Map<Function, DependencyTemplate>} dependencyTemplates mapping from dependencies to templates\n     * @param {RuntimeTemplate} runtimeTemplate the runtime template\n     * @param {string} type which kind of code should be generated\n     * @returns {Source} generated code\n     */\n    function generate(module, dependencyTemplates, runtimeTemplate, type) {\n      var initIdentifer = Array.isArray(module.usedExports) ? Template.numberToIdentifer(module.usedExports.length) : \"__webpack_init__\";\n      var needExportsCopy = false;\n      var importedModules = new Map();\n      var initParams = [];\n      var index = 0;\n\n      var _iterator = _createForOfIteratorHelper(module.dependencies),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var dep = _step.value;\n          var depAsAny =\n          /** @type {any} */\n          dep;\n\n          if (dep.module) {\n            var importData = importedModules.get(dep.module);\n\n            if (importData === undefined) {\n              importedModules.set(dep.module, importData = {\n                importVar: \"m\".concat(index),\n                index: index,\n                request: \"userRequest\" in depAsAny ? depAsAny.userRequest : undefined,\n                names: new Set(),\n                reexports: []\n              });\n              index++;\n            }\n\n            if (dep instanceof WebAssemblyImportDependency) {\n              importData.names.add(dep.name);\n\n              if (dep.description.type === \"GlobalType\") {\n                var exportName = dep.name;\n                var usedName = dep.module && dep.module.isUsed(exportName);\n\n                if (dep.module) {\n                  if (usedName) {\n                    initParams.push(runtimeTemplate.exportFromImport({\n                      module: dep.module,\n                      request: dep.request,\n                      importVar: importData.importVar,\n                      originModule: module,\n                      exportName: dep.name,\n                      asiSafe: true,\n                      isCall: false,\n                      callContext: null\n                    }));\n                  }\n                }\n              }\n            }\n\n            if (dep instanceof WebAssemblyExportImportedDependency) {\n              importData.names.add(dep.name);\n\n              var _usedName = module.isUsed(dep.exportName);\n\n              if (_usedName) {\n                var exportProp = \"\".concat(module.exportsArgument, \"[\").concat(JSON.stringify(_usedName), \"]\");\n                var defineStatement = Template.asString([\"\".concat(exportProp, \" = \").concat(runtimeTemplate.exportFromImport({\n                  module: dep.module,\n                  request: dep.request,\n                  importVar: importData.importVar,\n                  originModule: module,\n                  exportName: dep.name,\n                  asiSafe: true,\n                  isCall: false,\n                  callContext: null\n                }), \";\"), \"if(WebAssembly.Global) \".concat(exportProp, \" = \") + \"new WebAssembly.Global({ value: \".concat(JSON.stringify(dep.valueType), \" }, \").concat(exportProp, \");\")]);\n                importData.reexports.push(defineStatement);\n                needExportsCopy = true;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var importsCode = Template.asString(Array.from(importedModules, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            module = _ref2[0],\n            _ref2$ = _ref2[1],\n            importVar = _ref2$.importVar,\n            request = _ref2$.request,\n            reexports = _ref2$.reexports;\n\n        var importStatement = runtimeTemplate.importStatement({\n          module: module,\n          request: request,\n          importVar: importVar,\n          originModule: module\n        });\n        return importStatement + reexports.join(\"\\n\");\n      })); // create source\n\n      var source = new RawSource(['\"use strict\";', \"// Instantiate WebAssembly module\", \"var wasmExports = __webpack_require__.w[module.i];\", !Array.isArray(module.usedExports) ? \"__webpack_require__.r(\".concat(module.exportsArgument, \");\") : \"\", // this must be before import for circular dependencies\n      \"// export exports from WebAssembly module\", Array.isArray(module.usedExports) && !needExportsCopy ? \"\".concat(module.moduleArgument, \".exports = wasmExports;\") : \"for(var name in wasmExports) \" + \"if(name != \".concat(JSON.stringify(initIdentifer), \") \") + \"\".concat(module.exportsArgument, \"[name] = wasmExports[name];\"), \"// exec imports from WebAssembly module (for esm order)\", importsCode, \"\", \"// exec wasm module\", \"wasmExports[\".concat(JSON.stringify(initIdentifer), \"](\").concat(initParams.join(\", \"), \")\")].join(\"\\n\"));\n      return source;\n    }\n  }]);\n\n  return WebAssemblyJavascriptGenerator;\n}(Generator);\n\nmodule.exports = WebAssemblyJavascriptGenerator;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/wasm/WebAssemblyJavascriptGenerator.js"],"names":["Generator","require","Template","RawSource","WebAssemblyImportDependency","WebAssemblyExportImportedDependency","WebAssemblyJavascriptGenerator","module","dependencyTemplates","runtimeTemplate","type","initIdentifer","Array","isArray","usedExports","numberToIdentifer","length","needExportsCopy","importedModules","Map","initParams","index","dependencies","dep","depAsAny","importData","get","undefined","set","importVar","request","userRequest","names","Set","reexports","add","name","description","exportName","usedName","isUsed","push","exportFromImport","originModule","asiSafe","isCall","callContext","exportProp","exportsArgument","JSON","stringify","defineStatement","asString","valueType","importsCode","from","importStatement","join","source","moduleArgument","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Generator = require(\"../Generator\");\nconst Template = require(\"../Template\");\nconst { RawSource } = require(\"webpack-sources\");\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\nconst WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\n\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Dependency\").DependencyTemplate} DependencyTemplate */\n\nclass WebAssemblyJavascriptGenerator extends Generator {\n\t/**\n\t * @param {NormalModule} module module for which the code should be generated\n\t * @param {Map<Function, DependencyTemplate>} dependencyTemplates mapping from dependencies to templates\n\t * @param {RuntimeTemplate} runtimeTemplate the runtime template\n\t * @param {string} type which kind of code should be generated\n\t * @returns {Source} generated code\n\t */\n\tgenerate(module, dependencyTemplates, runtimeTemplate, type) {\n\t\tconst initIdentifer = Array.isArray(module.usedExports)\n\t\t\t? Template.numberToIdentifer(module.usedExports.length)\n\t\t\t: \"__webpack_init__\";\n\n\t\tlet needExportsCopy = false;\n\t\tconst importedModules = new Map();\n\t\tconst initParams = [];\n\t\tlet index = 0;\n\t\tfor (const dep of module.dependencies) {\n\t\t\tconst depAsAny = /** @type {any} */ (dep);\n\t\t\tif (dep.module) {\n\t\t\t\tlet importData = importedModules.get(dep.module);\n\t\t\t\tif (importData === undefined) {\n\t\t\t\t\timportedModules.set(\n\t\t\t\t\t\tdep.module,\n\t\t\t\t\t\t(importData = {\n\t\t\t\t\t\t\timportVar: `m${index}`,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\trequest:\n\t\t\t\t\t\t\t\t\"userRequest\" in depAsAny ? depAsAny.userRequest : undefined,\n\t\t\t\t\t\t\tnames: new Set(),\n\t\t\t\t\t\t\treexports: []\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t\tif (dep instanceof WebAssemblyImportDependency) {\n\t\t\t\t\timportData.names.add(dep.name);\n\t\t\t\t\tif (dep.description.type === \"GlobalType\") {\n\t\t\t\t\t\tconst exportName = dep.name;\n\t\t\t\t\t\tconst usedName = dep.module && dep.module.isUsed(exportName);\n\n\t\t\t\t\t\tif (dep.module) {\n\t\t\t\t\t\t\tif (usedName) {\n\t\t\t\t\t\t\t\tinitParams.push(\n\t\t\t\t\t\t\t\t\truntimeTemplate.exportFromImport({\n\t\t\t\t\t\t\t\t\t\tmodule: dep.module,\n\t\t\t\t\t\t\t\t\t\trequest: dep.request,\n\t\t\t\t\t\t\t\t\t\timportVar: importData.importVar,\n\t\t\t\t\t\t\t\t\t\toriginModule: module,\n\t\t\t\t\t\t\t\t\t\texportName: dep.name,\n\t\t\t\t\t\t\t\t\t\tasiSafe: true,\n\t\t\t\t\t\t\t\t\t\tisCall: false,\n\t\t\t\t\t\t\t\t\t\tcallContext: null\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (dep instanceof WebAssemblyExportImportedDependency) {\n\t\t\t\t\timportData.names.add(dep.name);\n\t\t\t\t\tconst usedName = module.isUsed(dep.exportName);\n\t\t\t\t\tif (usedName) {\n\t\t\t\t\t\tconst exportProp = `${module.exportsArgument}[${JSON.stringify(\n\t\t\t\t\t\t\tusedName\n\t\t\t\t\t\t)}]`;\n\t\t\t\t\t\tconst defineStatement = Template.asString([\n\t\t\t\t\t\t\t`${exportProp} = ${runtimeTemplate.exportFromImport({\n\t\t\t\t\t\t\t\tmodule: dep.module,\n\t\t\t\t\t\t\t\trequest: dep.request,\n\t\t\t\t\t\t\t\timportVar: importData.importVar,\n\t\t\t\t\t\t\t\toriginModule: module,\n\t\t\t\t\t\t\t\texportName: dep.name,\n\t\t\t\t\t\t\t\tasiSafe: true,\n\t\t\t\t\t\t\t\tisCall: false,\n\t\t\t\t\t\t\t\tcallContext: null\n\t\t\t\t\t\t\t})};`,\n\t\t\t\t\t\t\t`if(WebAssembly.Global) ${exportProp} = ` +\n\t\t\t\t\t\t\t\t`new WebAssembly.Global({ value: ${JSON.stringify(\n\t\t\t\t\t\t\t\t\tdep.valueType\n\t\t\t\t\t\t\t\t)} }, ${exportProp});`\n\t\t\t\t\t\t]);\n\t\t\t\t\t\timportData.reexports.push(defineStatement);\n\t\t\t\t\t\tneedExportsCopy = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst importsCode = Template.asString(\n\t\t\tArray.from(\n\t\t\t\timportedModules,\n\t\t\t\t([module, { importVar, request, reexports }]) => {\n\t\t\t\t\tconst importStatement = runtimeTemplate.importStatement({\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\timportVar,\n\t\t\t\t\t\toriginModule: module\n\t\t\t\t\t});\n\t\t\t\t\treturn importStatement + reexports.join(\"\\n\");\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\n\t\t// create source\n\t\tconst source = new RawSource(\n\t\t\t[\n\t\t\t\t'\"use strict\";',\n\t\t\t\t\"// Instantiate WebAssembly module\",\n\t\t\t\t\"var wasmExports = __webpack_require__.w[module.i];\",\n\n\t\t\t\t!Array.isArray(module.usedExports)\n\t\t\t\t\t? `__webpack_require__.r(${module.exportsArgument});`\n\t\t\t\t\t: \"\",\n\n\t\t\t\t// this must be before import for circular dependencies\n\t\t\t\t\"// export exports from WebAssembly module\",\n\t\t\t\tArray.isArray(module.usedExports) && !needExportsCopy\n\t\t\t\t\t? `${module.moduleArgument}.exports = wasmExports;`\n\t\t\t\t\t: \"for(var name in wasmExports) \" +\n\t\t\t\t\t  `if(name != ${JSON.stringify(initIdentifer)}) ` +\n\t\t\t\t\t  `${module.exportsArgument}[name] = wasmExports[name];`,\n\t\t\t\t\"// exec imports from WebAssembly module (for esm order)\",\n\t\t\t\timportsCode,\n\t\t\t\t\"\",\n\t\t\t\t\"// exec wasm module\",\n\t\t\t\t`wasmExports[${JSON.stringify(initIdentifer)}](${initParams.join(\n\t\t\t\t\t\", \"\n\t\t\t\t)})`\n\t\t\t].join(\"\\n\")\n\t\t);\n\t\treturn source;\n\t}\n}\n\nmodule.exports = WebAssemblyJavascriptGenerator;\n"]},"metadata":{},"sourceType":"script"}