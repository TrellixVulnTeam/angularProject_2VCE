{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require(\"webpack-sources\"),\n    ConcatSource = _require.ConcatSource;\n\nvar WebWorkerChunkTemplatePlugin = /*#__PURE__*/function () {\n  function WebWorkerChunkTemplatePlugin() {\n    _classCallCheck(this, WebWorkerChunkTemplatePlugin);\n  }\n\n  _createClass(WebWorkerChunkTemplatePlugin, [{\n    key: \"apply\",\n    value: function apply(chunkTemplate) {\n      chunkTemplate.hooks.render.tap(\"WebWorkerChunkTemplatePlugin\", function (modules, chunk) {\n        var chunkCallbackName = chunkTemplate.outputOptions.chunkCallbackName;\n        var globalObject = chunkTemplate.outputOptions.globalObject;\n        var source = new ConcatSource();\n        source.add(\"\".concat(globalObject, \"[\").concat(JSON.stringify(chunkCallbackName), \"](\").concat(JSON.stringify(chunk.ids), \",\"));\n        source.add(modules);\n        source.add(\")\");\n        return source;\n      });\n      chunkTemplate.hooks.hash.tap(\"WebWorkerChunkTemplatePlugin\", function (hash) {\n        hash.update(\"webworker\");\n        hash.update(\"3\");\n        hash.update(\"\".concat(chunkTemplate.outputOptions.chunkCallbackName));\n        hash.update(\"\".concat(chunkTemplate.outputOptions.globalObject));\n      });\n    }\n  }]);\n\n  return WebWorkerChunkTemplatePlugin;\n}();\n\nmodule.exports = WebWorkerChunkTemplatePlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/webworker/WebWorkerChunkTemplatePlugin.js"],"names":["require","ConcatSource","WebWorkerChunkTemplatePlugin","chunkTemplate","hooks","render","tap","modules","chunk","chunkCallbackName","outputOptions","globalObject","source","add","JSON","stringify","ids","hash","update","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,eAAyBA,OAAO,CAAC,iBAAD,CAAhC;AAAA,IAAQC,YAAR,YAAQA,YAAR;;IAEMC,4B;;;;;;;WACL,eAAMC,aAAN,EAAqB;AACpBA,MAAAA,aAAa,CAACC,KAAd,CAAoBC,MAApB,CAA2BC,GAA3B,CACC,8BADD,EAEC,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACnB,YAAMC,iBAAiB,GAAGN,aAAa,CAACO,aAAd,CAA4BD,iBAAtD;AACA,YAAME,YAAY,GAAGR,aAAa,CAACO,aAAd,CAA4BC,YAAjD;AACA,YAAMC,MAAM,GAAG,IAAIX,YAAJ,EAAf;AACAW,QAAAA,MAAM,CAACC,GAAP,WACIF,YADJ,cACoBG,IAAI,CAACC,SAAL,CAClBN,iBADkB,CADpB,eAGOK,IAAI,CAACC,SAAL,CAAeP,KAAK,CAACQ,GAArB,CAHP;AAKAJ,QAAAA,MAAM,CAACC,GAAP,CAAWN,OAAX;AACAK,QAAAA,MAAM,CAACC,GAAP,CAAW,GAAX;AACA,eAAOD,MAAP;AACA,OAdF;AAgBAT,MAAAA,aAAa,CAACC,KAAd,CAAoBa,IAApB,CAAyBX,GAAzB,CAA6B,8BAA7B,EAA6D,UAAAW,IAAI,EAAI;AACpEA,QAAAA,IAAI,CAACC,MAAL,CAAY,WAAZ;AACAD,QAAAA,IAAI,CAACC,MAAL,CAAY,GAAZ;AACAD,QAAAA,IAAI,CAACC,MAAL,WAAef,aAAa,CAACO,aAAd,CAA4BD,iBAA3C;AACAQ,QAAAA,IAAI,CAACC,MAAL,WAAef,aAAa,CAACO,aAAd,CAA4BC,YAA3C;AACA,OALD;AAMA;;;;;;AAEFQ,MAAM,CAACC,OAAP,GAAiBlB,4BAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\n\nclass WebWorkerChunkTemplatePlugin {\n\tapply(chunkTemplate) {\n\t\tchunkTemplate.hooks.render.tap(\n\t\t\t\"WebWorkerChunkTemplatePlugin\",\n\t\t\t(modules, chunk) => {\n\t\t\t\tconst chunkCallbackName = chunkTemplate.outputOptions.chunkCallbackName;\n\t\t\t\tconst globalObject = chunkTemplate.outputOptions.globalObject;\n\t\t\t\tconst source = new ConcatSource();\n\t\t\t\tsource.add(\n\t\t\t\t\t`${globalObject}[${JSON.stringify(\n\t\t\t\t\t\tchunkCallbackName\n\t\t\t\t\t)}](${JSON.stringify(chunk.ids)},`\n\t\t\t\t);\n\t\t\t\tsource.add(modules);\n\t\t\t\tsource.add(\")\");\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tchunkTemplate.hooks.hash.tap(\"WebWorkerChunkTemplatePlugin\", hash => {\n\t\t\thash.update(\"webworker\");\n\t\t\thash.update(\"3\");\n\t\t\thash.update(`${chunkTemplate.outputOptions.chunkCallbackName}`);\n\t\t\thash.update(`${chunkTemplate.outputOptions.globalObject}`);\n\t\t});\n\t}\n}\nmodule.exports = WebWorkerChunkTemplatePlugin;\n"]},"metadata":{},"sourceType":"script"}