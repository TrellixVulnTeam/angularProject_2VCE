{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _regeneratorRuntime = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loader;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _loaderUtils = require(\"loader-utils\");\n\nvar _schemaUtils = require(\"schema-utils\");\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n\n\nfunction loader(_x, _x2) {\n  return _loader.apply(this, arguments);\n}\n\nfunction _loader() {\n  _loader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(input, inputMap) {\n    var _this = this;\n\n    var options, _ref, sourceMappingURL, replacementString, callback, behaviourSourceMappingUrl, sourceURL, sourceContent, _yield, map, context, resolvedSources, newMap, sourcesContentIsEmpty;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            options = (0, _loaderUtils.getOptions)(this);\n            (0, _schemaUtils.validate)(_options.default, options, {\n              name: 'Source Map Loader',\n              baseDataPath: 'options'\n            });\n            _ref = (0, _utils.getSourceMappingURL)(input), sourceMappingURL = _ref.sourceMappingURL, replacementString = _ref.replacementString;\n            callback = this.async();\n\n            if (sourceMappingURL) {\n              _context2.next = 7;\n              break;\n            }\n\n            callback(null, input, inputMap);\n            return _context2.abrupt(\"return\");\n\n          case 7:\n            _context2.prev = 7;\n            behaviourSourceMappingUrl = typeof options.filterSourceMappingUrl !== 'undefined' ? options.filterSourceMappingUrl(sourceMappingURL, this.resourcePath) : 'consume';\n            _context2.next = 15;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](7);\n            callback(_context2.t0);\n            return _context2.abrupt(\"return\");\n\n          case 15:\n            _context2.t1 = behaviourSourceMappingUrl;\n            _context2.next = _context2.t1 === 'skip' ? 18 : _context2.t1 === false ? 20 : _context2.t1 === 'remove' ? 20 : 22;\n            break;\n\n          case 18:\n            callback(null, input, inputMap);\n            return _context2.abrupt(\"return\");\n\n          case 20:\n            callback(null, input.replace(replacementString, ''), inputMap);\n            return _context2.abrupt(\"return\");\n\n          case 22:\n            _context2.prev = 22;\n            _context2.next = 25;\n            return (0, _utils.fetchFromURL)(this, this.context, sourceMappingURL);\n\n          case 25:\n            _yield = _context2.sent;\n            sourceURL = _yield.sourceURL;\n            sourceContent = _yield.sourceContent;\n            _context2.next = 35;\n            break;\n\n          case 30:\n            _context2.prev = 30;\n            _context2.t2 = _context2[\"catch\"](22);\n            this.emitWarning(_context2.t2);\n            callback(null, input, inputMap);\n            return _context2.abrupt(\"return\");\n\n          case 35:\n            if (sourceURL) {\n              this.addDependency(sourceURL);\n            }\n\n            _context2.prev = 36;\n            map = JSON.parse(sourceContent.replace(/^\\)\\]\\}'/, ''));\n            _context2.next = 45;\n            break;\n\n          case 40:\n            _context2.prev = 40;\n            _context2.t3 = _context2[\"catch\"](36);\n            this.emitWarning(new Error(\"Failed to parse source map from '\".concat(sourceMappingURL, \"': \").concat(_context2.t3)));\n            callback(null, input, inputMap);\n            return _context2.abrupt(\"return\");\n\n          case 45:\n            context = sourceURL ? _path.default.dirname(sourceURL) : this.context;\n\n            if (!map.sections) {\n              _context2.next = 50;\n              break;\n            }\n\n            _context2.next = 49;\n            return (0, _utils.flattenSourceMap)(map);\n\n          case 49:\n            map = _context2.sent;\n\n          case 50:\n            _context2.next = 52;\n            return Promise.all(map.sources.map( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(source, i) {\n                var sourceURL, sourceContent, originalSourceContent, skipReading, errored, _yield2;\n\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        // eslint-disable-next-line no-shadow\n                        // eslint-disable-next-line no-shadow\n                        originalSourceContent = map.sourcesContent && typeof map.sourcesContent[i] !== 'undefined' ? map.sourcesContent[i] : // eslint-disable-next-line no-undefined\n                        undefined;\n                        skipReading = typeof originalSourceContent !== 'undefined';\n                        errored = false; // We do not skipReading here, because we need absolute paths in sources.\n                        // This is necessary so that for sourceMaps with the same file structure in sources, name collisions do not occur.\n                        // https://github.com/webpack-contrib/source-map-loader/issues/51\n\n                        _context.prev = 3;\n                        _context.next = 6;\n                        return (0, _utils.fetchFromURL)(_this, context, source, map.sourceRoot, skipReading);\n\n                      case 6:\n                        _yield2 = _context.sent;\n                        sourceURL = _yield2.sourceURL;\n                        sourceContent = _yield2.sourceContent;\n                        _context.next = 15;\n                        break;\n\n                      case 11:\n                        _context.prev = 11;\n                        _context.t0 = _context[\"catch\"](3);\n                        errored = true;\n\n                        _this.emitWarning(_context.t0);\n\n                      case 15:\n                        if (skipReading) {\n                          sourceContent = originalSourceContent;\n                        } else if (!errored && sourceURL) {\n                          _this.addDependency(sourceURL);\n                        } // Return original value of `source` when error happens\n\n\n                        return _context.abrupt(\"return\", {\n                          sourceURL: errored ? source : sourceURL,\n                          sourceContent: sourceContent\n                        });\n\n                      case 17:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[3, 11]]);\n              }));\n\n              return function (_x3, _x4) {\n                return _ref2.apply(this, arguments);\n              };\n            }()));\n\n          case 52:\n            resolvedSources = _context2.sent;\n            newMap = _objectSpread({}, map);\n            newMap.sources = [];\n            newMap.sourcesContent = [];\n            delete newMap.sourceRoot;\n            resolvedSources.forEach(function (source) {\n              // eslint-disable-next-line no-shadow\n              var sourceURL = source.sourceURL,\n                  sourceContent = source.sourceContent;\n              newMap.sources.push(sourceURL || '');\n              newMap.sourcesContent.push(sourceContent || '');\n            });\n            sourcesContentIsEmpty = newMap.sourcesContent.filter(function (entry) {\n              return Boolean(entry);\n            }).length === 0;\n\n            if (sourcesContentIsEmpty) {\n              delete newMap.sourcesContent;\n            }\n\n            callback(null, input.replace(replacementString, ''), newMap);\n\n          case 61:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this, [[7, 11], [22, 30], [36, 40]]);\n  }));\n  return _loader.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/source-map-loader/dist/index.js"],"names":["Object","defineProperty","exports","value","default","loader","_path","_interopRequireDefault","require","_loaderUtils","_schemaUtils","_options","_utils","obj","__esModule","input","inputMap","options","getOptions","validate","name","baseDataPath","getSourceMappingURL","sourceMappingURL","replacementString","callback","async","behaviourSourceMappingUrl","filterSourceMappingUrl","resourcePath","replace","fetchFromURL","context","sourceURL","sourceContent","emitWarning","addDependency","map","JSON","parse","Error","dirname","sections","flattenSourceMap","Promise","all","sources","source","i","originalSourceContent","sourcesContent","undefined","skipReading","errored","sourceRoot","resolvedSources","newMap","forEach","push","sourcesContentIsEmpty","filter","entry","Boolean","length"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loader;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _loaderUtils = require(\"loader-utils\");\n\nvar _schemaUtils = require(\"schema-utils\");\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nasync function loader(input, inputMap) {\n  const options = (0, _loaderUtils.getOptions)(this);\n  (0, _schemaUtils.validate)(_options.default, options, {\n    name: 'Source Map Loader',\n    baseDataPath: 'options'\n  });\n  const {\n    sourceMappingURL,\n    replacementString\n  } = (0, _utils.getSourceMappingURL)(input);\n  const callback = this.async();\n\n  if (!sourceMappingURL) {\n    callback(null, input, inputMap);\n    return;\n  }\n\n  let behaviourSourceMappingUrl;\n\n  try {\n    behaviourSourceMappingUrl = typeof options.filterSourceMappingUrl !== 'undefined' ? options.filterSourceMappingUrl(sourceMappingURL, this.resourcePath) : 'consume';\n  } catch (error) {\n    callback(error);\n    return;\n  } // eslint-disable-next-line default-case\n\n\n  switch (behaviourSourceMappingUrl) {\n    case 'skip':\n      callback(null, input, inputMap);\n      return;\n\n    case false:\n    case 'remove':\n      callback(null, input.replace(replacementString, ''), inputMap);\n      return;\n  }\n\n  let sourceURL;\n  let sourceContent;\n\n  try {\n    ({\n      sourceURL,\n      sourceContent\n    } = await (0, _utils.fetchFromURL)(this, this.context, sourceMappingURL));\n  } catch (error) {\n    this.emitWarning(error);\n    callback(null, input, inputMap);\n    return;\n  }\n\n  if (sourceURL) {\n    this.addDependency(sourceURL);\n  }\n\n  let map;\n\n  try {\n    map = JSON.parse(sourceContent.replace(/^\\)\\]\\}'/, ''));\n  } catch (parseError) {\n    this.emitWarning(new Error(`Failed to parse source map from '${sourceMappingURL}': ${parseError}`));\n    callback(null, input, inputMap);\n    return;\n  }\n\n  const context = sourceURL ? _path.default.dirname(sourceURL) : this.context;\n\n  if (map.sections) {\n    // eslint-disable-next-line no-param-reassign\n    map = await (0, _utils.flattenSourceMap)(map);\n  }\n\n  const resolvedSources = await Promise.all(map.sources.map(async (source, i) => {\n    // eslint-disable-next-line no-shadow\n    let sourceURL; // eslint-disable-next-line no-shadow\n\n    let sourceContent;\n    const originalSourceContent = map.sourcesContent && typeof map.sourcesContent[i] !== 'undefined' ? map.sourcesContent[i] : // eslint-disable-next-line no-undefined\n    undefined;\n    const skipReading = typeof originalSourceContent !== 'undefined';\n    let errored = false; // We do not skipReading here, because we need absolute paths in sources.\n    // This is necessary so that for sourceMaps with the same file structure in sources, name collisions do not occur.\n    // https://github.com/webpack-contrib/source-map-loader/issues/51\n\n    try {\n      ({\n        sourceURL,\n        sourceContent\n      } = await (0, _utils.fetchFromURL)(this, context, source, map.sourceRoot, skipReading));\n    } catch (error) {\n      errored = true;\n      this.emitWarning(error);\n    }\n\n    if (skipReading) {\n      sourceContent = originalSourceContent;\n    } else if (!errored && sourceURL) {\n      this.addDependency(sourceURL);\n    } // Return original value of `source` when error happens\n\n\n    return {\n      sourceURL: errored ? source : sourceURL,\n      sourceContent\n    };\n  }));\n  const newMap = { ...map\n  };\n  newMap.sources = [];\n  newMap.sourcesContent = [];\n  delete newMap.sourceRoot;\n  resolvedSources.forEach(source => {\n    // eslint-disable-next-line no-shadow\n    const {\n      sourceURL,\n      sourceContent\n    } = source;\n    newMap.sources.push(sourceURL || '');\n    newMap.sourcesContent.push(sourceContent || '');\n  });\n  const sourcesContentIsEmpty = newMap.sourcesContent.filter(entry => Boolean(entry)).length === 0;\n\n  if (sourcesContentIsEmpty) {\n    delete newMap.sourcesContent;\n  }\n\n  callback(null, input.replace(replacementString, ''), newMap);\n}"]},"metadata":{},"sourceType":"script"}