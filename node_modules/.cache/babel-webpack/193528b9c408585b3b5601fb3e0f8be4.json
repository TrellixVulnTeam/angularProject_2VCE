{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar util = require(\"util\");\n\nvar Tapable = require(\"tapable/lib/Tapable\");\n\nvar SyncHook = require(\"tapable/lib/SyncHook\");\n\nvar AsyncSeriesBailHook = require(\"tapable/lib/AsyncSeriesBailHook\");\n\nvar AsyncSeriesHook = require(\"tapable/lib/AsyncSeriesHook\");\n\nvar createInnerContext = require(\"./createInnerContext\");\n\nvar REGEXP_NOT_MODULE = /^\\.$|^\\.[\\\\/]|^\\.\\.$|^\\.\\.[\\\\/]|^\\/|^[A-Z]:[\\\\/]/i;\nvar REGEXP_DIRECTORY = /[\\\\/]$/i;\n\nvar memoryFsJoin = require(\"memory-fs/lib/join\");\n\nvar memoizedJoin = new Map();\n\nvar memoryFsNormalize = require(\"memory-fs/lib/normalize\");\n\nfunction withName(name, hook) {\n  hook.name = name;\n  return hook;\n}\n\nfunction toCamelCase(str) {\n  return str.replace(/-([a-z])/g, function (str) {\n    return str.substr(1).toUpperCase();\n  });\n}\n\nvar deprecatedPushToMissing = util.deprecate(function (set, item) {\n  set.add(item);\n}, \"Resolver: 'missing' is now a Set. Use add instead of push.\");\nvar deprecatedResolveContextInCallback = util.deprecate(function (x) {\n  return x;\n}, \"Resolver: The callback argument was splitted into resolveContext and callback.\");\nvar deprecatedHookAsString = util.deprecate(function (x) {\n  return x;\n}, \"Resolver#doResolve: The type arguments (string) is now a hook argument (Hook). Pass a reference to the hook instead.\");\n\nvar Resolver = /*#__PURE__*/function (_Tapable) {\n  _inherits(Resolver, _Tapable);\n\n  var _super = _createSuper(Resolver);\n\n  function Resolver(fileSystem) {\n    var _this;\n\n    _classCallCheck(this, Resolver);\n\n    _this = _super.call(this);\n    _this.fileSystem = fileSystem;\n    _this.hooks = {\n      resolveStep: withName(\"resolveStep\", new SyncHook([\"hook\", \"request\"])),\n      noResolve: withName(\"noResolve\", new SyncHook([\"request\", \"error\"])),\n      resolve: withName(\"resolve\", new AsyncSeriesBailHook([\"request\", \"resolveContext\"])),\n      result: new AsyncSeriesHook([\"result\", \"resolveContext\"])\n    };\n\n    _this._pluginCompat.tap(\"Resolver: before/after\", function (options) {\n      if (/^before-/.test(options.name)) {\n        options.name = options.name.substr(7);\n        options.stage = -10;\n      } else if (/^after-/.test(options.name)) {\n        options.name = options.name.substr(6);\n        options.stage = 10;\n      }\n    });\n\n    _this._pluginCompat.tap(\"Resolver: step hooks\", function (options) {\n      var name = options.name;\n      var stepHook = !/^resolve(-s|S)tep$|^no(-r|R)esolve$/.test(name);\n\n      if (stepHook) {\n        options.async = true;\n\n        _this.ensureHook(name);\n\n        var fn = options.fn;\n\n        options.fn = function (request, resolverContext, callback) {\n          var innerCallback = function innerCallback(err, result) {\n            if (err) return callback(err);\n            if (result !== undefined) return callback(null, result);\n            callback();\n          };\n\n          for (var key in resolverContext) {\n            innerCallback[key] = resolverContext[key];\n          }\n\n          fn.call(_assertThisInitialized(_this), request, innerCallback);\n        };\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Resolver, [{\n    key: \"ensureHook\",\n    value: function ensureHook(name) {\n      if (typeof name !== \"string\") return name;\n      name = toCamelCase(name);\n\n      if (/^before/.test(name)) {\n        return this.ensureHook(name[6].toLowerCase() + name.substr(7)).withOptions({\n          stage: -10\n        });\n      }\n\n      if (/^after/.test(name)) {\n        return this.ensureHook(name[5].toLowerCase() + name.substr(6)).withOptions({\n          stage: 10\n        });\n      }\n\n      var hook = this.hooks[name];\n\n      if (!hook) {\n        return this.hooks[name] = withName(name, new AsyncSeriesBailHook([\"request\", \"resolveContext\"]));\n      }\n\n      return hook;\n    }\n  }, {\n    key: \"getHook\",\n    value: function getHook(name) {\n      if (typeof name !== \"string\") return name;\n      name = toCamelCase(name);\n\n      if (/^before/.test(name)) {\n        return this.getHook(name[6].toLowerCase() + name.substr(7)).withOptions({\n          stage: -10\n        });\n      }\n\n      if (/^after/.test(name)) {\n        return this.getHook(name[5].toLowerCase() + name.substr(6)).withOptions({\n          stage: 10\n        });\n      }\n\n      var hook = this.hooks[name];\n\n      if (!hook) {\n        throw new Error(\"Hook \".concat(name, \" doesn't exist\"));\n      }\n\n      return hook;\n    }\n  }, {\n    key: \"resolveSync\",\n    value: function resolveSync(context, path, request) {\n      var err,\n          result,\n          sync = false;\n      this.resolve(context, path, request, {}, function (e, r) {\n        err = e;\n        result = r;\n        sync = true;\n      });\n      if (!sync) throw new Error(\"Cannot 'resolveSync' because the fileSystem is not sync. Use 'resolve'!\");\n      if (err) throw err;\n      return result;\n    }\n  }, {\n    key: \"resolve\",\n    value: function resolve(context, path, request, resolveContext, callback) {\n      var _this2 = this;\n\n      // TODO remove in enhanced-resolve 5\n      // For backward compatiblity START\n      if (typeof callback !== \"function\") {\n        callback = deprecatedResolveContextInCallback(resolveContext); // resolveContext is a function containing additional properties\n        // It's now used for resolveContext and callback\n      } // END\n\n\n      var obj = {\n        context: context,\n        path: path,\n        request: request\n      };\n      var message = \"resolve '\" + request + \"' in '\" + path + \"'\"; // Try to resolve assuming there is no error\n      // We don't log stuff in this case\n\n      return this.doResolve(this.hooks.resolve, obj, message, {\n        missing: resolveContext.missing,\n        stack: resolveContext.stack\n      }, function (err, result) {\n        if (!err && result) {\n          return callback(null, result.path === false ? false : result.path + (result.query || \"\"), result);\n        }\n\n        var localMissing = new Set(); // TODO remove in enhanced-resolve 5\n\n        localMissing.push = function (item) {\n          return deprecatedPushToMissing(localMissing, item);\n        };\n\n        var _log = [];\n        return _this2.doResolve(_this2.hooks.resolve, obj, message, {\n          log: function log(msg) {\n            if (resolveContext.log) {\n              resolveContext.log(msg);\n            }\n\n            _log.push(msg);\n          },\n          missing: localMissing,\n          stack: resolveContext.stack\n        }, function (err, result) {\n          if (err) return callback(err);\n          var error = new Error(\"Can't \" + message);\n          error.details = _log.join(\"\\n\");\n          error.missing = Array.from(localMissing);\n\n          _this2.hooks.noResolve.call(obj, error);\n\n          return callback(error);\n        });\n      });\n    }\n  }, {\n    key: \"doResolve\",\n    value: function doResolve(hook, request, message, resolveContext, callback) {\n      // TODO remove in enhanced-resolve 5\n      // For backward compatiblity START\n      if (typeof callback !== \"function\") {\n        callback = deprecatedResolveContextInCallback(resolveContext); // resolveContext is a function containing additional properties\n        // It's now used for resolveContext and callback\n      }\n\n      if (typeof hook === \"string\") {\n        var name = toCamelCase(hook);\n        hook = deprecatedHookAsString(this.hooks[name]);\n\n        if (!hook) {\n          throw new Error(\"Hook \\\"\".concat(name, \"\\\" doesn't exist\"));\n        }\n      } // END\n\n\n      if (typeof callback !== \"function\") throw new Error(\"callback is not a function \" + Array.from(arguments));\n      if (!resolveContext) throw new Error(\"resolveContext is not an object \" + Array.from(arguments));\n      var stackLine = hook.name + \": (\" + request.path + \") \" + (request.request || \"\") + (request.query || \"\") + (request.directory ? \" directory\" : \"\") + (request.module ? \" module\" : \"\");\n      var newStack;\n\n      if (resolveContext.stack) {\n        newStack = new Set(resolveContext.stack);\n\n        if (resolveContext.stack.has(stackLine)) {\n          // Prevent recursion\n          var recursionError = new Error(\"Recursion in resolving\\nStack:\\n  \" + Array.from(newStack).join(\"\\n  \"));\n          recursionError.recursion = true;\n          if (resolveContext.log) resolveContext.log(\"abort resolving because of recursion\");\n          return callback(recursionError);\n        }\n\n        newStack.add(stackLine);\n      } else {\n        newStack = new Set([stackLine]);\n      }\n\n      this.hooks.resolveStep.call(hook, request);\n\n      if (hook.isUsed()) {\n        var innerContext = createInnerContext({\n          log: resolveContext.log,\n          missing: resolveContext.missing,\n          stack: newStack\n        }, message);\n        return hook.callAsync(request, innerContext, function (err, result) {\n          if (err) return callback(err);\n          if (result) return callback(null, result);\n          callback();\n        });\n      } else {\n        callback();\n      }\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(identifier) {\n      if (identifier === \"\") return null;\n      var part = {\n        request: \"\",\n        query: \"\",\n        module: false,\n        directory: false,\n        file: false\n      };\n      var idxQuery = identifier.indexOf(\"?\");\n\n      if (idxQuery === 0) {\n        part.query = identifier;\n      } else if (idxQuery > 0) {\n        part.request = identifier.slice(0, idxQuery);\n        part.query = identifier.slice(idxQuery);\n      } else {\n        part.request = identifier;\n      }\n\n      if (part.request) {\n        part.module = this.isModule(part.request);\n        part.directory = this.isDirectory(part.request);\n\n        if (part.directory) {\n          part.request = part.request.substr(0, part.request.length - 1);\n        }\n      }\n\n      return part;\n    }\n  }, {\n    key: \"isModule\",\n    value: function isModule(path) {\n      return !REGEXP_NOT_MODULE.test(path);\n    }\n  }, {\n    key: \"isDirectory\",\n    value: function isDirectory(path) {\n      return REGEXP_DIRECTORY.test(path);\n    }\n  }, {\n    key: \"join\",\n    value: function join(path, request) {\n      var cacheEntry;\n      var pathCache = memoizedJoin.get(path);\n\n      if (typeof pathCache === \"undefined\") {\n        memoizedJoin.set(path, pathCache = new Map());\n      } else {\n        cacheEntry = pathCache.get(request);\n        if (typeof cacheEntry !== \"undefined\") return cacheEntry;\n      }\n\n      cacheEntry = memoryFsJoin(path, request);\n      pathCache.set(request, cacheEntry);\n      return cacheEntry;\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(path) {\n      return memoryFsNormalize(path);\n    }\n  }]);\n\n  return Resolver;\n}(Tapable);\n\nmodule.exports = Resolver;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/node_modules/enhanced-resolve/lib/Resolver.js"],"names":["util","require","Tapable","SyncHook","AsyncSeriesBailHook","AsyncSeriesHook","createInnerContext","REGEXP_NOT_MODULE","REGEXP_DIRECTORY","memoryFsJoin","memoizedJoin","Map","memoryFsNormalize","withName","name","hook","toCamelCase","str","replace","substr","toUpperCase","deprecatedPushToMissing","deprecate","set","item","add","deprecatedResolveContextInCallback","x","deprecatedHookAsString","Resolver","fileSystem","hooks","resolveStep","noResolve","resolve","result","_pluginCompat","tap","options","test","stage","stepHook","async","ensureHook","fn","request","resolverContext","callback","innerCallback","err","undefined","key","call","toLowerCase","withOptions","getHook","Error","context","path","sync","e","r","resolveContext","obj","message","doResolve","missing","stack","query","localMissing","Set","push","log","msg","error","details","join","Array","from","arguments","stackLine","directory","module","newStack","has","recursionError","recursion","isUsed","innerContext","callAsync","identifier","part","file","idxQuery","indexOf","slice","isModule","isDirectory","length","cacheEntry","pathCache","get","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst util = require(\"util\");\n\nconst Tapable = require(\"tapable/lib/Tapable\");\nconst SyncHook = require(\"tapable/lib/SyncHook\");\nconst AsyncSeriesBailHook = require(\"tapable/lib/AsyncSeriesBailHook\");\nconst AsyncSeriesHook = require(\"tapable/lib/AsyncSeriesHook\");\nconst createInnerContext = require(\"./createInnerContext\");\n\nconst REGEXP_NOT_MODULE = /^\\.$|^\\.[\\\\/]|^\\.\\.$|^\\.\\.[\\\\/]|^\\/|^[A-Z]:[\\\\/]/i;\nconst REGEXP_DIRECTORY = /[\\\\/]$/i;\n\nconst memoryFsJoin = require(\"memory-fs/lib/join\");\nconst memoizedJoin = new Map();\nconst memoryFsNormalize = require(\"memory-fs/lib/normalize\");\n\nfunction withName(name, hook) {\n\thook.name = name;\n\treturn hook;\n}\n\nfunction toCamelCase(str) {\n\treturn str.replace(/-([a-z])/g, str => str.substr(1).toUpperCase());\n}\n\nconst deprecatedPushToMissing = util.deprecate((set, item) => {\n\tset.add(item);\n}, \"Resolver: 'missing' is now a Set. Use add instead of push.\");\n\nconst deprecatedResolveContextInCallback = util.deprecate(x => {\n\treturn x;\n}, \"Resolver: The callback argument was splitted into resolveContext and callback.\");\n\nconst deprecatedHookAsString = util.deprecate(x => {\n\treturn x;\n}, \"Resolver#doResolve: The type arguments (string) is now a hook argument (Hook). Pass a reference to the hook instead.\");\n\nclass Resolver extends Tapable {\n\tconstructor(fileSystem) {\n\t\tsuper();\n\t\tthis.fileSystem = fileSystem;\n\t\tthis.hooks = {\n\t\t\tresolveStep: withName(\"resolveStep\", new SyncHook([\"hook\", \"request\"])),\n\t\t\tnoResolve: withName(\"noResolve\", new SyncHook([\"request\", \"error\"])),\n\t\t\tresolve: withName(\n\t\t\t\t\"resolve\",\n\t\t\t\tnew AsyncSeriesBailHook([\"request\", \"resolveContext\"])\n\t\t\t),\n\t\t\tresult: new AsyncSeriesHook([\"result\", \"resolveContext\"])\n\t\t};\n\t\tthis._pluginCompat.tap(\"Resolver: before/after\", options => {\n\t\t\tif (/^before-/.test(options.name)) {\n\t\t\t\toptions.name = options.name.substr(7);\n\t\t\t\toptions.stage = -10;\n\t\t\t} else if (/^after-/.test(options.name)) {\n\t\t\t\toptions.name = options.name.substr(6);\n\t\t\t\toptions.stage = 10;\n\t\t\t}\n\t\t});\n\t\tthis._pluginCompat.tap(\"Resolver: step hooks\", options => {\n\t\t\tconst name = options.name;\n\t\t\tconst stepHook = !/^resolve(-s|S)tep$|^no(-r|R)esolve$/.test(name);\n\t\t\tif (stepHook) {\n\t\t\t\toptions.async = true;\n\t\t\t\tthis.ensureHook(name);\n\t\t\t\tconst fn = options.fn;\n\t\t\t\toptions.fn = (request, resolverContext, callback) => {\n\t\t\t\t\tconst innerCallback = (err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\tif (result !== undefined) return callback(null, result);\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t};\n\t\t\t\t\tfor (const key in resolverContext) {\n\t\t\t\t\t\tinnerCallback[key] = resolverContext[key];\n\t\t\t\t\t}\n\t\t\t\t\tfn.call(this, request, innerCallback);\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t}\n\n\tensureHook(name) {\n\t\tif (typeof name !== \"string\") return name;\n\t\tname = toCamelCase(name);\n\t\tif (/^before/.test(name)) {\n\t\t\treturn this.ensureHook(\n\t\t\t\tname[6].toLowerCase() + name.substr(7)\n\t\t\t).withOptions({\n\t\t\t\tstage: -10\n\t\t\t});\n\t\t}\n\t\tif (/^after/.test(name)) {\n\t\t\treturn this.ensureHook(\n\t\t\t\tname[5].toLowerCase() + name.substr(6)\n\t\t\t).withOptions({\n\t\t\t\tstage: 10\n\t\t\t});\n\t\t}\n\t\tconst hook = this.hooks[name];\n\t\tif (!hook) {\n\t\t\treturn (this.hooks[name] = withName(\n\t\t\t\tname,\n\t\t\t\tnew AsyncSeriesBailHook([\"request\", \"resolveContext\"])\n\t\t\t));\n\t\t}\n\t\treturn hook;\n\t}\n\n\tgetHook(name) {\n\t\tif (typeof name !== \"string\") return name;\n\t\tname = toCamelCase(name);\n\t\tif (/^before/.test(name)) {\n\t\t\treturn this.getHook(name[6].toLowerCase() + name.substr(7)).withOptions({\n\t\t\t\tstage: -10\n\t\t\t});\n\t\t}\n\t\tif (/^after/.test(name)) {\n\t\t\treturn this.getHook(name[5].toLowerCase() + name.substr(6)).withOptions({\n\t\t\t\tstage: 10\n\t\t\t});\n\t\t}\n\t\tconst hook = this.hooks[name];\n\t\tif (!hook) {\n\t\t\tthrow new Error(`Hook ${name} doesn't exist`);\n\t\t}\n\t\treturn hook;\n\t}\n\n\tresolveSync(context, path, request) {\n\t\tlet err,\n\t\t\tresult,\n\t\t\tsync = false;\n\t\tthis.resolve(context, path, request, {}, (e, r) => {\n\t\t\terr = e;\n\t\t\tresult = r;\n\t\t\tsync = true;\n\t\t});\n\t\tif (!sync)\n\t\t\tthrow new Error(\n\t\t\t\t\"Cannot 'resolveSync' because the fileSystem is not sync. Use 'resolve'!\"\n\t\t\t);\n\t\tif (err) throw err;\n\t\treturn result;\n\t}\n\n\tresolve(context, path, request, resolveContext, callback) {\n\t\t// TODO remove in enhanced-resolve 5\n\t\t// For backward compatiblity START\n\t\tif (typeof callback !== \"function\") {\n\t\t\tcallback = deprecatedResolveContextInCallback(resolveContext);\n\t\t\t// resolveContext is a function containing additional properties\n\t\t\t// It's now used for resolveContext and callback\n\t\t}\n\t\t// END\n\t\tconst obj = {\n\t\t\tcontext: context,\n\t\t\tpath: path,\n\t\t\trequest: request\n\t\t};\n\n\t\tconst message = \"resolve '\" + request + \"' in '\" + path + \"'\";\n\n\t\t// Try to resolve assuming there is no error\n\t\t// We don't log stuff in this case\n\t\treturn this.doResolve(\n\t\t\tthis.hooks.resolve,\n\t\t\tobj,\n\t\t\tmessage,\n\t\t\t{\n\t\t\t\tmissing: resolveContext.missing,\n\t\t\t\tstack: resolveContext.stack\n\t\t\t},\n\t\t\t(err, result) => {\n\t\t\t\tif (!err && result) {\n\t\t\t\t\treturn callback(\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tresult.path === false ? false : result.path + (result.query || \"\"),\n\t\t\t\t\t\tresult\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst localMissing = new Set();\n\t\t\t\t// TODO remove in enhanced-resolve 5\n\t\t\t\tlocalMissing.push = item => deprecatedPushToMissing(localMissing, item);\n\t\t\t\tconst log = [];\n\n\t\t\t\treturn this.doResolve(\n\t\t\t\t\tthis.hooks.resolve,\n\t\t\t\t\tobj,\n\t\t\t\t\tmessage,\n\t\t\t\t\t{\n\t\t\t\t\t\tlog: msg => {\n\t\t\t\t\t\t\tif (resolveContext.log) {\n\t\t\t\t\t\t\t\tresolveContext.log(msg);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlog.push(msg);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmissing: localMissing,\n\t\t\t\t\t\tstack: resolveContext.stack\n\t\t\t\t\t},\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\tconst error = new Error(\"Can't \" + message);\n\t\t\t\t\t\terror.details = log.join(\"\\n\");\n\t\t\t\t\t\terror.missing = Array.from(localMissing);\n\t\t\t\t\t\tthis.hooks.noResolve.call(obj, error);\n\t\t\t\t\t\treturn callback(error);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n\n\tdoResolve(hook, request, message, resolveContext, callback) {\n\t\t// TODO remove in enhanced-resolve 5\n\t\t// For backward compatiblity START\n\t\tif (typeof callback !== \"function\") {\n\t\t\tcallback = deprecatedResolveContextInCallback(resolveContext);\n\t\t\t// resolveContext is a function containing additional properties\n\t\t\t// It's now used for resolveContext and callback\n\t\t}\n\t\tif (typeof hook === \"string\") {\n\t\t\tconst name = toCamelCase(hook);\n\t\t\thook = deprecatedHookAsString(this.hooks[name]);\n\t\t\tif (!hook) {\n\t\t\t\tthrow new Error(`Hook \"${name}\" doesn't exist`);\n\t\t\t}\n\t\t}\n\t\t// END\n\t\tif (typeof callback !== \"function\")\n\t\t\tthrow new Error(\"callback is not a function \" + Array.from(arguments));\n\t\tif (!resolveContext)\n\t\t\tthrow new Error(\n\t\t\t\t\"resolveContext is not an object \" + Array.from(arguments)\n\t\t\t);\n\n\t\tconst stackLine =\n\t\t\thook.name +\n\t\t\t\": (\" +\n\t\t\trequest.path +\n\t\t\t\") \" +\n\t\t\t(request.request || \"\") +\n\t\t\t(request.query || \"\") +\n\t\t\t(request.directory ? \" directory\" : \"\") +\n\t\t\t(request.module ? \" module\" : \"\");\n\n\t\tlet newStack;\n\t\tif (resolveContext.stack) {\n\t\t\tnewStack = new Set(resolveContext.stack);\n\t\t\tif (resolveContext.stack.has(stackLine)) {\n\t\t\t\t// Prevent recursion\n\t\t\t\tconst recursionError = new Error(\n\t\t\t\t\t\"Recursion in resolving\\nStack:\\n  \" +\n\t\t\t\t\t\tArray.from(newStack).join(\"\\n  \")\n\t\t\t\t);\n\t\t\t\trecursionError.recursion = true;\n\t\t\t\tif (resolveContext.log)\n\t\t\t\t\tresolveContext.log(\"abort resolving because of recursion\");\n\t\t\t\treturn callback(recursionError);\n\t\t\t}\n\t\t\tnewStack.add(stackLine);\n\t\t} else {\n\t\t\tnewStack = new Set([stackLine]);\n\t\t}\n\t\tthis.hooks.resolveStep.call(hook, request);\n\n\t\tif (hook.isUsed()) {\n\t\t\tconst innerContext = createInnerContext(\n\t\t\t\t{\n\t\t\t\t\tlog: resolveContext.log,\n\t\t\t\t\tmissing: resolveContext.missing,\n\t\t\t\t\tstack: newStack\n\t\t\t\t},\n\t\t\t\tmessage\n\t\t\t);\n\t\t\treturn hook.callAsync(request, innerContext, (err, result) => {\n\t\t\t\tif (err) return callback(err);\n\t\t\t\tif (result) return callback(null, result);\n\t\t\t\tcallback();\n\t\t\t});\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\tparse(identifier) {\n\t\tif (identifier === \"\") return null;\n\t\tconst part = {\n\t\t\trequest: \"\",\n\t\t\tquery: \"\",\n\t\t\tmodule: false,\n\t\t\tdirectory: false,\n\t\t\tfile: false\n\t\t};\n\t\tconst idxQuery = identifier.indexOf(\"?\");\n\t\tif (idxQuery === 0) {\n\t\t\tpart.query = identifier;\n\t\t} else if (idxQuery > 0) {\n\t\t\tpart.request = identifier.slice(0, idxQuery);\n\t\t\tpart.query = identifier.slice(idxQuery);\n\t\t} else {\n\t\t\tpart.request = identifier;\n\t\t}\n\t\tif (part.request) {\n\t\t\tpart.module = this.isModule(part.request);\n\t\t\tpart.directory = this.isDirectory(part.request);\n\t\t\tif (part.directory) {\n\t\t\t\tpart.request = part.request.substr(0, part.request.length - 1);\n\t\t\t}\n\t\t}\n\t\treturn part;\n\t}\n\n\tisModule(path) {\n\t\treturn !REGEXP_NOT_MODULE.test(path);\n\t}\n\n\tisDirectory(path) {\n\t\treturn REGEXP_DIRECTORY.test(path);\n\t}\n\n\tjoin(path, request) {\n\t\tlet cacheEntry;\n\t\tlet pathCache = memoizedJoin.get(path);\n\t\tif (typeof pathCache === \"undefined\") {\n\t\t\tmemoizedJoin.set(path, (pathCache = new Map()));\n\t\t} else {\n\t\t\tcacheEntry = pathCache.get(request);\n\t\t\tif (typeof cacheEntry !== \"undefined\") return cacheEntry;\n\t\t}\n\t\tcacheEntry = memoryFsJoin(path, request);\n\t\tpathCache.set(request, cacheEntry);\n\t\treturn cacheEntry;\n\t}\n\n\tnormalize(path) {\n\t\treturn memoryFsNormalize(path);\n\t}\n}\n\nmodule.exports = Resolver;\n"]},"metadata":{},"sourceType":"script"}