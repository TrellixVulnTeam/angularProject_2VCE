{"ast":null,"code":"'use strict';\n/* eslint-disable\n  no-param-reassign,\n  space-before-function-paren\n*/\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar MethodFactory = require('./MethodFactory');\n\nvar defaults = {\n  name: function name(options) {\n    return options.logger.name;\n  },\n  time: function time() {\n    return new Date().toTimeString().split(' ')[0];\n  },\n  level: function level(options) {\n    return \"[\".concat(options.level, \"]\");\n  },\n  template: '{{time}} {{level}} '\n};\n\nvar PrefixFactory = /*#__PURE__*/function (_MethodFactory) {\n  _inherits(PrefixFactory, _MethodFactory);\n\n  var _super = _createSuper(PrefixFactory);\n\n  function PrefixFactory(logger, options) {\n    var _this;\n\n    _classCallCheck(this, PrefixFactory);\n\n    _this = _super.call(this, logger);\n    _this.options = Object.assign({}, defaults, options);\n    return _this;\n  }\n\n  _createClass(PrefixFactory, [{\n    key: \"interpolate\",\n    value: function interpolate(level) {\n      var _this2 = this;\n\n      return this.options.template.replace(/{{([^{}]*)}}/g, function (stache, prop) {\n        var fn = _this2.options[prop];\n\n        if (fn) {\n          return fn({\n            level: level,\n            logger: _this2.logger\n          });\n        }\n\n        return stache;\n      });\n    }\n  }, {\n    key: \"make\",\n    value: function make(method) {\n      var _this3 = this;\n\n      var og = _get(_getPrototypeOf(PrefixFactory.prototype), \"make\", this).call(this, method);\n\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var first = args[0];\n\n        var output = _this3.interpolate(method);\n\n        if (typeof first === 'string') {\n          args[0] = output + first;\n        } else {\n          args.unshift(output);\n        }\n\n        og.apply(void 0, args);\n      };\n    }\n  }]);\n\n  return PrefixFactory;\n}(MethodFactory);\n\nmodule.exports = PrefixFactory;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack-log/src/loglevel/PrefixFactory.js"],"names":["MethodFactory","require","defaults","name","options","logger","time","Date","toTimeString","split","level","template","PrefixFactory","Object","assign","replace","stache","prop","fn","method","og","args","first","output","interpolate","unshift","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;AACA,IAAMA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA7B;;AAEA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,IADe,gBACTC,OADS,EACA;AACb,WAAOA,OAAO,CAACC,MAAR,CAAeF,IAAtB;AACD,GAHc;AAIfG,EAAAA,IAJe,kBAIP;AACN,WAAO,IAAIC,IAAJ,GAAWC,YAAX,GAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAP;AACD,GANc;AAOfC,EAAAA,KAPe,iBAORN,OAPQ,EAOC;AACd,sBAAWA,OAAO,CAACM,KAAnB;AACD,GATc;AAUfC,EAAAA,QAAQ,EAAE;AAVK,CAAjB;;IAaMC,a;;;;;AACJ,yBAAYP,MAAZ,EAAoBD,OAApB,EAA6B;AAAA;;AAAA;;AAC3B,8BAAMC,MAAN;AAEA,UAAKD,OAAL,GAAeS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,QAAlB,EAA4BE,OAA5B,CAAf;AAH2B;AAI5B;;;;WAED,qBAAYM,KAAZ,EAAmB;AAAA;;AACjB,aAAO,KAAKN,OAAL,CAAaO,QAAb,CAAsBI,OAAtB,CAA8B,eAA9B,EAA+C,UAACC,MAAD,EAASC,IAAT,EAAkB;AACtE,YAAMC,EAAE,GAAG,MAAI,CAACd,OAAL,CAAaa,IAAb,CAAX;;AAEA,YAAIC,EAAJ,EAAQ;AACN,iBAAOA,EAAE,CAAC;AAAER,YAAAA,KAAK,EAALA,KAAF;AAASL,YAAAA,MAAM,EAAE,MAAI,CAACA;AAAtB,WAAD,CAAT;AACD;;AAED,eAAOW,MAAP;AACD,OARM,CAAP;AASD;;;WAED,cAAKG,MAAL,EAAa;AAAA;;AACX,UAAMC,EAAE,2EAAcD,MAAd,CAAR;;AAEA,aAAO,YAAa;AAAA,0CAATE,IAAS;AAATA,UAAAA,IAAS;AAAA;;AAClB,YAAOC,KAAP,GAAgBD,IAAhB;;AAEA,YAAME,MAAM,GAAG,MAAI,CAACC,WAAL,CAAiBL,MAAjB,CAAf;;AAEA,YAAI,OAAOG,KAAP,KAAiB,QAArB,EAA+B;AAC7BD,UAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUE,MAAM,GAAGD,KAAnB;AACD,SAFD,MAEO;AACLD,UAAAA,IAAI,CAACI,OAAL,CAAaF,MAAb;AACD;;AAEDH,QAAAA,EAAE,MAAF,SAAMC,IAAN;AACD,OAZD;AAaD;;;;EAnCyBrB,a;;AAsC5B0B,MAAM,CAACC,OAAP,GAAiBf,aAAjB","sourcesContent":["'use strict';\n\n/* eslint-disable\n  no-param-reassign,\n  space-before-function-paren\n*/\nconst MethodFactory = require('./MethodFactory');\n\nconst defaults = {\n  name (options) {\n    return options.logger.name;\n  },\n  time () {\n    return new Date().toTimeString().split(' ')[0];\n  },\n  level (options) {\n    return `[${options.level}]`;\n  },\n  template: '{{time}} {{level}} '\n};\n\nclass PrefixFactory extends MethodFactory {\n  constructor(logger, options) {\n    super(logger);\n\n    this.options = Object.assign({}, defaults, options);\n  }\n\n  interpolate(level) {\n    return this.options.template.replace(/{{([^{}]*)}}/g, (stache, prop) => {\n      const fn = this.options[prop];\n\n      if (fn) {\n        return fn({ level, logger: this.logger });\n      }\n\n      return stache;\n    });\n  }\n\n  make(method) {\n    const og = super.make(method);\n\n    return (...args) => {\n      const [first] = args;\n\n      const output = this.interpolate(method);\n\n      if (typeof first === 'string') {\n        args[0] = output + first;\n      } else {\n        args.unshift(output);\n      }\n\n      og(...args);\n    };\n  }\n}\n\nmodule.exports = PrefixFactory;\n"]},"metadata":{},"sourceType":"script"}