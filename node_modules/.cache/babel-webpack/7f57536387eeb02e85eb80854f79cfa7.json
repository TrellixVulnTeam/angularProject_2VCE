{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getEmittedFiles = void 0;\n\nvar path = require(\"path\");\n\nfunction getEmittedFiles(compilation) {\n  var files = []; // adds all chunks to the list of emitted files such as lazy loaded modules\n\n  var _iterator = _createForOfIteratorHelper(compilation.chunks),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var chunk = _step.value;\n\n      var _iterator2 = _createForOfIteratorHelper(chunk.files),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _file = _step2.value;\n          files.push({\n            // The id is guaranteed to exist at this point in the compilation process\n            // tslint:disable-next-line: no-non-null-assertion\n            id: chunk.id.toString(),\n            name: chunk.name,\n            file: _file,\n            extension: path.extname(_file),\n            initial: chunk.isOnlyInitial()\n          });\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    } // other all files\n\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(compilation.assets); _i < _Object$keys.length; _i++) {\n    var file = _Object$keys[_i];\n    files.push({\n      file: file,\n      extension: path.extname(file),\n      initial: false,\n      asset: true\n    });\n  } // dedupe\n\n\n  return files.filter(function (_ref, index) {\n    var file = _ref.file,\n        name = _ref.name;\n    return files.findIndex(function (f) {\n      return f.file === file && (!name || name === f.name);\n    }) === index;\n  });\n}\n\nexports.getEmittedFiles = getEmittedFiles;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-webpack/src/utils.js"],"names":["Object","defineProperty","exports","value","getEmittedFiles","path","require","compilation","files","chunks","chunk","file","push","id","toString","name","extension","extname","initial","isOnlyInitial","keys","assets","asset","filter","index","findIndex","f"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0B,KAAK,CAA/B;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,SAASF,eAAT,CAAyBG,WAAzB,EAAsC;AAClC,MAAMC,KAAK,GAAG,EAAd,CADkC,CAElC;;AAFkC,6CAGdD,WAAW,CAACE,MAHE;AAAA;;AAAA;AAGlC,wDAAwC;AAAA,UAA7BC,KAA6B;;AAAA,kDACjBA,KAAK,CAACF,KADW;AAAA;;AAAA;AACpC,+DAAgC;AAAA,cAArBG,KAAqB;AAC5BH,UAAAA,KAAK,CAACI,IAAN,CAAW;AACP;AACA;AACAC,YAAAA,EAAE,EAAEH,KAAK,CAACG,EAAN,CAASC,QAAT,EAHG;AAIPC,YAAAA,IAAI,EAAEL,KAAK,CAACK,IAJL;AAKPJ,YAAAA,IAAI,EAAJA,KALO;AAMPK,YAAAA,SAAS,EAAEX,IAAI,CAACY,OAAL,CAAaN,KAAb,CANJ;AAOPO,YAAAA,OAAO,EAAER,KAAK,CAACS,aAAN;AAPF,WAAX;AASH;AAXmC;AAAA;AAAA;AAAA;AAAA;AAYvC,KAfiC,CAgBlC;;AAhBkC;AAAA;AAAA;AAAA;AAAA;;AAiBlC,kCAAmBnB,MAAM,CAACoB,IAAP,CAAYb,WAAW,CAACc,MAAxB,CAAnB,kCAAoD;AAA/C,QAAMV,IAAI,mBAAV;AACDH,IAAAA,KAAK,CAACI,IAAN,CAAW;AAAED,MAAAA,IAAI,EAAJA,IAAF;AAAQK,MAAAA,SAAS,EAAEX,IAAI,CAACY,OAAL,CAAaN,IAAb,CAAnB;AAAuCO,MAAAA,OAAO,EAAE,KAAhD;AAAuDI,MAAAA,KAAK,EAAE;AAA9D,KAAX;AACH,GAnBiC,CAoBlC;;;AACA,SAAOd,KAAK,CAACe,MAAN,CAAa,gBAAiBC,KAAjB;AAAA,QAAGb,IAAH,QAAGA,IAAH;AAAA,QAASI,IAAT,QAASA,IAAT;AAAA,WAA2BP,KAAK,CAACiB,SAAN,CAAgB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACf,IAAF,KAAWA,IAAX,KAAoB,CAACI,IAAD,IAASA,IAAI,KAAKW,CAAC,CAACX,IAAxC,CAAJ;AAAA,KAAjB,MAAwES,KAAnG;AAAA,GAAb,CAAP;AACH;;AACDtB,OAAO,CAACE,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEmittedFiles = void 0;\nconst path = require(\"path\");\nfunction getEmittedFiles(compilation) {\n    const files = [];\n    // adds all chunks to the list of emitted files such as lazy loaded modules\n    for (const chunk of compilation.chunks) {\n        for (const file of chunk.files) {\n            files.push({\n                // The id is guaranteed to exist at this point in the compilation process\n                // tslint:disable-next-line: no-non-null-assertion\n                id: chunk.id.toString(),\n                name: chunk.name,\n                file,\n                extension: path.extname(file),\n                initial: chunk.isOnlyInitial(),\n            });\n        }\n    }\n    // other all files\n    for (const file of Object.keys(compilation.assets)) {\n        files.push({ file, extension: path.extname(file), initial: false, asset: true });\n    }\n    // dedupe\n    return files.filter(({ file, name }, index) => files.findIndex(f => f.file === file && (!name || name === f.name)) === index);\n}\nexports.getEmittedFiles = getEmittedFiles;\n"]},"metadata":{},"sourceType":"script"}