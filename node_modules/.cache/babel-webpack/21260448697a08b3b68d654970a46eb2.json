{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Dependency = require(\"../Dependency\");\n\nvar AMDRequireArrayDependency = /*#__PURE__*/function (_Dependency) {\n  _inherits(AMDRequireArrayDependency, _Dependency);\n\n  var _super = _createSuper(AMDRequireArrayDependency);\n\n  function AMDRequireArrayDependency(depsArray, range) {\n    var _this;\n\n    _classCallCheck(this, AMDRequireArrayDependency);\n\n    _this = _super.call(this);\n    _this.depsArray = depsArray;\n    _this.range = range;\n    return _this;\n  }\n\n  _createClass(AMDRequireArrayDependency, [{\n    key: \"type\",\n    get: function get() {\n      return \"amd require array\";\n    }\n  }]);\n\n  return AMDRequireArrayDependency;\n}(Dependency);\n\nAMDRequireArrayDependency.Template = /*#__PURE__*/function () {\n  function AMDRequireArrayDependencyTemplate() {\n    _classCallCheck(this, AMDRequireArrayDependencyTemplate);\n  }\n\n  _createClass(AMDRequireArrayDependencyTemplate, [{\n    key: \"apply\",\n    value: function apply(dep, source, runtime) {\n      var content = this.getContent(dep, runtime);\n      source.replace(dep.range[0], dep.range[1] - 1, content);\n    }\n  }, {\n    key: \"getContent\",\n    value: function getContent(dep, runtime) {\n      var _this2 = this;\n\n      var requires = dep.depsArray.map(function (dependency) {\n        return _this2.contentForDependency(dependency, runtime);\n      });\n      return \"[\".concat(requires.join(\", \"), \"]\");\n    }\n  }, {\n    key: \"contentForDependency\",\n    value: function contentForDependency(dep, runtime) {\n      if (typeof dep === \"string\") {\n        return dep;\n      }\n\n      if (dep.localModule) {\n        return dep.localModule.variableName();\n      } else {\n        return runtime.moduleExports({\n          module: dep.module,\n          request: dep.request\n        });\n      }\n    }\n  }]);\n\n  return AMDRequireArrayDependencyTemplate;\n}();\n\nmodule.exports = AMDRequireArrayDependency;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/dependencies/AMDRequireArrayDependency.js"],"names":["Dependency","require","AMDRequireArrayDependency","depsArray","range","Template","dep","source","runtime","content","getContent","replace","requires","map","dependency","contentForDependency","join","localModule","variableName","moduleExports","module","request","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AACA,IAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;IAEMC,yB;;;;;AACL,qCAAYC,SAAZ,EAAuBC,KAAvB,EAA8B;AAAA;;AAAA;;AAC7B;AACA,UAAKD,SAAL,GAAiBA,SAAjB;AACA,UAAKC,KAAL,GAAaA,KAAb;AAH6B;AAI7B;;;;SAED,eAAW;AACV,aAAO,mBAAP;AACA;;;;EATsCJ,U;;AAYxCE,yBAAyB,CAACG,QAA1B;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WACC,eAAMC,GAAN,EAAWC,MAAX,EAAmBC,OAAnB,EAA4B;AAC3B,UAAMC,OAAO,GAAG,KAAKC,UAAL,CAAgBJ,GAAhB,EAAqBE,OAArB,CAAhB;AACAD,MAAAA,MAAM,CAACI,OAAP,CAAeL,GAAG,CAACF,KAAJ,CAAU,CAAV,CAAf,EAA6BE,GAAG,CAACF,KAAJ,CAAU,CAAV,IAAe,CAA5C,EAA+CK,OAA/C;AACA;AAJF;AAAA;AAAA,WAMC,oBAAWH,GAAX,EAAgBE,OAAhB,EAAyB;AAAA;;AACxB,UAAMI,QAAQ,GAAGN,GAAG,CAACH,SAAJ,CAAcU,GAAd,CAAkB,UAAAC,UAAU,EAAI;AAChD,eAAO,MAAI,CAACC,oBAAL,CAA0BD,UAA1B,EAAsCN,OAAtC,CAAP;AACA,OAFgB,CAAjB;AAGA,wBAAWI,QAAQ,CAACI,IAAT,CAAc,IAAd,CAAX;AACA;AAXF;AAAA;AAAA,WAaC,8BAAqBV,GAArB,EAA0BE,OAA1B,EAAmC;AAClC,UAAI,OAAOF,GAAP,KAAe,QAAnB,EAA6B;AAC5B,eAAOA,GAAP;AACA;;AAED,UAAIA,GAAG,CAACW,WAAR,EAAqB;AACpB,eAAOX,GAAG,CAACW,WAAJ,CAAgBC,YAAhB,EAAP;AACA,OAFD,MAEO;AACN,eAAOV,OAAO,CAACW,aAAR,CAAsB;AAC5BC,UAAAA,MAAM,EAAEd,GAAG,CAACc,MADgB;AAE5BC,UAAAA,OAAO,EAAEf,GAAG,CAACe;AAFe,SAAtB,CAAP;AAIA;AACD;AA1BF;;AAAA;AAAA;;AA6BAD,MAAM,CAACE,OAAP,GAAiBpB,yBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst Dependency = require(\"../Dependency\");\n\nclass AMDRequireArrayDependency extends Dependency {\n\tconstructor(depsArray, range) {\n\t\tsuper();\n\t\tthis.depsArray = depsArray;\n\t\tthis.range = range;\n\t}\n\n\tget type() {\n\t\treturn \"amd require array\";\n\t}\n}\n\nAMDRequireArrayDependency.Template = class AMDRequireArrayDependencyTemplate {\n\tapply(dep, source, runtime) {\n\t\tconst content = this.getContent(dep, runtime);\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\n\t}\n\n\tgetContent(dep, runtime) {\n\t\tconst requires = dep.depsArray.map(dependency => {\n\t\t\treturn this.contentForDependency(dependency, runtime);\n\t\t});\n\t\treturn `[${requires.join(\", \")}]`;\n\t}\n\n\tcontentForDependency(dep, runtime) {\n\t\tif (typeof dep === \"string\") {\n\t\t\treturn dep;\n\t\t}\n\n\t\tif (dep.localModule) {\n\t\t\treturn dep.localModule.variableName();\n\t\t} else {\n\t\t\treturn runtime.moduleExports({\n\t\t\t\tmodule: dep.module,\n\t\t\t\trequest: dep.request\n\t\t\t});\n\t\t}\n\t}\n};\n\nmodule.exports = AMDRequireArrayDependency;\n"]},"metadata":{},"sourceType":"script"}