{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler/src/ml_parser/tags\", [\"require\", \"exports\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.NGSP_UNICODE = exports.NAMED_ENTITIES = exports.mergeNsAndName = exports.getNsPrefix = exports.isNgTemplate = exports.isNgContent = exports.isNgContainer = exports.splitNsName = exports.TagContentType = void 0;\n  var TagContentType;\n\n  (function (TagContentType) {\n    TagContentType[TagContentType[\"RAW_TEXT\"] = 0] = \"RAW_TEXT\";\n    TagContentType[TagContentType[\"ESCAPABLE_RAW_TEXT\"] = 1] = \"ESCAPABLE_RAW_TEXT\";\n    TagContentType[TagContentType[\"PARSABLE_DATA\"] = 2] = \"PARSABLE_DATA\";\n  })(TagContentType = exports.TagContentType || (exports.TagContentType = {}));\n\n  function splitNsName(elementName) {\n    if (elementName[0] != ':') {\n      return [null, elementName];\n    }\n\n    var colonIndex = elementName.indexOf(':', 1);\n\n    if (colonIndex == -1) {\n      throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n  }\n\n  exports.splitNsName = splitNsName; // `<ng-container>` tags work the same regardless the namespace\n\n  function isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n  }\n\n  exports.isNgContainer = isNgContainer; // `<ng-content>` tags work the same regardless the namespace\n\n  function isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n  }\n\n  exports.isNgContent = isNgContent; // `<ng-template>` tags work the same regardless the namespace\n\n  function isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n  }\n\n  exports.isNgTemplate = isNgTemplate;\n\n  function getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n  }\n\n  exports.getNsPrefix = getNsPrefix;\n\n  function mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n  }\n\n  exports.mergeNsAndName = mergeNsAndName; // see https://www.w3.org/TR/html51/syntax.html#named-character-references\n  // see https://html.spec.whatwg.org/multipage/entities.json\n  // This list is not exhaustive to keep the compiler footprint low.\n  // The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n  // exist.\n\n  exports.NAMED_ENTITIES = {\n    'Aacute': \"\\xC1\",\n    'aacute': \"\\xE1\",\n    'Acirc': \"\\xC2\",\n    'acirc': \"\\xE2\",\n    'acute': \"\\xB4\",\n    'AElig': \"\\xC6\",\n    'aelig': \"\\xE6\",\n    'Agrave': \"\\xC0\",\n    'agrave': \"\\xE0\",\n    'alefsym': \"\\u2135\",\n    'Alpha': \"\\u0391\",\n    'alpha': \"\\u03B1\",\n    'amp': '&',\n    'and': \"\\u2227\",\n    'ang': \"\\u2220\",\n    'apos': \"'\",\n    'Aring': \"\\xC5\",\n    'aring': \"\\xE5\",\n    'asymp': \"\\u2248\",\n    'Atilde': \"\\xC3\",\n    'atilde': \"\\xE3\",\n    'Auml': \"\\xC4\",\n    'auml': \"\\xE4\",\n    'bdquo': \"\\u201E\",\n    'Beta': \"\\u0392\",\n    'beta': \"\\u03B2\",\n    'brvbar': \"\\xA6\",\n    'bull': \"\\u2022\",\n    'cap': \"\\u2229\",\n    'Ccedil': \"\\xC7\",\n    'ccedil': \"\\xE7\",\n    'cedil': \"\\xB8\",\n    'cent': \"\\xA2\",\n    'Chi': \"\\u03A7\",\n    'chi': \"\\u03C7\",\n    'circ': \"\\u02C6\",\n    'clubs': \"\\u2663\",\n    'cong': \"\\u2245\",\n    'copy': \"\\xA9\",\n    'crarr': \"\\u21B5\",\n    'cup': \"\\u222A\",\n    'curren': \"\\xA4\",\n    'dagger': \"\\u2020\",\n    'Dagger': \"\\u2021\",\n    'darr': \"\\u2193\",\n    'dArr': \"\\u21D3\",\n    'deg': \"\\xB0\",\n    'Delta': \"\\u0394\",\n    'delta': \"\\u03B4\",\n    'diams': \"\\u2666\",\n    'divide': \"\\xF7\",\n    'Eacute': \"\\xC9\",\n    'eacute': \"\\xE9\",\n    'Ecirc': \"\\xCA\",\n    'ecirc': \"\\xEA\",\n    'Egrave': \"\\xC8\",\n    'egrave': \"\\xE8\",\n    'empty': \"\\u2205\",\n    'emsp': \"\\u2003\",\n    'ensp': \"\\u2002\",\n    'Epsilon': \"\\u0395\",\n    'epsilon': \"\\u03B5\",\n    'equiv': \"\\u2261\",\n    'Eta': \"\\u0397\",\n    'eta': \"\\u03B7\",\n    'ETH': \"\\xD0\",\n    'eth': \"\\xF0\",\n    'Euml': \"\\xCB\",\n    'euml': \"\\xEB\",\n    'euro': \"\\u20AC\",\n    'exist': \"\\u2203\",\n    'fnof': \"\\u0192\",\n    'forall': \"\\u2200\",\n    'frac12': \"\\xBD\",\n    'frac14': \"\\xBC\",\n    'frac34': \"\\xBE\",\n    'frasl': \"\\u2044\",\n    'Gamma': \"\\u0393\",\n    'gamma': \"\\u03B3\",\n    'ge': \"\\u2265\",\n    'gt': '>',\n    'harr': \"\\u2194\",\n    'hArr': \"\\u21D4\",\n    'hearts': \"\\u2665\",\n    'hellip': \"\\u2026\",\n    'Iacute': \"\\xCD\",\n    'iacute': \"\\xED\",\n    'Icirc': \"\\xCE\",\n    'icirc': \"\\xEE\",\n    'iexcl': \"\\xA1\",\n    'Igrave': \"\\xCC\",\n    'igrave': \"\\xEC\",\n    'image': \"\\u2111\",\n    'infin': \"\\u221E\",\n    'int': \"\\u222B\",\n    'Iota': \"\\u0399\",\n    'iota': \"\\u03B9\",\n    'iquest': \"\\xBF\",\n    'isin': \"\\u2208\",\n    'Iuml': \"\\xCF\",\n    'iuml': \"\\xEF\",\n    'Kappa': \"\\u039A\",\n    'kappa': \"\\u03BA\",\n    'Lambda': \"\\u039B\",\n    'lambda': \"\\u03BB\",\n    'lang': \"\\u27E8\",\n    'laquo': \"\\xAB\",\n    'larr': \"\\u2190\",\n    'lArr': \"\\u21D0\",\n    'lceil': \"\\u2308\",\n    'ldquo': \"\\u201C\",\n    'le': \"\\u2264\",\n    'lfloor': \"\\u230A\",\n    'lowast': \"\\u2217\",\n    'loz': \"\\u25CA\",\n    'lrm': \"\\u200E\",\n    'lsaquo': \"\\u2039\",\n    'lsquo': \"\\u2018\",\n    'lt': '<',\n    'macr': \"\\xAF\",\n    'mdash': \"\\u2014\",\n    'micro': \"\\xB5\",\n    'middot': \"\\xB7\",\n    'minus': \"\\u2212\",\n    'Mu': \"\\u039C\",\n    'mu': \"\\u03BC\",\n    'nabla': \"\\u2207\",\n    'nbsp': \"\\xA0\",\n    'ndash': \"\\u2013\",\n    'ne': \"\\u2260\",\n    'ni': \"\\u220B\",\n    'not': \"\\xAC\",\n    'notin': \"\\u2209\",\n    'nsub': \"\\u2284\",\n    'Ntilde': \"\\xD1\",\n    'ntilde': \"\\xF1\",\n    'Nu': \"\\u039D\",\n    'nu': \"\\u03BD\",\n    'Oacute': \"\\xD3\",\n    'oacute': \"\\xF3\",\n    'Ocirc': \"\\xD4\",\n    'ocirc': \"\\xF4\",\n    'OElig': \"\\u0152\",\n    'oelig': \"\\u0153\",\n    'Ograve': \"\\xD2\",\n    'ograve': \"\\xF2\",\n    'oline': \"\\u203E\",\n    'Omega': \"\\u03A9\",\n    'omega': \"\\u03C9\",\n    'Omicron': \"\\u039F\",\n    'omicron': \"\\u03BF\",\n    'oplus': \"\\u2295\",\n    'or': \"\\u2228\",\n    'ordf': \"\\xAA\",\n    'ordm': \"\\xBA\",\n    'Oslash': \"\\xD8\",\n    'oslash': \"\\xF8\",\n    'Otilde': \"\\xD5\",\n    'otilde': \"\\xF5\",\n    'otimes': \"\\u2297\",\n    'Ouml': \"\\xD6\",\n    'ouml': \"\\xF6\",\n    'para': \"\\xB6\",\n    'permil': \"\\u2030\",\n    'perp': \"\\u22A5\",\n    'Phi': \"\\u03A6\",\n    'phi': \"\\u03C6\",\n    'Pi': \"\\u03A0\",\n    'pi': \"\\u03C0\",\n    'piv': \"\\u03D6\",\n    'plusmn': \"\\xB1\",\n    'pound': \"\\xA3\",\n    'prime': \"\\u2032\",\n    'Prime': \"\\u2033\",\n    'prod': \"\\u220F\",\n    'prop': \"\\u221D\",\n    'Psi': \"\\u03A8\",\n    'psi': \"\\u03C8\",\n    'quot': \"\\\"\",\n    'radic': \"\\u221A\",\n    'rang': \"\\u27E9\",\n    'raquo': \"\\xBB\",\n    'rarr': \"\\u2192\",\n    'rArr': \"\\u21D2\",\n    'rceil': \"\\u2309\",\n    'rdquo': \"\\u201D\",\n    'real': \"\\u211C\",\n    'reg': \"\\xAE\",\n    'rfloor': \"\\u230B\",\n    'Rho': \"\\u03A1\",\n    'rho': \"\\u03C1\",\n    'rlm': \"\\u200F\",\n    'rsaquo': \"\\u203A\",\n    'rsquo': \"\\u2019\",\n    'sbquo': \"\\u201A\",\n    'Scaron': \"\\u0160\",\n    'scaron': \"\\u0161\",\n    'sdot': \"\\u22C5\",\n    'sect': \"\\xA7\",\n    'shy': \"\\xAD\",\n    'Sigma': \"\\u03A3\",\n    'sigma': \"\\u03C3\",\n    'sigmaf': \"\\u03C2\",\n    'sim': \"\\u223C\",\n    'spades': \"\\u2660\",\n    'sub': \"\\u2282\",\n    'sube': \"\\u2286\",\n    'sum': \"\\u2211\",\n    'sup': \"\\u2283\",\n    'sup1': \"\\xB9\",\n    'sup2': \"\\xB2\",\n    'sup3': \"\\xB3\",\n    'supe': \"\\u2287\",\n    'szlig': \"\\xDF\",\n    'Tau': \"\\u03A4\",\n    'tau': \"\\u03C4\",\n    'there4': \"\\u2234\",\n    'Theta': \"\\u0398\",\n    'theta': \"\\u03B8\",\n    'thetasym': \"\\u03D1\",\n    'thinsp': \"\\u2009\",\n    'THORN': \"\\xDE\",\n    'thorn': \"\\xFE\",\n    'tilde': \"\\u02DC\",\n    'times': \"\\xD7\",\n    'trade': \"\\u2122\",\n    'Uacute': \"\\xDA\",\n    'uacute': \"\\xFA\",\n    'uarr': \"\\u2191\",\n    'uArr': \"\\u21D1\",\n    'Ucirc': \"\\xDB\",\n    'ucirc': \"\\xFB\",\n    'Ugrave': \"\\xD9\",\n    'ugrave': \"\\xF9\",\n    'uml': \"\\xA8\",\n    'upsih': \"\\u03D2\",\n    'Upsilon': \"\\u03A5\",\n    'upsilon': \"\\u03C5\",\n    'Uuml': \"\\xDC\",\n    'uuml': \"\\xFC\",\n    'weierp': \"\\u2118\",\n    'Xi': \"\\u039E\",\n    'xi': \"\\u03BE\",\n    'Yacute': \"\\xDD\",\n    'yacute': \"\\xFD\",\n    'yen': \"\\xA5\",\n    'yuml': \"\\xFF\",\n    'Yuml': \"\\u0178\",\n    'Zeta': \"\\u0396\",\n    'zeta': \"\\u03B6\",\n    'zwj': \"\\u200D\",\n    'zwnj': \"\\u200C\"\n  }; // The &ngsp; pseudo-entity is denoting a space. see:\n  // https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\n\n  exports.NGSP_UNICODE = \"\\uE500\";\n  exports.NAMED_ENTITIES['ngsp'] = exports.NGSP_UNICODE;\n});","map":{"version":3,"sources":["../../../../../../../packages/compiler/src/ml_parser/tags.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport enum TagContentType {\n  RAW_TEXT,\n  ESCAPABLE_RAW_TEXT,\n  PARSABLE_DATA\n}\n\nexport interface TagDefinition {\n  closedByParent: boolean;\n  implicitNamespacePrefix: string|null;\n  isVoid: boolean;\n  ignoreFirstLf: boolean;\n  canSelfClose: boolean;\n  preventNamespaceInheritance: boolean;\n\n  isClosedByChild(name: string): boolean;\n  getContentType(prefix?: string): TagContentType;\n}\n\nexport function splitNsName(elementName: string): [string|null, string] {\n  if (elementName[0] != ':') {\n    return [null, elementName];\n  }\n\n  const colonIndex = elementName.indexOf(':', 1);\n\n  if (colonIndex == -1) {\n    throw new Error(`Unsupported format \"${elementName}\" expecting \":namespace:name\"`);\n  }\n\n  return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n\n// `<ng-container>` tags work the same regardless the namespace\nexport function isNgContainer(tagName: string): boolean {\n  return splitNsName(tagName)[1] === 'ng-container';\n}\n\n// `<ng-content>` tags work the same regardless the namespace\nexport function isNgContent(tagName: string): boolean {\n  return splitNsName(tagName)[1] === 'ng-content';\n}\n\n// `<ng-template>` tags work the same regardless the namespace\nexport function isNgTemplate(tagName: string): boolean {\n  return splitNsName(tagName)[1] === 'ng-template';\n}\n\nexport function getNsPrefix(fullName: string): string;\nexport function getNsPrefix(fullName: null): null;\nexport function getNsPrefix(fullName: string|null): string|null {\n  return fullName === null ? null : splitNsName(fullName)[0];\n}\n\nexport function mergeNsAndName(prefix: string, localName: string): string {\n  return prefix ? `:${prefix}:${localName}` : localName;\n}\n\n// see https://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nexport const NAMED_ENTITIES: {[k: string]: string} = {\n  'Aacute': '\\u00C1',\n  'aacute': '\\u00E1',\n  'Acirc': '\\u00C2',\n  'acirc': '\\u00E2',\n  'acute': '\\u00B4',\n  'AElig': '\\u00C6',\n  'aelig': '\\u00E6',\n  'Agrave': '\\u00C0',\n  'agrave': '\\u00E0',\n  'alefsym': '\\u2135',\n  'Alpha': '\\u0391',\n  'alpha': '\\u03B1',\n  'amp': '&',\n  'and': '\\u2227',\n  'ang': '\\u2220',\n  'apos': '\\u0027',\n  'Aring': '\\u00C5',\n  'aring': '\\u00E5',\n  'asymp': '\\u2248',\n  'Atilde': '\\u00C3',\n  'atilde': '\\u00E3',\n  'Auml': '\\u00C4',\n  'auml': '\\u00E4',\n  'bdquo': '\\u201E',\n  'Beta': '\\u0392',\n  'beta': '\\u03B2',\n  'brvbar': '\\u00A6',\n  'bull': '\\u2022',\n  'cap': '\\u2229',\n  'Ccedil': '\\u00C7',\n  'ccedil': '\\u00E7',\n  'cedil': '\\u00B8',\n  'cent': '\\u00A2',\n  'Chi': '\\u03A7',\n  'chi': '\\u03C7',\n  'circ': '\\u02C6',\n  'clubs': '\\u2663',\n  'cong': '\\u2245',\n  'copy': '\\u00A9',\n  'crarr': '\\u21B5',\n  'cup': '\\u222A',\n  'curren': '\\u00A4',\n  'dagger': '\\u2020',\n  'Dagger': '\\u2021',\n  'darr': '\\u2193',\n  'dArr': '\\u21D3',\n  'deg': '\\u00B0',\n  'Delta': '\\u0394',\n  'delta': '\\u03B4',\n  'diams': '\\u2666',\n  'divide': '\\u00F7',\n  'Eacute': '\\u00C9',\n  'eacute': '\\u00E9',\n  'Ecirc': '\\u00CA',\n  'ecirc': '\\u00EA',\n  'Egrave': '\\u00C8',\n  'egrave': '\\u00E8',\n  'empty': '\\u2205',\n  'emsp': '\\u2003',\n  'ensp': '\\u2002',\n  'Epsilon': '\\u0395',\n  'epsilon': '\\u03B5',\n  'equiv': '\\u2261',\n  'Eta': '\\u0397',\n  'eta': '\\u03B7',\n  'ETH': '\\u00D0',\n  'eth': '\\u00F0',\n  'Euml': '\\u00CB',\n  'euml': '\\u00EB',\n  'euro': '\\u20AC',\n  'exist': '\\u2203',\n  'fnof': '\\u0192',\n  'forall': '\\u2200',\n  'frac12': '\\u00BD',\n  'frac14': '\\u00BC',\n  'frac34': '\\u00BE',\n  'frasl': '\\u2044',\n  'Gamma': '\\u0393',\n  'gamma': '\\u03B3',\n  'ge': '\\u2265',\n  'gt': '>',\n  'harr': '\\u2194',\n  'hArr': '\\u21D4',\n  'hearts': '\\u2665',\n  'hellip': '\\u2026',\n  'Iacute': '\\u00CD',\n  'iacute': '\\u00ED',\n  'Icirc': '\\u00CE',\n  'icirc': '\\u00EE',\n  'iexcl': '\\u00A1',\n  'Igrave': '\\u00CC',\n  'igrave': '\\u00EC',\n  'image': '\\u2111',\n  'infin': '\\u221E',\n  'int': '\\u222B',\n  'Iota': '\\u0399',\n  'iota': '\\u03B9',\n  'iquest': '\\u00BF',\n  'isin': '\\u2208',\n  'Iuml': '\\u00CF',\n  'iuml': '\\u00EF',\n  'Kappa': '\\u039A',\n  'kappa': '\\u03BA',\n  'Lambda': '\\u039B',\n  'lambda': '\\u03BB',\n  'lang': '\\u27E8',\n  'laquo': '\\u00AB',\n  'larr': '\\u2190',\n  'lArr': '\\u21D0',\n  'lceil': '\\u2308',\n  'ldquo': '\\u201C',\n  'le': '\\u2264',\n  'lfloor': '\\u230A',\n  'lowast': '\\u2217',\n  'loz': '\\u25CA',\n  'lrm': '\\u200E',\n  'lsaquo': '\\u2039',\n  'lsquo': '\\u2018',\n  'lt': '<',\n  'macr': '\\u00AF',\n  'mdash': '\\u2014',\n  'micro': '\\u00B5',\n  'middot': '\\u00B7',\n  'minus': '\\u2212',\n  'Mu': '\\u039C',\n  'mu': '\\u03BC',\n  'nabla': '\\u2207',\n  'nbsp': '\\u00A0',\n  'ndash': '\\u2013',\n  'ne': '\\u2260',\n  'ni': '\\u220B',\n  'not': '\\u00AC',\n  'notin': '\\u2209',\n  'nsub': '\\u2284',\n  'Ntilde': '\\u00D1',\n  'ntilde': '\\u00F1',\n  'Nu': '\\u039D',\n  'nu': '\\u03BD',\n  'Oacute': '\\u00D3',\n  'oacute': '\\u00F3',\n  'Ocirc': '\\u00D4',\n  'ocirc': '\\u00F4',\n  'OElig': '\\u0152',\n  'oelig': '\\u0153',\n  'Ograve': '\\u00D2',\n  'ograve': '\\u00F2',\n  'oline': '\\u203E',\n  'Omega': '\\u03A9',\n  'omega': '\\u03C9',\n  'Omicron': '\\u039F',\n  'omicron': '\\u03BF',\n  'oplus': '\\u2295',\n  'or': '\\u2228',\n  'ordf': '\\u00AA',\n  'ordm': '\\u00BA',\n  'Oslash': '\\u00D8',\n  'oslash': '\\u00F8',\n  'Otilde': '\\u00D5',\n  'otilde': '\\u00F5',\n  'otimes': '\\u2297',\n  'Ouml': '\\u00D6',\n  'ouml': '\\u00F6',\n  'para': '\\u00B6',\n  'permil': '\\u2030',\n  'perp': '\\u22A5',\n  'Phi': '\\u03A6',\n  'phi': '\\u03C6',\n  'Pi': '\\u03A0',\n  'pi': '\\u03C0',\n  'piv': '\\u03D6',\n  'plusmn': '\\u00B1',\n  'pound': '\\u00A3',\n  'prime': '\\u2032',\n  'Prime': '\\u2033',\n  'prod': '\\u220F',\n  'prop': '\\u221D',\n  'Psi': '\\u03A8',\n  'psi': '\\u03C8',\n  'quot': '\\u0022',\n  'radic': '\\u221A',\n  'rang': '\\u27E9',\n  'raquo': '\\u00BB',\n  'rarr': '\\u2192',\n  'rArr': '\\u21D2',\n  'rceil': '\\u2309',\n  'rdquo': '\\u201D',\n  'real': '\\u211C',\n  'reg': '\\u00AE',\n  'rfloor': '\\u230B',\n  'Rho': '\\u03A1',\n  'rho': '\\u03C1',\n  'rlm': '\\u200F',\n  'rsaquo': '\\u203A',\n  'rsquo': '\\u2019',\n  'sbquo': '\\u201A',\n  'Scaron': '\\u0160',\n  'scaron': '\\u0161',\n  'sdot': '\\u22C5',\n  'sect': '\\u00A7',\n  'shy': '\\u00AD',\n  'Sigma': '\\u03A3',\n  'sigma': '\\u03C3',\n  'sigmaf': '\\u03C2',\n  'sim': '\\u223C',\n  'spades': '\\u2660',\n  'sub': '\\u2282',\n  'sube': '\\u2286',\n  'sum': '\\u2211',\n  'sup': '\\u2283',\n  'sup1': '\\u00B9',\n  'sup2': '\\u00B2',\n  'sup3': '\\u00B3',\n  'supe': '\\u2287',\n  'szlig': '\\u00DF',\n  'Tau': '\\u03A4',\n  'tau': '\\u03C4',\n  'there4': '\\u2234',\n  'Theta': '\\u0398',\n  'theta': '\\u03B8',\n  'thetasym': '\\u03D1',\n  'thinsp': '\\u2009',\n  'THORN': '\\u00DE',\n  'thorn': '\\u00FE',\n  'tilde': '\\u02DC',\n  'times': '\\u00D7',\n  'trade': '\\u2122',\n  'Uacute': '\\u00DA',\n  'uacute': '\\u00FA',\n  'uarr': '\\u2191',\n  'uArr': '\\u21D1',\n  'Ucirc': '\\u00DB',\n  'ucirc': '\\u00FB',\n  'Ugrave': '\\u00D9',\n  'ugrave': '\\u00F9',\n  'uml': '\\u00A8',\n  'upsih': '\\u03D2',\n  'Upsilon': '\\u03A5',\n  'upsilon': '\\u03C5',\n  'Uuml': '\\u00DC',\n  'uuml': '\\u00FC',\n  'weierp': '\\u2118',\n  'Xi': '\\u039E',\n  'xi': '\\u03BE',\n  'Yacute': '\\u00DD',\n  'yacute': '\\u00FD',\n  'yen': '\\u00A5',\n  'yuml': '\\u00FF',\n  'Yuml': '\\u0178',\n  'Zeta': '\\u0396',\n  'zeta': '\\u03B6',\n  'zwj': '\\u200D',\n  'zwnj': '\\u200C',\n};\n\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nexport const NGSP_UNICODE = '\\uE500';\n\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}