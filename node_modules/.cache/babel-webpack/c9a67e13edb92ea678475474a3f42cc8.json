{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _require = require(\"webpack-sources\"),\n    OriginalSource = _require.OriginalSource,\n    RawSource = _require.RawSource;\n\nvar Module = require(\"./Module\");\n\nvar WebpackMissingModule = require(\"./dependencies/WebpackMissingModule\");\n\nvar Template = require(\"./Template\");\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\n\nvar ExternalModule = /*#__PURE__*/function (_Module) {\n  _inherits(ExternalModule, _Module);\n\n  var _super = _createSuper(ExternalModule);\n\n  function ExternalModule(request, type, userRequest) {\n    var _this;\n\n    _classCallCheck(this, ExternalModule);\n\n    _this = _super.call(this, \"javascript/dynamic\", null); // Info from Factory\n\n    _this.request = request;\n    _this.externalType = type;\n    _this.userRequest = userRequest;\n    _this.external = true;\n    return _this;\n  }\n\n  _createClass(ExternalModule, [{\n    key: \"libIdent\",\n    value: function libIdent() {\n      return this.userRequest;\n    }\n  }, {\n    key: \"chunkCondition\",\n    value: function chunkCondition(chunk) {\n      return chunk.hasEntryModule();\n    }\n  }, {\n    key: \"identifier\",\n    value: function identifier() {\n      return \"external \" + JSON.stringify(this.request);\n    }\n  }, {\n    key: \"readableIdentifier\",\n    value: function readableIdentifier() {\n      return \"external \" + JSON.stringify(this.request);\n    }\n  }, {\n    key: \"needRebuild\",\n    value: function needRebuild() {\n      return false;\n    }\n  }, {\n    key: \"build\",\n    value: function build(options, compilation, resolver, fs, callback) {\n      this.built = true;\n      this.buildMeta = {};\n      this.buildInfo = {};\n      callback();\n    }\n  }, {\n    key: \"getSourceForGlobalVariableExternal\",\n    value: function getSourceForGlobalVariableExternal(variableName, type) {\n      if (!Array.isArray(variableName)) {\n        // make it an array as the look up works the same basically\n        variableName = [variableName];\n      } // needed for e.g. window[\"some\"][\"thing\"]\n\n\n      var objectLookup = variableName.map(function (r) {\n        return \"[\".concat(JSON.stringify(r), \"]\");\n      }).join(\"\");\n      return \"(function() { module.exports = \".concat(type).concat(objectLookup, \"; }());\");\n    }\n  }, {\n    key: \"getSourceForCommonJsExternal\",\n    value: function getSourceForCommonJsExternal(moduleAndSpecifiers) {\n      if (!Array.isArray(moduleAndSpecifiers)) {\n        return \"module.exports = require(\".concat(JSON.stringify(moduleAndSpecifiers), \");\");\n      }\n\n      var moduleName = moduleAndSpecifiers[0];\n      var objectLookup = moduleAndSpecifiers.slice(1).map(function (r) {\n        return \"[\".concat(JSON.stringify(r), \"]\");\n      }).join(\"\");\n      return \"module.exports = require(\".concat(JSON.stringify(moduleName), \")\").concat(objectLookup, \";\");\n    }\n  }, {\n    key: \"checkExternalVariable\",\n    value: function checkExternalVariable(variableToCheck, request) {\n      return \"if(typeof \".concat(variableToCheck, \" === 'undefined') {\").concat(WebpackMissingModule.moduleCode(request), \"}\\n\");\n    }\n  }, {\n    key: \"getSourceForAmdOrUmdExternal\",\n    value: function getSourceForAmdOrUmdExternal(id, optional, request) {\n      var externalVariable = \"__WEBPACK_EXTERNAL_MODULE_\".concat(Template.toIdentifier(\"\".concat(id)), \"__\");\n      var missingModuleError = optional ? this.checkExternalVariable(externalVariable, request) : \"\";\n      return \"\".concat(missingModuleError, \"module.exports = \").concat(externalVariable, \";\");\n    }\n  }, {\n    key: \"getSourceForDefaultCase\",\n    value: function getSourceForDefaultCase(optional, request) {\n      if (!Array.isArray(request)) {\n        // make it an array as the look up works the same basically\n        request = [request];\n      }\n\n      var variableName = request[0];\n      var missingModuleError = optional ? this.checkExternalVariable(variableName, request.join(\".\")) : \"\";\n      var objectLookup = request.slice(1).map(function (r) {\n        return \"[\".concat(JSON.stringify(r), \"]\");\n      }).join(\"\");\n      return \"\".concat(missingModuleError, \"module.exports = \").concat(variableName).concat(objectLookup, \";\");\n    }\n  }, {\n    key: \"getSourceString\",\n    value: function getSourceString(runtime) {\n      var request = typeof this.request === \"object\" && !Array.isArray(this.request) ? this.request[this.externalType] : this.request;\n\n      switch (this.externalType) {\n        case \"this\":\n        case \"window\":\n        case \"self\":\n          return this.getSourceForGlobalVariableExternal(request, this.externalType);\n\n        case \"global\":\n          return this.getSourceForGlobalVariableExternal(request, runtime.outputOptions.globalObject);\n\n        case \"commonjs\":\n        case \"commonjs2\":\n          return this.getSourceForCommonJsExternal(request);\n\n        case \"amd\":\n        case \"amd-require\":\n        case \"umd\":\n        case \"umd2\":\n        case \"system\":\n          return this.getSourceForAmdOrUmdExternal(this.id, this.optional, request);\n\n        default:\n          return this.getSourceForDefaultCase(this.optional, request);\n      }\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource(sourceString) {\n      if (this.useSourceMap) {\n        return new OriginalSource(sourceString, this.identifier());\n      }\n\n      return new RawSource(sourceString);\n    }\n  }, {\n    key: \"source\",\n    value: function source(dependencyTemplates, runtime) {\n      return this.getSource(this.getSourceString(runtime));\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      return 42;\n    }\n    /**\n     * @param {Hash} hash the hash used to track dependencies\n     * @returns {void}\n     */\n\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash) {\n      hash.update(this.externalType);\n      hash.update(JSON.stringify(this.request));\n      hash.update(JSON.stringify(Boolean(this.optional)));\n\n      _get(_getPrototypeOf(ExternalModule.prototype), \"updateHash\", this).call(this, hash);\n    }\n  }]);\n\n  return ExternalModule;\n}(Module);\n\nmodule.exports = ExternalModule;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/ExternalModule.js"],"names":["require","OriginalSource","RawSource","Module","WebpackMissingModule","Template","ExternalModule","request","type","userRequest","externalType","external","chunk","hasEntryModule","JSON","stringify","options","compilation","resolver","fs","callback","built","buildMeta","buildInfo","variableName","Array","isArray","objectLookup","map","r","join","moduleAndSpecifiers","moduleName","slice","variableToCheck","moduleCode","id","optional","externalVariable","toIdentifier","missingModuleError","checkExternalVariable","runtime","getSourceForGlobalVariableExternal","outputOptions","globalObject","getSourceForCommonJsExternal","getSourceForAmdOrUmdExternal","getSourceForDefaultCase","sourceString","useSourceMap","identifier","dependencyTemplates","getSource","getSourceString","hash","update","Boolean","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { OriginalSource, RawSource } = require(\"webpack-sources\");\nconst Module = require(\"./Module\");\nconst WebpackMissingModule = require(\"./dependencies/WebpackMissingModule\");\nconst Template = require(\"./Template\");\n\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\nclass ExternalModule extends Module {\n\tconstructor(request, type, userRequest) {\n\t\tsuper(\"javascript/dynamic\", null);\n\n\t\t// Info from Factory\n\t\tthis.request = request;\n\t\tthis.externalType = type;\n\t\tthis.userRequest = userRequest;\n\t\tthis.external = true;\n\t}\n\n\tlibIdent() {\n\t\treturn this.userRequest;\n\t}\n\n\tchunkCondition(chunk) {\n\t\treturn chunk.hasEntryModule();\n\t}\n\n\tidentifier() {\n\t\treturn \"external \" + JSON.stringify(this.request);\n\t}\n\n\treadableIdentifier() {\n\t\treturn \"external \" + JSON.stringify(this.request);\n\t}\n\n\tneedRebuild() {\n\t\treturn false;\n\t}\n\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.built = true;\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {};\n\t\tcallback();\n\t}\n\n\tgetSourceForGlobalVariableExternal(variableName, type) {\n\t\tif (!Array.isArray(variableName)) {\n\t\t\t// make it an array as the look up works the same basically\n\t\t\tvariableName = [variableName];\n\t\t}\n\n\t\t// needed for e.g. window[\"some\"][\"thing\"]\n\t\tconst objectLookup = variableName\n\t\t\t.map(r => `[${JSON.stringify(r)}]`)\n\t\t\t.join(\"\");\n\t\treturn `(function() { module.exports = ${type}${objectLookup}; }());`;\n\t}\n\n\tgetSourceForCommonJsExternal(moduleAndSpecifiers) {\n\t\tif (!Array.isArray(moduleAndSpecifiers)) {\n\t\t\treturn `module.exports = require(${JSON.stringify(\n\t\t\t\tmoduleAndSpecifiers\n\t\t\t)});`;\n\t\t}\n\n\t\tconst moduleName = moduleAndSpecifiers[0];\n\t\tconst objectLookup = moduleAndSpecifiers\n\t\t\t.slice(1)\n\t\t\t.map(r => `[${JSON.stringify(r)}]`)\n\t\t\t.join(\"\");\n\t\treturn `module.exports = require(${JSON.stringify(\n\t\t\tmoduleName\n\t\t)})${objectLookup};`;\n\t}\n\n\tcheckExternalVariable(variableToCheck, request) {\n\t\treturn `if(typeof ${variableToCheck} === 'undefined') {${WebpackMissingModule.moduleCode(\n\t\t\trequest\n\t\t)}}\\n`;\n\t}\n\n\tgetSourceForAmdOrUmdExternal(id, optional, request) {\n\t\tconst externalVariable = `__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(\n\t\t\t`${id}`\n\t\t)}__`;\n\t\tconst missingModuleError = optional\n\t\t\t? this.checkExternalVariable(externalVariable, request)\n\t\t\t: \"\";\n\t\treturn `${missingModuleError}module.exports = ${externalVariable};`;\n\t}\n\n\tgetSourceForDefaultCase(optional, request) {\n\t\tif (!Array.isArray(request)) {\n\t\t\t// make it an array as the look up works the same basically\n\t\t\trequest = [request];\n\t\t}\n\n\t\tconst variableName = request[0];\n\t\tconst missingModuleError = optional\n\t\t\t? this.checkExternalVariable(variableName, request.join(\".\"))\n\t\t\t: \"\";\n\t\tconst objectLookup = request\n\t\t\t.slice(1)\n\t\t\t.map(r => `[${JSON.stringify(r)}]`)\n\t\t\t.join(\"\");\n\t\treturn `${missingModuleError}module.exports = ${variableName}${objectLookup};`;\n\t}\n\n\tgetSourceString(runtime) {\n\t\tconst request =\n\t\t\ttypeof this.request === \"object\" && !Array.isArray(this.request)\n\t\t\t\t? this.request[this.externalType]\n\t\t\t\t: this.request;\n\t\tswitch (this.externalType) {\n\t\t\tcase \"this\":\n\t\t\tcase \"window\":\n\t\t\tcase \"self\":\n\t\t\t\treturn this.getSourceForGlobalVariableExternal(\n\t\t\t\t\trequest,\n\t\t\t\t\tthis.externalType\n\t\t\t\t);\n\t\t\tcase \"global\":\n\t\t\t\treturn this.getSourceForGlobalVariableExternal(\n\t\t\t\t\trequest,\n\t\t\t\t\truntime.outputOptions.globalObject\n\t\t\t\t);\n\t\t\tcase \"commonjs\":\n\t\t\tcase \"commonjs2\":\n\t\t\t\treturn this.getSourceForCommonJsExternal(request);\n\t\t\tcase \"amd\":\n\t\t\tcase \"amd-require\":\n\t\t\tcase \"umd\":\n\t\t\tcase \"umd2\":\n\t\t\tcase \"system\":\n\t\t\t\treturn this.getSourceForAmdOrUmdExternal(\n\t\t\t\t\tthis.id,\n\t\t\t\t\tthis.optional,\n\t\t\t\t\trequest\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn this.getSourceForDefaultCase(this.optional, request);\n\t\t}\n\t}\n\n\tgetSource(sourceString) {\n\t\tif (this.useSourceMap) {\n\t\t\treturn new OriginalSource(sourceString, this.identifier());\n\t\t}\n\n\t\treturn new RawSource(sourceString);\n\t}\n\n\tsource(dependencyTemplates, runtime) {\n\t\treturn this.getSource(this.getSourceString(runtime));\n\t}\n\n\tsize() {\n\t\treturn 42;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(this.externalType);\n\t\thash.update(JSON.stringify(this.request));\n\t\thash.update(JSON.stringify(Boolean(this.optional)));\n\t\tsuper.updateHash(hash);\n\t}\n}\n\nmodule.exports = ExternalModule;\n"]},"metadata":{},"sourceType":"script"}