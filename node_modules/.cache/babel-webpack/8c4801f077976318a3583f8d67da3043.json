{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Hook = require(\"./Hook\");\n\nvar HookCodeFactory = require(\"./HookCodeFactory\");\n\nvar AsyncSeriesBailHookCodeFactory = /*#__PURE__*/function (_HookCodeFactory) {\n  _inherits(AsyncSeriesBailHookCodeFactory, _HookCodeFactory);\n\n  var _super = _createSuper(AsyncSeriesBailHookCodeFactory);\n\n  function AsyncSeriesBailHookCodeFactory() {\n    _classCallCheck(this, AsyncSeriesBailHookCodeFactory);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AsyncSeriesBailHookCodeFactory, [{\n    key: \"content\",\n    value: function content(_ref) {\n      var _onError = _ref.onError,\n          _onResult = _ref.onResult,\n          resultReturns = _ref.resultReturns,\n          onDone = _ref.onDone;\n      return this.callTapsSeries({\n        onError: function onError(i, err, next, doneBreak) {\n          return _onError(err) + doneBreak(true);\n        },\n        onResult: function onResult(i, result, next) {\n          return \"if(\".concat(result, \" !== undefined) {\\n\").concat(_onResult(result), \"\\n} else {\\n\").concat(next(), \"}\\n\");\n        },\n        resultReturns: resultReturns,\n        onDone: onDone\n      });\n    }\n  }]);\n\n  return AsyncSeriesBailHookCodeFactory;\n}(HookCodeFactory);\n\nvar factory = new AsyncSeriesBailHookCodeFactory();\n\nvar COMPILE = function COMPILE(options) {\n  factory.setup(this, options);\n  return factory.create(options);\n};\n\nfunction AsyncSeriesBailHook() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  var hook = new Hook(args, name);\n  hook.constructor = AsyncSeriesBailHook;\n  hook.compile = COMPILE;\n  hook._call = undefined;\n  hook.call = undefined;\n  return hook;\n}\n\nAsyncSeriesBailHook.prototype = null;\nmodule.exports = AsyncSeriesBailHook;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/enhanced-resolve/node_modules/tapable/lib/AsyncSeriesBailHook.js"],"names":["Hook","require","HookCodeFactory","AsyncSeriesBailHookCodeFactory","onError","onResult","resultReturns","onDone","callTapsSeries","i","err","next","doneBreak","result","factory","COMPILE","options","setup","create","AsyncSeriesBailHook","args","name","undefined","hook","constructor","compile","_call","call","prototype","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;IAEME,8B;;;;;;;;;;;;;WACL,uBAAsD;AAAA,UAA5CC,QAA4C,QAA5CA,OAA4C;AAAA,UAAnCC,SAAmC,QAAnCA,QAAmC;AAAA,UAAzBC,aAAyB,QAAzBA,aAAyB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AACrD,aAAO,KAAKC,cAAL,CAAoB;AAC1BJ,QAAAA,OAAO,EAAE,iBAACK,CAAD,EAAIC,GAAJ,EAASC,IAAT,EAAeC,SAAf;AAAA,iBAA6BR,QAAO,CAACM,GAAD,CAAP,GAAeE,SAAS,CAAC,IAAD,CAArD;AAAA,SADiB;AAE1BP,QAAAA,QAAQ,EAAE,kBAACI,CAAD,EAAII,MAAJ,EAAYF,IAAZ;AAAA,8BACHE,MADG,gCACyBR,SAAQ,CACzCQ,MADyC,CADjC,yBAGOF,IAAI,EAHX;AAAA,SAFgB;AAM1BL,QAAAA,aAAa,EAAbA,aAN0B;AAO1BC,QAAAA,MAAM,EAANA;AAP0B,OAApB,CAAP;AASA;;;;EAX2CL,e;;AAc7C,IAAMY,OAAO,GAAG,IAAIX,8BAAJ,EAAhB;;AAEA,IAAMY,OAAO,GAAG,SAAVA,OAAU,CAASC,OAAT,EAAkB;AACjCF,EAAAA,OAAO,CAACG,KAAR,CAAc,IAAd,EAAoBD,OAApB;AACA,SAAOF,OAAO,CAACI,MAAR,CAAeF,OAAf,CAAP;AACA,CAHD;;AAKA,SAASG,mBAAT,GAA0D;AAAA,MAA7BC,IAA6B,uEAAtB,EAAsB;AAAA,MAAlBC,IAAkB,uEAAXC,SAAW;AACzD,MAAMC,IAAI,GAAG,IAAIvB,IAAJ,CAASoB,IAAT,EAAeC,IAAf,CAAb;AACAE,EAAAA,IAAI,CAACC,WAAL,GAAmBL,mBAAnB;AACAI,EAAAA,IAAI,CAACE,OAAL,GAAeV,OAAf;AACAQ,EAAAA,IAAI,CAACG,KAAL,GAAaJ,SAAb;AACAC,EAAAA,IAAI,CAACI,IAAL,GAAYL,SAAZ;AACA,SAAOC,IAAP;AACA;;AAEDJ,mBAAmB,CAACS,SAApB,GAAgC,IAAhC;AAEAC,MAAM,CAACC,OAAP,GAAiBX,mBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncSeriesBailHookCodeFactory extends HookCodeFactory {\n\tcontent({ onError, onResult, resultReturns, onDone }) {\n\t\treturn this.callTapsSeries({\n\t\t\tonError: (i, err, next, doneBreak) => onError(err) + doneBreak(true),\n\t\t\tonResult: (i, result, next) =>\n\t\t\t\t`if(${result} !== undefined) {\\n${onResult(\n\t\t\t\t\tresult\n\t\t\t\t)}\\n} else {\\n${next()}}\\n`,\n\t\t\tresultReturns,\n\t\t\tonDone\n\t\t});\n\t}\n}\n\nconst factory = new AsyncSeriesBailHookCodeFactory();\n\nconst COMPILE = function(options) {\n\tfactory.setup(this, options);\n\treturn factory.create(options);\n};\n\nfunction AsyncSeriesBailHook(args = [], name = undefined) {\n\tconst hook = new Hook(args, name);\n\thook.constructor = AsyncSeriesBailHook;\n\thook.compile = COMPILE;\n\thook._call = undefined;\n\thook.call = undefined;\n\treturn hook;\n}\n\nAsyncSeriesBailHook.prototype = null;\n\nmodule.exports = AsyncSeriesBailHook;\n"]},"metadata":{},"sourceType":"script"}