{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar PrefetchDependency = require(\"./dependencies/PrefetchDependency\");\n\nvar PrefetchPlugin = /*#__PURE__*/function () {\n  function PrefetchPlugin(context, request) {\n    _classCallCheck(this, PrefetchPlugin);\n\n    if (!request) {\n      this.request = context;\n    } else {\n      this.context = context;\n      this.request = request;\n    }\n  }\n\n  _createClass(PrefetchPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.compilation.tap(\"PrefetchPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(PrefetchDependency, normalModuleFactory);\n      });\n      compiler.hooks.make.tapAsync(\"PrefetchPlugin\", function (compilation, callback) {\n        compilation.prefetch(_this.context || compiler.context, new PrefetchDependency(_this.request), callback);\n      });\n    }\n  }]);\n\n  return PrefetchPlugin;\n}();\n\nmodule.exports = PrefetchPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/PrefetchPlugin.js"],"names":["PrefetchDependency","require","PrefetchPlugin","context","request","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","make","tapAsync","callback","prefetch","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AACA,IAAMA,kBAAkB,GAAGC,OAAO,CAAC,mCAAD,CAAlC;;IAEMC,c;AACL,0BAAYC,OAAZ,EAAqBC,OAArB,EAA8B;AAAA;;AAC7B,QAAI,CAACA,OAAL,EAAc;AACb,WAAKA,OAAL,GAAeD,OAAf;AACA,KAFD,MAEO;AACN,WAAKA,OAAL,GAAeA,OAAf;AACA,WAAKC,OAAL,GAAeA,OAAf;AACA;AACD;;;;WAED,eAAMC,QAAN,EAAgB;AAAA;;AACfA,MAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,gBADD,EAEC,UAACD,WAAD,QAA0C;AAAA,YAA1BE,mBAA0B,QAA1BA,mBAA0B;AACzCF,QAAAA,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CACCX,kBADD,EAECS,mBAFD;AAIA,OAPF;AASAJ,MAAAA,QAAQ,CAACC,KAAT,CAAeM,IAAf,CAAoBC,QAApB,CAA6B,gBAA7B,EAA+C,UAACN,WAAD,EAAcO,QAAd,EAA2B;AACzEP,QAAAA,WAAW,CAACQ,QAAZ,CACC,KAAI,CAACZ,OAAL,IAAgBE,QAAQ,CAACF,OAD1B,EAEC,IAAIH,kBAAJ,CAAuB,KAAI,CAACI,OAA5B,CAFD,EAGCU,QAHD;AAKA,OAND;AAOA;;;;;;AAEFE,MAAM,CAACC,OAAP,GAAiBf,cAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst PrefetchDependency = require(\"./dependencies/PrefetchDependency\");\n\nclass PrefetchPlugin {\n\tconstructor(context, request) {\n\t\tif (!request) {\n\t\t\tthis.request = context;\n\t\t} else {\n\t\t\tthis.context = context;\n\t\t\tthis.request = request;\n\t\t}\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"PrefetchPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tPrefetchDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t\tcompiler.hooks.make.tapAsync(\"PrefetchPlugin\", (compilation, callback) => {\n\t\t\tcompilation.prefetch(\n\t\t\t\tthis.context || compiler.context,\n\t\t\t\tnew PrefetchDependency(this.request),\n\t\t\t\tcallback\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = PrefetchPlugin;\n"]},"metadata":{},"sourceType":"script"}