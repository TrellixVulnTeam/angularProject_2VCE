{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler-cli/ngcc/src/dependencies/umd_dependency_host\", [\"require\", \"exports\", \"tslib\", \"typescript\", \"@angular/compiler-cli/ngcc/src/host/umd_host\", \"@angular/compiler-cli/ngcc/src/dependencies/commonjs_dependency_host\", \"@angular/compiler-cli/ngcc/src/dependencies/dependency_host\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.UmdDependencyHost = void 0;\n\n  var tslib_1 = require(\"tslib\");\n  /**\n   * @license\n   * Copyright Google LLC All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n\n\n  var ts = require(\"typescript\");\n\n  var umd_host_1 = require(\"@angular/compiler-cli/ngcc/src/host/umd_host\");\n\n  var commonjs_dependency_host_1 = require(\"@angular/compiler-cli/ngcc/src/dependencies/commonjs_dependency_host\");\n\n  var dependency_host_1 = require(\"@angular/compiler-cli/ngcc/src/dependencies/dependency_host\");\n  /**\n   * Helper functions for computing dependencies.\n   */\n\n\n  var UmdDependencyHost =\n  /** @class */\n  function (_super) {\n    tslib_1.__extends(UmdDependencyHost, _super);\n\n    function UmdDependencyHost() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    UmdDependencyHost.prototype.canSkipFile = function (fileContents) {\n      return !commonjs_dependency_host_1.hasRequireCalls(fileContents);\n    };\n\n    UmdDependencyHost.prototype.extractImports = function (file, fileContents) {\n      // Parse the source into a TypeScript AST and then walk it looking for imports and re-exports.\n      var sf = ts.createSourceFile(file, fileContents, ts.ScriptTarget.ES2015, false, ts.ScriptKind.JS);\n\n      if (sf.statements.length !== 1) {\n        return new Set();\n      }\n\n      var umdModule = umd_host_1.parseStatementForUmdModule(sf.statements[0]);\n      var umdImports = umdModule && umd_host_1.getImportsOfUmdModule(umdModule);\n\n      if (umdImports === null) {\n        return new Set();\n      }\n\n      return new Set(umdImports.map(function (i) {\n        return i.path;\n      }));\n    };\n\n    return UmdDependencyHost;\n  }(dependency_host_1.DependencyHostBase);\n\n  exports.UmdDependencyHost = UmdDependencyHost;\n});","map":{"version":3,"sources":["../../../../../../../../packages/compiler-cli/ngcc/src/dependencies/umd_dependency_host.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;;;AAMG;;;AACH,MAAA,EAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AAGA,MAAA,UAAA,GAAA,OAAA,CAAA,8CAAA,CAAA;;AAEA,MAAA,0BAAA,GAAA,OAAA,CAAA,sEAAA,CAAA;;AACA,MAAA,iBAAA,GAAA,OAAA,CAAA,6DAAA,CAAA;AAEA;;AAEG;;;AACH,MAAA,iBAAA;AAAA;AAAA,YAAA,MAAA,EAAA;AAAuC,IAAA,OAAA,CAAA,SAAA,CAAA,iBAAA,EAAA,MAAA;;AAAvC,aAAA,iBAAA,GAAA;;AAsBC;;AArBW,IAAA,iBAAA,CAAA,SAAA,CAAA,WAAA,GAAV,UAAsB,YAAtB,EAA0C;AACxC,aAAO,CAAC,0BAAA,CAAA,eAAA,CAAgB,YAAhB,CAAR;AACD,KAFS;;AAIA,IAAA,iBAAA,CAAA,SAAA,CAAA,cAAA,GAAV,UAAyB,IAAzB,EAA+C,YAA/C,EAAmE;AACjE;AACA,UAAM,EAAE,GACJ,EAAE,CAAC,gBAAH,CAAoB,IAApB,EAA0B,YAA1B,EAAwC,EAAE,CAAC,YAAH,CAAgB,MAAxD,EAAgE,KAAhE,EAAuE,EAAE,CAAC,UAAH,CAAc,EAArF,CADJ;;AAGA,UAAI,EAAE,CAAC,UAAH,CAAc,MAAd,KAAyB,CAA7B,EAAgC;AAC9B,eAAO,IAAI,GAAJ,EAAP;AACD;;AAED,UAAM,SAAS,GAAG,UAAA,CAAA,0BAAA,CAA2B,EAAE,CAAC,UAAH,CAAc,CAAd,CAA3B,CAAlB;AACA,UAAM,UAAU,GAAG,SAAS,IAAI,UAAA,CAAA,qBAAA,CAAsB,SAAtB,CAAhC;;AACA,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACvB,eAAO,IAAI,GAAJ,EAAP;AACD;;AAED,aAAO,IAAI,GAAJ,CAAQ,UAAU,CAAC,GAAX,CAAe,UAAA,CAAA,EAAC;AAAI,eAAA,CAAC,CAAD,IAAA;AAAM,OAA1B,CAAR,CAAP;AACD,KAhBS;;AAiBZ,WAAA,iBAAA;AAAC,GAtBD,CAAuC,iBAAA,CAAA,kBAAvC,CAAA;;AAAa,EAAA,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ts from 'typescript';\n\nimport {AbsoluteFsPath} from '../../../src/ngtsc/file_system';\nimport {getImportsOfUmdModule, parseStatementForUmdModule} from '../host/umd_host';\n\nimport {hasRequireCalls} from './commonjs_dependency_host';\nimport {DependencyHostBase} from './dependency_host';\n\n/**\n * Helper functions for computing dependencies.\n */\nexport class UmdDependencyHost extends DependencyHostBase {\n  protected canSkipFile(fileContents: string): boolean {\n    return !hasRequireCalls(fileContents);\n  }\n\n  protected extractImports(file: AbsoluteFsPath, fileContents: string): Set<string> {\n    // Parse the source into a TypeScript AST and then walk it looking for imports and re-exports.\n    const sf =\n        ts.createSourceFile(file, fileContents, ts.ScriptTarget.ES2015, false, ts.ScriptKind.JS);\n\n    if (sf.statements.length !== 1) {\n      return new Set();\n    }\n\n    const umdModule = parseStatementForUmdModule(sf.statements[0]);\n    const umdImports = umdModule && getImportsOfUmdModule(umdModule);\n    if (umdImports === null) {\n      return new Set();\n    }\n\n    return new Set(umdImports.map(i => i.path));\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}