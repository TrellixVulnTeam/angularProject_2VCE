{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sean Larkin @thelarkinn\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _assertThisInitialized = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar WebpackError = require(\"./WebpackError\");\n/** @typedef {import(\"./Module\")} Module */\n\n\nvar AsyncDependencyToInitialChunkError = /*#__PURE__*/function (_WebpackError) {\n  _inherits(AsyncDependencyToInitialChunkError, _WebpackError);\n\n  var _super = _createSuper(AsyncDependencyToInitialChunkError);\n\n  /**\n   * Creates an instance of AsyncDependencyToInitialChunkError.\n   * @param {string} chunkName Name of Chunk\n   * @param {Module} module module tied to dependency\n   * @param {TODO} loc location of dependency\n   */\n  function AsyncDependencyToInitialChunkError(chunkName, module, loc) {\n    var _this;\n\n    _classCallCheck(this, AsyncDependencyToInitialChunkError);\n\n    _this = _super.call(this, \"It's not allowed to load an initial chunk on demand. The chunk name \\\"\".concat(chunkName, \"\\\" is already used by an entrypoint.\"));\n    _this.name = \"AsyncDependencyToInitialChunkError\";\n    _this.module = module;\n    _this.loc = loc;\n    Error.captureStackTrace(_assertThisInitialized(_this), _this.constructor);\n    return _this;\n  }\n\n  return AsyncDependencyToInitialChunkError;\n}(WebpackError);\n\nmodule.exports = AsyncDependencyToInitialChunkError;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/AsyncDependencyToInitialChunkError.js"],"names":["WebpackError","require","AsyncDependencyToInitialChunkError","chunkName","module","loc","name","Error","captureStackTrace","constructor","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEA,IAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA5B;AAEA;;;IAEMC,kC;;;;;AACL;AACD;AACA;AACA;AACA;AACA;AACC,8CAAYC,SAAZ,EAAuBC,MAAvB,EAA+BC,GAA/B,EAAoC;AAAA;;AAAA;;AACnC,8GACyEF,SADzE;AAIA,UAAKG,IAAL,GAAY,oCAAZ;AACA,UAAKF,MAAL,GAAcA,MAAd;AACA,UAAKC,GAAL,GAAWA,GAAX;AAEAE,IAAAA,KAAK,CAACC,iBAAN,gCAA8B,MAAKC,WAAnC;AATmC;AAUnC;;;EAjB+CT,Y;;AAoBjDI,MAAM,CAACM,OAAP,GAAiBR,kCAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sean Larkin @thelarkinn\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n\n/** @typedef {import(\"./Module\")} Module */\n\nclass AsyncDependencyToInitialChunkError extends WebpackError {\n\t/**\n\t * Creates an instance of AsyncDependencyToInitialChunkError.\n\t * @param {string} chunkName Name of Chunk\n\t * @param {Module} module module tied to dependency\n\t * @param {TODO} loc location of dependency\n\t */\n\tconstructor(chunkName, module, loc) {\n\t\tsuper(\n\t\t\t`It's not allowed to load an initial chunk on demand. The chunk name \"${chunkName}\" is already used by an entrypoint.`\n\t\t);\n\n\t\tthis.name = \"AsyncDependencyToInitialChunkError\";\n\t\tthis.module = module;\n\t\tthis.loc = loc;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = AsyncDependencyToInitialChunkError;\n"]},"metadata":{},"sourceType":"script"}