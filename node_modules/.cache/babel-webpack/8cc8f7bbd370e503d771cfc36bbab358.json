{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar ImportContextDependency = require(\"./ImportContextDependency\");\n\nvar ImportWeakDependency = require(\"./ImportWeakDependency\");\n\nvar ImportDependenciesBlock = require(\"./ImportDependenciesBlock\");\n\nvar ImportEagerDependency = require(\"./ImportEagerDependency\");\n\nvar ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\n\nvar UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\n\nvar CommentCompilationWarning = require(\"../CommentCompilationWarning\");\n\nvar ImportParserPlugin = /*#__PURE__*/function () {\n  function ImportParserPlugin(options) {\n    _classCallCheck(this, ImportParserPlugin);\n\n    this.options = options;\n  }\n\n  _createClass(ImportParserPlugin, [{\n    key: \"apply\",\n    value: function apply(parser) {\n      var _this = this;\n\n      parser.hooks.importCall.tap(\"ImportParserPlugin\", function (expr) {\n        if (expr.arguments.length !== 1) {\n          throw new Error(\"Incorrect number of arguments provided to 'import(module: string) -> Promise'.\");\n        }\n\n        var param = parser.evaluateExpression(expr.arguments[0]);\n        var chunkName = null;\n        var mode = \"lazy\";\n        var include = null;\n        var exclude = null;\n        var groupOptions = {};\n\n        var _parser$parseCommentO = parser.parseCommentOptions(expr.range),\n            importOptions = _parser$parseCommentO.options,\n            commentErrors = _parser$parseCommentO.errors;\n\n        if (commentErrors) {\n          var _iterator = _createForOfIteratorHelper(commentErrors),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var e = _step.value;\n              var comment = e.comment;\n              parser.state.module.warnings.push(new CommentCompilationWarning(\"Compilation error while processing magic comment(-s): /*\".concat(comment.value, \"*/: \").concat(e.message), parser.state.module, comment.loc));\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n\n        if (importOptions) {\n          if (importOptions.webpackIgnore !== undefined) {\n            if (typeof importOptions.webpackIgnore !== \"boolean\") {\n              parser.state.module.warnings.push(new UnsupportedFeatureWarning(parser.state.module, \"`webpackIgnore` expected a boolean, but received: \".concat(importOptions.webpackIgnore, \".\"), expr.loc));\n            } else {\n              // Do not instrument `import()` if `webpackIgnore` is `true`\n              if (importOptions.webpackIgnore) {\n                return false;\n              }\n            }\n          }\n\n          if (importOptions.webpackChunkName !== undefined) {\n            if (typeof importOptions.webpackChunkName !== \"string\") {\n              parser.state.module.warnings.push(new UnsupportedFeatureWarning(parser.state.module, \"`webpackChunkName` expected a string, but received: \".concat(importOptions.webpackChunkName, \".\"), expr.loc));\n            } else {\n              chunkName = importOptions.webpackChunkName;\n            }\n          }\n\n          if (importOptions.webpackMode !== undefined) {\n            if (typeof importOptions.webpackMode !== \"string\") {\n              parser.state.module.warnings.push(new UnsupportedFeatureWarning(parser.state.module, \"`webpackMode` expected a string, but received: \".concat(importOptions.webpackMode, \".\"), expr.loc));\n            } else {\n              mode = importOptions.webpackMode;\n            }\n          }\n\n          if (importOptions.webpackPrefetch !== undefined) {\n            if (importOptions.webpackPrefetch === true) {\n              groupOptions.prefetchOrder = 0;\n            } else if (typeof importOptions.webpackPrefetch === \"number\") {\n              groupOptions.prefetchOrder = importOptions.webpackPrefetch;\n            } else {\n              parser.state.module.warnings.push(new UnsupportedFeatureWarning(parser.state.module, \"`webpackPrefetch` expected true or a number, but received: \".concat(importOptions.webpackPrefetch, \".\"), expr.loc));\n            }\n          }\n\n          if (importOptions.webpackPreload !== undefined) {\n            if (importOptions.webpackPreload === true) {\n              groupOptions.preloadOrder = 0;\n            } else if (typeof importOptions.webpackPreload === \"number\") {\n              groupOptions.preloadOrder = importOptions.webpackPreload;\n            } else {\n              parser.state.module.warnings.push(new UnsupportedFeatureWarning(parser.state.module, \"`webpackPreload` expected true or a number, but received: \".concat(importOptions.webpackPreload, \".\"), expr.loc));\n            }\n          }\n\n          if (importOptions.webpackInclude !== undefined) {\n            if (!importOptions.webpackInclude || importOptions.webpackInclude.constructor.name !== \"RegExp\") {\n              parser.state.module.warnings.push(new UnsupportedFeatureWarning(parser.state.module, \"`webpackInclude` expected a regular expression, but received: \".concat(importOptions.webpackInclude, \".\"), expr.loc));\n            } else {\n              include = new RegExp(importOptions.webpackInclude);\n            }\n          }\n\n          if (importOptions.webpackExclude !== undefined) {\n            if (!importOptions.webpackExclude || importOptions.webpackExclude.constructor.name !== \"RegExp\") {\n              parser.state.module.warnings.push(new UnsupportedFeatureWarning(parser.state.module, \"`webpackExclude` expected a regular expression, but received: \".concat(importOptions.webpackExclude, \".\"), expr.loc));\n            } else {\n              exclude = new RegExp(importOptions.webpackExclude);\n            }\n          }\n        }\n\n        if (param.isString()) {\n          if (mode !== \"lazy\" && mode !== \"eager\" && mode !== \"weak\") {\n            parser.state.module.warnings.push(new UnsupportedFeatureWarning(parser.state.module, \"`webpackMode` expected 'lazy', 'eager' or 'weak', but received: \".concat(mode, \".\"), expr.loc));\n          }\n\n          if (mode === \"eager\") {\n            var dep = new ImportEagerDependency(param.string, parser.state.module, expr.range);\n            parser.state.current.addDependency(dep);\n          } else if (mode === \"weak\") {\n            var _dep = new ImportWeakDependency(param.string, parser.state.module, expr.range);\n\n            parser.state.current.addDependency(_dep);\n          } else {\n            var depBlock = new ImportDependenciesBlock(param.string, expr.range, Object.assign(groupOptions, {\n              name: chunkName\n            }), parser.state.module, expr.loc, parser.state.module);\n            parser.state.current.addBlock(depBlock);\n          }\n\n          return true;\n        } else {\n          if (mode !== \"lazy\" && mode !== \"lazy-once\" && mode !== \"eager\" && mode !== \"weak\") {\n            parser.state.module.warnings.push(new UnsupportedFeatureWarning(parser.state.module, \"`webpackMode` expected 'lazy', 'lazy-once', 'eager' or 'weak', but received: \".concat(mode, \".\"), expr.loc));\n            mode = \"lazy\";\n          }\n\n          if (mode === \"weak\") {\n            mode = \"async-weak\";\n          }\n\n          var _dep2 = ContextDependencyHelpers.create(ImportContextDependency, expr.range, param, expr, _this.options, {\n            chunkName: chunkName,\n            groupOptions: groupOptions,\n            include: include,\n            exclude: exclude,\n            mode: mode,\n            namespaceObject: parser.state.module.buildMeta.strictHarmonyModule ? \"strict\" : true\n          }, parser);\n\n          if (!_dep2) return;\n          _dep2.loc = expr.loc;\n          _dep2.optional = !!parser.scope.inTry;\n          parser.state.current.addDependency(_dep2);\n          return true;\n        }\n      });\n    }\n  }]);\n\n  return ImportParserPlugin;\n}();\n\nmodule.exports = ImportParserPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/dependencies/ImportParserPlugin.js"],"names":["ImportContextDependency","require","ImportWeakDependency","ImportDependenciesBlock","ImportEagerDependency","ContextDependencyHelpers","UnsupportedFeatureWarning","CommentCompilationWarning","ImportParserPlugin","options","parser","hooks","importCall","tap","expr","arguments","length","Error","param","evaluateExpression","chunkName","mode","include","exclude","groupOptions","parseCommentOptions","range","importOptions","commentErrors","errors","e","comment","state","module","warnings","push","value","message","loc","webpackIgnore","undefined","webpackChunkName","webpackMode","webpackPrefetch","prefetchOrder","webpackPreload","preloadOrder","webpackInclude","constructor","name","RegExp","webpackExclude","isString","dep","string","current","addDependency","depBlock","Object","assign","addBlock","create","namespaceObject","buildMeta","strictHarmonyModule","optional","scope","inTry","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ImportContextDependency = require(\"./ImportContextDependency\");\nconst ImportWeakDependency = require(\"./ImportWeakDependency\");\nconst ImportDependenciesBlock = require(\"./ImportDependenciesBlock\");\nconst ImportEagerDependency = require(\"./ImportEagerDependency\");\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\nconst CommentCompilationWarning = require(\"../CommentCompilationWarning\");\n\nclass ImportParserPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(parser) {\n\t\tparser.hooks.importCall.tap(\"ImportParserPlugin\", expr => {\n\t\t\tif (expr.arguments.length !== 1) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Incorrect number of arguments provided to 'import(module: string) -> Promise'.\"\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst param = parser.evaluateExpression(expr.arguments[0]);\n\n\t\t\tlet chunkName = null;\n\t\t\tlet mode = \"lazy\";\n\t\t\tlet include = null;\n\t\t\tlet exclude = null;\n\t\t\tconst groupOptions = {};\n\n\t\t\tconst {\n\t\t\t\toptions: importOptions,\n\t\t\t\terrors: commentErrors\n\t\t\t} = parser.parseCommentOptions(expr.range);\n\n\t\t\tif (commentErrors) {\n\t\t\t\tfor (const e of commentErrors) {\n\t\t\t\t\tconst { comment } = e;\n\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\tnew CommentCompilationWarning(\n\t\t\t\t\t\t\t`Compilation error while processing magic comment(-s): /*${comment.value}*/: ${e.message}`,\n\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\tcomment.loc\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (importOptions) {\n\t\t\t\tif (importOptions.webpackIgnore !== undefined) {\n\t\t\t\t\tif (typeof importOptions.webpackIgnore !== \"boolean\") {\n\t\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t`\\`webpackIgnore\\` expected a boolean, but received: ${importOptions.webpackIgnore}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Do not instrument `import()` if `webpackIgnore` is `true`\n\t\t\t\t\t\tif (importOptions.webpackIgnore) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackChunkName !== undefined) {\n\t\t\t\t\tif (typeof importOptions.webpackChunkName !== \"string\") {\n\t\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t`\\`webpackChunkName\\` expected a string, but received: ${importOptions.webpackChunkName}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchunkName = importOptions.webpackChunkName;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackMode !== undefined) {\n\t\t\t\t\tif (typeof importOptions.webpackMode !== \"string\") {\n\t\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t`\\`webpackMode\\` expected a string, but received: ${importOptions.webpackMode}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmode = importOptions.webpackMode;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackPrefetch !== undefined) {\n\t\t\t\t\tif (importOptions.webpackPrefetch === true) {\n\t\t\t\t\t\tgroupOptions.prefetchOrder = 0;\n\t\t\t\t\t} else if (typeof importOptions.webpackPrefetch === \"number\") {\n\t\t\t\t\t\tgroupOptions.prefetchOrder = importOptions.webpackPrefetch;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t`\\`webpackPrefetch\\` expected true or a number, but received: ${importOptions.webpackPrefetch}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackPreload !== undefined) {\n\t\t\t\t\tif (importOptions.webpackPreload === true) {\n\t\t\t\t\t\tgroupOptions.preloadOrder = 0;\n\t\t\t\t\t} else if (typeof importOptions.webpackPreload === \"number\") {\n\t\t\t\t\t\tgroupOptions.preloadOrder = importOptions.webpackPreload;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t`\\`webpackPreload\\` expected true or a number, but received: ${importOptions.webpackPreload}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackInclude !== undefined) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!importOptions.webpackInclude ||\n\t\t\t\t\t\timportOptions.webpackInclude.constructor.name !== \"RegExp\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t`\\`webpackInclude\\` expected a regular expression, but received: ${importOptions.webpackInclude}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinclude = new RegExp(importOptions.webpackInclude);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackExclude !== undefined) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!importOptions.webpackExclude ||\n\t\t\t\t\t\timportOptions.webpackExclude.constructor.name !== \"RegExp\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t`\\`webpackExclude\\` expected a regular expression, but received: ${importOptions.webpackExclude}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\texclude = new RegExp(importOptions.webpackExclude);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (param.isString()) {\n\t\t\t\tif (mode !== \"lazy\" && mode !== \"eager\" && mode !== \"weak\") {\n\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t`\\`webpackMode\\` expected 'lazy', 'eager' or 'weak', but received: ${mode}.`,\n\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (mode === \"eager\") {\n\t\t\t\t\tconst dep = new ImportEagerDependency(\n\t\t\t\t\t\tparam.string,\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\texpr.range\n\t\t\t\t\t);\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t} else if (mode === \"weak\") {\n\t\t\t\t\tconst dep = new ImportWeakDependency(\n\t\t\t\t\t\tparam.string,\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\texpr.range\n\t\t\t\t\t);\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t} else {\n\t\t\t\t\tconst depBlock = new ImportDependenciesBlock(\n\t\t\t\t\t\tparam.string,\n\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\tObject.assign(groupOptions, {\n\t\t\t\t\t\t\tname: chunkName\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\texpr.loc,\n\t\t\t\t\t\tparser.state.module\n\t\t\t\t\t);\n\t\t\t\t\tparser.state.current.addBlock(depBlock);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tmode !== \"lazy\" &&\n\t\t\t\t\tmode !== \"lazy-once\" &&\n\t\t\t\t\tmode !== \"eager\" &&\n\t\t\t\t\tmode !== \"weak\"\n\t\t\t\t) {\n\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t`\\`webpackMode\\` expected 'lazy', 'lazy-once', 'eager' or 'weak', but received: ${mode}.`,\n\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tmode = \"lazy\";\n\t\t\t\t}\n\n\t\t\t\tif (mode === \"weak\") {\n\t\t\t\t\tmode = \"async-weak\";\n\t\t\t\t}\n\t\t\t\tconst dep = ContextDependencyHelpers.create(\n\t\t\t\t\tImportContextDependency,\n\t\t\t\t\texpr.range,\n\t\t\t\t\tparam,\n\t\t\t\t\texpr,\n\t\t\t\t\tthis.options,\n\t\t\t\t\t{\n\t\t\t\t\t\tchunkName,\n\t\t\t\t\t\tgroupOptions,\n\t\t\t\t\t\tinclude,\n\t\t\t\t\t\texclude,\n\t\t\t\t\t\tmode,\n\t\t\t\t\t\tnamespaceObject: parser.state.module.buildMeta.strictHarmonyModule\n\t\t\t\t\t\t\t? \"strict\"\n\t\t\t\t\t\t\t: true\n\t\t\t\t\t},\n\t\t\t\t\tparser\n\t\t\t\t);\n\t\t\t\tif (!dep) return;\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = ImportParserPlugin;\n"]},"metadata":{},"sourceType":"script"}