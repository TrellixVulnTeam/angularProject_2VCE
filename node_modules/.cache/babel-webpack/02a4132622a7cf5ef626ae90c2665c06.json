{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.urlJoin = void 0;\n\nfunction urlJoin() {\n  for (var _len = arguments.length, parts = new Array(_len), _key = 0; _key < _len; _key++) {\n    parts[_key] = arguments[_key];\n  }\n\n  var p = parts[0],\n      rest = parts.slice(1); // Remove trailing slash from first part\n  // Join all parts with `/`\n  // Dedupe double slashes from path names\n\n  return p.replace(/\\/$/, '') + ('/' + rest.join('/')).replace(/\\/\\/+/g, '/');\n}\n\nexports.urlJoin = urlJoin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/src/utils/url.js"],"names":["Object","defineProperty","exports","value","urlJoin","parts","p","rest","replace","join"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AACA,SAASA,OAAT,GAA2B;AAAA,oCAAPC,KAAO;AAAPA,IAAAA,KAAO;AAAA;;AACvB,MAAOC,CAAP,GAAqBD,KAArB;AAAA,MAAaE,IAAb,GAAqBF,KAArB,UADuB,CAEvB;AACA;AACA;;AACA,SAAOC,CAAC,CAACE,OAAF,CAAU,KAAV,EAAiB,EAAjB,IAAuB,CAAC,MAAMD,IAAI,CAACE,IAAL,CAAU,GAAV,CAAP,EAAuBD,OAAvB,CAA+B,QAA/B,EAAyC,GAAzC,CAA9B;AACH;;AACDN,OAAO,CAACE,OAAR,GAAkBA,OAAlB","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.urlJoin = void 0;\nfunction urlJoin(...parts) {\n    const [p, ...rest] = parts;\n    // Remove trailing slash from first part\n    // Join all parts with `/`\n    // Dedupe double slashes from path names\n    return p.replace(/\\/$/, '') + ('/' + rest.join('/')).replace(/\\/\\/+/g, '/');\n}\nexports.urlJoin = urlJoin;\n"]},"metadata":{},"sourceType":"script"}