{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler-cli/src/ngtsc/incremental/src/noop\", [\"require\", \"exports\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.NOOP_INCREMENTAL_BUILD = void 0;\n  exports.NOOP_INCREMENTAL_BUILD = {\n    priorWorkFor: function priorWorkFor() {\n      return null;\n    },\n    priorTypeCheckingResultsFor: function priorTypeCheckingResultsFor() {\n      return null;\n    },\n    recordSuccessfulTypeCheck: function recordSuccessfulTypeCheck() {}\n  };\n});","map":{"version":3,"sources":["../../../../../../../../../packages/compiler-cli/src/ngtsc/incremental/src/noop.ts"],"names":[],"mappings":"AAAA;;;;;;AAMG;;;;;;;;;;;;;;;AAIU,EAAA,OAAA,CAAA,sBAAA,GAAqD;AAChE,IAAA,YAAY,EAAE,wBAAA;AAAM,aAAA,IAAA;AAAI,KADwC;AAEhE,IAAA,2BAA2B,EAAE,uCAAA;AAAM,aAAA,IAAA;AAAI,KAFyB;AAGhE,IAAA,yBAAyB,EAAE,qCAAA,CAAQ;AAH6B,GAArD","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {IncrementalBuild} from '../api';\n\nexport const NOOP_INCREMENTAL_BUILD: IncrementalBuild<any, any> = {\n  priorWorkFor: () => null,\n  priorTypeCheckingResultsFor: () => null,\n  recordSuccessfulTypeCheck: () => {},\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}