{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar fsStat = require(\"@nodelib/fs.stat\");\n\nvar fsWalk = require(\"@nodelib/fs.walk\");\n\nvar reader_1 = require(\"./reader\");\n\nvar ReaderSync = /*#__PURE__*/function (_reader_1$default) {\n  _inherits(ReaderSync, _reader_1$default);\n\n  var _super = _createSuper(ReaderSync);\n\n  function ReaderSync() {\n    var _this;\n\n    _classCallCheck(this, ReaderSync);\n\n    _this = _super.apply(this, arguments);\n    _this._walkSync = fsWalk.walkSync;\n    _this._statSync = fsStat.statSync;\n    return _this;\n  }\n\n  _createClass(ReaderSync, [{\n    key: \"dynamic\",\n    value: function dynamic(root, options) {\n      return this._walkSync(root, options);\n    }\n  }, {\n    key: \"static\",\n    value: function _static(patterns, options) {\n      var entries = [];\n\n      var _iterator = _createForOfIteratorHelper(patterns),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var pattern = _step.value;\n\n          var filepath = this._getFullEntryPath(pattern);\n\n          var entry = this._getEntry(filepath, pattern, options);\n\n          if (entry === null || !options.entryFilter(entry)) {\n            continue;\n          }\n\n          entries.push(entry);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return entries;\n    }\n  }, {\n    key: \"_getEntry\",\n    value: function _getEntry(filepath, pattern, options) {\n      try {\n        var stats = this._getStat(filepath);\n\n        return this._makeEntry(stats, pattern);\n      } catch (error) {\n        if (options.errorFilter(error)) {\n          return null;\n        }\n\n        throw error;\n      }\n    }\n  }, {\n    key: \"_getStat\",\n    value: function _getStat(filepath) {\n      return this._statSync(filepath, this._fsStatSettings);\n    }\n  }]);\n\n  return ReaderSync;\n}(reader_1.default);\n\nexports.default = ReaderSync;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/fast-glob/out/readers/sync.js"],"names":["Object","defineProperty","exports","value","fsStat","require","fsWalk","reader_1","ReaderSync","arguments","_walkSync","walkSync","_statSync","statSync","root","options","patterns","entries","pattern","filepath","_getFullEntryPath","entry","_getEntry","entryFilter","push","stats","_getStat","_makeEntry","error","errorFilter","_fsStatSettings","default"],"mappings":"AAAA;;;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAAtB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,kBAAD,CAAtB;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAxB;;IACMG,U;;;;;AACF,wBAAc;AAAA;;AAAA;;AACV,+BAASC,SAAT;AACA,UAAKC,SAAL,GAAiBJ,MAAM,CAACK,QAAxB;AACA,UAAKC,SAAL,GAAiBR,MAAM,CAACS,QAAxB;AAHU;AAIb;;;;WACD,iBAAQC,IAAR,EAAcC,OAAd,EAAuB;AACnB,aAAO,KAAKL,SAAL,CAAeI,IAAf,EAAqBC,OAArB,CAAP;AACH;;;WACD,iBAAOC,QAAP,EAAiBD,OAAjB,EAA0B;AACtB,UAAME,OAAO,GAAG,EAAhB;;AADsB,iDAEAD,QAFA;AAAA;;AAAA;AAEtB,4DAAgC;AAAA,cAArBE,OAAqB;;AAC5B,cAAMC,QAAQ,GAAG,KAAKC,iBAAL,CAAuBF,OAAvB,CAAjB;;AACA,cAAMG,KAAK,GAAG,KAAKC,SAAL,CAAeH,QAAf,EAAyBD,OAAzB,EAAkCH,OAAlC,CAAd;;AACA,cAAIM,KAAK,KAAK,IAAV,IAAkB,CAACN,OAAO,CAACQ,WAAR,CAAoBF,KAApB,CAAvB,EAAmD;AAC/C;AACH;;AACDJ,UAAAA,OAAO,CAACO,IAAR,CAAaH,KAAb;AACH;AATqB;AAAA;AAAA;AAAA;AAAA;;AAUtB,aAAOJ,OAAP;AACH;;;WACD,mBAAUE,QAAV,EAAoBD,OAApB,EAA6BH,OAA7B,EAAsC;AAClC,UAAI;AACA,YAAMU,KAAK,GAAG,KAAKC,QAAL,CAAcP,QAAd,CAAd;;AACA,eAAO,KAAKQ,UAAL,CAAgBF,KAAhB,EAAuBP,OAAvB,CAAP;AACH,OAHD,CAIA,OAAOU,KAAP,EAAc;AACV,YAAIb,OAAO,CAACc,WAAR,CAAoBD,KAApB,CAAJ,EAAgC;AAC5B,iBAAO,IAAP;AACH;;AACD,cAAMA,KAAN;AACH;AACJ;;;WACD,kBAAST,QAAT,EAAmB;AACf,aAAO,KAAKP,SAAL,CAAeO,QAAf,EAAyB,KAAKW,eAA9B,CAAP;AACH;;;;EAnCoBvB,QAAQ,CAACwB,O;;AAqClC7B,OAAO,CAAC6B,OAAR,GAAkBvB,UAAlB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst fsStat = require(\"@nodelib/fs.stat\");\r\nconst fsWalk = require(\"@nodelib/fs.walk\");\r\nconst reader_1 = require(\"./reader\");\r\nclass ReaderSync extends reader_1.default {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._walkSync = fsWalk.walkSync;\r\n        this._statSync = fsStat.statSync;\r\n    }\r\n    dynamic(root, options) {\r\n        return this._walkSync(root, options);\r\n    }\r\n    static(patterns, options) {\r\n        const entries = [];\r\n        for (const pattern of patterns) {\r\n            const filepath = this._getFullEntryPath(pattern);\r\n            const entry = this._getEntry(filepath, pattern, options);\r\n            if (entry === null || !options.entryFilter(entry)) {\r\n                continue;\r\n            }\r\n            entries.push(entry);\r\n        }\r\n        return entries;\r\n    }\r\n    _getEntry(filepath, pattern, options) {\r\n        try {\r\n            const stats = this._getStat(filepath);\r\n            return this._makeEntry(stats, pattern);\r\n        }\r\n        catch (error) {\r\n            if (options.errorFilter(error)) {\r\n                return null;\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    _getStat(filepath) {\r\n        return this._statSync(filepath, this._fsStatSettings);\r\n    }\r\n}\r\nexports.default = ReaderSync;\r\n"]},"metadata":{},"sourceType":"script"}