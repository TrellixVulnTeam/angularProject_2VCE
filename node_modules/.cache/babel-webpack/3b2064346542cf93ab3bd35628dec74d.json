{"ast":null,"code":"\"use strict\";\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LogMessage = exports.UpdateMessage = exports.InitMessage = exports.TypeCheckerMessage = exports.MESSAGE_KIND = void 0;\nvar MESSAGE_KIND;\n\n(function (MESSAGE_KIND) {\n  MESSAGE_KIND[MESSAGE_KIND[\"Init\"] = 0] = \"Init\";\n  MESSAGE_KIND[MESSAGE_KIND[\"Update\"] = 1] = \"Update\";\n  MESSAGE_KIND[MESSAGE_KIND[\"Log\"] = 2] = \"Log\";\n})(MESSAGE_KIND = exports.MESSAGE_KIND || (exports.MESSAGE_KIND = {}));\n\nvar TypeCheckerMessage = function TypeCheckerMessage(kind) {\n  _classCallCheck(this, TypeCheckerMessage);\n\n  this.kind = kind;\n};\n\nexports.TypeCheckerMessage = TypeCheckerMessage;\n\nvar InitMessage = /*#__PURE__*/function (_TypeCheckerMessage) {\n  _inherits(InitMessage, _TypeCheckerMessage);\n\n  var _super = _createSuper(InitMessage);\n\n  function InitMessage(compilerOptions, basePath, jitMode, rootNames, hostReplacementPaths) {\n    var _this;\n\n    _classCallCheck(this, InitMessage);\n\n    _this = _super.call(this, MESSAGE_KIND.Init);\n    _this.compilerOptions = compilerOptions;\n    _this.basePath = basePath;\n    _this.jitMode = jitMode;\n    _this.rootNames = rootNames;\n    _this.hostReplacementPaths = hostReplacementPaths;\n    return _this;\n  }\n\n  return InitMessage;\n}(TypeCheckerMessage);\n\nexports.InitMessage = InitMessage;\n\nvar UpdateMessage = /*#__PURE__*/function (_TypeCheckerMessage2) {\n  _inherits(UpdateMessage, _TypeCheckerMessage2);\n\n  var _super2 = _createSuper(UpdateMessage);\n\n  function UpdateMessage(rootNames, changedCompilationFiles) {\n    var _this2;\n\n    _classCallCheck(this, UpdateMessage);\n\n    _this2 = _super2.call(this, MESSAGE_KIND.Update);\n    _this2.rootNames = rootNames;\n    _this2.changedCompilationFiles = changedCompilationFiles;\n    return _this2;\n  }\n\n  return UpdateMessage;\n}(TypeCheckerMessage);\n\nexports.UpdateMessage = UpdateMessage;\n\nvar LogMessage = /*#__PURE__*/function (_TypeCheckerMessage3) {\n  _inherits(LogMessage, _TypeCheckerMessage3);\n\n  var _super3 = _createSuper(LogMessage);\n\n  function LogMessage(level, message) {\n    var _this3;\n\n    _classCallCheck(this, LogMessage);\n\n    _this3 = _super3.call(this, MESSAGE_KIND.Log);\n    _this3.level = level;\n    _this3.message = message;\n    return _this3;\n  }\n\n  return LogMessage;\n}(TypeCheckerMessage);\n\nexports.LogMessage = LogMessage;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@ngtools/webpack/src/type_checker_messages.js"],"names":["Object","defineProperty","exports","value","LogMessage","UpdateMessage","InitMessage","TypeCheckerMessage","MESSAGE_KIND","kind","compilerOptions","basePath","jitMode","rootNames","hostReplacementPaths","Init","changedCompilationFiles","Update","level","message","Log"],"mappings":"AAAA;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqBF,OAAO,CAACG,aAAR,GAAwBH,OAAO,CAACI,WAAR,GAAsBJ,OAAO,CAACK,kBAAR,GAA6BL,OAAO,CAACM,YAAR,GAAuB,KAAK,CAA5H;AACA,IAAIA,YAAJ;;AACA,CAAC,UAAUA,YAAV,EAAwB;AACrBA,EAAAA,YAAY,CAACA,YAAY,CAAC,MAAD,CAAZ,GAAuB,CAAxB,CAAZ,GAAyC,MAAzC;AACAA,EAAAA,YAAY,CAACA,YAAY,CAAC,QAAD,CAAZ,GAAyB,CAA1B,CAAZ,GAA2C,QAA3C;AACAA,EAAAA,YAAY,CAACA,YAAY,CAAC,KAAD,CAAZ,GAAsB,CAAvB,CAAZ,GAAwC,KAAxC;AACH,CAJD,EAIGA,YAAY,GAAGN,OAAO,CAACM,YAAR,KAAyBN,OAAO,CAACM,YAAR,GAAuB,EAAhD,CAJlB;;IAKMD,kB,GACF,4BAAYE,IAAZ,EAAkB;AAAA;;AACd,OAAKA,IAAL,GAAYA,IAAZ;AACH,C;;AAELP,OAAO,CAACK,kBAAR,GAA6BA,kBAA7B;;IACMD,W;;;;;AACF,uBAAYI,eAAZ,EAA6BC,QAA7B,EAAuCC,OAAvC,EAAgDC,SAAhD,EAA2DC,oBAA3D,EAAiF;AAAA;;AAAA;;AAC7E,8BAAMN,YAAY,CAACO,IAAnB;AACA,UAAKL,eAAL,GAAuBA,eAAvB;AACA,UAAKC,QAAL,GAAgBA,QAAhB;AACA,UAAKC,OAAL,GAAeA,OAAf;AACA,UAAKC,SAAL,GAAiBA,SAAjB;AACA,UAAKC,oBAAL,GAA4BA,oBAA5B;AAN6E;AAOhF;;;EARqBP,kB;;AAU1BL,OAAO,CAACI,WAAR,GAAsBA,WAAtB;;IACMD,a;;;;;AACF,yBAAYQ,SAAZ,EAAuBG,uBAAvB,EAAgD;AAAA;;AAAA;;AAC5C,gCAAMR,YAAY,CAACS,MAAnB;AACA,WAAKJ,SAAL,GAAiBA,SAAjB;AACA,WAAKG,uBAAL,GAA+BA,uBAA/B;AAH4C;AAI/C;;;EALuBT,kB;;AAO5BL,OAAO,CAACG,aAAR,GAAwBA,aAAxB;;IACMD,U;;;;;AACF,sBAAYc,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AACxB,gCAAMX,YAAY,CAACY,GAAnB;AACA,WAAKF,KAAL,GAAaA,KAAb;AACA,WAAKC,OAAL,GAAeA,OAAf;AAHwB;AAI3B;;;EALoBZ,kB;;AAOzBL,OAAO,CAACE,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogMessage = exports.UpdateMessage = exports.InitMessage = exports.TypeCheckerMessage = exports.MESSAGE_KIND = void 0;\nvar MESSAGE_KIND;\n(function (MESSAGE_KIND) {\n    MESSAGE_KIND[MESSAGE_KIND[\"Init\"] = 0] = \"Init\";\n    MESSAGE_KIND[MESSAGE_KIND[\"Update\"] = 1] = \"Update\";\n    MESSAGE_KIND[MESSAGE_KIND[\"Log\"] = 2] = \"Log\";\n})(MESSAGE_KIND = exports.MESSAGE_KIND || (exports.MESSAGE_KIND = {}));\nclass TypeCheckerMessage {\n    constructor(kind) {\n        this.kind = kind;\n    }\n}\nexports.TypeCheckerMessage = TypeCheckerMessage;\nclass InitMessage extends TypeCheckerMessage {\n    constructor(compilerOptions, basePath, jitMode, rootNames, hostReplacementPaths) {\n        super(MESSAGE_KIND.Init);\n        this.compilerOptions = compilerOptions;\n        this.basePath = basePath;\n        this.jitMode = jitMode;\n        this.rootNames = rootNames;\n        this.hostReplacementPaths = hostReplacementPaths;\n    }\n}\nexports.InitMessage = InitMessage;\nclass UpdateMessage extends TypeCheckerMessage {\n    constructor(rootNames, changedCompilationFiles) {\n        super(MESSAGE_KIND.Update);\n        this.rootNames = rootNames;\n        this.changedCompilationFiles = changedCompilationFiles;\n    }\n}\nexports.UpdateMessage = UpdateMessage;\nclass LogMessage extends TypeCheckerMessage {\n    constructor(level, message) {\n        super(MESSAGE_KIND.Log);\n        this.level = level;\n        this.message = message;\n    }\n}\nexports.LogMessage = LogMessage;\n"]},"metadata":{},"sourceType":"script"}