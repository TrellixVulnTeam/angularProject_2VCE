{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _regeneratorRuntime = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/regenerator\");\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _asyncToGenerator = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.writeIndexHtml = void 0;\n\nvar core_1 = require(\"@angular-devkit/core\");\n\nvar path_1 = require(\"path\");\n\nvar package_chunk_sort_1 = require(\"../package-chunk-sort\");\n\nvar strip_bom_1 = require(\"../strip-bom\");\n\nvar augment_index_html_1 = require(\"./augment-index-html\");\n\nfunction writeIndexHtml(_x) {\n  return _writeIndexHtml.apply(this, arguments);\n}\n\nfunction _writeIndexHtml() {\n  _writeIndexHtml = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref) {\n    var host, outputPath, indexPath, _ref$files, files, _ref$noModuleFiles, noModuleFiles, _ref$moduleFiles, moduleFiles, baseHref, deployUrl, _ref$sri, sri, _ref$scripts, scripts, _ref$styles, styles, postTransforms, crossOrigin, lang, readFile, content, _iterator2, _step2, transform;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            host = _ref.host, outputPath = _ref.outputPath, indexPath = _ref.indexPath, _ref$files = _ref.files, files = _ref$files === void 0 ? [] : _ref$files, _ref$noModuleFiles = _ref.noModuleFiles, noModuleFiles = _ref$noModuleFiles === void 0 ? [] : _ref$noModuleFiles, _ref$moduleFiles = _ref.moduleFiles, moduleFiles = _ref$moduleFiles === void 0 ? [] : _ref$moduleFiles, baseHref = _ref.baseHref, deployUrl = _ref.deployUrl, _ref$sri = _ref.sri, sri = _ref$sri === void 0 ? false : _ref$sri, _ref$scripts = _ref.scripts, scripts = _ref$scripts === void 0 ? [] : _ref$scripts, _ref$styles = _ref.styles, styles = _ref$styles === void 0 ? [] : _ref$styles, postTransforms = _ref.postTransforms, crossOrigin = _ref.crossOrigin, lang = _ref.lang;\n\n            readFile = /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(filePath) {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.t0 = core_1.virtualFs;\n                        _context.next = 3;\n                        return host.read(core_1.normalize(filePath)).toPromise();\n\n                      case 3:\n                        _context.t1 = _context.sent;\n                        return _context.abrupt(\"return\", _context.t0.fileBufferToString.call(_context.t0, _context.t1));\n\n                      case 5:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function readFile(_x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            _context2.t0 = augment_index_html_1;\n            _context2.t1 = outputPath;\n            _context2.t2 = strip_bom_1;\n            _context2.next = 7;\n            return readFile(indexPath);\n\n          case 7:\n            _context2.t3 = _context2.sent;\n            _context2.t4 = _context2.t2.stripBom.call(_context2.t2, _context2.t3);\n            _context2.t5 = baseHref;\n            _context2.t6 = deployUrl;\n            _context2.t7 = crossOrigin;\n            _context2.t8 = sri;\n            _context2.t9 = lang;\n            _context2.t10 = package_chunk_sort_1.generateEntryPoints({\n              scripts: scripts,\n              styles: styles\n            });\n            _context2.t11 = filterAndMapBuildFiles(files, ['.js', '.css']);\n            _context2.t12 = filterAndMapBuildFiles(noModuleFiles, '.js');\n            _context2.t13 = filterAndMapBuildFiles(moduleFiles, '.js');\n\n            _context2.t14 = function loadOutputFile(filePath) {\n              return readFile(path_1.join(path_1.dirname(outputPath), filePath));\n            };\n\n            _context2.t15 = {\n              input: _context2.t1,\n              inputContent: _context2.t4,\n              baseHref: _context2.t5,\n              deployUrl: _context2.t6,\n              crossOrigin: _context2.t7,\n              sri: _context2.t8,\n              lang: _context2.t9,\n              entrypoints: _context2.t10,\n              files: _context2.t11,\n              noModuleFiles: _context2.t12,\n              moduleFiles: _context2.t13,\n              loadOutputFile: _context2.t14\n            };\n            _context2.next = 22;\n            return _context2.t0.augmentIndexHtml.call(_context2.t0, _context2.t15);\n\n          case 22:\n            content = _context2.sent;\n            _iterator2 = _createForOfIteratorHelper(postTransforms);\n            _context2.prev = 24;\n\n            _iterator2.s();\n\n          case 26:\n            if ((_step2 = _iterator2.n()).done) {\n              _context2.next = 33;\n              break;\n            }\n\n            transform = _step2.value;\n            _context2.next = 30;\n            return transform(content);\n\n          case 30:\n            content = _context2.sent;\n\n          case 31:\n            _context2.next = 26;\n            break;\n\n          case 33:\n            _context2.next = 38;\n            break;\n\n          case 35:\n            _context2.prev = 35;\n            _context2.t16 = _context2[\"catch\"](24);\n\n            _iterator2.e(_context2.t16);\n\n          case 38:\n            _context2.prev = 38;\n\n            _iterator2.f();\n\n            return _context2.finish(38);\n\n          case 41:\n            _context2.next = 43;\n            return host.write(core_1.normalize(outputPath), core_1.virtualFs.stringToFileBuffer(content)).toPromise();\n\n          case 43:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[24, 35, 38, 41]]);\n  }));\n  return _writeIndexHtml.apply(this, arguments);\n}\n\nexports.writeIndexHtml = writeIndexHtml;\n\nfunction filterAndMapBuildFiles(files, extensionFilter) {\n  var filteredFiles = [];\n  var validExtensions = Array.isArray(extensionFilter) ? extensionFilter : [extensionFilter];\n\n  var _iterator = _createForOfIteratorHelper(files),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _step.value,\n          file = _step$value.file,\n          name = _step$value.name,\n          extension = _step$value.extension,\n          initial = _step$value.initial;\n\n      if (name && initial && validExtensions.includes(extension)) {\n        filteredFiles.push({\n          file: file,\n          extension: extension,\n          name: name\n        });\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return filteredFiles;\n}","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/src/utils/index-file/write-index-html.js"],"names":["Object","defineProperty","exports","value","writeIndexHtml","core_1","require","path_1","package_chunk_sort_1","strip_bom_1","augment_index_html_1","host","outputPath","indexPath","files","noModuleFiles","moduleFiles","baseHref","deployUrl","sri","scripts","styles","postTransforms","crossOrigin","lang","readFile","filePath","virtualFs","read","normalize","toPromise","fileBufferToString","stripBom","generateEntryPoints","filterAndMapBuildFiles","join","dirname","input","inputContent","entrypoints","loadOutputFile","augmentIndexHtml","content","transform","write","stringToFileBuffer","extensionFilter","filteredFiles","validExtensions","Array","isArray","file","name","extension","initial","includes","push"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeIndexHtml = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst path_1 = require(\"path\");\nconst package_chunk_sort_1 = require(\"../package-chunk-sort\");\nconst strip_bom_1 = require(\"../strip-bom\");\nconst augment_index_html_1 = require(\"./augment-index-html\");\nasync function writeIndexHtml({ host, outputPath, indexPath, files = [], noModuleFiles = [], moduleFiles = [], baseHref, deployUrl, sri = false, scripts = [], styles = [], postTransforms, crossOrigin, lang, }) {\n    const readFile = async (filePath) => core_1.virtualFs.fileBufferToString(await host.read(core_1.normalize(filePath)).toPromise());\n    let content = await augment_index_html_1.augmentIndexHtml({\n        input: outputPath,\n        inputContent: strip_bom_1.stripBom(await readFile(indexPath)),\n        baseHref,\n        deployUrl,\n        crossOrigin,\n        sri,\n        lang,\n        entrypoints: package_chunk_sort_1.generateEntryPoints({ scripts, styles }),\n        files: filterAndMapBuildFiles(files, ['.js', '.css']),\n        noModuleFiles: filterAndMapBuildFiles(noModuleFiles, '.js'),\n        moduleFiles: filterAndMapBuildFiles(moduleFiles, '.js'),\n        loadOutputFile: filePath => readFile(path_1.join(path_1.dirname(outputPath), filePath)),\n    });\n    for (const transform of postTransforms) {\n        content = await transform(content);\n    }\n    await host.write(core_1.normalize(outputPath), core_1.virtualFs.stringToFileBuffer(content)).toPromise();\n}\nexports.writeIndexHtml = writeIndexHtml;\nfunction filterAndMapBuildFiles(files, extensionFilter) {\n    const filteredFiles = [];\n    const validExtensions = Array.isArray(extensionFilter)\n        ? extensionFilter\n        : [extensionFilter];\n    for (const { file, name, extension, initial } of files) {\n        if (name && initial && validExtensions.includes(extension)) {\n            filteredFiles.push({ file, extension, name });\n        }\n    }\n    return filteredFiles;\n}\n"]},"metadata":{},"sourceType":"script"}