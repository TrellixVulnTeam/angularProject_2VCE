{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _require = require(\"tapable\"),\n    Tapable = _require.Tapable,\n    SyncWaterfallHook = _require.SyncWaterfallHook,\n    SyncHook = _require.SyncHook;\n/** @typedef {import(\"./ModuleTemplate\")} ModuleTemplate */\n\n/** @typedef {import(\"./Chunk\")} Chunk */\n\n/** @typedef {import(\"./Module\")} Module} */\n\n/** @typedef {import(\"./Dependency\").DependencyTemplate} DependencyTemplate} */\n\n/** @typedef {import(\"./util/createHash\").Hash} Hash} */\n\n/**\n * @typedef {Object} RenderManifestOptions\n * @property {Chunk} chunk the chunk used to render\n * @property {string} hash\n * @property {string} fullHash\n * @property {TODO} outputOptions\n * @property {{javascript: ModuleTemplate, webassembly: ModuleTemplate}} moduleTemplates\n * @property {Map<TODO, TODO>} dependencyTemplates\n */\n\n\nmodule.exports = /*#__PURE__*/function (_Tapable) {\n  _inherits(ChunkTemplate, _Tapable);\n\n  var _super = _createSuper(ChunkTemplate);\n\n  function ChunkTemplate(outputOptions) {\n    var _this;\n\n    _classCallCheck(this, ChunkTemplate);\n\n    _this = _super.call(this);\n    _this.outputOptions = outputOptions || {};\n    _this.hooks = {\n      /** @type {SyncWaterfallHook<TODO[], RenderManifestOptions>} */\n      renderManifest: new SyncWaterfallHook([\"result\", \"options\"]),\n      modules: new SyncWaterfallHook([\"source\", \"chunk\", \"moduleTemplate\", \"dependencyTemplates\"]),\n      render: new SyncWaterfallHook([\"source\", \"chunk\", \"moduleTemplate\", \"dependencyTemplates\"]),\n      renderWithEntry: new SyncWaterfallHook([\"source\", \"chunk\"]),\n      hash: new SyncHook([\"hash\"]),\n      hashForChunk: new SyncHook([\"hash\", \"chunk\"])\n    };\n    return _this;\n  }\n  /**\n   *\n   * @param {RenderManifestOptions} options render manifest options\n   * @returns {TODO[]} returns render manifest\n   */\n\n\n  _createClass(ChunkTemplate, [{\n    key: \"getRenderManifest\",\n    value: function getRenderManifest(options) {\n      var result = [];\n      this.hooks.renderManifest.call(result, options);\n      return result;\n    }\n    /**\n     * Updates hash with information from this template\n     * @param {Hash} hash the hash to update\n     * @returns {void}\n     */\n\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash) {\n      hash.update(\"ChunkTemplate\");\n      hash.update(\"2\");\n      this.hooks.hash.call(hash);\n    }\n    /**\n     * TODO webpack 5: remove moduleTemplate and dependencyTemplates\n     * Updates hash with chunk-specific information from this template\n     * @param {Hash} hash the hash to update\n     * @param {Chunk} chunk the chunk\n     * @param {ModuleTemplate} moduleTemplate ModuleTemplate instance for render\n     * @param {Map<Function, DependencyTemplate>} dependencyTemplates dependency templates\n     * @returns {void}\n     */\n\n  }, {\n    key: \"updateHashForChunk\",\n    value: function updateHashForChunk(hash, chunk, moduleTemplate, dependencyTemplates) {\n      this.updateHash(hash);\n      this.hooks.hashForChunk.call(hash, chunk);\n    }\n  }]);\n\n  return ChunkTemplate;\n}(Tapable);","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/ChunkTemplate.js"],"names":["require","Tapable","SyncWaterfallHook","SyncHook","module","exports","outputOptions","hooks","renderManifest","modules","render","renderWithEntry","hash","hashForChunk","options","result","call","update","chunk","moduleTemplate","dependencyTemplates","updateHash"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEA,eAAiDA,OAAO,CAAC,SAAD,CAAxD;AAAA,IAAQC,OAAR,YAAQA,OAAR;AAAA,IAAiBC,iBAAjB,YAAiBA,iBAAjB;AAAA,IAAoCC,QAApC,YAAoCA,QAApC;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP;AAAA;;AAAA;;AACC,yBAAYC,aAAZ,EAA2B;AAAA;;AAAA;;AAC1B;AACA,UAAKA,aAAL,GAAqBA,aAAa,IAAI,EAAtC;AACA,UAAKC,KAAL,GAAa;AACZ;AACAC,MAAAA,cAAc,EAAE,IAAIN,iBAAJ,CAAsB,CAAC,QAAD,EAAW,SAAX,CAAtB,CAFJ;AAGZO,MAAAA,OAAO,EAAE,IAAIP,iBAAJ,CAAsB,CAC9B,QAD8B,EAE9B,OAF8B,EAG9B,gBAH8B,EAI9B,qBAJ8B,CAAtB,CAHG;AASZQ,MAAAA,MAAM,EAAE,IAAIR,iBAAJ,CAAsB,CAC7B,QAD6B,EAE7B,OAF6B,EAG7B,gBAH6B,EAI7B,qBAJ6B,CAAtB,CATI;AAeZS,MAAAA,eAAe,EAAE,IAAIT,iBAAJ,CAAsB,CAAC,QAAD,EAAW,OAAX,CAAtB,CAfL;AAgBZU,MAAAA,IAAI,EAAE,IAAIT,QAAJ,CAAa,CAAC,MAAD,CAAb,CAhBM;AAiBZU,MAAAA,YAAY,EAAE,IAAIV,QAAJ,CAAa,CAAC,MAAD,EAAS,OAAT,CAAb;AAjBF,KAAb;AAH0B;AAsB1B;AAED;AACD;AACA;AACA;AACA;;;AA7BA;AAAA;AAAA,WA8BC,2BAAkBW,OAAlB,EAA2B;AAC1B,UAAMC,MAAM,GAAG,EAAf;AAEA,WAAKR,KAAL,CAAWC,cAAX,CAA0BQ,IAA1B,CAA+BD,MAA/B,EAAuCD,OAAvC;AAEA,aAAOC,MAAP;AACA;AAED;AACD;AACA;AACA;AACA;;AA1CA;AAAA;AAAA,WA2CC,oBAAWH,IAAX,EAAiB;AAChBA,MAAAA,IAAI,CAACK,MAAL,CAAY,eAAZ;AACAL,MAAAA,IAAI,CAACK,MAAL,CAAY,GAAZ;AACA,WAAKV,KAAL,CAAWK,IAAX,CAAgBI,IAAhB,CAAqBJ,IAArB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAzDA;AAAA;AAAA,WA0DC,4BAAmBA,IAAnB,EAAyBM,KAAzB,EAAgCC,cAAhC,EAAgDC,mBAAhD,EAAqE;AACpE,WAAKC,UAAL,CAAgBT,IAAhB;AACA,WAAKL,KAAL,CAAWM,YAAX,CAAwBG,IAAxB,CAA6BJ,IAA7B,EAAmCM,KAAnC;AACA;AA7DF;;AAAA;AAAA,EAA6CjB,OAA7C","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { Tapable, SyncWaterfallHook, SyncHook } = require(\"tapable\");\n\n/** @typedef {import(\"./ModuleTemplate\")} ModuleTemplate */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./Module\")} Module} */\n/** @typedef {import(\"./Dependency\").DependencyTemplate} DependencyTemplate} */\n/** @typedef {import(\"./util/createHash\").Hash} Hash} */\n\n/**\n * @typedef {Object} RenderManifestOptions\n * @property {Chunk} chunk the chunk used to render\n * @property {string} hash\n * @property {string} fullHash\n * @property {TODO} outputOptions\n * @property {{javascript: ModuleTemplate, webassembly: ModuleTemplate}} moduleTemplates\n * @property {Map<TODO, TODO>} dependencyTemplates\n */\n\nmodule.exports = class ChunkTemplate extends Tapable {\n\tconstructor(outputOptions) {\n\t\tsuper();\n\t\tthis.outputOptions = outputOptions || {};\n\t\tthis.hooks = {\n\t\t\t/** @type {SyncWaterfallHook<TODO[], RenderManifestOptions>} */\n\t\t\trenderManifest: new SyncWaterfallHook([\"result\", \"options\"]),\n\t\t\tmodules: new SyncWaterfallHook([\n\t\t\t\t\"source\",\n\t\t\t\t\"chunk\",\n\t\t\t\t\"moduleTemplate\",\n\t\t\t\t\"dependencyTemplates\"\n\t\t\t]),\n\t\t\trender: new SyncWaterfallHook([\n\t\t\t\t\"source\",\n\t\t\t\t\"chunk\",\n\t\t\t\t\"moduleTemplate\",\n\t\t\t\t\"dependencyTemplates\"\n\t\t\t]),\n\t\t\trenderWithEntry: new SyncWaterfallHook([\"source\", \"chunk\"]),\n\t\t\thash: new SyncHook([\"hash\"]),\n\t\t\thashForChunk: new SyncHook([\"hash\", \"chunk\"])\n\t\t};\n\t}\n\n\t/**\n\t *\n\t * @param {RenderManifestOptions} options render manifest options\n\t * @returns {TODO[]} returns render manifest\n\t */\n\tgetRenderManifest(options) {\n\t\tconst result = [];\n\n\t\tthis.hooks.renderManifest.call(result, options);\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Updates hash with information from this template\n\t * @param {Hash} hash the hash to update\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(\"ChunkTemplate\");\n\t\thash.update(\"2\");\n\t\tthis.hooks.hash.call(hash);\n\t}\n\n\t/**\n\t * TODO webpack 5: remove moduleTemplate and dependencyTemplates\n\t * Updates hash with chunk-specific information from this template\n\t * @param {Hash} hash the hash to update\n\t * @param {Chunk} chunk the chunk\n\t * @param {ModuleTemplate} moduleTemplate ModuleTemplate instance for render\n\t * @param {Map<Function, DependencyTemplate>} dependencyTemplates dependency templates\n\t * @returns {void}\n\t */\n\tupdateHashForChunk(hash, chunk, moduleTemplate, dependencyTemplates) {\n\t\tthis.updateHash(hash);\n\t\tthis.hooks.hashForChunk.call(hash, chunk);\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}