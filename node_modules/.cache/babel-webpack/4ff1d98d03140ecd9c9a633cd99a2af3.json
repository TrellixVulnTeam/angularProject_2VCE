{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar helper = require('../helper');\n\nvar MultiReporter = /*#__PURE__*/function () {\n  function MultiReporter(reporters) {\n    _classCallCheck(this, MultiReporter);\n\n    this._reporters = reporters;\n  }\n\n  _createClass(MultiReporter, [{\n    key: \"addAdapter\",\n    value: function addAdapter(adapter) {\n      this._reporters.forEach(function (reporter) {\n        return reporter.adapters.push(adapter);\n      });\n    }\n  }, {\n    key: \"removeAdapter\",\n    value: function removeAdapter(adapter) {\n      this._reporters.forEach(function (reporter) {\n        return helper.arrayRemove(reporter.adapters, adapter);\n      });\n    }\n  }]);\n\n  return MultiReporter;\n}();\n\nmodule.exports = MultiReporter;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/karma/lib/reporters/multi.js"],"names":["helper","require","MultiReporter","reporters","_reporters","adapter","forEach","reporter","adapters","push","arrayRemove","module","exports"],"mappings":"AAAA;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAtB;;IAEMC,a;AACJ,yBAAaC,SAAb,EAAwB;AAAA;;AACtB,SAAKC,UAAL,GAAkBD,SAAlB;AACD;;;;WAED,oBAAYE,OAAZ,EAAqB;AACnB,WAAKD,UAAL,CAAgBE,OAAhB,CAAwB,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBJ,OAAvB,CAAd;AAAA,OAAxB;AACD;;;WAED,uBAAeA,OAAf,EAAwB;AACtB,WAAKD,UAAL,CAAgBE,OAAhB,CAAwB,UAACC,QAAD;AAAA,eAAcP,MAAM,CAACU,WAAP,CAAmBH,QAAQ,CAACC,QAA5B,EAAsCH,OAAtC,CAAd;AAAA,OAAxB;AACD;;;;;;AAGHM,MAAM,CAACC,OAAP,GAAiBV,aAAjB","sourcesContent":["'use strict'\n\nconst helper = require('../helper')\n\nclass MultiReporter {\n  constructor (reporters) {\n    this._reporters = reporters\n  }\n\n  addAdapter (adapter) {\n    this._reporters.forEach((reporter) => reporter.adapters.push(adapter))\n  }\n\n  removeAdapter (adapter) {\n    this._reporters.forEach((reporter) => helper.arrayRemove(reporter.adapters, adapter))\n  }\n}\n\nmodule.exports = MultiReporter\n"]},"metadata":{},"sourceType":"script"}