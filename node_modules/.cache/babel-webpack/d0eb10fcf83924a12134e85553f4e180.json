{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler/src/i18n/serializers/xliff2\", [\"require\", \"exports\", \"tslib\", \"@angular/compiler/src/ml_parser/ast\", \"@angular/compiler/src/ml_parser/xml_parser\", \"@angular/compiler/src/i18n/digest\", \"@angular/compiler/src/i18n/i18n_ast\", \"@angular/compiler/src/i18n/parse_util\", \"@angular/compiler/src/i18n/serializers/serializer\", \"@angular/compiler/src/i18n/serializers/xml_helper\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Xliff2 = void 0;\n\n  var tslib_1 = require(\"tslib\");\n\n  var ml = require(\"@angular/compiler/src/ml_parser/ast\");\n\n  var xml_parser_1 = require(\"@angular/compiler/src/ml_parser/xml_parser\");\n\n  var digest_1 = require(\"@angular/compiler/src/i18n/digest\");\n\n  var i18n = require(\"@angular/compiler/src/i18n/i18n_ast\");\n\n  var parse_util_1 = require(\"@angular/compiler/src/i18n/parse_util\");\n\n  var serializer_1 = require(\"@angular/compiler/src/i18n/serializers/serializer\");\n\n  var xml = require(\"@angular/compiler/src/i18n/serializers/xml_helper\");\n\n  var _VERSION = '2.0';\n  var _XMLNS = 'urn:oasis:names:tc:xliff:document:2.0'; // TODO(vicb): make this a param (s/_/-/)\n\n  var _DEFAULT_SOURCE_LANG = 'en';\n  var _PLACEHOLDER_TAG = 'ph';\n  var _PLACEHOLDER_SPANNING_TAG = 'pc';\n  var _MARKER_TAG = 'mrk';\n  var _XLIFF_TAG = 'xliff';\n  var _SOURCE_TAG = 'source';\n  var _TARGET_TAG = 'target';\n  var _UNIT_TAG = 'unit'; // https://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html\n\n  var Xliff2 =\n  /** @class */\n  function (_super) {\n    tslib_1.__extends(Xliff2, _super);\n\n    function Xliff2() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    Xliff2.prototype.write = function (messages, locale) {\n      var visitor = new _WriteVisitor();\n      var units = [];\n      messages.forEach(function (message) {\n        var unit = new xml.Tag(_UNIT_TAG, {\n          id: message.id\n        });\n        var notes = new xml.Tag('notes');\n\n        if (message.description || message.meaning) {\n          if (message.description) {\n            notes.children.push(new xml.CR(8), new xml.Tag('note', {\n              category: 'description'\n            }, [new xml.Text(message.description)]));\n          }\n\n          if (message.meaning) {\n            notes.children.push(new xml.CR(8), new xml.Tag('note', {\n              category: 'meaning'\n            }, [new xml.Text(message.meaning)]));\n          }\n        }\n\n        message.sources.forEach(function (source) {\n          notes.children.push(new xml.CR(8), new xml.Tag('note', {\n            category: 'location'\n          }, [new xml.Text(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))]));\n        });\n        notes.children.push(new xml.CR(6));\n        unit.children.push(new xml.CR(6), notes);\n        var segment = new xml.Tag('segment');\n        segment.children.push(new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), new xml.CR(6));\n        unit.children.push(new xml.CR(6), segment, new xml.CR(4));\n        units.push(new xml.CR(4), unit);\n      });\n      var file = new xml.Tag('file', {\n        'original': 'ng.template',\n        id: 'ngi18n'\n      }, tslib_1.__spread(units, [new xml.CR(2)]));\n      var xliff = new xml.Tag(_XLIFF_TAG, {\n        version: _VERSION,\n        xmlns: _XMLNS,\n        srcLang: locale || _DEFAULT_SOURCE_LANG\n      }, [new xml.CR(2), file, new xml.CR()]);\n      return xml.serialize([new xml.Declaration({\n        version: '1.0',\n        encoding: 'UTF-8'\n      }), new xml.CR(), xliff, new xml.CR()]);\n    };\n\n    Xliff2.prototype.load = function (content, url) {\n      // xliff to xml nodes\n      var xliff2Parser = new Xliff2Parser();\n\n      var _a = xliff2Parser.parse(content, url),\n          locale = _a.locale,\n          msgIdToHtml = _a.msgIdToHtml,\n          errors = _a.errors; // xml nodes to i18n nodes\n\n\n      var i18nNodesByMsgId = {};\n      var converter = new XmlToI18n();\n      Object.keys(msgIdToHtml).forEach(function (msgId) {\n        var _a = converter.convert(msgIdToHtml[msgId], url),\n            i18nNodes = _a.i18nNodes,\n            e = _a.errors;\n\n        errors.push.apply(errors, tslib_1.__spread(e));\n        i18nNodesByMsgId[msgId] = i18nNodes;\n      });\n\n      if (errors.length) {\n        throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n      }\n\n      return {\n        locale: locale,\n        i18nNodesByMsgId: i18nNodesByMsgId\n      };\n    };\n\n    Xliff2.prototype.digest = function (message) {\n      return digest_1.decimalDigest(message);\n    };\n\n    return Xliff2;\n  }(serializer_1.Serializer);\n\n  exports.Xliff2 = Xliff2;\n\n  var _WriteVisitor =\n  /** @class */\n  function () {\n    function _WriteVisitor() {}\n\n    _WriteVisitor.prototype.visitText = function (text, context) {\n      return [new xml.Text(text.value)];\n    };\n\n    _WriteVisitor.prototype.visitContainer = function (container, context) {\n      var _this = this;\n\n      var nodes = [];\n      container.children.forEach(function (node) {\n        return nodes.push.apply(nodes, tslib_1.__spread(node.visit(_this)));\n      });\n      return nodes;\n    };\n\n    _WriteVisitor.prototype.visitIcu = function (icu, context) {\n      var _this = this;\n\n      var nodes = [new xml.Text(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n      Object.keys(icu.cases).forEach(function (c) {\n        nodes.push.apply(nodes, tslib_1.__spread([new xml.Text(c + \" {\")], icu.cases[c].visit(_this), [new xml.Text(\"} \")]));\n      });\n      nodes.push(new xml.Text(\"}\"));\n      return nodes;\n    };\n\n    _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n      var _this = this;\n\n      var type = getTypeForTag(ph.tag);\n\n      if (ph.isVoid) {\n        var tagPh = new xml.Tag(_PLACEHOLDER_TAG, {\n          id: (this._nextPlaceholderId++).toString(),\n          equiv: ph.startName,\n          type: type,\n          disp: \"<\" + ph.tag + \"/>\"\n        });\n        return [tagPh];\n      }\n\n      var tagPc = new xml.Tag(_PLACEHOLDER_SPANNING_TAG, {\n        id: (this._nextPlaceholderId++).toString(),\n        equivStart: ph.startName,\n        equivEnd: ph.closeName,\n        type: type,\n        dispStart: \"<\" + ph.tag + \">\",\n        dispEnd: \"</\" + ph.tag + \">\"\n      });\n      var nodes = [].concat.apply([], tslib_1.__spread(ph.children.map(function (node) {\n        return node.visit(_this);\n      })));\n\n      if (nodes.length) {\n        nodes.forEach(function (node) {\n          return tagPc.children.push(node);\n        });\n      } else {\n        tagPc.children.push(new xml.Text(''));\n      }\n\n      return [tagPc];\n    };\n\n    _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n      var idStr = (this._nextPlaceholderId++).toString();\n      return [new xml.Tag(_PLACEHOLDER_TAG, {\n        id: idStr,\n        equiv: ph.name,\n        disp: \"{{\" + ph.value + \"}}\"\n      })];\n    };\n\n    _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n      var cases = Object.keys(ph.value.cases).map(function (value) {\n        return value + ' {...}';\n      }).join(' ');\n      var idStr = (this._nextPlaceholderId++).toString();\n      return [new xml.Tag(_PLACEHOLDER_TAG, {\n        id: idStr,\n        equiv: ph.name,\n        disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\"\n      })];\n    };\n\n    _WriteVisitor.prototype.serialize = function (nodes) {\n      var _this = this;\n\n      this._nextPlaceholderId = 0;\n      return [].concat.apply([], tslib_1.__spread(nodes.map(function (node) {\n        return node.visit(_this);\n      })));\n    };\n\n    return _WriteVisitor;\n  }(); // Extract messages as xml nodes from the xliff file\n\n\n  var Xliff2Parser =\n  /** @class */\n  function () {\n    function Xliff2Parser() {\n      this._locale = null;\n    }\n\n    Xliff2Parser.prototype.parse = function (xliff, url) {\n      this._unitMlString = null;\n      this._msgIdToHtml = {};\n      var xml = new xml_parser_1.XmlParser().parse(xliff, url);\n      this._errors = xml.errors;\n      ml.visitAll(this, xml.rootNodes, null);\n      return {\n        msgIdToHtml: this._msgIdToHtml,\n        errors: this._errors,\n        locale: this._locale\n      };\n    };\n\n    Xliff2Parser.prototype.visitElement = function (element, context) {\n      switch (element.name) {\n        case _UNIT_TAG:\n          this._unitMlString = null;\n          var idAttr = element.attrs.find(function (attr) {\n            return attr.name === 'id';\n          });\n\n          if (!idAttr) {\n            this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n          } else {\n            var id = idAttr.value;\n\n            if (this._msgIdToHtml.hasOwnProperty(id)) {\n              this._addError(element, \"Duplicated translations for msg \" + id);\n            } else {\n              ml.visitAll(this, element.children, null);\n\n              if (typeof this._unitMlString === 'string') {\n                this._msgIdToHtml[id] = this._unitMlString;\n              } else {\n                this._addError(element, \"Message \" + id + \" misses a translation\");\n              }\n            }\n          }\n\n          break;\n\n        case _SOURCE_TAG:\n          // ignore source message\n          break;\n\n        case _TARGET_TAG:\n          var innerTextStart = element.startSourceSpan.end.offset;\n          var innerTextEnd = element.endSourceSpan.start.offset;\n          var content = element.startSourceSpan.start.file.content;\n          var innerText = content.slice(innerTextStart, innerTextEnd);\n          this._unitMlString = innerText;\n          break;\n\n        case _XLIFF_TAG:\n          var localeAttr = element.attrs.find(function (attr) {\n            return attr.name === 'trgLang';\n          });\n\n          if (localeAttr) {\n            this._locale = localeAttr.value;\n          }\n\n          var versionAttr = element.attrs.find(function (attr) {\n            return attr.name === 'version';\n          });\n\n          if (versionAttr) {\n            var version = versionAttr.value;\n\n            if (version !== '2.0') {\n              this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n            } else {\n              ml.visitAll(this, element.children, null);\n            }\n          }\n\n          break;\n\n        default:\n          ml.visitAll(this, element.children, null);\n      }\n    };\n\n    Xliff2Parser.prototype.visitAttribute = function (attribute, context) {};\n\n    Xliff2Parser.prototype.visitText = function (text, context) {};\n\n    Xliff2Parser.prototype.visitComment = function (comment, context) {};\n\n    Xliff2Parser.prototype.visitExpansion = function (expansion, context) {};\n\n    Xliff2Parser.prototype.visitExpansionCase = function (expansionCase, context) {};\n\n    Xliff2Parser.prototype._addError = function (node, message) {\n      this._errors.push(new parse_util_1.I18nError(node.sourceSpan, message));\n    };\n\n    return Xliff2Parser;\n  }(); // Convert ml nodes (xliff syntax) to i18n nodes\n\n\n  var XmlToI18n =\n  /** @class */\n  function () {\n    function XmlToI18n() {}\n\n    XmlToI18n.prototype.convert = function (message, url) {\n      var xmlIcu = new xml_parser_1.XmlParser().parse(message, url, {\n        tokenizeExpansionForms: true\n      });\n      this._errors = xmlIcu.errors;\n      var i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ? [] : [].concat.apply([], tslib_1.__spread(ml.visitAll(this, xmlIcu.rootNodes)));\n      return {\n        i18nNodes: i18nNodes,\n        errors: this._errors\n      };\n    };\n\n    XmlToI18n.prototype.visitText = function (text, context) {\n      return new i18n.Text(text.value, text.sourceSpan);\n    };\n\n    XmlToI18n.prototype.visitElement = function (el, context) {\n      var _this = this;\n\n      switch (el.name) {\n        case _PLACEHOLDER_TAG:\n          var nameAttr = el.attrs.find(function (attr) {\n            return attr.name === 'equiv';\n          });\n\n          if (nameAttr) {\n            return [new i18n.Placeholder('', nameAttr.value, el.sourceSpan)];\n          }\n\n          this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"equiv\\\" attribute\");\n\n          break;\n\n        case _PLACEHOLDER_SPANNING_TAG:\n          var startAttr = el.attrs.find(function (attr) {\n            return attr.name === 'equivStart';\n          });\n          var endAttr = el.attrs.find(function (attr) {\n            return attr.name === 'equivEnd';\n          });\n\n          if (!startAttr) {\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"equivStart\\\" attribute\");\n          } else if (!endAttr) {\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"equivEnd\\\" attribute\");\n          } else {\n            var startId = startAttr.value;\n            var endId = endAttr.value;\n            var nodes = [];\n            return nodes.concat.apply(nodes, tslib_1.__spread([new i18n.Placeholder('', startId, el.sourceSpan)], el.children.map(function (node) {\n              return node.visit(_this, null);\n            }), [new i18n.Placeholder('', endId, el.sourceSpan)]));\n          }\n\n          break;\n\n        case _MARKER_TAG:\n          return [].concat.apply([], tslib_1.__spread(ml.visitAll(this, el.children)));\n\n        default:\n          this._addError(el, \"Unexpected tag\");\n\n      }\n\n      return null;\n    };\n\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n      var caseMap = {};\n      ml.visitAll(this, icu.cases).forEach(function (c) {\n        caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n      });\n      return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n      return {\n        value: icuCase.value,\n        nodes: [].concat.apply([], tslib_1.__spread(ml.visitAll(this, icuCase.expression)))\n      };\n    };\n\n    XmlToI18n.prototype.visitComment = function (comment, context) {};\n\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) {};\n\n    XmlToI18n.prototype._addError = function (node, message) {\n      this._errors.push(new parse_util_1.I18nError(node.sourceSpan, message));\n    };\n\n    return XmlToI18n;\n  }();\n\n  function getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n      case 'br':\n      case 'b':\n      case 'i':\n      case 'u':\n        return 'fmt';\n\n      case 'img':\n        return 'image';\n\n      case 'a':\n        return 'link';\n\n      default:\n        return 'other';\n    }\n  }\n});","map":{"version":3,"sources":["../../../../../../../../packages/compiler/src/i18n/serializers/xliff2.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from '../../ml_parser/ast';\nimport {XmlParser} from '../../ml_parser/xml_parser';\nimport {decimalDigest} from '../digest';\nimport * as i18n from '../i18n_ast';\nimport {I18nError} from '../parse_util';\n\nimport {Serializer} from './serializer';\nimport * as xml from './xml_helper';\n\nconst _VERSION = '2.0';\nconst _XMLNS = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nconst _DEFAULT_SOURCE_LANG = 'en';\nconst _PLACEHOLDER_TAG = 'ph';\nconst _PLACEHOLDER_SPANNING_TAG = 'pc';\nconst _MARKER_TAG = 'mrk';\n\nconst _XLIFF_TAG = 'xliff';\nconst _SOURCE_TAG = 'source';\nconst _TARGET_TAG = 'target';\nconst _UNIT_TAG = 'unit';\n\n// https://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html\nexport class Xliff2 extends Serializer {\n  write(messages: i18n.Message[], locale: string|null): string {\n    const visitor = new _WriteVisitor();\n    const units: xml.Node[] = [];\n\n    messages.forEach(message => {\n      const unit = new xml.Tag(_UNIT_TAG, {id: message.id});\n      const notes = new xml.Tag('notes');\n\n      if (message.description || message.meaning) {\n        if (message.description) {\n          notes.children.push(\n              new xml.CR(8),\n              new xml.Tag('note', {category: 'description'}, [new xml.Text(message.description)]));\n        }\n\n        if (message.meaning) {\n          notes.children.push(\n              new xml.CR(8),\n              new xml.Tag('note', {category: 'meaning'}, [new xml.Text(message.meaning)]));\n        }\n      }\n\n      message.sources.forEach((source: i18n.MessageSpan) => {\n        notes.children.push(new xml.CR(8), new xml.Tag('note', {category: 'location'}, [\n          new xml.Text(`${source.filePath}:${source.startLine}${\n              source.endLine !== source.startLine ? ',' + source.endLine : ''}`)\n        ]));\n      });\n\n      notes.children.push(new xml.CR(6));\n      unit.children.push(new xml.CR(6), notes);\n\n      const segment = new xml.Tag('segment');\n\n      segment.children.push(\n          new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)),\n          new xml.CR(6));\n\n      unit.children.push(new xml.CR(6), segment, new xml.CR(4));\n\n      units.push(new xml.CR(4), unit);\n    });\n\n    const file =\n        new xml.Tag('file', {'original': 'ng.template', id: 'ngi18n'}, [...units, new xml.CR(2)]);\n\n    const xliff = new xml.Tag(\n        _XLIFF_TAG, {version: _VERSION, xmlns: _XMLNS, srcLang: locale || _DEFAULT_SOURCE_LANG},\n        [new xml.CR(2), file, new xml.CR()]);\n\n    return xml.serialize([\n      new xml.Declaration({version: '1.0', encoding: 'UTF-8'}), new xml.CR(), xliff, new xml.CR()\n    ]);\n  }\n\n  load(content: string, url: string):\n      {locale: string, i18nNodesByMsgId: {[msgId: string]: i18n.Node[]}} {\n    // xliff to xml nodes\n    const xliff2Parser = new Xliff2Parser();\n    const {locale, msgIdToHtml, errors} = xliff2Parser.parse(content, url);\n\n    // xml nodes to i18n nodes\n    const i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {};\n    const converter = new XmlToI18n();\n\n    Object.keys(msgIdToHtml).forEach(msgId => {\n      const {i18nNodes, errors: e} = converter.convert(msgIdToHtml[msgId], url);\n      errors.push(...e);\n      i18nNodesByMsgId[msgId] = i18nNodes;\n    });\n\n    if (errors.length) {\n      throw new Error(`xliff2 parse errors:\\n${errors.join('\\n')}`);\n    }\n\n    return {locale: locale!, i18nNodesByMsgId};\n  }\n\n  digest(message: i18n.Message): string {\n    return decimalDigest(message);\n  }\n}\n\nclass _WriteVisitor implements i18n.Visitor {\n  // TODO(issue/24571): remove '!'.\n  private _nextPlaceholderId!: number;\n\n  visitText(text: i18n.Text, context?: any): xml.Node[] {\n    return [new xml.Text(text.value)];\n  }\n\n  visitContainer(container: i18n.Container, context?: any): xml.Node[] {\n    const nodes: xml.Node[] = [];\n    container.children.forEach((node: i18n.Node) => nodes.push(...node.visit(this)));\n    return nodes;\n  }\n\n  visitIcu(icu: i18n.Icu, context?: any): xml.Node[] {\n    const nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n\n    Object.keys(icu.cases).forEach((c: string) => {\n      nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n    });\n\n    nodes.push(new xml.Text(`}`));\n\n    return nodes;\n  }\n\n  visitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): xml.Node[] {\n    const type = getTypeForTag(ph.tag);\n\n    if (ph.isVoid) {\n      const tagPh = new xml.Tag(_PLACEHOLDER_TAG, {\n        id: (this._nextPlaceholderId++).toString(),\n        equiv: ph.startName,\n        type: type,\n        disp: `<${ph.tag}/>`,\n      });\n      return [tagPh];\n    }\n\n    const tagPc = new xml.Tag(_PLACEHOLDER_SPANNING_TAG, {\n      id: (this._nextPlaceholderId++).toString(),\n      equivStart: ph.startName,\n      equivEnd: ph.closeName,\n      type: type,\n      dispStart: `<${ph.tag}>`,\n      dispEnd: `</${ph.tag}>`,\n    });\n    const nodes: xml.Node[] = [].concat(...ph.children.map(node => node.visit(this)));\n    if (nodes.length) {\n      nodes.forEach((node: xml.Node) => tagPc.children.push(node));\n    } else {\n      tagPc.children.push(new xml.Text(''));\n    }\n\n    return [tagPc];\n  }\n\n  visitPlaceholder(ph: i18n.Placeholder, context?: any): xml.Node[] {\n    const idStr = (this._nextPlaceholderId++).toString();\n    return [new xml.Tag(_PLACEHOLDER_TAG, {\n      id: idStr,\n      equiv: ph.name,\n      disp: `{{${ph.value}}}`,\n    })];\n  }\n\n  visitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): xml.Node[] {\n    const cases = Object.keys(ph.value.cases).map((value: string) => value + ' {...}').join(' ');\n    const idStr = (this._nextPlaceholderId++).toString();\n    return [new xml.Tag(\n        _PLACEHOLDER_TAG,\n        {id: idStr, equiv: ph.name, disp: `{${ph.value.expression}, ${ph.value.type}, ${cases}}`})];\n  }\n\n  serialize(nodes: i18n.Node[]): xml.Node[] {\n    this._nextPlaceholderId = 0;\n    return [].concat(...nodes.map(node => node.visit(this)));\n  }\n}\n\n// Extract messages as xml nodes from the xliff file\nclass Xliff2Parser implements ml.Visitor {\n  // TODO(issue/24571): remove '!'.\n  private _unitMlString!: string|null;\n  // TODO(issue/24571): remove '!'.\n  private _errors!: I18nError[];\n  // TODO(issue/24571): remove '!'.\n  private _msgIdToHtml!: {[msgId: string]: string};\n  private _locale: string|null = null;\n\n  parse(xliff: string, url: string) {\n    this._unitMlString = null;\n    this._msgIdToHtml = {};\n\n    const xml = new XmlParser().parse(xliff, url);\n\n    this._errors = xml.errors;\n    ml.visitAll(this, xml.rootNodes, null);\n\n    return {\n      msgIdToHtml: this._msgIdToHtml,\n      errors: this._errors,\n      locale: this._locale,\n    };\n  }\n\n  visitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _UNIT_TAG:\n        this._unitMlString = null;\n        const idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_UNIT_TAG}> misses the \"id\" attribute`);\n        } else {\n          const id = idAttr.value;\n          if (this._msgIdToHtml.hasOwnProperty(id)) {\n            this._addError(element, `Duplicated translations for msg ${id}`);\n          } else {\n            ml.visitAll(this, element.children, null);\n            if (typeof this._unitMlString === 'string') {\n              this._msgIdToHtml[id] = this._unitMlString;\n            } else {\n              this._addError(element, `Message ${id} misses a translation`);\n            }\n          }\n        }\n        break;\n\n      case _SOURCE_TAG:\n        // ignore source message\n        break;\n\n      case _TARGET_TAG:\n        const innerTextStart = element.startSourceSpan.end.offset;\n        const innerTextEnd = element.endSourceSpan!.start.offset;\n        const content = element.startSourceSpan.start.file.content;\n        const innerText = content.slice(innerTextStart, innerTextEnd);\n        this._unitMlString = innerText;\n        break;\n\n      case _XLIFF_TAG:\n        const localeAttr = element.attrs.find((attr) => attr.name === 'trgLang');\n        if (localeAttr) {\n          this._locale = localeAttr.value;\n        }\n\n        const versionAttr = element.attrs.find((attr) => attr.name === 'version');\n        if (versionAttr) {\n          const version = versionAttr.value;\n          if (version !== '2.0') {\n            this._addError(\n                element,\n                `The XLIFF file version ${version} is not compatible with XLIFF 2.0 serializer`);\n          } else {\n            ml.visitAll(this, element.children, null);\n          }\n        }\n        break;\n      default:\n        ml.visitAll(this, element.children, null);\n    }\n  }\n\n  visitAttribute(attribute: ml.Attribute, context: any): any {}\n\n  visitText(text: ml.Text, context: any): any {}\n\n  visitComment(comment: ml.Comment, context: any): any {}\n\n  visitExpansion(expansion: ml.Expansion, context: any): any {}\n\n  visitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {}\n\n  private _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\n// Convert ml nodes (xliff syntax) to i18n nodes\nclass XmlToI18n implements ml.Visitor {\n  // TODO(issue/24571): remove '!'.\n  private _errors!: I18nError[];\n\n  convert(message: string, url: string) {\n    const xmlIcu = new XmlParser().parse(message, url, {tokenizeExpansionForms: true});\n    this._errors = xmlIcu.errors;\n\n    const i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n        [] :\n        [].concat(...ml.visitAll(this, xmlIcu.rootNodes));\n\n    return {\n      i18nNodes,\n      errors: this._errors,\n    };\n  }\n\n  visitText(text: ml.Text, context: any) {\n    return new i18n.Text(text.value, text.sourceSpan);\n  }\n\n  visitElement(el: ml.Element, context: any): i18n.Node[]|null {\n    switch (el.name) {\n      case _PLACEHOLDER_TAG:\n        const nameAttr = el.attrs.find((attr) => attr.name === 'equiv');\n        if (nameAttr) {\n          return [new i18n.Placeholder('', nameAttr.value, el.sourceSpan)];\n        }\n\n        this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equiv\" attribute`);\n        break;\n      case _PLACEHOLDER_SPANNING_TAG:\n        const startAttr = el.attrs.find((attr) => attr.name === 'equivStart');\n        const endAttr = el.attrs.find((attr) => attr.name === 'equivEnd');\n\n        if (!startAttr) {\n          this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equivStart\" attribute`);\n        } else if (!endAttr) {\n          this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equivEnd\" attribute`);\n        } else {\n          const startId = startAttr.value;\n          const endId = endAttr.value;\n\n          const nodes: i18n.Node[] = [];\n\n          return nodes.concat(\n              new i18n.Placeholder('', startId, el.sourceSpan),\n              ...el.children.map(node => node.visit(this, null)),\n              new i18n.Placeholder('', endId, el.sourceSpan));\n        }\n        break;\n      case _MARKER_TAG:\n        return [].concat(...ml.visitAll(this, el.children));\n      default:\n        this._addError(el, `Unexpected tag`);\n    }\n\n    return null;\n  }\n\n  visitExpansion(icu: ml.Expansion, context: any) {\n    const caseMap: {[value: string]: i18n.Node} = {};\n\n    ml.visitAll(this, icu.cases).forEach((c: any) => {\n      caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n    });\n\n    return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n  }\n\n  visitExpansionCase(icuCase: ml.ExpansionCase, context: any): any {\n    return {\n      value: icuCase.value,\n      nodes: [].concat(...ml.visitAll(this, icuCase.expression)),\n    };\n  }\n\n  visitComment(comment: ml.Comment, context: any) {}\n\n  visitAttribute(attribute: ml.Attribute, context: any) {}\n\n  private _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\nfunction getTypeForTag(tag: string): string {\n  switch (tag.toLowerCase()) {\n    case 'br':\n    case 'b':\n    case 'i':\n    case 'u':\n      return 'fmt';\n    case 'img':\n      return 'image';\n    case 'a':\n      return 'link';\n    default:\n      return 'other';\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}