{"ast":null,"code":"'use strict';\n\nvar path = require('path');\n\nvar commonDir = require('commondir');\n\nvar pkgDir = require('pkg-dir');\n\nvar makeDir = require('make-dir');\n\nmodule.exports = function () {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var name = options.name;\n  var directory = options.cwd;\n\n  if (options.files) {\n    directory = commonDir(directory, options.files);\n  } else {\n    directory = directory || process.cwd();\n  }\n\n  directory = pkgDir.sync(directory);\n\n  if (directory) {\n    directory = path.join(directory, 'node_modules', '.cache', name);\n\n    if (directory && options.create) {\n      makeDir.sync(directory);\n    }\n\n    if (options.thunk) {\n      return function () {\n        for (var _len = arguments.length, arguments_ = new Array(_len), _key = 0; _key < _len; _key++) {\n          arguments_[_key] = arguments[_key];\n        }\n\n        return path.join.apply(path, [directory].concat(arguments_));\n      };\n    }\n  }\n\n  return directory;\n};","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/babel-loader/node_modules/find-cache-dir/index.js"],"names":["path","require","commonDir","pkgDir","makeDir","module","exports","options","name","directory","cwd","files","process","sync","join","create","thunk","arguments_"],"mappings":"AAAA;;AACA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,UAAD,CAAvB;;AAEAI,MAAM,CAACC,OAAP,GAAiB,YAAkB;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AAClC,MAAOC,IAAP,GAAeD,OAAf,CAAOC,IAAP;AACA,MAAIC,SAAS,GAAGF,OAAO,CAACG,GAAxB;;AAEA,MAAIH,OAAO,CAACI,KAAZ,EAAmB;AAClBF,IAAAA,SAAS,GAAGP,SAAS,CAACO,SAAD,EAAYF,OAAO,CAACI,KAApB,CAArB;AACA,GAFD,MAEO;AACNF,IAAAA,SAAS,GAAGA,SAAS,IAAIG,OAAO,CAACF,GAAR,EAAzB;AACA;;AAEDD,EAAAA,SAAS,GAAGN,MAAM,CAACU,IAAP,CAAYJ,SAAZ,CAAZ;;AAEA,MAAIA,SAAJ,EAAe;AACdA,IAAAA,SAAS,GAAGT,IAAI,CAACc,IAAL,CAAUL,SAAV,EAAqB,cAArB,EAAqC,QAArC,EAA+CD,IAA/C,CAAZ;;AAEA,QAAIC,SAAS,IAAIF,OAAO,CAACQ,MAAzB,EAAiC;AAChCX,MAAAA,OAAO,CAACS,IAAR,CAAaJ,SAAb;AACA;;AAED,QAAIF,OAAO,CAACS,KAAZ,EAAmB;AAClB,aAAO;AAAA,0CAAIC,UAAJ;AAAIA,UAAAA,UAAJ;AAAA;;AAAA,eAAmBjB,IAAI,CAACc,IAAL,OAAAd,IAAI,GAAMS,SAAN,SAAoBQ,UAApB,EAAvB;AAAA,OAAP;AACA;AACD;;AAED,SAAOR,SAAP;AACA,CAzBD","sourcesContent":["'use strict';\nconst path = require('path');\nconst commonDir = require('commondir');\nconst pkgDir = require('pkg-dir');\nconst makeDir = require('make-dir');\n\nmodule.exports = (options = {}) => {\n\tconst {name} = options;\n\tlet directory = options.cwd;\n\n\tif (options.files) {\n\t\tdirectory = commonDir(directory, options.files);\n\t} else {\n\t\tdirectory = directory || process.cwd();\n\t}\n\n\tdirectory = pkgDir.sync(directory);\n\n\tif (directory) {\n\t\tdirectory = path.join(directory, 'node_modules', '.cache', name);\n\n\t\tif (directory && options.create) {\n\t\t\tmakeDir.sync(directory);\n\t\t}\n\n\t\tif (options.thunk) {\n\t\t\treturn (...arguments_) => path.join(directory, ...arguments_);\n\t\t}\n\t}\n\n\treturn directory;\n};\n"]},"metadata":{},"sourceType":"script"}