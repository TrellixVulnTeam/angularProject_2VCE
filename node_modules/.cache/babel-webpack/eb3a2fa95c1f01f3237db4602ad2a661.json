{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar NamedChunksPlugin = /*#__PURE__*/function () {\n  function NamedChunksPlugin(nameResolver) {\n    _classCallCheck(this, NamedChunksPlugin);\n\n    this.nameResolver = nameResolver || NamedChunksPlugin.defaultNameResolver;\n  }\n\n  _createClass(NamedChunksPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.compilation.tap(\"NamedChunksPlugin\", function (compilation) {\n        compilation.hooks.beforeChunkIds.tap(\"NamedChunksPlugin\", function (chunks) {\n          var _iterator = _createForOfIteratorHelper(chunks),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var chunk = _step.value;\n\n              if (chunk.id === null) {\n                chunk.id = _this.nameResolver(chunk);\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        });\n      });\n    }\n  }], [{\n    key: \"defaultNameResolver\",\n    value: function defaultNameResolver(chunk) {\n      return chunk.name || null;\n    }\n  }]);\n\n  return NamedChunksPlugin;\n}();\n\nmodule.exports = NamedChunksPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/NamedChunksPlugin.js"],"names":["NamedChunksPlugin","nameResolver","defaultNameResolver","compiler","hooks","compilation","tap","beforeChunkIds","chunks","chunk","id","name","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;IAEMA,iB;AAKL,6BAAYC,YAAZ,EAA0B;AAAA;;AACzB,SAAKA,YAAL,GAAoBA,YAAY,IAAID,iBAAiB,CAACE,mBAAtD;AACA;;;;WAED,eAAMC,QAAN,EAAgB;AAAA;;AACfA,MAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CAA+B,mBAA/B,EAAoD,UAAAD,WAAW,EAAI;AAClEA,QAAAA,WAAW,CAACD,KAAZ,CAAkBG,cAAlB,CAAiCD,GAAjC,CAAqC,mBAArC,EAA0D,UAAAE,MAAM,EAAI;AAAA,qDAC/CA,MAD+C;AAAA;;AAAA;AACnE,gEAA4B;AAAA,kBAAjBC,KAAiB;;AAC3B,kBAAIA,KAAK,CAACC,EAAN,KAAa,IAAjB,EAAuB;AACtBD,gBAAAA,KAAK,CAACC,EAAN,GAAW,KAAI,CAACT,YAAL,CAAkBQ,KAAlB,CAAX;AACA;AACD;AALkE;AAAA;AAAA;AAAA;AAAA;AAMnE,SAND;AAOA,OARD;AASA;;;WAlBD,6BAA2BA,KAA3B,EAAkC;AACjC,aAAOA,KAAK,CAACE,IAAN,IAAc,IAArB;AACA;;;;;;AAmBFC,MAAM,CAACC,OAAP,GAAiBb,iBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass NamedChunksPlugin {\n\tstatic defaultNameResolver(chunk) {\n\t\treturn chunk.name || null;\n\t}\n\n\tconstructor(nameResolver) {\n\t\tthis.nameResolver = nameResolver || NamedChunksPlugin.defaultNameResolver;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"NamedChunksPlugin\", compilation => {\n\t\t\tcompilation.hooks.beforeChunkIds.tap(\"NamedChunksPlugin\", chunks => {\n\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\tif (chunk.id === null) {\n\t\t\t\t\t\tchunk.id = this.nameResolver(chunk);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = NamedChunksPlugin;\n"]},"metadata":{},"sourceType":"script"}