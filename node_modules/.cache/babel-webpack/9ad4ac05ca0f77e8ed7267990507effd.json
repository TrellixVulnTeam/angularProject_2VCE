{"ast":null,"code":"var fs = require('fs');\n\nvar path = require('path');\n\nvar pify = require('pify');\n\nvar stat = pify(fs.stat);\nvar readFile = pify(fs.readFile);\nvar resolve = path.resolve;\nvar cache = Object.create(null);\n\nfunction convert(content, encoding) {\n  if (Buffer.isEncoding(encoding)) {\n    return content.toString(encoding);\n  }\n\n  return content;\n}\n\nmodule.exports = function (path, encoding) {\n  path = resolve(path);\n  return stat(path).then(function (stats) {\n    var item = cache[path];\n\n    if (item && item.mtime.getTime() === stats.mtime.getTime()) {\n      return convert(item.content, encoding);\n    }\n\n    return readFile(path).then(function (data) {\n      cache[path] = {\n        mtime: stats.mtime,\n        content: data\n      };\n      return convert(data, encoding);\n    });\n  }).catch(function (err) {\n    cache[path] = null;\n    return Promise.reject(err);\n  });\n};\n\nmodule.exports.sync = function (path, encoding) {\n  path = resolve(path);\n\n  try {\n    var stats = fs.statSync(path);\n    var item = cache[path];\n\n    if (item && item.mtime.getTime() === stats.mtime.getTime()) {\n      return convert(item.content, encoding);\n    }\n\n    var data = fs.readFileSync(path);\n    cache[path] = {\n      mtime: stats.mtime,\n      content: data\n    };\n    return convert(data, encoding);\n  } catch (err) {\n    cache[path] = null;\n    throw err;\n  }\n};\n\nmodule.exports.get = function (path, encoding) {\n  path = resolve(path);\n\n  if (cache[path]) {\n    return convert(cache[path].content, encoding);\n  }\n\n  return null;\n};\n\nmodule.exports.clear = function () {\n  cache = Object.create(null);\n};","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/read-cache/index.js"],"names":["fs","require","path","pify","stat","readFile","resolve","cache","Object","create","convert","content","encoding","Buffer","isEncoding","toString","module","exports","then","stats","item","mtime","getTime","data","catch","err","Promise","reject","sync","statSync","readFileSync","get","clear"],"mappings":"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","sourcesContent":["var fs = require('fs');\r\nvar path = require('path');\r\nvar pify = require('pify');\r\n\r\nvar stat = pify(fs.stat);\r\nvar readFile = pify(fs.readFile);\r\nvar resolve = path.resolve;\r\n\r\nvar cache = Object.create(null);\r\n\r\nfunction convert(content, encoding) {\r\n\tif (Buffer.isEncoding(encoding)) {\r\n\t\treturn content.toString(encoding);\r\n\t}\r\n\treturn content;\r\n}\r\n\r\nmodule.exports = function (path, encoding) {\r\n\tpath = resolve(path);\r\n\r\n\treturn stat(path).then(function (stats) {\r\n\t\tvar item = cache[path];\r\n\r\n\t\tif (item && item.mtime.getTime() === stats.mtime.getTime()) {\r\n\t\t\treturn convert(item.content, encoding);\r\n\t\t}\r\n\r\n\t\treturn readFile(path).then(function (data) {\r\n\t\t\tcache[path] = {\r\n\t\t\t\tmtime: stats.mtime,\r\n\t\t\t\tcontent: data\r\n\t\t\t};\r\n\r\n\t\t\treturn convert(data, encoding);\r\n\t\t});\r\n\t}).catch(function (err) {\r\n\t\tcache[path] = null;\r\n\t\treturn Promise.reject(err);\r\n\t});\r\n};\r\n\r\nmodule.exports.sync = function (path, encoding) {\r\n\tpath = resolve(path);\r\n\r\n\ttry {\r\n\t\tvar stats = fs.statSync(path);\r\n\t\tvar item = cache[path];\r\n\r\n\t\tif (item && item.mtime.getTime() === stats.mtime.getTime()) {\r\n\t\t\treturn convert(item.content, encoding);\r\n\t\t}\r\n\r\n\t\tvar data = fs.readFileSync(path);\r\n\r\n\t\tcache[path] = {\r\n\t\t\tmtime: stats.mtime,\r\n\t\t\tcontent: data\r\n\t\t};\r\n\r\n\t\treturn convert(data, encoding);\r\n\t} catch (err) {\r\n\t\tcache[path] = null;\r\n\t\tthrow err;\r\n\t}\r\n\r\n};\r\n\r\nmodule.exports.get = function (path, encoding) {\r\n\tpath = resolve(path);\r\n\tif (cache[path]) {\r\n\t\treturn convert(cache[path].content, encoding);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nmodule.exports.clear = function () {\r\n\tcache = Object.create(null);\r\n};\r\n"]},"metadata":{},"sourceType":"script"}