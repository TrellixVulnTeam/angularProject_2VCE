{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SuppressExtractedTextChunksWebpackPlugin = void 0;\n/**\n * Remove .js files from entry points consisting entirely of stylesheets.\n * To be used together with mini-css-extract-plugin.\n */\n\nvar SuppressExtractedTextChunksWebpackPlugin = /*#__PURE__*/function () {\n  function SuppressExtractedTextChunksWebpackPlugin() {\n    _classCallCheck(this, SuppressExtractedTextChunksWebpackPlugin);\n  }\n\n  _createClass(SuppressExtractedTextChunksWebpackPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.compilation.tap('SuppressExtractedTextChunks', function (compilation) {\n        compilation.hooks.chunkAsset.tap('SuppressExtractedTextChunks', function (chunk, filename) {\n          var _a; // Remove only JavaScript assets\n\n\n          if (!filename.endsWith('.js')) {\n            return;\n          } // Only chunks with a css asset should have JavaScript assets removed\n\n\n          var hasCssFile = false; // chunk.files is an Array in Webpack 4 and a Set in Webpack 5\n\n          var _iterator = _createForOfIteratorHelper(chunk.files),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var file = _step.value;\n\n              if (file.endsWith('.css')) {\n                hasCssFile = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          if (!hasCssFile) {\n            return;\n          } // Only chunks with all CSS entry dependencies should have JavaScript assets removed\n\n\n          var cssOnly = false; // The any cast is used for default Webpack 4 type compatibility\n          // tslint:disable-next-line: no-any\n\n          var entryModules = (_a = compilation.chunkGraph) === null || _a === void 0 ? void 0 : _a.getChunkEntryModulesIterable(chunk);\n\n          if (entryModules) {\n            // Webpack 5\n            var _iterator2 = _createForOfIteratorHelper(entryModules),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var module = _step2.value;\n                cssOnly = module.dependencies.every(function (dependency) {\n                  return dependency.constructor.name === 'CssDependency';\n                });\n\n                if (!cssOnly) {\n                  break;\n                }\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          } else {\n            // Webpack 4\n            var _iterator3 = _createForOfIteratorHelper(chunk.modulesIterable),\n                _step3;\n\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var _module = _step3.value;\n                cssOnly = _module.dependencies.every(function (dependency) {\n                  var name = dependency.constructor.name;\n                  return name === 'CssDependency' || name === 'SingleEntryDependency' || name === 'MultiEntryDependency' || name === 'HarmonyCompatibilityDependency' || name === 'HarmonyExportHeaderDependency' || name === 'HarmonyInitDependency';\n                });\n\n                if (!cssOnly) {\n                  break;\n                }\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n          }\n\n          if (cssOnly) {\n            if (Array.isArray(chunk.files)) {\n              // Webpack 4\n              chunk.files = chunk.files.filter(function (file) {\n                return file !== filename;\n              });\n              delete compilation.assets[filename];\n            } else {\n              // Webpack 5\n              // Casting is used for default Webpack 4 type compatibility\n              chunk.files.delete(filename);\n              compilation.deleteAsset(filename);\n            }\n          }\n        });\n      });\n    }\n  }]);\n\n  return SuppressExtractedTextChunksWebpackPlugin;\n}();\n\nexports.SuppressExtractedTextChunksWebpackPlugin = SuppressExtractedTextChunksWebpackPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/src/webpack/plugins/suppress-entry-chunks-webpack-plugin.js"],"names":["Object","defineProperty","exports","value","SuppressExtractedTextChunksWebpackPlugin","compiler","hooks","compilation","tap","chunkAsset","chunk","filename","_a","endsWith","hasCssFile","files","file","cssOnly","entryModules","chunkGraph","getChunkEntryModulesIterable","module","dependencies","every","dependency","constructor","name","modulesIterable","Array","isArray","filter","assets","delete","deleteAsset"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuppressExtractedTextChunksWebpackPlugin = void 0;\n/**\n * Remove .js files from entry points consisting entirely of stylesheets.\n * To be used together with mini-css-extract-plugin.\n */\nclass SuppressExtractedTextChunksWebpackPlugin {\n    apply(compiler) {\n        compiler.hooks.compilation.tap('SuppressExtractedTextChunks', (compilation) => {\n            compilation.hooks.chunkAsset.tap('SuppressExtractedTextChunks', (chunk, filename) => {\n                var _a;\n                // Remove only JavaScript assets\n                if (!filename.endsWith('.js')) {\n                    return;\n                }\n                // Only chunks with a css asset should have JavaScript assets removed\n                let hasCssFile = false;\n                // chunk.files is an Array in Webpack 4 and a Set in Webpack 5\n                for (const file of chunk.files) {\n                    if (file.endsWith('.css')) {\n                        hasCssFile = true;\n                        break;\n                    }\n                }\n                if (!hasCssFile) {\n                    return;\n                }\n                // Only chunks with all CSS entry dependencies should have JavaScript assets removed\n                let cssOnly = false;\n                // The any cast is used for default Webpack 4 type compatibility\n                // tslint:disable-next-line: no-any\n                const entryModules = (_a = compilation.chunkGraph) === null || _a === void 0 ? void 0 : _a.getChunkEntryModulesIterable(chunk);\n                if (entryModules) {\n                    // Webpack 5\n                    for (const module of entryModules) {\n                        cssOnly = module.dependencies.every((dependency) => dependency.constructor.name === 'CssDependency');\n                        if (!cssOnly) {\n                            break;\n                        }\n                    }\n                }\n                else {\n                    // Webpack 4\n                    for (const module of chunk.modulesIterable) {\n                        cssOnly = module.dependencies.every((dependency) => {\n                            const name = dependency.constructor.name;\n                            return (name === 'CssDependency' ||\n                                name === 'SingleEntryDependency' ||\n                                name === 'MultiEntryDependency' ||\n                                name === 'HarmonyCompatibilityDependency' ||\n                                name === 'HarmonyExportHeaderDependency' ||\n                                name === 'HarmonyInitDependency');\n                        });\n                        if (!cssOnly) {\n                            break;\n                        }\n                    }\n                }\n                if (cssOnly) {\n                    if (Array.isArray(chunk.files)) {\n                        // Webpack 4\n                        chunk.files = chunk.files.filter((file) => file !== filename);\n                        delete compilation.assets[filename];\n                    }\n                    else {\n                        // Webpack 5\n                        // Casting is used for default Webpack 4 type compatibility\n                        chunk.files.delete(filename);\n                        compilation.deleteAsset(filename);\n                    }\n                }\n            });\n        });\n    }\n}\nexports.SuppressExtractedTextChunksWebpackPlugin = SuppressExtractedTextChunksWebpackPlugin;\n"]},"metadata":{},"sourceType":"script"}