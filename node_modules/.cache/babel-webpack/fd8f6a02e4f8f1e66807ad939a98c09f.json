{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIndexInputFile = exports.getIndexOutputFile = exports.generateBrowserWebpackConfigFromContext = exports.generateI18nBrowserWebpackConfigFromContext = exports.generateWebpackConfig = void 0;\n\nvar core_1 = require(\"@angular-devkit/core\");\n\nvar node_1 = require(\"@angular-devkit/core/node\");\n\nvar path = require(\"path\");\n\nvar webpack_merge_1 = require(\"webpack-merge\");\n\nvar utils_1 = require(\"../utils\");\n\nvar read_tsconfig_1 = require(\"../utils/read-tsconfig\");\n\nvar helpers_1 = require(\"../webpack/utils/helpers\");\n\nvar environment_options_1 = require(\"./environment-options\");\n\nvar i18n_options_1 = require(\"./i18n-options\");\n\nfunction generateWebpackConfig(_x, _x2, _x3, _x4, _x5, _x6, _x7) {\n  return _generateWebpackConfig.apply(this, arguments);\n}\n\nfunction _generateWebpackConfig() {\n  _generateWebpackConfig = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(workspaceRoot, projectRoot, sourceRoot, options, webpackPartialGenerator, logger, extraBuildOptions) {\n    var tsConfigPath, tsConfig, ts, scriptTarget, supportES2015, buildOptions, wco, webpackConfig, esVersionInFileName, SpeedMeasurePlugin, smp;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(options.buildOptimizer && !options.aot)) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error(\"The 'buildOptimizer' option cannot be used without 'aot'.\");\n\n          case 2:\n            if (!options.experimentalRollupPass) {\n              _context.next = 7;\n              break;\n            }\n\n            if (options.aot) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error(\"The 'experimentalRollupPass' option cannot be used without 'aot'.\");\n\n          case 5:\n            if (!(options.vendorChunk || options.commonChunk || options.namedChunks)) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error(\"The 'experimentalRollupPass' option cannot be used with the\" + \"'vendorChunk', 'commonChunk', 'namedChunks' options set to true.\");\n\n          case 7:\n            tsConfigPath = path.resolve(workspaceRoot, options.tsConfig);\n            tsConfig = read_tsconfig_1.readTsconfig(tsConfigPath); // tslint:disable-next-line:no-implicit-dependencies\n\n            _context.next = 11;\n            return Promise.resolve().then(function () {\n              return require('typescript');\n            });\n\n          case 11:\n            ts = _context.sent;\n            scriptTarget = tsConfig.options.target || ts.ScriptTarget.ES5;\n            supportES2015 = scriptTarget !== ts.ScriptTarget.JSON && scriptTarget > ts.ScriptTarget.ES5;\n            buildOptions = _objectSpread(_objectSpread({}, options), extraBuildOptions);\n            wco = {\n              root: workspaceRoot,\n              logger: logger.createChild('webpackConfigOptions'),\n              projectRoot: projectRoot,\n              sourceRoot: sourceRoot,\n              buildOptions: buildOptions,\n              tsConfig: tsConfig,\n              tsConfigPath: tsConfigPath,\n              supportES2015: supportES2015\n            };\n            wco.buildOptions.progress = utils_1.defaultProgress(wco.buildOptions.progress);\n            webpackConfig = webpack_merge_1.merge(webpackPartialGenerator(wco));\n\n            if (supportES2015) {\n              if (!webpackConfig.resolve) {\n                webpackConfig.resolve = {};\n              }\n\n              if (Array.isArray(webpackConfig.resolve.alias)) {\n                webpackConfig.resolve.alias.push({\n                  alias: 'zone.js/dist/zone',\n                  name: 'zone.js/dist/zone-evergreen'\n                });\n              } else {\n                if (!webpackConfig.resolve.alias) {\n                  webpackConfig.resolve.alias = {};\n                }\n\n                webpackConfig.resolve.alias['zone.js/dist/zone'] = 'zone.js/dist/zone-evergreen';\n              }\n            }\n\n            if (!environment_options_1.profilingEnabled) {\n              _context.next = 26;\n              break;\n            }\n\n            esVersionInFileName = helpers_1.getEsVersionForFileName(tsConfig.options.target, buildOptions.differentialLoadingMode);\n            _context.next = 23;\n            return Promise.resolve().then(function () {\n              return require('speed-measure-webpack-plugin');\n            });\n\n          case 23:\n            SpeedMeasurePlugin = _context.sent;\n            smp = new SpeedMeasurePlugin({\n              outputFormat: 'json',\n              outputTarget: path.resolve(workspaceRoot, \"speed-measure-plugin\".concat(esVersionInFileName, \".json\"))\n            });\n            return _context.abrupt(\"return\", smp.wrap(webpackConfig));\n\n          case 26:\n            return _context.abrupt(\"return\", webpackConfig);\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _generateWebpackConfig.apply(this, arguments);\n}\n\nexports.generateWebpackConfig = generateWebpackConfig;\n\nfunction generateI18nBrowserWebpackConfigFromContext(_x8, _x9, _x10) {\n  return _generateI18nBrowserWebpackConfigFromContext.apply(this, arguments);\n}\n\nfunction _generateI18nBrowserWebpackConfigFromContext() {\n  _generateI18nBrowserWebpackConfigFromContext = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(options, context, webpackPartialGenerator) {\n    var host,\n        extraBuildOptions,\n        _yield$i18n_options_,\n        buildOptions,\n        i18n,\n        result,\n        config,\n        i18nHash,\n        _args2 = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            host = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : new node_1.NodeJsSyncHost();\n            extraBuildOptions = _args2.length > 4 && _args2[4] !== undefined ? _args2[4] : {};\n            _context2.next = 4;\n            return i18n_options_1.configureI18nBuild(context, options);\n\n          case 4:\n            _yield$i18n_options_ = _context2.sent;\n            buildOptions = _yield$i18n_options_.buildOptions;\n            i18n = _yield$i18n_options_.i18n;\n            _context2.next = 9;\n            return generateBrowserWebpackConfigFromContext(buildOptions, context, webpackPartialGenerator, host, extraBuildOptions);\n\n          case 9:\n            result = _context2.sent;\n            config = result.config;\n\n            if (i18n.shouldInline) {\n              // Remove localize \"polyfill\" if in AOT mode\n              if (buildOptions.aot) {\n                if (!config.resolve) {\n                  config.resolve = {};\n                }\n\n                if (Array.isArray(config.resolve.alias)) {\n                  config.resolve.alias.push({\n                    alias: '@angular/localize/init',\n                    name: require.resolve('./empty.js')\n                  });\n                } else {\n                  if (!config.resolve.alias) {\n                    config.resolve.alias = {};\n                  }\n\n                  config.resolve.alias['@angular/localize/init'] = require.resolve('./empty.js');\n                }\n              } // Update file hashes to include translation file content\n\n\n              i18nHash = Object.values(i18n.locales).reduce(function (data, locale) {\n                return data + locale.files.map(function (file) {\n                  return file.integrity || '';\n                }).join('|');\n              }, '');\n\n              if (!config.plugins) {\n                config.plugins = [];\n              }\n\n              config.plugins.push({\n                apply: function apply(compiler) {\n                  compiler.hooks.compilation.tap('build-angular', function (compilation) {\n                    // Webpack typings do not contain template hashForChunk hook\n                    // tslint:disable-next-line: no-any\n                    compilation.mainTemplate.hooks.hashForChunk.tap('build-angular', function (hash) {\n                      hash.update('$localize' + i18nHash);\n                    }); // Webpack typings do not contain hooks property\n                    // tslint:disable-next-line: no-any\n\n                    compilation.chunkTemplate.hooks.hashForChunk.tap('build-angular', function (hash) {\n                      hash.update('$localize' + i18nHash);\n                    });\n                  });\n                }\n              });\n            }\n\n            return _context2.abrupt(\"return\", _objectSpread(_objectSpread({}, result), {}, {\n              i18n: i18n\n            }));\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _generateI18nBrowserWebpackConfigFromContext.apply(this, arguments);\n}\n\nexports.generateI18nBrowserWebpackConfigFromContext = generateI18nBrowserWebpackConfigFromContext;\n\nfunction generateBrowserWebpackConfigFromContext(_x11, _x12, _x13) {\n  return _generateBrowserWebpackConfigFromContext.apply(this, arguments);\n}\n\nfunction _generateBrowserWebpackConfigFromContext() {\n  _generateBrowserWebpackConfigFromContext = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(options, context, webpackPartialGenerator) {\n    var host,\n        extraBuildOptions,\n        projectName,\n        workspaceRoot,\n        projectMetadata,\n        projectRoot,\n        projectSourceRoot,\n        sourceRoot,\n        normalizedOptions,\n        config,\n        _args3 = arguments;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            host = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : new node_1.NodeJsSyncHost();\n            extraBuildOptions = _args3.length > 4 && _args3[4] !== undefined ? _args3[4] : {};\n            projectName = context.target && context.target.project;\n\n            if (projectName) {\n              _context3.next = 5;\n              break;\n            }\n\n            throw new Error('The builder requires a target.');\n\n          case 5:\n            workspaceRoot = core_1.normalize(context.workspaceRoot);\n            _context3.next = 8;\n            return context.getProjectMetadata(projectName);\n\n          case 8:\n            projectMetadata = _context3.sent;\n            projectRoot = core_1.resolve(workspaceRoot, core_1.normalize(projectMetadata.root || ''));\n            projectSourceRoot = projectMetadata.sourceRoot;\n            sourceRoot = projectSourceRoot ? core_1.resolve(workspaceRoot, core_1.normalize(projectSourceRoot)) : undefined;\n            normalizedOptions = utils_1.normalizeBrowserSchema(host, workspaceRoot, projectRoot, sourceRoot, options);\n            _context3.next = 15;\n            return generateWebpackConfig(core_1.getSystemPath(workspaceRoot), core_1.getSystemPath(projectRoot), sourceRoot && core_1.getSystemPath(sourceRoot), normalizedOptions, webpackPartialGenerator, context.logger, extraBuildOptions);\n\n          case 15:\n            config = _context3.sent;\n            return _context3.abrupt(\"return\", {\n              config: config,\n              projectRoot: core_1.getSystemPath(projectRoot),\n              projectSourceRoot: sourceRoot && core_1.getSystemPath(sourceRoot)\n            });\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _generateBrowserWebpackConfigFromContext.apply(this, arguments);\n}\n\nexports.generateBrowserWebpackConfigFromContext = generateBrowserWebpackConfigFromContext;\n\nfunction getIndexOutputFile(index) {\n  if (typeof index === 'string') {\n    return path.basename(index);\n  } else {\n    return index.output || 'index.html';\n  }\n}\n\nexports.getIndexOutputFile = getIndexOutputFile;\n\nfunction getIndexInputFile(index) {\n  if (typeof index === 'string') {\n    return index;\n  } else {\n    return index.input;\n  }\n}\n\nexports.getIndexInputFile = getIndexInputFile;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/src/utils/webpack-browser-config.js"],"names":["Object","defineProperty","exports","value","getIndexInputFile","getIndexOutputFile","generateBrowserWebpackConfigFromContext","generateI18nBrowserWebpackConfigFromContext","generateWebpackConfig","core_1","require","node_1","path","webpack_merge_1","utils_1","read_tsconfig_1","helpers_1","environment_options_1","i18n_options_1","workspaceRoot","projectRoot","sourceRoot","options","webpackPartialGenerator","logger","extraBuildOptions","buildOptimizer","aot","Error","experimentalRollupPass","vendorChunk","commonChunk","namedChunks","tsConfigPath","resolve","tsConfig","readTsconfig","Promise","then","ts","scriptTarget","target","ScriptTarget","ES5","supportES2015","JSON","buildOptions","wco","root","createChild","progress","defaultProgress","webpackConfig","merge","Array","isArray","alias","push","name","profilingEnabled","esVersionInFileName","getEsVersionForFileName","differentialLoadingMode","SpeedMeasurePlugin","smp","outputFormat","outputTarget","wrap","context","host","NodeJsSyncHost","configureI18nBuild","i18n","result","config","shouldInline","i18nHash","values","locales","reduce","data","locale","files","map","file","integrity","join","plugins","apply","compiler","hooks","compilation","tap","mainTemplate","hashForChunk","hash","update","chunkTemplate","projectName","project","normalize","getProjectMetadata","projectMetadata","projectSourceRoot","undefined","normalizedOptions","normalizeBrowserSchema","getSystemPath","index","basename","output","input"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getIndexInputFile = exports.getIndexOutputFile = exports.generateBrowserWebpackConfigFromContext = exports.generateI18nBrowserWebpackConfigFromContext = exports.generateWebpackConfig = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst node_1 = require(\"@angular-devkit/core/node\");\nconst path = require(\"path\");\nconst webpack_merge_1 = require(\"webpack-merge\");\nconst utils_1 = require(\"../utils\");\nconst read_tsconfig_1 = require(\"../utils/read-tsconfig\");\nconst helpers_1 = require(\"../webpack/utils/helpers\");\nconst environment_options_1 = require(\"./environment-options\");\nconst i18n_options_1 = require(\"./i18n-options\");\nasync function generateWebpackConfig(workspaceRoot, projectRoot, sourceRoot, options, webpackPartialGenerator, logger, extraBuildOptions) {\n    // Ensure Build Optimizer is only used with AOT.\n    if (options.buildOptimizer && !options.aot) {\n        throw new Error(`The 'buildOptimizer' option cannot be used without 'aot'.`);\n    }\n    // Ensure Rollup Concatenation is only used with compatible options.\n    if (options.experimentalRollupPass) {\n        if (!options.aot) {\n            throw new Error(`The 'experimentalRollupPass' option cannot be used without 'aot'.`);\n        }\n        if (options.vendorChunk || options.commonChunk || options.namedChunks) {\n            throw new Error(`The 'experimentalRollupPass' option cannot be used with the`\n                + `'vendorChunk', 'commonChunk', 'namedChunks' options set to true.`);\n        }\n    }\n    const tsConfigPath = path.resolve(workspaceRoot, options.tsConfig);\n    const tsConfig = read_tsconfig_1.readTsconfig(tsConfigPath);\n    // tslint:disable-next-line:no-implicit-dependencies\n    const ts = await Promise.resolve().then(() => require('typescript'));\n    const scriptTarget = tsConfig.options.target || ts.ScriptTarget.ES5;\n    const supportES2015 = scriptTarget !== ts.ScriptTarget.JSON && scriptTarget > ts.ScriptTarget.ES5;\n    const buildOptions = { ...options, ...extraBuildOptions };\n    const wco = {\n        root: workspaceRoot,\n        logger: logger.createChild('webpackConfigOptions'),\n        projectRoot,\n        sourceRoot,\n        buildOptions,\n        tsConfig,\n        tsConfigPath,\n        supportES2015,\n    };\n    wco.buildOptions.progress = utils_1.defaultProgress(wco.buildOptions.progress);\n    const webpackConfig = webpack_merge_1.merge(webpackPartialGenerator(wco));\n    if (supportES2015) {\n        if (!webpackConfig.resolve) {\n            webpackConfig.resolve = {};\n        }\n        if (Array.isArray(webpackConfig.resolve.alias)) {\n            webpackConfig.resolve.alias.push({\n                alias: 'zone.js/dist/zone',\n                name: 'zone.js/dist/zone-evergreen',\n            });\n        }\n        else {\n            if (!webpackConfig.resolve.alias) {\n                webpackConfig.resolve.alias = {};\n            }\n            webpackConfig.resolve.alias['zone.js/dist/zone'] = 'zone.js/dist/zone-evergreen';\n        }\n    }\n    if (environment_options_1.profilingEnabled) {\n        const esVersionInFileName = helpers_1.getEsVersionForFileName(tsConfig.options.target, buildOptions.differentialLoadingMode);\n        const SpeedMeasurePlugin = await Promise.resolve().then(() => require('speed-measure-webpack-plugin'));\n        const smp = new SpeedMeasurePlugin({\n            outputFormat: 'json',\n            outputTarget: path.resolve(workspaceRoot, `speed-measure-plugin${esVersionInFileName}.json`),\n        });\n        return smp.wrap(webpackConfig);\n    }\n    return webpackConfig;\n}\nexports.generateWebpackConfig = generateWebpackConfig;\nasync function generateI18nBrowserWebpackConfigFromContext(options, context, webpackPartialGenerator, host = new node_1.NodeJsSyncHost(), extraBuildOptions = {}) {\n    const { buildOptions, i18n } = await i18n_options_1.configureI18nBuild(context, options);\n    const result = await generateBrowserWebpackConfigFromContext(buildOptions, context, webpackPartialGenerator, host, extraBuildOptions);\n    const config = result.config;\n    if (i18n.shouldInline) {\n        // Remove localize \"polyfill\" if in AOT mode\n        if (buildOptions.aot) {\n            if (!config.resolve) {\n                config.resolve = {};\n            }\n            if (Array.isArray(config.resolve.alias)) {\n                config.resolve.alias.push({\n                    alias: '@angular/localize/init',\n                    name: require.resolve('./empty.js'),\n                });\n            }\n            else {\n                if (!config.resolve.alias) {\n                    config.resolve.alias = {};\n                }\n                config.resolve.alias['@angular/localize/init'] = require.resolve('./empty.js');\n            }\n        }\n        // Update file hashes to include translation file content\n        const i18nHash = Object.values(i18n.locales).reduce((data, locale) => data + locale.files.map((file) => file.integrity || '').join('|'), '');\n        if (!config.plugins) {\n            config.plugins = [];\n        }\n        config.plugins.push({\n            apply(compiler) {\n                compiler.hooks.compilation.tap('build-angular', compilation => {\n                    // Webpack typings do not contain template hashForChunk hook\n                    // tslint:disable-next-line: no-any\n                    compilation.mainTemplate.hooks.hashForChunk.tap('build-angular', (hash) => {\n                        hash.update('$localize' + i18nHash);\n                    });\n                    // Webpack typings do not contain hooks property\n                    // tslint:disable-next-line: no-any\n                    compilation.chunkTemplate.hooks.hashForChunk.tap('build-angular', (hash) => {\n                        hash.update('$localize' + i18nHash);\n                    });\n                });\n            },\n        });\n    }\n    return { ...result, i18n };\n}\nexports.generateI18nBrowserWebpackConfigFromContext = generateI18nBrowserWebpackConfigFromContext;\nasync function generateBrowserWebpackConfigFromContext(options, context, webpackPartialGenerator, host = new node_1.NodeJsSyncHost(), extraBuildOptions = {}) {\n    const projectName = context.target && context.target.project;\n    if (!projectName) {\n        throw new Error('The builder requires a target.');\n    }\n    const workspaceRoot = core_1.normalize(context.workspaceRoot);\n    const projectMetadata = await context.getProjectMetadata(projectName);\n    const projectRoot = core_1.resolve(workspaceRoot, core_1.normalize(projectMetadata.root || ''));\n    const projectSourceRoot = projectMetadata.sourceRoot;\n    const sourceRoot = projectSourceRoot\n        ? core_1.resolve(workspaceRoot, core_1.normalize(projectSourceRoot))\n        : undefined;\n    const normalizedOptions = utils_1.normalizeBrowserSchema(host, workspaceRoot, projectRoot, sourceRoot, options);\n    const config = await generateWebpackConfig(core_1.getSystemPath(workspaceRoot), core_1.getSystemPath(projectRoot), sourceRoot && core_1.getSystemPath(sourceRoot), normalizedOptions, webpackPartialGenerator, context.logger, extraBuildOptions);\n    return {\n        config,\n        projectRoot: core_1.getSystemPath(projectRoot),\n        projectSourceRoot: sourceRoot && core_1.getSystemPath(sourceRoot),\n    };\n}\nexports.generateBrowserWebpackConfigFromContext = generateBrowserWebpackConfigFromContext;\nfunction getIndexOutputFile(index) {\n    if (typeof index === 'string') {\n        return path.basename(index);\n    }\n    else {\n        return index.output || 'index.html';\n    }\n}\nexports.getIndexOutputFile = getIndexOutputFile;\nfunction getIndexInputFile(index) {\n    if (typeof index === 'string') {\n        return index;\n    }\n    else {\n        return index.input;\n    }\n}\nexports.getIndexInputFile = getIndexInputFile;\n"]},"metadata":{},"sourceType":"script"}