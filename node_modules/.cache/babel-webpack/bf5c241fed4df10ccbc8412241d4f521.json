{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildOptimizer = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar fs_1 = require(\"fs\");\n\nvar transform_javascript_1 = require(\"../helpers/transform-javascript\");\n\nvar prefix_classes_1 = require(\"../transforms/prefix-classes\");\n\nvar prefix_functions_1 = require(\"../transforms/prefix-functions\");\n\nvar scrub_file_1 = require(\"../transforms/scrub-file\");\n\nvar wrap_enums_1 = require(\"../transforms/wrap-enums\"); // Angular packages are known to have no side effects.\n\n\nvar knownSideEffectFreeAngularModules = [/[\\\\/]node_modules[\\\\/]@angular[\\\\/]animations[\\\\/]/, /[\\\\/]node_modules[\\\\/]@angular[\\\\/]common[\\\\/]/, /[\\\\/]node_modules[\\\\/]@angular[\\\\/]compiler[\\\\/]/, /[\\\\/]node_modules[\\\\/]@angular[\\\\/]core[\\\\/]/, /[\\\\/]node_modules[\\\\/]@angular[\\\\/]forms[\\\\/]/, /[\\\\/]node_modules[\\\\/]@angular[\\\\/]http[\\\\/]/, /[\\\\/]node_modules[\\\\/]@angular[\\\\/]platform-browser-dynamic[\\\\/]/, /[\\\\/]node_modules[\\\\/]@angular[\\\\/]platform-browser[\\\\/]/, /[\\\\/]node_modules[\\\\/]@angular[\\\\/]platform-webworker-dynamic[\\\\/]/, /[\\\\/]node_modules[\\\\/]@angular[\\\\/]platform-webworker[\\\\/]/, /[\\\\/]node_modules[\\\\/]@angular[\\\\/]router[\\\\/]/, /[\\\\/]node_modules[\\\\/]@angular[\\\\/]upgrade[\\\\/]/, /[\\\\/]node_modules[\\\\/]@angular[\\\\/]material[\\\\/]/, /[\\\\/]node_modules[\\\\/]@angular[\\\\/]cdk[\\\\/]/, /[\\\\/]node_modules[\\\\/]rxjs[\\\\/]/]; // Factories created by AOT are known to have no side effects.\n\nvar ngFactories = ['.ngfactory.js', '.ngstyle.js']; // Known locations for the source files of @angular/core.\n\nvar coreFilesRegex = /[\\\\/]node_modules[\\\\/]@angular[\\\\/]core[\\\\/][f]?esm2015[\\\\/]/;\n\nfunction isKnownCoreFile(filePath) {\n  return coreFilesRegex.test(filePath);\n}\n\nfunction isKnownSideEffectFree(filePath) {\n  // rxjs add imports contain intentional side effects\n  if (/[\\\\/]node_modules[\\\\/]rxjs[\\\\/]add[\\\\/]/.test(filePath)) {\n    return false;\n  }\n\n  return ngFactories.some(function (s) {\n    return filePath.endsWith(s);\n  }) || knownSideEffectFreeAngularModules.some(function (re) {\n    return re.test(filePath);\n  });\n}\n\nfunction buildOptimizer(options) {\n  var inputFilePath = options.inputFilePath;\n  var originalFilePath = options.originalFilePath,\n      content = options.content,\n      isAngularCoreFile = options.isAngularCoreFile;\n\n  if (!originalFilePath && inputFilePath) {\n    originalFilePath = inputFilePath;\n  }\n\n  if (!inputFilePath && content === undefined) {\n    throw new Error('Either filePath or content must be specified in options.');\n  }\n\n  if (content === undefined) {\n    content = fs_1.readFileSync(inputFilePath, 'UTF-8');\n  }\n\n  if (!content) {\n    return {\n      content: null,\n      sourceMap: null,\n      emitSkipped: true\n    };\n  }\n\n  if (isAngularCoreFile === undefined) {\n    isAngularCoreFile = !!originalFilePath && isKnownCoreFile(originalFilePath);\n  }\n\n  var hasSafeSideEffects = originalFilePath && isKnownSideEffectFree(originalFilePath); // Determine which transforms to apply.\n\n  var getTransforms = [];\n  var typeCheck = false;\n\n  if (hasSafeSideEffects) {\n    // Angular modules have known safe side effects\n    getTransforms.push( // getPrefixFunctionsTransformer is rather dangerous, apply only to known pure es5 modules.\n    // It will mark both `require()` calls and `console.log(stuff)` as pure.\n    // We only apply it to modules known to be side effect free, since we know they are safe.\n    prefix_functions_1.getPrefixFunctionsTransformer);\n    typeCheck = true;\n  } else if (prefix_classes_1.testPrefixClasses(content)) {\n    // This is only relevant if prefix functions is not used since prefix functions will prefix IIFE wrapped classes.\n    getTransforms.unshift(prefix_classes_1.getPrefixClassesTransformer);\n  }\n\n  if (scrub_file_1.testScrubFile(content)) {\n    // Always test as these require the type checker\n    getTransforms.push(scrub_file_1.createScrubFileTransformerFactory(isAngularCoreFile));\n    typeCheck = true;\n  }\n\n  getTransforms.push(wrap_enums_1.getWrapEnumsTransformer);\n  var transformJavascriptOpts = {\n    content: content,\n    inputFilePath: options.inputFilePath,\n    outputFilePath: options.outputFilePath,\n    emitSourceMap: options.emitSourceMap,\n    strict: options.strict,\n    getTransforms: getTransforms,\n    typeCheck: typeCheck\n  };\n  return transform_javascript_1.transformJavascript(transformJavascriptOpts);\n}\n\nexports.buildOptimizer = buildOptimizer;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/build-optimizer.js"],"names":["Object","defineProperty","exports","value","buildOptimizer","fs_1","require","transform_javascript_1","prefix_classes_1","prefix_functions_1","scrub_file_1","wrap_enums_1","knownSideEffectFreeAngularModules","ngFactories","coreFilesRegex","isKnownCoreFile","filePath","test","isKnownSideEffectFree","some","s","endsWith","re","options","inputFilePath","originalFilePath","content","isAngularCoreFile","undefined","Error","readFileSync","sourceMap","emitSkipped","hasSafeSideEffects","getTransforms","typeCheck","push","getPrefixFunctionsTransformer","testPrefixClasses","unshift","getPrefixClassesTransformer","testScrubFile","createScrubFileTransformerFactory","getWrapEnumsTransformer","transformJavascriptOpts","outputFilePath","emitSourceMap","strict","transformJavascript"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildOptimizer = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst fs_1 = require(\"fs\");\nconst transform_javascript_1 = require(\"../helpers/transform-javascript\");\nconst prefix_classes_1 = require(\"../transforms/prefix-classes\");\nconst prefix_functions_1 = require(\"../transforms/prefix-functions\");\nconst scrub_file_1 = require(\"../transforms/scrub-file\");\nconst wrap_enums_1 = require(\"../transforms/wrap-enums\");\n// Angular packages are known to have no side effects.\nconst knownSideEffectFreeAngularModules = [\n    /[\\\\/]node_modules[\\\\/]@angular[\\\\/]animations[\\\\/]/,\n    /[\\\\/]node_modules[\\\\/]@angular[\\\\/]common[\\\\/]/,\n    /[\\\\/]node_modules[\\\\/]@angular[\\\\/]compiler[\\\\/]/,\n    /[\\\\/]node_modules[\\\\/]@angular[\\\\/]core[\\\\/]/,\n    /[\\\\/]node_modules[\\\\/]@angular[\\\\/]forms[\\\\/]/,\n    /[\\\\/]node_modules[\\\\/]@angular[\\\\/]http[\\\\/]/,\n    /[\\\\/]node_modules[\\\\/]@angular[\\\\/]platform-browser-dynamic[\\\\/]/,\n    /[\\\\/]node_modules[\\\\/]@angular[\\\\/]platform-browser[\\\\/]/,\n    /[\\\\/]node_modules[\\\\/]@angular[\\\\/]platform-webworker-dynamic[\\\\/]/,\n    /[\\\\/]node_modules[\\\\/]@angular[\\\\/]platform-webworker[\\\\/]/,\n    /[\\\\/]node_modules[\\\\/]@angular[\\\\/]router[\\\\/]/,\n    /[\\\\/]node_modules[\\\\/]@angular[\\\\/]upgrade[\\\\/]/,\n    /[\\\\/]node_modules[\\\\/]@angular[\\\\/]material[\\\\/]/,\n    /[\\\\/]node_modules[\\\\/]@angular[\\\\/]cdk[\\\\/]/,\n    /[\\\\/]node_modules[\\\\/]rxjs[\\\\/]/,\n];\n// Factories created by AOT are known to have no side effects.\nconst ngFactories = [\n    '.ngfactory.js',\n    '.ngstyle.js',\n];\n// Known locations for the source files of @angular/core.\nconst coreFilesRegex = /[\\\\/]node_modules[\\\\/]@angular[\\\\/]core[\\\\/][f]?esm2015[\\\\/]/;\nfunction isKnownCoreFile(filePath) {\n    return coreFilesRegex.test(filePath);\n}\nfunction isKnownSideEffectFree(filePath) {\n    // rxjs add imports contain intentional side effects\n    if (/[\\\\/]node_modules[\\\\/]rxjs[\\\\/]add[\\\\/]/.test(filePath)) {\n        return false;\n    }\n    return ngFactories.some((s) => filePath.endsWith(s)) ||\n        knownSideEffectFreeAngularModules.some((re) => re.test(filePath));\n}\nfunction buildOptimizer(options) {\n    const { inputFilePath } = options;\n    let { originalFilePath, content, isAngularCoreFile } = options;\n    if (!originalFilePath && inputFilePath) {\n        originalFilePath = inputFilePath;\n    }\n    if (!inputFilePath && content === undefined) {\n        throw new Error('Either filePath or content must be specified in options.');\n    }\n    if (content === undefined) {\n        content = fs_1.readFileSync(inputFilePath, 'UTF-8');\n    }\n    if (!content) {\n        return {\n            content: null,\n            sourceMap: null,\n            emitSkipped: true,\n        };\n    }\n    if (isAngularCoreFile === undefined) {\n        isAngularCoreFile = !!originalFilePath && isKnownCoreFile(originalFilePath);\n    }\n    const hasSafeSideEffects = originalFilePath && isKnownSideEffectFree(originalFilePath);\n    // Determine which transforms to apply.\n    const getTransforms = [];\n    let typeCheck = false;\n    if (hasSafeSideEffects) {\n        // Angular modules have known safe side effects\n        getTransforms.push(\n        // getPrefixFunctionsTransformer is rather dangerous, apply only to known pure es5 modules.\n        // It will mark both `require()` calls and `console.log(stuff)` as pure.\n        // We only apply it to modules known to be side effect free, since we know they are safe.\n        prefix_functions_1.getPrefixFunctionsTransformer);\n        typeCheck = true;\n    }\n    else if (prefix_classes_1.testPrefixClasses(content)) {\n        // This is only relevant if prefix functions is not used since prefix functions will prefix IIFE wrapped classes.\n        getTransforms.unshift(prefix_classes_1.getPrefixClassesTransformer);\n    }\n    if (scrub_file_1.testScrubFile(content)) {\n        // Always test as these require the type checker\n        getTransforms.push(scrub_file_1.createScrubFileTransformerFactory(isAngularCoreFile));\n        typeCheck = true;\n    }\n    getTransforms.push(wrap_enums_1.getWrapEnumsTransformer);\n    const transformJavascriptOpts = {\n        content: content,\n        inputFilePath: options.inputFilePath,\n        outputFilePath: options.outputFilePath,\n        emitSourceMap: options.emitSourceMap,\n        strict: options.strict,\n        getTransforms,\n        typeCheck,\n    };\n    return transform_javascript_1.transformJavascript(transformJavascriptOpts);\n}\nexports.buildOptimizer = buildOptimizer;\n"]},"metadata":{},"sourceType":"script"}