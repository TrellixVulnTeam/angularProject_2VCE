{"ast":null,"code":"'use strict';\n\nvar path = require('path');\n\nvar pathKey = require('path-key');\n\nmodule.exports = function (opts) {\n  opts = Object.assign({\n    cwd: process.cwd(),\n    path: process.env[pathKey()]\n  }, opts);\n  var prev;\n  var pth = path.resolve(opts.cwd);\n  var ret = [];\n\n  while (prev !== pth) {\n    ret.push(path.join(pth, 'node_modules/.bin'));\n    prev = pth;\n    pth = path.resolve(pth, '..');\n  } // ensure the running `node` binary is used\n\n\n  ret.push(path.dirname(process.execPath));\n  return ret.concat(opts.path).join(path.delimiter);\n};\n\nmodule.exports.env = function (opts) {\n  opts = Object.assign({\n    env: process.env\n  }, opts);\n  var env = Object.assign({}, opts.env);\n  var path = pathKey({\n    env: env\n  });\n  opts.path = env[path];\n  env[path] = module.exports(opts);\n  return env;\n};","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/npm-run-path/index.js"],"names":["path","require","pathKey","module","exports","opts","Object","assign","cwd","process","env","prev","pth","resolve","ret","push","join","dirname","execPath","concat","delimiter"],"mappings":"AAAA;;AACA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAAAC,IAAI,EAAI;AACxBA,EAAAA,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc;AACpBC,IAAAA,GAAG,EAAEC,OAAO,CAACD,GAAR,EADe;AAEpBR,IAAAA,IAAI,EAAES,OAAO,CAACC,GAAR,CAAYR,OAAO,EAAnB;AAFc,GAAd,EAGJG,IAHI,CAAP;AAKA,MAAIM,IAAJ;AACA,MAAIC,GAAG,GAAGZ,IAAI,CAACa,OAAL,CAAaR,IAAI,CAACG,GAAlB,CAAV;AACA,MAAMM,GAAG,GAAG,EAAZ;;AAEA,SAAOH,IAAI,KAAKC,GAAhB,EAAqB;AACpBE,IAAAA,GAAG,CAACC,IAAJ,CAASf,IAAI,CAACgB,IAAL,CAAUJ,GAAV,EAAe,mBAAf,CAAT;AACAD,IAAAA,IAAI,GAAGC,GAAP;AACAA,IAAAA,GAAG,GAAGZ,IAAI,CAACa,OAAL,CAAaD,GAAb,EAAkB,IAAlB,CAAN;AACA,GAduB,CAgBxB;;;AACAE,EAAAA,GAAG,CAACC,IAAJ,CAASf,IAAI,CAACiB,OAAL,CAAaR,OAAO,CAACS,QAArB,CAAT;AAEA,SAAOJ,GAAG,CAACK,MAAJ,CAAWd,IAAI,CAACL,IAAhB,EAAsBgB,IAAtB,CAA2BhB,IAAI,CAACoB,SAAhC,CAAP;AACA,CApBD;;AAsBAjB,MAAM,CAACC,OAAP,CAAeM,GAAf,GAAqB,UAAAL,IAAI,EAAI;AAC5BA,EAAAA,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc;AACpBG,IAAAA,GAAG,EAAED,OAAO,CAACC;AADO,GAAd,EAEJL,IAFI,CAAP;AAIA,MAAMK,GAAG,GAAGJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,IAAI,CAACK,GAAvB,CAAZ;AACA,MAAMV,IAAI,GAAGE,OAAO,CAAC;AAACQ,IAAAA,GAAG,EAAHA;AAAD,GAAD,CAApB;AAEAL,EAAAA,IAAI,CAACL,IAAL,GAAYU,GAAG,CAACV,IAAD,CAAf;AACAU,EAAAA,GAAG,CAACV,IAAD,CAAH,GAAYG,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAZ;AAEA,SAAOK,GAAP;AACA,CAZD","sourcesContent":["'use strict';\nconst path = require('path');\nconst pathKey = require('path-key');\n\nmodule.exports = opts => {\n\topts = Object.assign({\n\t\tcwd: process.cwd(),\n\t\tpath: process.env[pathKey()]\n\t}, opts);\n\n\tlet prev;\n\tlet pth = path.resolve(opts.cwd);\n\tconst ret = [];\n\n\twhile (prev !== pth) {\n\t\tret.push(path.join(pth, 'node_modules/.bin'));\n\t\tprev = pth;\n\t\tpth = path.resolve(pth, '..');\n\t}\n\n\t// ensure the running `node` binary is used\n\tret.push(path.dirname(process.execPath));\n\n\treturn ret.concat(opts.path).join(path.delimiter);\n};\n\nmodule.exports.env = opts => {\n\topts = Object.assign({\n\t\tenv: process.env\n\t}, opts);\n\n\tconst env = Object.assign({}, opts.env);\n\tconst path = pathKey({env});\n\n\topts.path = env[path];\n\tenv[path] = module.exports(opts);\n\n\treturn env;\n};\n"]},"metadata":{},"sourceType":"script"}