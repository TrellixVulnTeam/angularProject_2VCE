{"ast":null,"code":"/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Joel Denning @joeldenning\n */\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require(\"webpack-sources\"),\n    ConcatSource = _require.ConcatSource;\n\nvar Template = require(\"./Template\");\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/**\n * @typedef {Object} SystemMainTemplatePluginOptions\n * @param {string=} name the library name\n */\n\n\nvar SystemMainTemplatePlugin = /*#__PURE__*/function () {\n  /**\n   * @param {SystemMainTemplatePluginOptions} options the plugin options\n   */\n  function SystemMainTemplatePlugin(options) {\n    _classCallCheck(this, SystemMainTemplatePlugin);\n\n    this.name = options.name;\n  }\n  /**\n   * @param {Compilation} compilation the compilation instance\n   * @returns {void}\n   */\n\n\n  _createClass(SystemMainTemplatePlugin, [{\n    key: \"apply\",\n    value: function apply(compilation) {\n      var _this = this;\n\n      var mainTemplate = compilation.mainTemplate,\n          chunkTemplate = compilation.chunkTemplate;\n\n      var onRenderWithEntry = function onRenderWithEntry(source, chunk, hash) {\n        var externals = chunk.getModules().filter(function (m) {\n          return m.external;\n        }); // The name this bundle should be registered as with System\n\n        var name = _this.name ? \"\".concat(JSON.stringify(mainTemplate.getAssetPath(_this.name, {\n          hash: hash,\n          chunk: chunk\n        })), \", \") : \"\"; // The array of dependencies that are external to webpack and will be provided by System\n\n        var systemDependencies = JSON.stringify(externals.map(function (m) {\n          return typeof m.request === \"object\" ? m.request.amd : m.request;\n        })); // The name of the variable provided by System for exporting\n\n        var dynamicExport = \"__WEBPACK_DYNAMIC_EXPORT__\"; // An array of the internal variable names for the webpack externals\n\n        var externalWebpackNames = externals.map(function (m) {\n          return \"__WEBPACK_EXTERNAL_MODULE_\".concat(Template.toIdentifier(\"\".concat(m.id)), \"__\");\n        }); // Declaring variables for the internal variable names for the webpack externals\n\n        var externalVarDeclarations = externalWebpackNames.length > 0 ? \"var \".concat(externalWebpackNames.join(\", \"), \";\") : \"\"; // The system.register format requires an array of setter functions for externals.\n\n        var setters = externalWebpackNames.length === 0 ? \"\" : Template.asString([\"setters: [\", Template.indent(externalWebpackNames.map(function (external) {\n          return Template.asString([\"function(module) {\", Template.indent(\"\".concat(external, \" = module;\")), \"}\"]);\n        }).join(\",\\n\")), \"],\"]);\n        return new ConcatSource(Template.asString([\"System.register(\".concat(name).concat(systemDependencies, \", function(\").concat(dynamicExport, \") {\"), Template.indent([externalVarDeclarations, \"return {\", Template.indent([setters, \"execute: function() {\", Template.indent(\"\".concat(dynamicExport, \"(\"))])])]) + \"\\n\", source, \"\\n\" + Template.asString([Template.indent([Template.indent([Template.indent([\");\"]), \"}\"]), \"};\"]), \"})\"]));\n      };\n\n      for (var _i = 0, _arr = [mainTemplate, chunkTemplate]; _i < _arr.length; _i++) {\n        var template = _arr[_i];\n        template.hooks.renderWithEntry.tap(\"SystemMainTemplatePlugin\", onRenderWithEntry);\n      }\n\n      mainTemplate.hooks.globalHashPaths.tap(\"SystemMainTemplatePlugin\", function (paths) {\n        if (_this.name) {\n          paths.push(_this.name);\n        }\n\n        return paths;\n      });\n      mainTemplate.hooks.hash.tap(\"SystemMainTemplatePlugin\", function (hash) {\n        hash.update(\"exports system\");\n\n        if (_this.name) {\n          hash.update(_this.name);\n        }\n      });\n    }\n  }]);\n\n  return SystemMainTemplatePlugin;\n}();\n\nmodule.exports = SystemMainTemplatePlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/SystemMainTemplatePlugin.js"],"names":["require","ConcatSource","Template","SystemMainTemplatePlugin","options","name","compilation","mainTemplate","chunkTemplate","onRenderWithEntry","source","chunk","hash","externals","getModules","filter","m","external","JSON","stringify","getAssetPath","systemDependencies","map","request","amd","dynamicExport","externalWebpackNames","toIdentifier","id","externalVarDeclarations","length","join","setters","asString","indent","template","hooks","renderWithEntry","tap","globalHashPaths","paths","push","update","module","exports"],"mappings":"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","sourcesContent":["/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Joel Denning @joeldenning\n */\n\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\nconst Template = require(\"./Template\");\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/**\n * @typedef {Object} SystemMainTemplatePluginOptions\n * @param {string=} name the library name\n */\n\nclass SystemMainTemplatePlugin {\n\t/**\n\t * @param {SystemMainTemplatePluginOptions} options the plugin options\n\t */\n\tconstructor(options) {\n\t\tthis.name = options.name;\n\t}\n\n\t/**\n\t * @param {Compilation} compilation the compilation instance\n\t * @returns {void}\n\t */\n\tapply(compilation) {\n\t\tconst { mainTemplate, chunkTemplate } = compilation;\n\n\t\tconst onRenderWithEntry = (source, chunk, hash) => {\n\t\t\tconst externals = chunk.getModules().filter(m => m.external);\n\n\t\t\t// The name this bundle should be registered as with System\n\t\t\tconst name = this.name\n\t\t\t\t? `${JSON.stringify(\n\t\t\t\t\t\tmainTemplate.getAssetPath(this.name, { hash, chunk })\n\t\t\t\t  )}, `\n\t\t\t\t: \"\";\n\n\t\t\t// The array of dependencies that are external to webpack and will be provided by System\n\t\t\tconst systemDependencies = JSON.stringify(\n\t\t\t\texternals.map(m =>\n\t\t\t\t\ttypeof m.request === \"object\" ? m.request.amd : m.request\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// The name of the variable provided by System for exporting\n\t\t\tconst dynamicExport = \"__WEBPACK_DYNAMIC_EXPORT__\";\n\n\t\t\t// An array of the internal variable names for the webpack externals\n\t\t\tconst externalWebpackNames = externals.map(\n\t\t\t\tm => `__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(`${m.id}`)}__`\n\t\t\t);\n\n\t\t\t// Declaring variables for the internal variable names for the webpack externals\n\t\t\tconst externalVarDeclarations =\n\t\t\t\texternalWebpackNames.length > 0\n\t\t\t\t\t? `var ${externalWebpackNames.join(\", \")};`\n\t\t\t\t\t: \"\";\n\n\t\t\t// The system.register format requires an array of setter functions for externals.\n\t\t\tconst setters =\n\t\t\t\texternalWebpackNames.length === 0\n\t\t\t\t\t? \"\"\n\t\t\t\t\t: Template.asString([\n\t\t\t\t\t\t\t\"setters: [\",\n\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\texternalWebpackNames\n\t\t\t\t\t\t\t\t\t.map(external =>\n\t\t\t\t\t\t\t\t\t\tTemplate.asString([\n\t\t\t\t\t\t\t\t\t\t\t\"function(module) {\",\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent(`${external} = module;`),\n\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.join(\",\\n\")\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\"],\"\n\t\t\t\t\t  ]);\n\n\t\t\treturn new ConcatSource(\n\t\t\t\tTemplate.asString([\n\t\t\t\t\t`System.register(${name}${systemDependencies}, function(${dynamicExport}) {`,\n\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\texternalVarDeclarations,\n\t\t\t\t\t\t\"return {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\tsetters,\n\t\t\t\t\t\t\t\"execute: function() {\",\n\t\t\t\t\t\t\tTemplate.indent(`${dynamicExport}(`)\n\t\t\t\t\t\t])\n\t\t\t\t\t])\n\t\t\t\t]) + \"\\n\",\n\t\t\t\tsource,\n\t\t\t\t\"\\n\" +\n\t\t\t\t\tTemplate.asString([\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\tTemplate.indent([Template.indent([\");\"]), \"}\"]),\n\t\t\t\t\t\t\t\"};\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"})\"\n\t\t\t\t\t])\n\t\t\t);\n\t\t};\n\n\t\tfor (const template of [mainTemplate, chunkTemplate]) {\n\t\t\ttemplate.hooks.renderWithEntry.tap(\n\t\t\t\t\"SystemMainTemplatePlugin\",\n\t\t\t\tonRenderWithEntry\n\t\t\t);\n\t\t}\n\n\t\tmainTemplate.hooks.globalHashPaths.tap(\n\t\t\t\"SystemMainTemplatePlugin\",\n\t\t\tpaths => {\n\t\t\t\tif (this.name) {\n\t\t\t\t\tpaths.push(this.name);\n\t\t\t\t}\n\t\t\t\treturn paths;\n\t\t\t}\n\t\t);\n\n\t\tmainTemplate.hooks.hash.tap(\"SystemMainTemplatePlugin\", hash => {\n\t\t\thash.update(\"exports system\");\n\t\t\tif (this.name) {\n\t\t\t\thash.update(this.name);\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = SystemMainTemplatePlugin;\n"]},"metadata":{},"sourceType":"script"}