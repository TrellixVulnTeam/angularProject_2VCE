{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n\n/** @typedef {import(\"./Resolver\").SyncFileSystem} SyncFileSystem */\n\nvar _slicedToArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar dirname = function dirname(path) {\n  var idx = path.length - 1;\n\n  while (idx >= 0) {\n    var c = path.charCodeAt(idx); // slash or backslash\n\n    if (c === 47 || c === 92) break;\n    idx--;\n  }\n\n  if (idx < 0) return \"\";\n  return path.slice(0, idx);\n};\n\nvar runCallbacks = function runCallbacks(callbacks, err, result) {\n  if (callbacks.length === 1) return callbacks[0](err, result);\n  var error;\n\n  var _iterator = _createForOfIteratorHelper(callbacks),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var callback = _step.value;\n\n      try {\n        callback(err, result);\n      } catch (e) {\n        if (!error) error = e;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  callbacks.length = 0;\n  if (error) throw error;\n};\n\nvar OperationMergerBackend = /*#__PURE__*/function () {\n  /**\n   * @param {any} provider async method\n   * @param {any} syncProvider sync method\n   * @param {any} providerContext call context for the provider methods\n   */\n  function OperationMergerBackend(provider, syncProvider, providerContext) {\n    var _this = this;\n\n    _classCallCheck(this, OperationMergerBackend);\n\n    this._provider = provider;\n    this._syncProvider = syncProvider;\n    this._providerContext = providerContext;\n    this._activeAsyncOperations = new Map();\n    this.provide = this._provider ? function (path, options, callback) {\n      if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n      }\n\n      if (options) {\n        return _this._provider.call(_this._providerContext, path, options, callback);\n      }\n\n      if (typeof path !== \"string\") {\n        callback(new TypeError(\"path must be a string\"));\n        return;\n      }\n\n      var callbacks = _this._activeAsyncOperations.get(path);\n\n      if (callbacks) {\n        callbacks.push(callback);\n        return;\n      }\n\n      _this._activeAsyncOperations.set(path, callbacks = [callback]);\n\n      provider(path, function (err, result) {\n        _this._activeAsyncOperations.delete(path);\n\n        runCallbacks(callbacks, err, result);\n      });\n    } : null;\n    this.provideSync = this._syncProvider ? function (path, options) {\n      return _this._syncProvider.call(_this._providerContext, path, options);\n    } : null;\n  }\n\n  _createClass(OperationMergerBackend, [{\n    key: \"purge\",\n    value: function purge() {}\n  }, {\n    key: \"purgeParent\",\n    value: function purgeParent() {}\n  }]);\n\n  return OperationMergerBackend;\n}();\n/*\n\nIDLE:\n\tinsert data: goto SYNC\n\nSYNC:\n\tbefore provide: run ticks\n\tevent loop tick: goto ASYNC_ACTIVE\n\nASYNC:\n\ttimeout: run tick, goto ASYNC_PASSIVE\n\nASYNC_PASSIVE:\n\tbefore provide: run ticks\n\nIDLE --[insert data]--> SYNC --[event loop tick]--> ASYNC_ACTIVE --[interval tick]-> ASYNC_PASSIVE\n                                                          ^                             |\n                                                          +---------[insert data]-------+\n*/\n\n\nvar STORAGE_MODE_IDLE = 0;\nvar STORAGE_MODE_SYNC = 1;\nvar STORAGE_MODE_ASYNC = 2;\n\nvar CacheBackend = /*#__PURE__*/function () {\n  /**\n   * @param {number} duration max cache duration of items\n   * @param {any} provider async method\n   * @param {any} syncProvider sync method\n   * @param {any} providerContext call context for the provider methods\n   */\n  function CacheBackend(duration, provider, syncProvider, providerContext) {\n    _classCallCheck(this, CacheBackend);\n\n    this._duration = duration;\n    this._provider = provider;\n    this._syncProvider = syncProvider;\n    this._providerContext = providerContext;\n    /** @type {Map<string, (function(Error, any): void)[]>} */\n\n    this._activeAsyncOperations = new Map();\n    /** @type {Map<string, { err: Error, result: any, level: Set<string> }>} */\n\n    this._data = new Map();\n    /** @type {Set<string>[]} */\n\n    this._levels = [];\n\n    for (var i = 0; i < 10; i++) {\n      this._levels.push(new Set());\n    }\n\n    for (var _i = 5000; _i < duration; _i += 500) {\n      this._levels.push(new Set());\n    }\n\n    this._currentLevel = 0;\n    this._tickInterval = Math.floor(duration / this._levels.length);\n    /** @type {STORAGE_MODE_IDLE | STORAGE_MODE_SYNC | STORAGE_MODE_ASYNC} */\n\n    this._mode = STORAGE_MODE_IDLE;\n    /** @type {NodeJS.Timeout | undefined} */\n\n    this._timeout = undefined;\n    /** @type {number | undefined} */\n\n    this._nextDecay = undefined;\n    this.provide = provider ? this.provide.bind(this) : null;\n    this.provideSync = syncProvider ? this.provideSync.bind(this) : null;\n  }\n\n  _createClass(CacheBackend, [{\n    key: \"provide\",\n    value: function provide(path, options, callback) {\n      var _this2 = this;\n\n      if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n      }\n\n      if (typeof path !== \"string\") {\n        callback(new TypeError(\"path must be a string\"));\n        return;\n      }\n\n      if (options) {\n        return this._provider.call(this._providerContext, path, options, callback);\n      } // When in sync mode we can move to async mode\n\n\n      if (this._mode === STORAGE_MODE_SYNC) {\n        this._enterAsyncMode();\n      } // Check in cache\n\n\n      var cacheEntry = this._data.get(path);\n\n      if (cacheEntry !== undefined) {\n        if (cacheEntry.err) return process.nextTick(callback, cacheEntry.err);\n        return process.nextTick(callback, null, cacheEntry.result);\n      } // Check if there is already the same operation running\n\n\n      var callbacks = this._activeAsyncOperations.get(path);\n\n      if (callbacks !== undefined) {\n        callbacks.push(callback);\n        return;\n      }\n\n      this._activeAsyncOperations.set(path, callbacks = [callback]); // Run the operation\n\n\n      this._provider.call(this._providerContext, path, function (err, result) {\n        _this2._activeAsyncOperations.delete(path);\n\n        _this2._storeResult(path, err, result); // Enter async mode if not yet done\n\n\n        _this2._enterAsyncMode();\n\n        runCallbacks(callbacks, err, result);\n      });\n    }\n  }, {\n    key: \"provideSync\",\n    value: function provideSync(path, options) {\n      if (typeof path !== \"string\") {\n        throw new TypeError(\"path must be a string\");\n      }\n\n      if (options) {\n        return this._syncProvider.call(this._providerContext, path, options);\n      } // In sync mode we may have to decay some cache items\n\n\n      if (this._mode === STORAGE_MODE_SYNC) {\n        this._runDecays();\n      } // Check in cache\n\n\n      var cacheEntry = this._data.get(path);\n\n      if (cacheEntry !== undefined) {\n        if (cacheEntry.err) throw cacheEntry.err;\n        return cacheEntry.result;\n      } // Get all active async operations\n      // This sync operation will also complete them\n\n\n      var callbacks = this._activeAsyncOperations.get(path);\n\n      this._activeAsyncOperations.delete(path); // Run the operation\n      // When in idle mode, we will enter sync mode\n\n\n      var result;\n\n      try {\n        result = this._syncProvider.call(this._providerContext, path);\n      } catch (err) {\n        this._storeResult(path, err, undefined);\n\n        this._enterSyncModeWhenIdle();\n\n        if (callbacks) runCallbacks(callbacks, err, undefined);\n        throw err;\n      }\n\n      this._storeResult(path, undefined, result);\n\n      this._enterSyncModeWhenIdle();\n\n      if (callbacks) runCallbacks(callbacks, undefined, result);\n      return result;\n    }\n  }, {\n    key: \"purge\",\n    value: function purge(what) {\n      if (!what) {\n        if (this._mode !== STORAGE_MODE_IDLE) {\n          this._data.clear();\n\n          var _iterator2 = _createForOfIteratorHelper(this._levels),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var level = _step2.value;\n              level.clear();\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          this._enterIdleMode();\n        }\n      } else if (typeof what === \"string\") {\n        var _iterator3 = _createForOfIteratorHelper(this._data),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _step3$value = _slicedToArray(_step3.value, 2),\n                key = _step3$value[0],\n                data = _step3$value[1];\n\n            if (key.startsWith(what)) {\n              this._data.delete(key);\n\n              data.level.delete(key);\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        if (this._data.size === 0) {\n          this._enterIdleMode();\n        }\n      } else {\n        var _iterator4 = _createForOfIteratorHelper(this._data),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var _step4$value = _slicedToArray(_step4.value, 2),\n                _key = _step4$value[0],\n                _data = _step4$value[1];\n\n            var _iterator5 = _createForOfIteratorHelper(what),\n                _step5;\n\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                var item = _step5.value;\n\n                if (_key.startsWith(item)) {\n                  this._data.delete(_key);\n\n                  _data.level.delete(_key);\n\n                  break;\n                }\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        if (this._data.size === 0) {\n          this._enterIdleMode();\n        }\n      }\n    }\n  }, {\n    key: \"purgeParent\",\n    value: function purgeParent(what) {\n      if (!what) {\n        this.purge();\n      } else if (typeof what === \"string\") {\n        this.purge(dirname(what));\n      } else {\n        var set = new Set();\n\n        var _iterator6 = _createForOfIteratorHelper(what),\n            _step6;\n\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var item = _step6.value;\n            set.add(dirname(item));\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n\n        this.purge(set);\n      }\n    }\n  }, {\n    key: \"_storeResult\",\n    value: function _storeResult(path, err, result) {\n      if (this._data.has(path)) return;\n      var level = this._levels[this._currentLevel];\n\n      this._data.set(path, {\n        err: err,\n        result: result,\n        level: level\n      });\n\n      level.add(path);\n    }\n  }, {\n    key: \"_decayLevel\",\n    value: function _decayLevel() {\n      var nextLevel = (this._currentLevel + 1) % this._levels.length;\n      var decay = this._levels[nextLevel];\n      this._currentLevel = nextLevel;\n\n      var _iterator7 = _createForOfIteratorHelper(decay),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var item = _step7.value;\n\n          this._data.delete(item);\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      decay.clear();\n\n      if (this._data.size === 0) {\n        this._enterIdleMode();\n      } else {\n        // @ts-ignore _nextDecay is always a number in sync mode\n        this._nextDecay += this._tickInterval;\n      }\n    }\n  }, {\n    key: \"_runDecays\",\n    value: function _runDecays() {\n      while (\n      /** @type {number} */\n      this._nextDecay <= Date.now() && this._mode !== STORAGE_MODE_IDLE) {\n        this._decayLevel();\n      }\n    }\n  }, {\n    key: \"_enterAsyncMode\",\n    value: function _enterAsyncMode() {\n      var _this3 = this;\n\n      var timeout = 0;\n\n      switch (this._mode) {\n        case STORAGE_MODE_ASYNC:\n          return;\n\n        case STORAGE_MODE_IDLE:\n          this._nextDecay = Date.now() + this._tickInterval;\n          timeout = this._tickInterval;\n          break;\n\n        case STORAGE_MODE_SYNC:\n          this._runDecays(); // @ts-ignore _runDecays may change the mode\n\n\n          if (this._mode === STORAGE_MODE_IDLE) return;\n          timeout = Math.max(0,\n          /** @type {number} */\n          this._nextDecay - Date.now());\n          break;\n      }\n\n      this._mode = STORAGE_MODE_ASYNC;\n      var ref = setTimeout(function () {\n        _this3._mode = STORAGE_MODE_SYNC;\n\n        _this3._runDecays();\n      }, timeout);\n      if (ref.unref) ref.unref();\n      this._timeout = ref;\n    }\n  }, {\n    key: \"_enterSyncModeWhenIdle\",\n    value: function _enterSyncModeWhenIdle() {\n      if (this._mode === STORAGE_MODE_IDLE) {\n        this._mode = STORAGE_MODE_SYNC;\n        this._nextDecay = Date.now() + this._tickInterval;\n      }\n    }\n  }, {\n    key: \"_enterIdleMode\",\n    value: function _enterIdleMode() {\n      this._mode = STORAGE_MODE_IDLE;\n      this._nextDecay = undefined;\n      if (this._timeout) clearTimeout(this._timeout);\n    }\n  }]);\n\n  return CacheBackend;\n}();\n\nvar createBackend = function createBackend(duration, provider, syncProvider, providerContext) {\n  if (duration > 0) {\n    return new CacheBackend(duration, provider, syncProvider, providerContext);\n  }\n\n  return new OperationMergerBackend(provider, syncProvider, providerContext);\n};\n\nmodule.exports = /*#__PURE__*/function () {\n  function CachedInputFileSystem(fileSystem, duration) {\n    var _this4 = this;\n\n    _classCallCheck(this, CachedInputFileSystem);\n\n    this.fileSystem = fileSystem;\n    this._lstatBackend = createBackend(duration, this.fileSystem.lstat, this.fileSystem.lstatSync, this.fileSystem);\n    var lstat = this._lstatBackend.provide;\n    this.lstat =\n    /** @type {FileSystem[\"lstat\"]} */\n    lstat;\n    var lstatSync = this._lstatBackend.provideSync;\n    this.lstatSync =\n    /** @type {SyncFileSystem[\"lstatSync\"]} */\n    lstatSync;\n    this._statBackend = createBackend(duration, this.fileSystem.stat, this.fileSystem.statSync, this.fileSystem);\n    var stat = this._statBackend.provide;\n    this.stat =\n    /** @type {FileSystem[\"stat\"]} */\n    stat;\n    var statSync = this._statBackend.provideSync;\n    this.statSync =\n    /** @type {SyncFileSystem[\"statSync\"]} */\n    statSync;\n    this._readdirBackend = createBackend(duration, this.fileSystem.readdir, this.fileSystem.readdirSync, this.fileSystem);\n    var readdir = this._readdirBackend.provide;\n    this.readdir =\n    /** @type {FileSystem[\"readdir\"]} */\n    readdir;\n    var readdirSync = this._readdirBackend.provideSync;\n    this.readdirSync =\n    /** @type {SyncFileSystem[\"readdirSync\"]} */\n    readdirSync;\n    this._readFileBackend = createBackend(duration, this.fileSystem.readFile, this.fileSystem.readFileSync, this.fileSystem);\n    var readFile = this._readFileBackend.provide;\n    this.readFile =\n    /** @type {FileSystem[\"readFile\"]} */\n    readFile;\n    var readFileSync = this._readFileBackend.provideSync;\n    this.readFileSync =\n    /** @type {SyncFileSystem[\"readFileSync\"]} */\n    readFileSync;\n    this._readJsonBackend = createBackend(duration, this.fileSystem.readJson || this.readFile && function (path, callback) {\n      // @ts-ignore\n      _this4.readFile(path, function (err, buffer) {\n        if (err) return callback(err);\n        if (!buffer || buffer.length === 0) return callback(new Error(\"No file content\"));\n        var data;\n\n        try {\n          data = JSON.parse(buffer.toString(\"utf-8\"));\n        } catch (e) {\n          return callback(e);\n        }\n\n        callback(null, data);\n      });\n    }, this.fileSystem.readJsonSync || this.readFileSync && function (path) {\n      var buffer = _this4.readFileSync(path);\n\n      var data = JSON.parse(buffer.toString(\"utf-8\"));\n      return data;\n    }, this.fileSystem);\n    var readJson = this._readJsonBackend.provide;\n    this.readJson =\n    /** @type {FileSystem[\"readJson\"]} */\n    readJson;\n    var readJsonSync = this._readJsonBackend.provideSync;\n    this.readJsonSync =\n    /** @type {SyncFileSystem[\"readJsonSync\"]} */\n    readJsonSync;\n    this._readlinkBackend = createBackend(duration, this.fileSystem.readlink, this.fileSystem.readlinkSync, this.fileSystem);\n    var readlink = this._readlinkBackend.provide;\n    this.readlink =\n    /** @type {FileSystem[\"readlink\"]} */\n    readlink;\n    var readlinkSync = this._readlinkBackend.provideSync;\n    this.readlinkSync =\n    /** @type {SyncFileSystem[\"readlinkSync\"]} */\n    readlinkSync;\n  }\n\n  _createClass(CachedInputFileSystem, [{\n    key: \"purge\",\n    value: function purge(what) {\n      this._statBackend.purge(what);\n\n      this._lstatBackend.purge(what);\n\n      this._readdirBackend.purgeParent(what);\n\n      this._readFileBackend.purge(what);\n\n      this._readlinkBackend.purge(what);\n\n      this._readJsonBackend.purge(what);\n    }\n  }]);\n\n  return CachedInputFileSystem;\n}();","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js"],"names":["dirname","path","idx","length","c","charCodeAt","slice","runCallbacks","callbacks","err","result","error","callback","e","OperationMergerBackend","provider","syncProvider","providerContext","_provider","_syncProvider","_providerContext","_activeAsyncOperations","Map","provide","options","undefined","call","TypeError","get","push","set","delete","provideSync","STORAGE_MODE_IDLE","STORAGE_MODE_SYNC","STORAGE_MODE_ASYNC","CacheBackend","duration","_duration","_data","_levels","i","Set","_currentLevel","_tickInterval","Math","floor","_mode","_timeout","_nextDecay","bind","_enterAsyncMode","cacheEntry","process","nextTick","_storeResult","_runDecays","_enterSyncModeWhenIdle","what","clear","level","_enterIdleMode","key","data","startsWith","size","item","purge","add","has","nextLevel","decay","Date","now","_decayLevel","timeout","max","ref","setTimeout","unref","clearTimeout","createBackend","module","exports","fileSystem","_lstatBackend","lstat","lstatSync","_statBackend","stat","statSync","_readdirBackend","readdir","readdirSync","_readFileBackend","readFile","readFileSync","_readJsonBackend","readJson","buffer","Error","JSON","parse","toString","readJsonSync","_readlinkBackend","readlink","readlinkSync","purgeParent"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n/** @typedef {import(\"./Resolver\").SyncFileSystem} SyncFileSystem */\n\nconst dirname = path => {\n\tlet idx = path.length - 1;\n\twhile (idx >= 0) {\n\t\tconst c = path.charCodeAt(idx);\n\t\t// slash or backslash\n\t\tif (c === 47 || c === 92) break;\n\t\tidx--;\n\t}\n\tif (idx < 0) return \"\";\n\treturn path.slice(0, idx);\n};\n\nconst runCallbacks = (callbacks, err, result) => {\n\tif (callbacks.length === 1) return callbacks[0](err, result);\n\tlet error;\n\tfor (const callback of callbacks) {\n\t\ttry {\n\t\t\tcallback(err, result);\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t}\n\tcallbacks.length = 0;\n\tif (error) throw error;\n};\n\nclass OperationMergerBackend {\n\t/**\n\t * @param {any} provider async method\n\t * @param {any} syncProvider sync method\n\t * @param {any} providerContext call context for the provider methods\n\t */\n\tconstructor(provider, syncProvider, providerContext) {\n\t\tthis._provider = provider;\n\t\tthis._syncProvider = syncProvider;\n\t\tthis._providerContext = providerContext;\n\t\tthis._activeAsyncOperations = new Map();\n\n\t\tthis.provide = this._provider\n\t\t\t? (path, options, callback) => {\n\t\t\t\t\tif (typeof options === \"function\") {\n\t\t\t\t\t\tcallback = options;\n\t\t\t\t\t\toptions = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tif (options) {\n\t\t\t\t\t\treturn this._provider.call(\n\t\t\t\t\t\t\tthis._providerContext,\n\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof path !== \"string\") {\n\t\t\t\t\t\tcallback(new TypeError(\"path must be a string\"));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlet callbacks = this._activeAsyncOperations.get(path);\n\t\t\t\t\tif (callbacks) {\n\t\t\t\t\t\tcallbacks.push(callback);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis._activeAsyncOperations.set(path, (callbacks = [callback]));\n\t\t\t\t\tprovider(path, (err, result) => {\n\t\t\t\t\t\tthis._activeAsyncOperations.delete(path);\n\t\t\t\t\t\trunCallbacks(callbacks, err, result);\n\t\t\t\t\t});\n\t\t\t  }\n\t\t\t: null;\n\t\tthis.provideSync = this._syncProvider\n\t\t\t? (path, options) => {\n\t\t\t\t\treturn this._syncProvider.call(this._providerContext, path, options);\n\t\t\t  }\n\t\t\t: null;\n\t}\n\n\tpurge() {}\n\tpurgeParent() {}\n}\n\n/*\n\nIDLE:\n\tinsert data: goto SYNC\n\nSYNC:\n\tbefore provide: run ticks\n\tevent loop tick: goto ASYNC_ACTIVE\n\nASYNC:\n\ttimeout: run tick, goto ASYNC_PASSIVE\n\nASYNC_PASSIVE:\n\tbefore provide: run ticks\n\nIDLE --[insert data]--> SYNC --[event loop tick]--> ASYNC_ACTIVE --[interval tick]-> ASYNC_PASSIVE\n                                                          ^                             |\n                                                          +---------[insert data]-------+\n*/\n\nconst STORAGE_MODE_IDLE = 0;\nconst STORAGE_MODE_SYNC = 1;\nconst STORAGE_MODE_ASYNC = 2;\n\nclass CacheBackend {\n\t/**\n\t * @param {number} duration max cache duration of items\n\t * @param {any} provider async method\n\t * @param {any} syncProvider sync method\n\t * @param {any} providerContext call context for the provider methods\n\t */\n\tconstructor(duration, provider, syncProvider, providerContext) {\n\t\tthis._duration = duration;\n\t\tthis._provider = provider;\n\t\tthis._syncProvider = syncProvider;\n\t\tthis._providerContext = providerContext;\n\t\t/** @type {Map<string, (function(Error, any): void)[]>} */\n\t\tthis._activeAsyncOperations = new Map();\n\t\t/** @type {Map<string, { err: Error, result: any, level: Set<string> }>} */\n\t\tthis._data = new Map();\n\t\t/** @type {Set<string>[]} */\n\t\tthis._levels = [];\n\t\tfor (let i = 0; i < 10; i++) this._levels.push(new Set());\n\t\tfor (let i = 5000; i < duration; i += 500) this._levels.push(new Set());\n\t\tthis._currentLevel = 0;\n\t\tthis._tickInterval = Math.floor(duration / this._levels.length);\n\t\t/** @type {STORAGE_MODE_IDLE | STORAGE_MODE_SYNC | STORAGE_MODE_ASYNC} */\n\t\tthis._mode = STORAGE_MODE_IDLE;\n\n\t\t/** @type {NodeJS.Timeout | undefined} */\n\t\tthis._timeout = undefined;\n\t\t/** @type {number | undefined} */\n\t\tthis._nextDecay = undefined;\n\n\t\tthis.provide = provider ? this.provide.bind(this) : null;\n\t\tthis.provideSync = syncProvider ? this.provideSync.bind(this) : null;\n\t}\n\n\tprovide(path, options, callback) {\n\t\tif (typeof options === \"function\") {\n\t\t\tcallback = options;\n\t\t\toptions = undefined;\n\t\t}\n\t\tif (typeof path !== \"string\") {\n\t\t\tcallback(new TypeError(\"path must be a string\"));\n\t\t\treturn;\n\t\t}\n\t\tif (options) {\n\t\t\treturn this._provider.call(\n\t\t\t\tthis._providerContext,\n\t\t\t\tpath,\n\t\t\t\toptions,\n\t\t\t\tcallback\n\t\t\t);\n\t\t}\n\n\t\t// When in sync mode we can move to async mode\n\t\tif (this._mode === STORAGE_MODE_SYNC) {\n\t\t\tthis._enterAsyncMode();\n\t\t}\n\n\t\t// Check in cache\n\t\tlet cacheEntry = this._data.get(path);\n\t\tif (cacheEntry !== undefined) {\n\t\t\tif (cacheEntry.err) return process.nextTick(callback, cacheEntry.err);\n\t\t\treturn process.nextTick(callback, null, cacheEntry.result);\n\t\t}\n\n\t\t// Check if there is already the same operation running\n\t\tlet callbacks = this._activeAsyncOperations.get(path);\n\t\tif (callbacks !== undefined) {\n\t\t\tcallbacks.push(callback);\n\t\t\treturn;\n\t\t}\n\t\tthis._activeAsyncOperations.set(path, (callbacks = [callback]));\n\n\t\t// Run the operation\n\t\tthis._provider.call(this._providerContext, path, (err, result) => {\n\t\t\tthis._activeAsyncOperations.delete(path);\n\t\t\tthis._storeResult(path, err, result);\n\n\t\t\t// Enter async mode if not yet done\n\t\t\tthis._enterAsyncMode();\n\n\t\t\trunCallbacks(callbacks, err, result);\n\t\t});\n\t}\n\n\tprovideSync(path, options) {\n\t\tif (typeof path !== \"string\") {\n\t\t\tthrow new TypeError(\"path must be a string\");\n\t\t}\n\t\tif (options) {\n\t\t\treturn this._syncProvider.call(this._providerContext, path, options);\n\t\t}\n\n\t\t// In sync mode we may have to decay some cache items\n\t\tif (this._mode === STORAGE_MODE_SYNC) {\n\t\t\tthis._runDecays();\n\t\t}\n\n\t\t// Check in cache\n\t\tlet cacheEntry = this._data.get(path);\n\t\tif (cacheEntry !== undefined) {\n\t\t\tif (cacheEntry.err) throw cacheEntry.err;\n\t\t\treturn cacheEntry.result;\n\t\t}\n\n\t\t// Get all active async operations\n\t\t// This sync operation will also complete them\n\t\tconst callbacks = this._activeAsyncOperations.get(path);\n\t\tthis._activeAsyncOperations.delete(path);\n\n\t\t// Run the operation\n\t\t// When in idle mode, we will enter sync mode\n\t\tlet result;\n\t\ttry {\n\t\t\tresult = this._syncProvider.call(this._providerContext, path);\n\t\t} catch (err) {\n\t\t\tthis._storeResult(path, err, undefined);\n\t\t\tthis._enterSyncModeWhenIdle();\n\t\t\tif (callbacks) runCallbacks(callbacks, err, undefined);\n\t\t\tthrow err;\n\t\t}\n\t\tthis._storeResult(path, undefined, result);\n\t\tthis._enterSyncModeWhenIdle();\n\t\tif (callbacks) runCallbacks(callbacks, undefined, result);\n\t\treturn result;\n\t}\n\n\tpurge(what) {\n\t\tif (!what) {\n\t\t\tif (this._mode !== STORAGE_MODE_IDLE) {\n\t\t\t\tthis._data.clear();\n\t\t\t\tfor (const level of this._levels) {\n\t\t\t\t\tlevel.clear();\n\t\t\t\t}\n\t\t\t\tthis._enterIdleMode();\n\t\t\t}\n\t\t} else if (typeof what === \"string\") {\n\t\t\tfor (let [key, data] of this._data) {\n\t\t\t\tif (key.startsWith(what)) {\n\t\t\t\t\tthis._data.delete(key);\n\t\t\t\t\tdata.level.delete(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._data.size === 0) {\n\t\t\t\tthis._enterIdleMode();\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let [key, data] of this._data) {\n\t\t\t\tfor (const item of what) {\n\t\t\t\t\tif (key.startsWith(item)) {\n\t\t\t\t\t\tthis._data.delete(key);\n\t\t\t\t\t\tdata.level.delete(key);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._data.size === 0) {\n\t\t\t\tthis._enterIdleMode();\n\t\t\t}\n\t\t}\n\t}\n\n\tpurgeParent(what) {\n\t\tif (!what) {\n\t\t\tthis.purge();\n\t\t} else if (typeof what === \"string\") {\n\t\t\tthis.purge(dirname(what));\n\t\t} else {\n\t\t\tconst set = new Set();\n\t\t\tfor (const item of what) {\n\t\t\t\tset.add(dirname(item));\n\t\t\t}\n\t\t\tthis.purge(set);\n\t\t}\n\t}\n\n\t_storeResult(path, err, result) {\n\t\tif (this._data.has(path)) return;\n\t\tconst level = this._levels[this._currentLevel];\n\t\tthis._data.set(path, { err, result, level });\n\t\tlevel.add(path);\n\t}\n\n\t_decayLevel() {\n\t\tconst nextLevel = (this._currentLevel + 1) % this._levels.length;\n\t\tconst decay = this._levels[nextLevel];\n\t\tthis._currentLevel = nextLevel;\n\t\tfor (let item of decay) {\n\t\t\tthis._data.delete(item);\n\t\t}\n\t\tdecay.clear();\n\t\tif (this._data.size === 0) {\n\t\t\tthis._enterIdleMode();\n\t\t} else {\n\t\t\t// @ts-ignore _nextDecay is always a number in sync mode\n\t\t\tthis._nextDecay += this._tickInterval;\n\t\t}\n\t}\n\n\t_runDecays() {\n\t\twhile (\n\t\t\t/** @type {number} */ (this._nextDecay) <= Date.now() &&\n\t\t\tthis._mode !== STORAGE_MODE_IDLE\n\t\t) {\n\t\t\tthis._decayLevel();\n\t\t}\n\t}\n\n\t_enterAsyncMode() {\n\t\tlet timeout = 0;\n\t\tswitch (this._mode) {\n\t\t\tcase STORAGE_MODE_ASYNC:\n\t\t\t\treturn;\n\t\t\tcase STORAGE_MODE_IDLE:\n\t\t\t\tthis._nextDecay = Date.now() + this._tickInterval;\n\t\t\t\ttimeout = this._tickInterval;\n\t\t\t\tbreak;\n\t\t\tcase STORAGE_MODE_SYNC:\n\t\t\t\tthis._runDecays();\n\t\t\t\t// @ts-ignore _runDecays may change the mode\n\t\t\t\tif (this._mode === STORAGE_MODE_IDLE) return;\n\t\t\t\ttimeout = Math.max(\n\t\t\t\t\t0,\n\t\t\t\t\t/** @type {number} */ (this._nextDecay) - Date.now()\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\t\tthis._mode = STORAGE_MODE_ASYNC;\n\t\tconst ref = setTimeout(() => {\n\t\t\tthis._mode = STORAGE_MODE_SYNC;\n\t\t\tthis._runDecays();\n\t\t}, timeout);\n\t\tif (ref.unref) ref.unref();\n\t\tthis._timeout = ref;\n\t}\n\n\t_enterSyncModeWhenIdle() {\n\t\tif (this._mode === STORAGE_MODE_IDLE) {\n\t\t\tthis._mode = STORAGE_MODE_SYNC;\n\t\t\tthis._nextDecay = Date.now() + this._tickInterval;\n\t\t}\n\t}\n\n\t_enterIdleMode() {\n\t\tthis._mode = STORAGE_MODE_IDLE;\n\t\tthis._nextDecay = undefined;\n\t\tif (this._timeout) clearTimeout(this._timeout);\n\t}\n}\n\nconst createBackend = (duration, provider, syncProvider, providerContext) => {\n\tif (duration > 0) {\n\t\treturn new CacheBackend(duration, provider, syncProvider, providerContext);\n\t}\n\treturn new OperationMergerBackend(provider, syncProvider, providerContext);\n};\n\nmodule.exports = class CachedInputFileSystem {\n\tconstructor(fileSystem, duration) {\n\t\tthis.fileSystem = fileSystem;\n\n\t\tthis._lstatBackend = createBackend(\n\t\t\tduration,\n\t\t\tthis.fileSystem.lstat,\n\t\t\tthis.fileSystem.lstatSync,\n\t\t\tthis.fileSystem\n\t\t);\n\t\tconst lstat = this._lstatBackend.provide;\n\t\tthis.lstat = /** @type {FileSystem[\"lstat\"]} */ (lstat);\n\t\tconst lstatSync = this._lstatBackend.provideSync;\n\t\tthis.lstatSync = /** @type {SyncFileSystem[\"lstatSync\"]} */ (lstatSync);\n\n\t\tthis._statBackend = createBackend(\n\t\t\tduration,\n\t\t\tthis.fileSystem.stat,\n\t\t\tthis.fileSystem.statSync,\n\t\t\tthis.fileSystem\n\t\t);\n\t\tconst stat = this._statBackend.provide;\n\t\tthis.stat = /** @type {FileSystem[\"stat\"]} */ (stat);\n\t\tconst statSync = this._statBackend.provideSync;\n\t\tthis.statSync = /** @type {SyncFileSystem[\"statSync\"]} */ (statSync);\n\n\t\tthis._readdirBackend = createBackend(\n\t\t\tduration,\n\t\t\tthis.fileSystem.readdir,\n\t\t\tthis.fileSystem.readdirSync,\n\t\t\tthis.fileSystem\n\t\t);\n\t\tconst readdir = this._readdirBackend.provide;\n\t\tthis.readdir = /** @type {FileSystem[\"readdir\"]} */ (readdir);\n\t\tconst readdirSync = this._readdirBackend.provideSync;\n\t\tthis.readdirSync = /** @type {SyncFileSystem[\"readdirSync\"]} */ (readdirSync);\n\n\t\tthis._readFileBackend = createBackend(\n\t\t\tduration,\n\t\t\tthis.fileSystem.readFile,\n\t\t\tthis.fileSystem.readFileSync,\n\t\t\tthis.fileSystem\n\t\t);\n\t\tconst readFile = this._readFileBackend.provide;\n\t\tthis.readFile = /** @type {FileSystem[\"readFile\"]} */ (readFile);\n\t\tconst readFileSync = this._readFileBackend.provideSync;\n\t\tthis.readFileSync = /** @type {SyncFileSystem[\"readFileSync\"]} */ (readFileSync);\n\n\t\tthis._readJsonBackend = createBackend(\n\t\t\tduration,\n\t\t\tthis.fileSystem.readJson ||\n\t\t\t\t(this.readFile &&\n\t\t\t\t\t((path, callback) => {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tthis.readFile(path, (err, buffer) => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tif (!buffer || buffer.length === 0)\n\t\t\t\t\t\t\t\treturn callback(new Error(\"No file content\"));\n\t\t\t\t\t\t\tlet data;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tdata = JSON.parse(buffer.toString(\"utf-8\"));\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\treturn callback(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcallback(null, data);\n\t\t\t\t\t\t});\n\t\t\t\t\t})),\n\t\t\tthis.fileSystem.readJsonSync ||\n\t\t\t\t(this.readFileSync &&\n\t\t\t\t\t(path => {\n\t\t\t\t\t\tconst buffer = this.readFileSync(path);\n\t\t\t\t\t\tconst data = JSON.parse(buffer.toString(\"utf-8\"));\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t})),\n\t\t\tthis.fileSystem\n\t\t);\n\t\tconst readJson = this._readJsonBackend.provide;\n\t\tthis.readJson = /** @type {FileSystem[\"readJson\"]} */ (readJson);\n\t\tconst readJsonSync = this._readJsonBackend.provideSync;\n\t\tthis.readJsonSync = /** @type {SyncFileSystem[\"readJsonSync\"]} */ (readJsonSync);\n\n\t\tthis._readlinkBackend = createBackend(\n\t\t\tduration,\n\t\t\tthis.fileSystem.readlink,\n\t\t\tthis.fileSystem.readlinkSync,\n\t\t\tthis.fileSystem\n\t\t);\n\t\tconst readlink = this._readlinkBackend.provide;\n\t\tthis.readlink = /** @type {FileSystem[\"readlink\"]} */ (readlink);\n\t\tconst readlinkSync = this._readlinkBackend.provideSync;\n\t\tthis.readlinkSync = /** @type {SyncFileSystem[\"readlinkSync\"]} */ (readlinkSync);\n\t}\n\n\tpurge(what) {\n\t\tthis._statBackend.purge(what);\n\t\tthis._lstatBackend.purge(what);\n\t\tthis._readdirBackend.purgeParent(what);\n\t\tthis._readFileBackend.purge(what);\n\t\tthis._readlinkBackend.purge(what);\n\t\tthis._readJsonBackend.purge(what);\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}