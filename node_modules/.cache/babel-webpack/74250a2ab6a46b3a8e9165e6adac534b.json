{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _toConsumableArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCommonConfig = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar build_optimizer_1 = require(\"@angular-devkit/build-optimizer\");\n\nvar CopyWebpackPlugin = require(\"copy-webpack-plugin\");\n\nvar fs_1 = require(\"fs\");\n\nvar path = require(\"path\");\n\nvar typescript_1 = require(\"typescript\");\n\nvar webpack_1 = require(\"webpack\");\n\nvar webpack_sources_1 = require(\"webpack-sources\");\n\nvar utils_1 = require(\"../../utils\");\n\nvar cache_path_1 = require(\"../../utils/cache-path\");\n\nvar environment_options_1 = require(\"../../utils/environment-options\");\n\nvar find_up_1 = require(\"../../utils/find-up\");\n\nvar spinner_1 = require(\"../../utils/spinner\");\n\nvar webpack_version_1 = require(\"../../utils/webpack-version\");\n\nvar plugins_1 = require(\"../plugins\");\n\nvar helpers_1 = require(\"../utils/helpers\");\n\nvar TerserPlugin = require('terser-webpack-plugin');\n\nvar PnpWebpackPlugin = require('pnp-webpack-plugin'); // tslint:disable-next-line:no-big-function\n\n\nfunction getCommonConfig(wco) {\n  var root = wco.root,\n      projectRoot = wco.projectRoot,\n      buildOptions = wco.buildOptions,\n      tsConfig = wco.tsConfig;\n  var _buildOptions$platfor = buildOptions.platform,\n      platform = _buildOptions$platfor === void 0 ? 'browser' : _buildOptions$platfor,\n      _buildOptions$sourceM = buildOptions.sourceMap,\n      stylesSourceMap = _buildOptions$sourceM.styles,\n      scriptsSourceMap = _buildOptions$sourceM.scripts,\n      vendorSourceMap = _buildOptions$sourceM.vendor,\n      _buildOptions$optimiz = buildOptions.optimization,\n      stylesOptimization = _buildOptions$optimiz.styles,\n      scriptsOptimization = _buildOptions$optimiz.scripts;\n  var extraPlugins = [];\n  var extraRules = [];\n  var entryPoints = {}; // determine hashing format\n\n  var hashFormat = helpers_1.getOutputHashFormat(buildOptions.outputHashing || 'none');\n  var targetInFileName = helpers_1.getEsVersionForFileName(tsConfig.options.target, buildOptions.differentialLoadingMode);\n\n  if (buildOptions.main) {\n    var mainPath = path.resolve(root, buildOptions.main);\n    entryPoints['main'] = [mainPath];\n\n    if (buildOptions.experimentalRollupPass) {\n      // NOTE: the following are known problems with experimentalRollupPass\n      // - vendorChunk, commonChunk, namedChunks: these won't work, because by the time webpack\n      // sees the chunks, the context of where they came from is lost.\n      // - webWorkerTsConfig: workers must be imported via a root relative path (e.g.\n      // `app/search/search.worker`) instead of a relative path (`/search.worker`) because\n      // of the same reason as above.\n      // - loadChildren string syntax: doesn't work because rollup cannot follow the imports.\n      // Rollup options, except entry module, which is automatically inferred.\n      var rollupOptions = {}; // Add rollup plugins/rules.\n\n      extraRules.push({\n        test: mainPath,\n        // Ensure rollup loader executes after other loaders.\n        enforce: 'post',\n        use: [{\n          loader: plugins_1.WebpackRollupLoader,\n          options: rollupOptions\n        }]\n      }); // Rollup bundles will include the dynamic System.import that was inside Angular and webpack\n      // will emit warnings because it can't resolve it. We just ignore it.\n      // TODO: maybe use https://webpack.js.org/configuration/stats/#statswarningsfilter instead.\n      // Ignore all \"Critical dependency: the request of a dependency is an expression\" warnings.\n\n      extraPlugins.push(new webpack_1.ContextReplacementPlugin(/./)); // Ignore \"System.import() is deprecated\" warnings for the main file and js files.\n      // Might still get them if @angular/core gets split into a lazy module.\n\n      extraRules.push({\n        test: mainPath,\n        enforce: 'post',\n        parser: {\n          system: true\n        }\n      });\n      extraRules.push({\n        test: /\\.js$/,\n        enforce: 'post',\n        parser: {\n          system: true\n        }\n      });\n    }\n  }\n\n  var differentialLoadingMode = buildOptions.differentialLoadingMode;\n\n  if (platform !== 'server') {\n    if (differentialLoadingMode || tsConfig.options.target === typescript_1.ScriptTarget.ES5) {\n      var buildBrowserFeatures = new utils_1.BuildBrowserFeatures(projectRoot);\n\n      if (buildBrowserFeatures.isEs5SupportNeeded()) {\n        var polyfillsChunkName = 'polyfills-es5';\n        entryPoints[polyfillsChunkName] = [path.join(__dirname, '..', 'es5-polyfills.js')];\n\n        if (differentialLoadingMode) {\n          // Add zone.js legacy support to the es5 polyfills\n          // This is a noop execution-wise if zone-evergreen is not used.\n          entryPoints[polyfillsChunkName].push('zone.js/dist/zone-legacy'); // Since the chunkFileName option schema does not allow the function overload, add a plugin\n          // that changes the name of the ES5 polyfills chunk to not include ES2015.\n\n          extraPlugins.push({\n            apply: function apply(compiler) {\n              compiler.hooks.compilation.tap('build-angular', function (compilation) {\n                var assetPath = function assetPath(filename, data) {\n                  var _a;\n\n                  var assetName = typeof filename === 'function' ? filename(data) : filename;\n                  var isMap = assetName === null || assetName === void 0 ? void 0 : assetName.endsWith('.map');\n                  return ((_a = data.chunk) === null || _a === void 0 ? void 0 : _a.name) === 'polyfills-es5' ? \"polyfills-es5\".concat(hashFormat.chunk, \".js\").concat(isMap ? '.map' : '') : assetName;\n                };\n\n                if (webpack_version_1.isWebpackFiveOrHigher()) {\n                  compilation.hooks.assetPath.tap('remove-hash-plugin', assetPath);\n                } else {\n                  var mainTemplate = compilation.mainTemplate;\n                  mainTemplate.hooks.assetPath.tap('build-angular', assetPath);\n                }\n              });\n            }\n          });\n        }\n\n        if (!buildOptions.aot) {\n          if (differentialLoadingMode) {\n            entryPoints[polyfillsChunkName].push(path.join(__dirname, '..', 'jit-polyfills.js'));\n          }\n\n          entryPoints[polyfillsChunkName].push(path.join(__dirname, '..', 'es5-jit-polyfills.js'));\n        } // If not performing a full differential build the polyfills need to be added to ES5 bundle\n\n\n        if (buildOptions.polyfills) {\n          entryPoints[polyfillsChunkName].push(path.resolve(root, buildOptions.polyfills));\n        }\n      }\n    }\n\n    if (buildOptions.polyfills) {\n      var projectPolyfills = path.resolve(root, buildOptions.polyfills);\n\n      if (entryPoints['polyfills']) {\n        entryPoints['polyfills'].push(projectPolyfills);\n      } else {\n        entryPoints['polyfills'] = [projectPolyfills];\n      }\n    }\n\n    if (!buildOptions.aot) {\n      var jitPolyfills = path.join(__dirname, '..', 'jit-polyfills.js');\n\n      if (entryPoints['polyfills']) {\n        entryPoints['polyfills'].push(jitPolyfills);\n      } else {\n        entryPoints['polyfills'] = [jitPolyfills];\n      }\n    }\n  }\n\n  if (environment_options_1.profilingEnabled) {\n    extraPlugins.push(new webpack_1.debug.ProfilingPlugin({\n      outputPath: path.resolve(root, 'chrome-profiler-events.json')\n    }));\n  } // process global scripts\n\n\n  var globalScriptsByBundleName = helpers_1.normalizeExtraEntryPoints(buildOptions.scripts, 'scripts').reduce(function (prev, curr) {\n    var bundleName = curr.bundleName,\n        inject = curr.inject,\n        input = curr.input;\n    var resolvedPath = path.resolve(root, input);\n\n    if (!fs_1.existsSync(resolvedPath)) {\n      try {\n        resolvedPath = require.resolve(input, {\n          paths: [root]\n        });\n      } catch (_a) {\n        throw new Error(\"Script file \".concat(input, \" does not exist.\"));\n      }\n    }\n\n    var existingEntry = prev.find(function (el) {\n      return el.bundleName === bundleName;\n    });\n\n    if (existingEntry) {\n      if (existingEntry.inject && !inject) {\n        // All entries have to be lazy for the bundle to be lazy.\n        throw new Error(\"The \".concat(bundleName, \" bundle is mixing injected and non-injected scripts.\"));\n      }\n\n      existingEntry.paths.push(resolvedPath);\n    } else {\n      prev.push({\n        bundleName: bundleName,\n        inject: inject,\n        paths: [resolvedPath]\n      });\n    }\n\n    return prev;\n  }, []); // Add a new asset for each entry.\n\n  var _iterator = _createForOfIteratorHelper(globalScriptsByBundleName),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var script = _step.value;\n      // Lazy scripts don't get a hash, otherwise they can't be loaded by name.\n      var hash = script.inject ? hashFormat.script : '';\n      var bundleName = script.bundleName;\n      extraPlugins.push(new plugins_1.ScriptsWebpackPlugin({\n        name: bundleName,\n        sourceMap: scriptsSourceMap,\n        filename: \"\".concat(path.basename(bundleName)).concat(hash, \".js\"),\n        scripts: script.paths,\n        basePath: projectRoot\n      }));\n    } // process asset entries\n\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  if (buildOptions.assets.length) {\n    var copyWebpackPluginPatterns = buildOptions.assets.map(function (asset) {\n      // Resolve input paths relative to workspace root and add slash at the end.\n      // tslint:disable-next-line: prefer-const\n      var input = asset.input,\n          output = asset.output,\n          _asset$ignore = asset.ignore,\n          ignore = _asset$ignore === void 0 ? [] : _asset$ignore,\n          glob = asset.glob;\n      input = path.resolve(root, input).replace(/\\\\/g, '/');\n      input = input.endsWith('/') ? input : input + '/';\n      output = output.endsWith('/') ? output : output + '/';\n\n      if (output.startsWith('..')) {\n        throw new Error('An asset cannot be written to a location outside of the output path.');\n      }\n\n      return {\n        context: input,\n        // Now we remove starting slash to make Webpack place it from the output root.\n        to: output.replace(/^\\//, ''),\n        from: glob,\n        noErrorOnMissing: true,\n        force: true,\n        globOptions: {\n          dot: true,\n          ignore: ['.gitkeep', '**/.DS_Store', '**/Thumbs.db'].concat(_toConsumableArray(ignore)).map(function (i) {\n            return path.posix.join(input, i);\n          })\n        }\n      };\n    });\n    extraPlugins.push(new CopyWebpackPlugin({\n      patterns: copyWebpackPluginPatterns\n    }));\n  }\n\n  if (buildOptions.progress) {\n    var ProgressPlugin = require('webpack/lib/ProgressPlugin');\n\n    var spinner = new spinner_1.Spinner();\n    extraPlugins.push(new ProgressPlugin({\n      handler: function handler(percentage, message) {\n        switch (percentage) {\n          case 0:\n            spinner.start(\"Generating \".concat(platform, \" application bundles...\"));\n            break;\n\n          case 1:\n            spinner.succeed(\"\".concat(platform.replace(/^\\w/, function (s) {\n              return s.toUpperCase();\n            }), \" application bundle generation complete.\"));\n            break;\n\n          default:\n            spinner.text = \"Generating \".concat(platform, \" application bundles (phase: \").concat(message, \")...\");\n            break;\n        }\n      }\n    }));\n  }\n\n  if (buildOptions.showCircularDependencies) {\n    var CircularDependencyPlugin = require('circular-dependency-plugin');\n\n    extraPlugins.push(new CircularDependencyPlugin({\n      exclude: /([\\\\\\/]node_modules[\\\\\\/])|(ngfactory\\.js$)/\n    }));\n  }\n\n  if (buildOptions.statsJson) {\n    extraPlugins.push(new ( /*#__PURE__*/function () {\n      function _class() {\n        _classCallCheck(this, _class);\n      }\n\n      _createClass(_class, [{\n        key: \"apply\",\n        value: function apply(compiler) {\n          compiler.hooks.emit.tap('angular-cli-stats', function (compilation) {\n            var data = JSON.stringify(compilation.getStats().toJson('verbose'), undefined, 2);\n            compilation.assets['stats.json'] = new webpack_sources_1.RawSource(data);\n          });\n        }\n      }]);\n\n      return _class;\n    }())());\n  }\n\n  if (buildOptions.namedChunks && !webpack_version_1.isWebpackFiveOrHigher()) {\n    extraPlugins.push(new plugins_1.NamedLazyChunksPlugin());\n  }\n\n  if (!differentialLoadingMode) {\n    // Budgets are computed after differential builds, not via a plugin.\n    // https://github.com/angular/angular-cli/blob/master/packages/angular_devkit/build_angular/src/browser/index.ts\n    extraPlugins.push(new plugins_1.BundleBudgetPlugin({\n      budgets: buildOptions.budgets\n    }));\n  }\n\n  if ((scriptsSourceMap || stylesSourceMap) && vendorSourceMap) {\n    extraRules.push({\n      test: /\\.m?js$/,\n      exclude: /(ngfactory|ngstyle)\\.js$/,\n      enforce: 'pre',\n      loader: require.resolve('source-map-loader')\n    });\n  }\n\n  var buildOptimizerUseRule = [];\n\n  if (buildOptions.buildOptimizer) {\n    extraPlugins.push(new build_optimizer_1.BuildOptimizerWebpackPlugin());\n    buildOptimizerUseRule = [{\n      loader: build_optimizer_1.buildOptimizerLoaderPath,\n      options: {\n        sourceMap: scriptsSourceMap\n      }\n    }];\n  }\n\n  var extraMinimizers = [];\n\n  if (stylesOptimization) {\n    extraMinimizers.push(new plugins_1.OptimizeCssWebpackPlugin({\n      sourceMap: stylesSourceMap,\n      // component styles retain their original file name\n      test: function test(file) {\n        return /\\.(?:css|scss|sass|less|styl)$/.test(file);\n      }\n    }));\n  }\n\n  if (scriptsOptimization) {\n    var _require = require('@angular/compiler-cli'),\n        GLOBAL_DEFS_FOR_TERSER = _require.GLOBAL_DEFS_FOR_TERSER,\n        GLOBAL_DEFS_FOR_TERSER_WITH_AOT = _require.GLOBAL_DEFS_FOR_TERSER_WITH_AOT;\n\n    var angularGlobalDefinitions = buildOptions.aot ? GLOBAL_DEFS_FOR_TERSER_WITH_AOT : GLOBAL_DEFS_FOR_TERSER; // TODO: Investigate why this fails for some packages: wco.supportES2015 ? 6 : 5;\n\n    var terserEcma = 5;\n    var terserOptions = {\n      warnings: !!buildOptions.verbose,\n      safari10: true,\n      output: {\n        ecma: terserEcma,\n        // For differential loading, this is handled in the bundle processing.\n        // This should also work with just true but the experimental rollup support breaks without this check.\n        ascii_only: !differentialLoadingMode,\n        // default behavior (undefined value) is to keep only important comments (licenses, etc.)\n        comments: !buildOptions.extractLicenses && undefined,\n        webkit: true,\n        beautify: environment_options_1.shouldBeautify,\n        wrap_func_args: false\n      },\n      // On server, we don't want to compress anything. We still set the ngDevMode = false for it\n      // to remove dev code, and ngI18nClosureMode to remove Closure compiler i18n code\n      compress: environment_options_1.allowMinify && (platform === 'server' ? {\n        ecma: terserEcma,\n        global_defs: angularGlobalDefinitions,\n        keep_fnames: true\n      } : {\n        ecma: terserEcma,\n        pure_getters: buildOptions.buildOptimizer,\n        // PURE comments work best with 3 passes.\n        // See https://github.com/webpack/webpack/issues/2899#issuecomment-317425926.\n        passes: buildOptions.buildOptimizer ? 3 : 1,\n        global_defs: angularGlobalDefinitions,\n        pure_funcs: ['forwardRef']\n      }),\n      // We also want to avoid mangling on server.\n      // Name mangling is handled within the browser builder\n      mangle: environment_options_1.allowMangle && platform !== 'server' && !differentialLoadingMode\n    };\n    var globalScriptsNames = globalScriptsByBundleName.map(function (s) {\n      return s.bundleName;\n    });\n    extraMinimizers.push(new TerserPlugin({\n      sourceMap: scriptsSourceMap,\n      parallel: utils_1.maxWorkers,\n      cache: !environment_options_1.cachingDisabled && cache_path_1.findCachePath('terser-webpack'),\n      extractComments: false,\n      exclude: globalScriptsNames,\n      terserOptions: terserOptions\n    }), // Script bundles are fully optimized here in one step since they are never downleveled.\n    // They are shared between ES2015 & ES5 outputs so must support ES5.\n    new TerserPlugin({\n      sourceMap: scriptsSourceMap,\n      parallel: utils_1.maxWorkers,\n      cache: !environment_options_1.cachingDisabled && cache_path_1.findCachePath('terser-webpack'),\n      extractComments: false,\n      include: globalScriptsNames,\n      terserOptions: _objectSpread(_objectSpread({}, terserOptions), {}, {\n        compress: environment_options_1.allowMinify && _objectSpread(_objectSpread({}, terserOptions.compress), {}, {\n          ecma: 5\n        }),\n        output: _objectSpread(_objectSpread({}, terserOptions.output), {}, {\n          ecma: 5\n        }),\n        mangle: environment_options_1.allowMangle && platform !== 'server'\n      })\n    }));\n  }\n\n  return _objectSpread(_objectSpread({\n    mode: scriptsOptimization || stylesOptimization ? 'production' : 'development',\n    devtool: false,\n    profile: buildOptions.statsJson,\n    resolve: {\n      roots: [projectRoot],\n      extensions: ['.ts', '.tsx', '.mjs', '.js'],\n      symlinks: !buildOptions.preserveSymlinks,\n      modules: [wco.tsConfig.options.baseUrl || projectRoot, 'node_modules'],\n      plugins: webpack_version_1.isWebpackFiveOrHigher() ? [] : [PnpWebpackPlugin]\n    },\n    resolveLoader: {\n      symlinks: !buildOptions.preserveSymlinks,\n      modules: [// Allow loaders to be in a node_modules nested inside the devkit/build-angular package.\n      // This is important in case loaders do not get hoisted.\n      // If this file moves to another location, alter potentialNodeModules as well.\n      'node_modules'].concat(_toConsumableArray(find_up_1.findAllNodeModules(__dirname, projectRoot))),\n      plugins: webpack_version_1.isWebpackFiveOrHigher() ? [] : [PnpWebpackPlugin.moduleLoader(module)]\n    },\n    context: root,\n    entry: entryPoints,\n    output: _objectSpread(_objectSpread({}, webpack_version_1.withWebpackFourOrFive({\n      futureEmitAssets: true\n    }, {})), {}, {\n      path: path.resolve(root, buildOptions.outputPath),\n      publicPath: buildOptions.deployUrl,\n      filename: \"[name]\".concat(targetInFileName).concat(hashFormat.chunk, \".js\")\n    }),\n    watch: buildOptions.watch,\n    watchOptions: helpers_1.getWatchOptions(buildOptions.poll),\n    performance: {\n      hints: false\n    },\n    module: {\n      // Show an error for missing exports instead of a warning.\n      strictExportPresence: true,\n      rules: [{\n        test: /\\.(eot|svg|cur|jpg|png|webp|gif|otf|ttf|woff|woff2|ani|avif)$/,\n        loader: require.resolve('file-loader'),\n        options: {\n          name: \"[name]\".concat(hashFormat.file, \".[ext]\"),\n          // Re-use emitted files from browser builder on the server.\n          emitFile: platform !== 'server'\n        }\n      }, {\n        // Mark files inside `@angular/core` as using SystemJS style dynamic imports.\n        // Removing this will cause deprecation warnings to appear.\n        test: /[\\/\\\\]@angular[\\/\\\\]core[\\/\\\\].+\\.js$/,\n        parser: {\n          system: true\n        }\n      }, {\n        // Mark files inside `rxjs/add` as containing side effects.\n        // If this is fixed upstream and the fixed version becomes the minimum\n        // supported version, this can be removed.\n        test: /[\\/\\\\]rxjs[\\/\\\\]add[\\/\\\\].+\\.js$/,\n        sideEffects: true\n      }, {\n        test: /\\.m?js$/,\n        exclude: [/[\\/\\\\](?:core-js|\\@babel|tslib|web-animations-js)[\\/\\\\]/, /(ngfactory|ngstyle)\\.js$/],\n        use: [].concat(_toConsumableArray(wco.supportES2015 ? [] : [{\n          loader: require.resolve('babel-loader'),\n          options: {\n            babelrc: false,\n            configFile: false,\n            compact: false,\n            cacheCompression: false,\n            cacheDirectory: cache_path_1.findCachePath('babel-webpack'),\n            cacheIdentifier: JSON.stringify({\n              buildAngular: require('../../../package.json').version\n            }),\n            sourceType: 'unambiguous',\n            presets: [[require.resolve('@babel/preset-env'), {\n              bugfixes: true,\n              modules: false,\n              // Comparable behavior to tsconfig target of ES5\n              targets: {\n                ie: 9\n              },\n              exclude: ['transform-typeof-symbol']\n            }]],\n            plugins: [[require('@babel/plugin-transform-runtime').default, {\n              useESModules: true,\n              version: require('@babel/runtime/package.json').version,\n              absoluteRuntime: path.dirname(require.resolve('@babel/runtime/package.json'))\n            }]]\n          }\n        }]), _toConsumableArray(buildOptimizerUseRule))\n      }].concat(extraRules)\n    },\n    optimization: _objectSpread(_objectSpread({\n      minimizer: extraMinimizers,\n      moduleIds: webpack_version_1.withWebpackFourOrFive('hashed', 'deterministic')\n    }, webpack_version_1.withWebpackFourOrFive({}, buildOptions.namedChunks ? {\n      chunkIds: 'named'\n    } : {})), webpack_version_1.withWebpackFourOrFive({\n      noEmitOnErrors: true\n    }, {\n      emitOnErrors: false\n    }))\n  }, webpack_version_1.withWebpackFourOrFive({}, {\n    cache: false\n  })), {}, {\n    plugins: [// Always replace the context for the System.import in angular/core to prevent warnings.\n    // https://github.com/angular/angular/issues/11580\n    // With VE the correct context is added in @ngtools/webpack, but Ivy doesn't need it at all.\n    new webpack_1.ContextReplacementPlugin(/\\@angular(\\\\|\\/)core(\\\\|\\/)/), new plugins_1.DedupeModuleResolvePlugin({\n      verbose: buildOptions.verbose\n    })].concat(extraPlugins)\n  });\n}\n\nexports.getCommonConfig = getCommonConfig;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/src/webpack/configs/common.js"],"names":["Object","defineProperty","exports","value","getCommonConfig","build_optimizer_1","require","CopyWebpackPlugin","fs_1","path","typescript_1","webpack_1","webpack_sources_1","utils_1","cache_path_1","environment_options_1","find_up_1","spinner_1","webpack_version_1","plugins_1","helpers_1","TerserPlugin","PnpWebpackPlugin","wco","root","projectRoot","buildOptions","tsConfig","platform","sourceMap","stylesSourceMap","styles","scriptsSourceMap","scripts","vendorSourceMap","vendor","optimization","stylesOptimization","scriptsOptimization","extraPlugins","extraRules","entryPoints","hashFormat","getOutputHashFormat","outputHashing","targetInFileName","getEsVersionForFileName","options","target","differentialLoadingMode","main","mainPath","resolve","experimentalRollupPass","rollupOptions","push","test","enforce","use","loader","WebpackRollupLoader","ContextReplacementPlugin","parser","system","ScriptTarget","ES5","buildBrowserFeatures","BuildBrowserFeatures","isEs5SupportNeeded","polyfillsChunkName","join","__dirname","apply","compiler","hooks","compilation","tap","assetPath","filename","data","_a","assetName","isMap","endsWith","chunk","name","isWebpackFiveOrHigher","mainTemplate","aot","polyfills","projectPolyfills","jitPolyfills","profilingEnabled","debug","ProfilingPlugin","outputPath","globalScriptsByBundleName","normalizeExtraEntryPoints","reduce","prev","curr","bundleName","inject","input","resolvedPath","existsSync","paths","Error","existingEntry","find","el","script","hash","ScriptsWebpackPlugin","basename","basePath","assets","length","copyWebpackPluginPatterns","map","asset","output","ignore","glob","replace","startsWith","context","to","from","noErrorOnMissing","force","globOptions","dot","i","posix","patterns","progress","ProgressPlugin","spinner","Spinner","handler","percentage","message","start","succeed","s","toUpperCase","text","showCircularDependencies","CircularDependencyPlugin","exclude","statsJson","emit","JSON","stringify","getStats","toJson","undefined","RawSource","namedChunks","NamedLazyChunksPlugin","BundleBudgetPlugin","budgets","buildOptimizerUseRule","buildOptimizer","BuildOptimizerWebpackPlugin","buildOptimizerLoaderPath","extraMinimizers","OptimizeCssWebpackPlugin","file","GLOBAL_DEFS_FOR_TERSER","GLOBAL_DEFS_FOR_TERSER_WITH_AOT","angularGlobalDefinitions","terserEcma","terserOptions","warnings","verbose","safari10","ecma","ascii_only","comments","extractLicenses","webkit","beautify","shouldBeautify","wrap_func_args","compress","allowMinify","global_defs","keep_fnames","pure_getters","passes","pure_funcs","mangle","allowMangle","globalScriptsNames","parallel","maxWorkers","cache","cachingDisabled","findCachePath","extractComments","include","mode","devtool","profile","roots","extensions","symlinks","preserveSymlinks","modules","baseUrl","plugins","resolveLoader","findAllNodeModules","moduleLoader","module","entry","withWebpackFourOrFive","futureEmitAssets","publicPath","deployUrl","watch","watchOptions","getWatchOptions","poll","performance","hints","strictExportPresence","rules","emitFile","sideEffects","supportES2015","babelrc","configFile","compact","cacheCompression","cacheDirectory","cacheIdentifier","buildAngular","version","sourceType","presets","bugfixes","targets","ie","default","useESModules","absoluteRuntime","dirname","minimizer","moduleIds","chunkIds","noEmitOnErrors","emitOnErrors","DedupeModuleResolvePlugin"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCommonConfig = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst build_optimizer_1 = require(\"@angular-devkit/build-optimizer\");\nconst CopyWebpackPlugin = require(\"copy-webpack-plugin\");\nconst fs_1 = require(\"fs\");\nconst path = require(\"path\");\nconst typescript_1 = require(\"typescript\");\nconst webpack_1 = require(\"webpack\");\nconst webpack_sources_1 = require(\"webpack-sources\");\nconst utils_1 = require(\"../../utils\");\nconst cache_path_1 = require(\"../../utils/cache-path\");\nconst environment_options_1 = require(\"../../utils/environment-options\");\nconst find_up_1 = require(\"../../utils/find-up\");\nconst spinner_1 = require(\"../../utils/spinner\");\nconst webpack_version_1 = require(\"../../utils/webpack-version\");\nconst plugins_1 = require(\"../plugins\");\nconst helpers_1 = require(\"../utils/helpers\");\nconst TerserPlugin = require('terser-webpack-plugin');\nconst PnpWebpackPlugin = require('pnp-webpack-plugin');\n// tslint:disable-next-line:no-big-function\nfunction getCommonConfig(wco) {\n    const { root, projectRoot, buildOptions, tsConfig } = wco;\n    const { platform = 'browser', sourceMap: { styles: stylesSourceMap, scripts: scriptsSourceMap, vendor: vendorSourceMap, }, optimization: { styles: stylesOptimization, scripts: scriptsOptimization, }, } = buildOptions;\n    const extraPlugins = [];\n    const extraRules = [];\n    const entryPoints = {};\n    // determine hashing format\n    const hashFormat = helpers_1.getOutputHashFormat(buildOptions.outputHashing || 'none');\n    const targetInFileName = helpers_1.getEsVersionForFileName(tsConfig.options.target, buildOptions.differentialLoadingMode);\n    if (buildOptions.main) {\n        const mainPath = path.resolve(root, buildOptions.main);\n        entryPoints['main'] = [mainPath];\n        if (buildOptions.experimentalRollupPass) {\n            // NOTE: the following are known problems with experimentalRollupPass\n            // - vendorChunk, commonChunk, namedChunks: these won't work, because by the time webpack\n            // sees the chunks, the context of where they came from is lost.\n            // - webWorkerTsConfig: workers must be imported via a root relative path (e.g.\n            // `app/search/search.worker`) instead of a relative path (`/search.worker`) because\n            // of the same reason as above.\n            // - loadChildren string syntax: doesn't work because rollup cannot follow the imports.\n            // Rollup options, except entry module, which is automatically inferred.\n            const rollupOptions = {};\n            // Add rollup plugins/rules.\n            extraRules.push({\n                test: mainPath,\n                // Ensure rollup loader executes after other loaders.\n                enforce: 'post',\n                use: [{\n                        loader: plugins_1.WebpackRollupLoader,\n                        options: rollupOptions,\n                    }],\n            });\n            // Rollup bundles will include the dynamic System.import that was inside Angular and webpack\n            // will emit warnings because it can't resolve it. We just ignore it.\n            // TODO: maybe use https://webpack.js.org/configuration/stats/#statswarningsfilter instead.\n            // Ignore all \"Critical dependency: the request of a dependency is an expression\" warnings.\n            extraPlugins.push(new webpack_1.ContextReplacementPlugin(/./));\n            // Ignore \"System.import() is deprecated\" warnings for the main file and js files.\n            // Might still get them if @angular/core gets split into a lazy module.\n            extraRules.push({\n                test: mainPath,\n                enforce: 'post',\n                parser: { system: true },\n            });\n            extraRules.push({\n                test: /\\.js$/,\n                enforce: 'post',\n                parser: { system: true },\n            });\n        }\n    }\n    const differentialLoadingMode = buildOptions.differentialLoadingMode;\n    if (platform !== 'server') {\n        if (differentialLoadingMode || tsConfig.options.target === typescript_1.ScriptTarget.ES5) {\n            const buildBrowserFeatures = new utils_1.BuildBrowserFeatures(projectRoot);\n            if (buildBrowserFeatures.isEs5SupportNeeded()) {\n                const polyfillsChunkName = 'polyfills-es5';\n                entryPoints[polyfillsChunkName] = [path.join(__dirname, '..', 'es5-polyfills.js')];\n                if (differentialLoadingMode) {\n                    // Add zone.js legacy support to the es5 polyfills\n                    // This is a noop execution-wise if zone-evergreen is not used.\n                    entryPoints[polyfillsChunkName].push('zone.js/dist/zone-legacy');\n                    // Since the chunkFileName option schema does not allow the function overload, add a plugin\n                    // that changes the name of the ES5 polyfills chunk to not include ES2015.\n                    extraPlugins.push({\n                        apply(compiler) {\n                            compiler.hooks.compilation.tap('build-angular', compilation => {\n                                const assetPath = (filename, data) => {\n                                    var _a;\n                                    const assetName = typeof filename === 'function' ? filename(data) : filename;\n                                    const isMap = assetName === null || assetName === void 0 ? void 0 : assetName.endsWith('.map');\n                                    return ((_a = data.chunk) === null || _a === void 0 ? void 0 : _a.name) === 'polyfills-es5'\n                                        ? `polyfills-es5${hashFormat.chunk}.js${isMap ? '.map' : ''}`\n                                        : assetName;\n                                };\n                                if (webpack_version_1.isWebpackFiveOrHigher()) {\n                                    compilation.hooks.assetPath.tap('remove-hash-plugin', assetPath);\n                                }\n                                else {\n                                    const mainTemplate = compilation.mainTemplate;\n                                    mainTemplate.hooks.assetPath.tap('build-angular', assetPath);\n                                }\n                            });\n                        },\n                    });\n                }\n                if (!buildOptions.aot) {\n                    if (differentialLoadingMode) {\n                        entryPoints[polyfillsChunkName].push(path.join(__dirname, '..', 'jit-polyfills.js'));\n                    }\n                    entryPoints[polyfillsChunkName].push(path.join(__dirname, '..', 'es5-jit-polyfills.js'));\n                }\n                // If not performing a full differential build the polyfills need to be added to ES5 bundle\n                if (buildOptions.polyfills) {\n                    entryPoints[polyfillsChunkName].push(path.resolve(root, buildOptions.polyfills));\n                }\n            }\n        }\n        if (buildOptions.polyfills) {\n            const projectPolyfills = path.resolve(root, buildOptions.polyfills);\n            if (entryPoints['polyfills']) {\n                entryPoints['polyfills'].push(projectPolyfills);\n            }\n            else {\n                entryPoints['polyfills'] = [projectPolyfills];\n            }\n        }\n        if (!buildOptions.aot) {\n            const jitPolyfills = path.join(__dirname, '..', 'jit-polyfills.js');\n            if (entryPoints['polyfills']) {\n                entryPoints['polyfills'].push(jitPolyfills);\n            }\n            else {\n                entryPoints['polyfills'] = [jitPolyfills];\n            }\n        }\n    }\n    if (environment_options_1.profilingEnabled) {\n        extraPlugins.push(new webpack_1.debug.ProfilingPlugin({\n            outputPath: path.resolve(root, 'chrome-profiler-events.json'),\n        }));\n    }\n    // process global scripts\n    const globalScriptsByBundleName = helpers_1.normalizeExtraEntryPoints(buildOptions.scripts, 'scripts').reduce((prev, curr) => {\n        const { bundleName, inject, input } = curr;\n        let resolvedPath = path.resolve(root, input);\n        if (!fs_1.existsSync(resolvedPath)) {\n            try {\n                resolvedPath = require.resolve(input, { paths: [root] });\n            }\n            catch (_a) {\n                throw new Error(`Script file ${input} does not exist.`);\n            }\n        }\n        const existingEntry = prev.find(el => el.bundleName === bundleName);\n        if (existingEntry) {\n            if (existingEntry.inject && !inject) {\n                // All entries have to be lazy for the bundle to be lazy.\n                throw new Error(`The ${bundleName} bundle is mixing injected and non-injected scripts.`);\n            }\n            existingEntry.paths.push(resolvedPath);\n        }\n        else {\n            prev.push({\n                bundleName,\n                inject,\n                paths: [resolvedPath],\n            });\n        }\n        return prev;\n    }, []);\n    // Add a new asset for each entry.\n    for (const script of globalScriptsByBundleName) {\n        // Lazy scripts don't get a hash, otherwise they can't be loaded by name.\n        const hash = script.inject ? hashFormat.script : '';\n        const bundleName = script.bundleName;\n        extraPlugins.push(new plugins_1.ScriptsWebpackPlugin({\n            name: bundleName,\n            sourceMap: scriptsSourceMap,\n            filename: `${path.basename(bundleName)}${hash}.js`,\n            scripts: script.paths,\n            basePath: projectRoot,\n        }));\n    }\n    // process asset entries\n    if (buildOptions.assets.length) {\n        const copyWebpackPluginPatterns = buildOptions.assets.map((asset) => {\n            // Resolve input paths relative to workspace root and add slash at the end.\n            // tslint:disable-next-line: prefer-const\n            let { input, output, ignore = [], glob } = asset;\n            input = path.resolve(root, input).replace(/\\\\/g, '/');\n            input = input.endsWith('/') ? input : input + '/';\n            output = output.endsWith('/') ? output : output + '/';\n            if (output.startsWith('..')) {\n                throw new Error('An asset cannot be written to a location outside of the output path.');\n            }\n            return {\n                context: input,\n                // Now we remove starting slash to make Webpack place it from the output root.\n                to: output.replace(/^\\//, ''),\n                from: glob,\n                noErrorOnMissing: true,\n                force: true,\n                globOptions: {\n                    dot: true,\n                    ignore: [\n                        '.gitkeep',\n                        '**/.DS_Store',\n                        '**/Thumbs.db',\n                        // Negate patterns needs to be absolute because copy-webpack-plugin uses absolute globs which\n                        // causes negate patterns not to match.\n                        // See: https://github.com/webpack-contrib/copy-webpack-plugin/issues/498#issuecomment-639327909\n                        ...ignore,\n                    ].map(i => path.posix.join(input, i)),\n                },\n            };\n        });\n        extraPlugins.push(new CopyWebpackPlugin({\n            patterns: copyWebpackPluginPatterns,\n        }));\n    }\n    if (buildOptions.progress) {\n        const ProgressPlugin = require('webpack/lib/ProgressPlugin');\n        const spinner = new spinner_1.Spinner();\n        extraPlugins.push(new ProgressPlugin({\n            handler: (percentage, message) => {\n                switch (percentage) {\n                    case 0:\n                        spinner.start(`Generating ${platform} application bundles...`);\n                        break;\n                    case 1:\n                        spinner.succeed(`${platform.replace(/^\\w/, s => s.toUpperCase())} application bundle generation complete.`);\n                        break;\n                    default:\n                        spinner.text = `Generating ${platform} application bundles (phase: ${message})...`;\n                        break;\n                }\n            },\n        }));\n    }\n    if (buildOptions.showCircularDependencies) {\n        const CircularDependencyPlugin = require('circular-dependency-plugin');\n        extraPlugins.push(new CircularDependencyPlugin({\n            exclude: /([\\\\\\/]node_modules[\\\\\\/])|(ngfactory\\.js$)/,\n        }));\n    }\n    if (buildOptions.statsJson) {\n        extraPlugins.push(new (class {\n            apply(compiler) {\n                compiler.hooks.emit.tap('angular-cli-stats', compilation => {\n                    const data = JSON.stringify(compilation.getStats().toJson('verbose'), undefined, 2);\n                    compilation.assets['stats.json'] = new webpack_sources_1.RawSource(data);\n                });\n            }\n        })());\n    }\n    if (buildOptions.namedChunks && !webpack_version_1.isWebpackFiveOrHigher()) {\n        extraPlugins.push(new plugins_1.NamedLazyChunksPlugin());\n    }\n    if (!differentialLoadingMode) {\n        // Budgets are computed after differential builds, not via a plugin.\n        // https://github.com/angular/angular-cli/blob/master/packages/angular_devkit/build_angular/src/browser/index.ts\n        extraPlugins.push(new plugins_1.BundleBudgetPlugin({ budgets: buildOptions.budgets }));\n    }\n    if ((scriptsSourceMap || stylesSourceMap) && vendorSourceMap) {\n        extraRules.push({\n            test: /\\.m?js$/,\n            exclude: /(ngfactory|ngstyle)\\.js$/,\n            enforce: 'pre',\n            loader: require.resolve('source-map-loader'),\n        });\n    }\n    let buildOptimizerUseRule = [];\n    if (buildOptions.buildOptimizer) {\n        extraPlugins.push(new build_optimizer_1.BuildOptimizerWebpackPlugin());\n        buildOptimizerUseRule = [\n            {\n                loader: build_optimizer_1.buildOptimizerLoaderPath,\n                options: { sourceMap: scriptsSourceMap },\n            },\n        ];\n    }\n    const extraMinimizers = [];\n    if (stylesOptimization) {\n        extraMinimizers.push(new plugins_1.OptimizeCssWebpackPlugin({\n            sourceMap: stylesSourceMap,\n            // component styles retain their original file name\n            test: file => /\\.(?:css|scss|sass|less|styl)$/.test(file),\n        }));\n    }\n    if (scriptsOptimization) {\n        const { GLOBAL_DEFS_FOR_TERSER, GLOBAL_DEFS_FOR_TERSER_WITH_AOT } = require('@angular/compiler-cli');\n        const angularGlobalDefinitions = buildOptions.aot\n            ? GLOBAL_DEFS_FOR_TERSER_WITH_AOT\n            : GLOBAL_DEFS_FOR_TERSER;\n        // TODO: Investigate why this fails for some packages: wco.supportES2015 ? 6 : 5;\n        const terserEcma = 5;\n        const terserOptions = {\n            warnings: !!buildOptions.verbose,\n            safari10: true,\n            output: {\n                ecma: terserEcma,\n                // For differential loading, this is handled in the bundle processing.\n                // This should also work with just true but the experimental rollup support breaks without this check.\n                ascii_only: !differentialLoadingMode,\n                // default behavior (undefined value) is to keep only important comments (licenses, etc.)\n                comments: !buildOptions.extractLicenses && undefined,\n                webkit: true,\n                beautify: environment_options_1.shouldBeautify,\n                wrap_func_args: false,\n            },\n            // On server, we don't want to compress anything. We still set the ngDevMode = false for it\n            // to remove dev code, and ngI18nClosureMode to remove Closure compiler i18n code\n            compress: environment_options_1.allowMinify &&\n                (platform === 'server'\n                    ? {\n                        ecma: terserEcma,\n                        global_defs: angularGlobalDefinitions,\n                        keep_fnames: true,\n                    }\n                    : {\n                        ecma: terserEcma,\n                        pure_getters: buildOptions.buildOptimizer,\n                        // PURE comments work best with 3 passes.\n                        // See https://github.com/webpack/webpack/issues/2899#issuecomment-317425926.\n                        passes: buildOptions.buildOptimizer ? 3 : 1,\n                        global_defs: angularGlobalDefinitions,\n                        pure_funcs: ['forwardRef'],\n                    }),\n            // We also want to avoid mangling on server.\n            // Name mangling is handled within the browser builder\n            mangle: environment_options_1.allowMangle && platform !== 'server' && !differentialLoadingMode,\n        };\n        const globalScriptsNames = globalScriptsByBundleName.map(s => s.bundleName);\n        extraMinimizers.push(new TerserPlugin({\n            sourceMap: scriptsSourceMap,\n            parallel: utils_1.maxWorkers,\n            cache: !environment_options_1.cachingDisabled && cache_path_1.findCachePath('terser-webpack'),\n            extractComments: false,\n            exclude: globalScriptsNames,\n            terserOptions,\n        }), \n        // Script bundles are fully optimized here in one step since they are never downleveled.\n        // They are shared between ES2015 & ES5 outputs so must support ES5.\n        new TerserPlugin({\n            sourceMap: scriptsSourceMap,\n            parallel: utils_1.maxWorkers,\n            cache: !environment_options_1.cachingDisabled && cache_path_1.findCachePath('terser-webpack'),\n            extractComments: false,\n            include: globalScriptsNames,\n            terserOptions: {\n                ...terserOptions,\n                compress: environment_options_1.allowMinify && {\n                    ...terserOptions.compress,\n                    ecma: 5,\n                },\n                output: {\n                    ...terserOptions.output,\n                    ecma: 5,\n                },\n                mangle: environment_options_1.allowMangle && platform !== 'server',\n            },\n        }));\n    }\n    return {\n        mode: scriptsOptimization || stylesOptimization ? 'production' : 'development',\n        devtool: false,\n        profile: buildOptions.statsJson,\n        resolve: {\n            roots: [projectRoot],\n            extensions: ['.ts', '.tsx', '.mjs', '.js'],\n            symlinks: !buildOptions.preserveSymlinks,\n            modules: [wco.tsConfig.options.baseUrl || projectRoot, 'node_modules'],\n            plugins: webpack_version_1.isWebpackFiveOrHigher() ? [] : [PnpWebpackPlugin],\n        },\n        resolveLoader: {\n            symlinks: !buildOptions.preserveSymlinks,\n            modules: [\n                // Allow loaders to be in a node_modules nested inside the devkit/build-angular package.\n                // This is important in case loaders do not get hoisted.\n                // If this file moves to another location, alter potentialNodeModules as well.\n                'node_modules',\n                ...find_up_1.findAllNodeModules(__dirname, projectRoot),\n            ],\n            plugins: webpack_version_1.isWebpackFiveOrHigher() ? [] : [PnpWebpackPlugin.moduleLoader(module)],\n        },\n        context: root,\n        entry: entryPoints,\n        output: {\n            ...webpack_version_1.withWebpackFourOrFive({ futureEmitAssets: true }, {}),\n            path: path.resolve(root, buildOptions.outputPath),\n            publicPath: buildOptions.deployUrl,\n            filename: `[name]${targetInFileName}${hashFormat.chunk}.js`,\n        },\n        watch: buildOptions.watch,\n        watchOptions: helpers_1.getWatchOptions(buildOptions.poll),\n        performance: {\n            hints: false,\n        },\n        module: {\n            // Show an error for missing exports instead of a warning.\n            strictExportPresence: true,\n            rules: [\n                {\n                    test: /\\.(eot|svg|cur|jpg|png|webp|gif|otf|ttf|woff|woff2|ani|avif)$/,\n                    loader: require.resolve('file-loader'),\n                    options: {\n                        name: `[name]${hashFormat.file}.[ext]`,\n                        // Re-use emitted files from browser builder on the server.\n                        emitFile: platform !== 'server',\n                    },\n                },\n                {\n                    // Mark files inside `@angular/core` as using SystemJS style dynamic imports.\n                    // Removing this will cause deprecation warnings to appear.\n                    test: /[\\/\\\\]@angular[\\/\\\\]core[\\/\\\\].+\\.js$/,\n                    parser: { system: true },\n                },\n                {\n                    // Mark files inside `rxjs/add` as containing side effects.\n                    // If this is fixed upstream and the fixed version becomes the minimum\n                    // supported version, this can be removed.\n                    test: /[\\/\\\\]rxjs[\\/\\\\]add[\\/\\\\].+\\.js$/,\n                    sideEffects: true,\n                },\n                {\n                    test: /\\.m?js$/,\n                    exclude: [/[\\/\\\\](?:core-js|\\@babel|tslib|web-animations-js)[\\/\\\\]/, /(ngfactory|ngstyle)\\.js$/],\n                    use: [\n                        ...(wco.supportES2015\n                            ? []\n                            : [\n                                {\n                                    loader: require.resolve('babel-loader'),\n                                    options: {\n                                        babelrc: false,\n                                        configFile: false,\n                                        compact: false,\n                                        cacheCompression: false,\n                                        cacheDirectory: cache_path_1.findCachePath('babel-webpack'),\n                                        cacheIdentifier: JSON.stringify({\n                                            buildAngular: require('../../../package.json').version,\n                                        }),\n                                        sourceType: 'unambiguous',\n                                        presets: [\n                                            [\n                                                require.resolve('@babel/preset-env'),\n                                                {\n                                                    bugfixes: true,\n                                                    modules: false,\n                                                    // Comparable behavior to tsconfig target of ES5\n                                                    targets: { ie: 9 },\n                                                    exclude: ['transform-typeof-symbol'],\n                                                },\n                                            ],\n                                        ],\n                                        plugins: [\n                                            [\n                                                require('@babel/plugin-transform-runtime').default,\n                                                {\n                                                    useESModules: true,\n                                                    version: require('@babel/runtime/package.json').version,\n                                                    absoluteRuntime: path.dirname(require.resolve('@babel/runtime/package.json')),\n                                                },\n                                            ],\n                                        ],\n                                    },\n                                },\n                            ]),\n                        ...buildOptimizerUseRule,\n                    ],\n                },\n                ...extraRules,\n            ],\n        },\n        optimization: {\n            minimizer: extraMinimizers,\n            moduleIds: webpack_version_1.withWebpackFourOrFive('hashed', 'deterministic'),\n            ...webpack_version_1.withWebpackFourOrFive({}, buildOptions.namedChunks ? { chunkIds: 'named' } : {}),\n            ...webpack_version_1.withWebpackFourOrFive({ noEmitOnErrors: true }, { emitOnErrors: false }),\n        },\n        // TODO_WEBPACK_5: Investigate non-working cache in development builds\n        ...webpack_version_1.withWebpackFourOrFive({}, { cache: false }),\n        plugins: [\n            // Always replace the context for the System.import in angular/core to prevent warnings.\n            // https://github.com/angular/angular/issues/11580\n            // With VE the correct context is added in @ngtools/webpack, but Ivy doesn't need it at all.\n            new webpack_1.ContextReplacementPlugin(/\\@angular(\\\\|\\/)core(\\\\|\\/)/),\n            new plugins_1.DedupeModuleResolvePlugin({ verbose: buildOptions.verbose }),\n            ...extraPlugins,\n        ],\n    };\n}\nexports.getCommonConfig = getCommonConfig;\n"]},"metadata":{},"sourceType":"script"}