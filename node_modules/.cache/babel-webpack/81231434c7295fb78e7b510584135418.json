{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _toConsumableArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _slicedToArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _asyncToGenerator = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadConfig = loadConfig;\nexports.getPostcssOptions = getPostcssOptions;\nexports.exec = exec;\nexports.normalizeSourceMap = normalizeSourceMap;\nexports.normalizeSourceMapAfterPostcss = normalizeSourceMapAfterPostcss;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _module = _interopRequireDefault(require(\"module\"));\n\nvar _full = require(\"klona/full\");\n\nvar _cosmiconfig = require(\"cosmiconfig\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar parentModule = module;\n\nvar stat = function stat(inputFileSystem, filePath) {\n  return new Promise(function (resolve, reject) {\n    inputFileSystem.stat(filePath, function (err, stats) {\n      if (err) {\n        reject(err);\n      }\n\n      resolve(stats);\n    });\n  });\n};\n\nfunction exec(code, loaderContext) {\n  var resource = loaderContext.resource,\n      context = loaderContext.context;\n  var module = new _module.default(resource, parentModule); // eslint-disable-next-line no-underscore-dangle\n\n  module.paths = _module.default._nodeModulePaths(context);\n  module.filename = resource; // eslint-disable-next-line no-underscore-dangle\n\n  module._compile(code, resource);\n\n  return module.exports;\n}\n\nfunction loadConfig(_x, _x2) {\n  return _loadConfig.apply(this, arguments);\n}\n\nfunction _loadConfig() {\n  _loadConfig = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(loaderContext, config) {\n    var searchPath, stats, explorer, result, api;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            searchPath = typeof config === 'string' ? _path.default.resolve(config) : _path.default.dirname(loaderContext.resourcePath);\n            _context.prev = 1;\n            _context.next = 4;\n            return stat(loaderContext.fs, searchPath);\n\n          case 4:\n            stats = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](1);\n            throw new Error(\"No PostCSS config found in: \".concat(searchPath));\n\n          case 10:\n            explorer = (0, _cosmiconfig.cosmiconfig)('postcss');\n            _context.prev = 11;\n\n            if (!stats.isFile()) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 15;\n            return explorer.load(searchPath);\n\n          case 15:\n            result = _context.sent;\n            _context.next = 21;\n            break;\n\n          case 18:\n            _context.next = 20;\n            return explorer.search(searchPath);\n\n          case 20:\n            result = _context.sent;\n\n          case 21:\n            _context.next = 26;\n            break;\n\n          case 23:\n            _context.prev = 23;\n            _context.t1 = _context[\"catch\"](11);\n            throw _context.t1;\n\n          case 26:\n            if (result) {\n              _context.next = 28;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {});\n\n          case 28:\n            loaderContext.addDependency(result.filepath);\n\n            if (!result.isEmpty) {\n              _context.next = 31;\n              break;\n            }\n\n            return _context.abrupt(\"return\", result);\n\n          case 31:\n            if (typeof result.config === 'function') {\n              api = {\n                mode: loaderContext.mode,\n                file: loaderContext.resourcePath,\n                // For complex use\n                webpackLoaderContext: loaderContext\n              };\n              result.config = result.config(api);\n            }\n\n            result = (0, _full.klona)(result);\n            return _context.abrupt(\"return\", result);\n\n          case 34:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 7], [11, 23]]);\n  }));\n  return _loadConfig.apply(this, arguments);\n}\n\nfunction loadPlugin(plugin, options, file) {\n  try {\n    if (!options || Object.keys(options).length === 0) {\n      // eslint-disable-next-line global-require, import/no-dynamic-require\n      var _loadedPlugin = require(plugin);\n\n      if (_loadedPlugin.default) {\n        return _loadedPlugin.default;\n      }\n\n      return _loadedPlugin;\n    } // eslint-disable-next-line global-require, import/no-dynamic-require\n\n\n    var loadedPlugin = require(plugin);\n\n    if (loadedPlugin.default) {\n      return loadedPlugin.default(options);\n    }\n\n    return loadedPlugin(options);\n  } catch (error) {\n    throw new Error(\"Loading PostCSS \\\"\".concat(plugin, \"\\\" plugin failed: \").concat(error.message, \"\\n\\n(@\").concat(file, \")\"));\n  }\n}\n\nfunction pluginFactory() {\n  var listOfPlugins = new Map();\n  return function (plugins) {\n    if (typeof plugins === 'undefined') {\n      return listOfPlugins;\n    }\n\n    if (Array.isArray(plugins)) {\n      var _iterator = _createForOfIteratorHelper(plugins),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var plugin = _step.value;\n\n          if (Array.isArray(plugin)) {\n            var _plugin = _slicedToArray(plugin, 2),\n                name = _plugin[0],\n                options = _plugin[1];\n\n            listOfPlugins.set(name, options);\n          } else if (plugin && typeof plugin === 'function') {\n            listOfPlugins.set(plugin);\n          } else if (plugin && Object.keys(plugin).length === 1 && (typeof plugin[Object.keys(plugin)[0]] === 'object' || typeof plugin[Object.keys(plugin)[0]] === 'boolean') && plugin[Object.keys(plugin)[0]] !== null) {\n            var _Object$keys = Object.keys(plugin),\n                _Object$keys2 = _slicedToArray(_Object$keys, 1),\n                _name = _Object$keys2[0];\n\n            var _options = plugin[_name];\n\n            if (_options === false) {\n              listOfPlugins.delete(_name);\n            } else {\n              listOfPlugins.set(_name, _options);\n            }\n          } else if (plugin) {\n            listOfPlugins.set(plugin);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    } else {\n      var objectPlugins = Object.entries(plugins);\n\n      for (var _i = 0, _objectPlugins = objectPlugins; _i < _objectPlugins.length; _i++) {\n        var _objectPlugins$_i = _slicedToArray(_objectPlugins[_i], 2),\n            _name2 = _objectPlugins$_i[0],\n            _options2 = _objectPlugins$_i[1];\n\n        if (_options2 === false) {\n          listOfPlugins.delete(_name2);\n        } else {\n          listOfPlugins.set(_name2, _options2);\n        }\n      }\n    }\n\n    return listOfPlugins;\n  };\n}\n\nfunction getPostcssOptions(loaderContext) {\n  var loadedConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var postcssOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var file = loaderContext.resourcePath;\n  var normalizedPostcssOptions = postcssOptions;\n\n  if (typeof normalizedPostcssOptions === 'function') {\n    normalizedPostcssOptions = normalizedPostcssOptions(loaderContext);\n  }\n\n  var plugins = [];\n\n  try {\n    var factory = pluginFactory();\n\n    if (loadedConfig.config && loadedConfig.config.plugins) {\n      factory(loadedConfig.config.plugins);\n    }\n\n    factory(normalizedPostcssOptions.plugins);\n    plugins = _toConsumableArray(factory()).map(function (item) {\n      var _item = _slicedToArray(item, 2),\n          plugin = _item[0],\n          options = _item[1];\n\n      if (typeof plugin === 'string') {\n        return loadPlugin(plugin, options, file);\n      }\n\n      return plugin;\n    });\n  } catch (error) {\n    loaderContext.emitError(error);\n  }\n\n  var processOptionsFromConfig = loadedConfig.config || {};\n\n  if (processOptionsFromConfig.from) {\n    processOptionsFromConfig.from = _path.default.resolve(_path.default.dirname(loadedConfig.filepath), processOptionsFromConfig.from);\n  }\n\n  if (processOptionsFromConfig.to) {\n    processOptionsFromConfig.to = _path.default.resolve(_path.default.dirname(loadedConfig.filepath), processOptionsFromConfig.to);\n  } // No need them for processOptions\n\n\n  delete processOptionsFromConfig.plugins;\n  var processOptionsFromOptions = (0, _full.klona)(normalizedPostcssOptions);\n\n  if (processOptionsFromOptions.from) {\n    processOptionsFromOptions.from = _path.default.resolve(loaderContext.rootContext, processOptionsFromOptions.from);\n  }\n\n  if (processOptionsFromOptions.to) {\n    processOptionsFromOptions.to = _path.default.resolve(loaderContext.rootContext, processOptionsFromOptions.to);\n  } // No need them for processOptions\n\n\n  delete processOptionsFromOptions.config;\n  delete processOptionsFromOptions.plugins;\n\n  var processOptions = _objectSpread(_objectSpread({\n    from: file,\n    to: file,\n    map: false\n  }, processOptionsFromConfig), processOptionsFromOptions);\n\n  if (typeof processOptions.parser === 'string') {\n    try {\n      // eslint-disable-next-line import/no-dynamic-require, global-require\n      processOptions.parser = require(processOptions.parser);\n    } catch (error) {\n      loaderContext.emitError(new Error(\"Loading PostCSS \\\"\".concat(processOptions.parser, \"\\\" parser failed: \").concat(error.message, \"\\n\\n(@\").concat(file, \")\")));\n    }\n  }\n\n  if (typeof processOptions.stringifier === 'string') {\n    try {\n      // eslint-disable-next-line import/no-dynamic-require, global-require\n      processOptions.stringifier = require(processOptions.stringifier);\n    } catch (error) {\n      loaderContext.emitError(new Error(\"Loading PostCSS \\\"\".concat(processOptions.stringifier, \"\\\" stringifier failed: \").concat(error.message, \"\\n\\n(@\").concat(file, \")\")));\n    }\n  }\n\n  if (typeof processOptions.syntax === 'string') {\n    try {\n      // eslint-disable-next-line import/no-dynamic-require, global-require\n      processOptions.syntax = require(processOptions.syntax);\n    } catch (error) {\n      loaderContext.emitError(new Error(\"Loading PostCSS \\\"\".concat(processOptions.syntax, \"\\\" syntax failed: \").concat(error.message, \"\\n\\n(@\").concat(file, \")\")));\n    }\n  }\n\n  if (processOptions.map === true) {\n    // https://github.com/postcss/postcss/blob/master/docs/source-maps.md\n    processOptions.map = {\n      inline: true\n    };\n  }\n\n  return {\n    plugins: plugins,\n    processOptions: processOptions\n  };\n}\n\nvar IS_NATIVE_WIN32_PATH = /^[a-z]:[/\\\\]|^\\\\\\\\/i;\nvar ABSOLUTE_SCHEME = /^[a-z0-9+\\-.]+:/i;\n\nfunction getURLType(source) {\n  if (source[0] === '/') {\n    if (source[1] === '/') {\n      return 'scheme-relative';\n    }\n\n    return 'path-absolute';\n  }\n\n  if (IS_NATIVE_WIN32_PATH.test(source)) {\n    return 'path-absolute';\n  }\n\n  return ABSOLUTE_SCHEME.test(source) ? 'absolute' : 'path-relative';\n}\n\nfunction normalizeSourceMap(map, resourceContext) {\n  var newMap = map; // Some loader emit source map as string\n  // Strip any JSON XSSI avoidance prefix from the string (as documented in the source maps specification), and then parse the string as JSON.\n\n  if (typeof newMap === 'string') {\n    newMap = JSON.parse(newMap);\n  }\n\n  delete newMap.file;\n  var _newMap = newMap,\n      sourceRoot = _newMap.sourceRoot;\n  delete newMap.sourceRoot;\n\n  if (newMap.sources) {\n    newMap.sources = newMap.sources.map(function (source) {\n      var sourceType = getURLType(source); // Do no touch `scheme-relative` and `absolute` URLs\n\n      if (sourceType === 'path-relative' || sourceType === 'path-absolute') {\n        var absoluteSource = sourceType === 'path-relative' && sourceRoot ? _path.default.resolve(sourceRoot, _path.default.normalize(source)) : _path.default.normalize(source);\n        return _path.default.relative(resourceContext, absoluteSource);\n      }\n\n      return source;\n    });\n  }\n\n  return newMap;\n}\n\nfunction normalizeSourceMapAfterPostcss(map, resourceContext) {\n  var newMap = map; // result.map.file is an optional property that provides the output filename.\n  // Since we don't know the final filename in the webpack build chain yet, it makes no sense to have it.\n  // eslint-disable-next-line no-param-reassign\n\n  delete newMap.file; // eslint-disable-next-line no-param-reassign\n\n  newMap.sourceRoot = ''; // eslint-disable-next-line no-param-reassign\n\n  newMap.sources = newMap.sources.map(function (source) {\n    if (source.indexOf('<') === 0) {\n      return source;\n    }\n\n    var sourceType = getURLType(source); // Do no touch `scheme-relative`, `path-absolute` and `absolute` types\n\n    if (sourceType === 'path-relative') {\n      return _path.default.resolve(resourceContext, source);\n    }\n\n    return source;\n  });\n  return newMap;\n}","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/postcss-loader/dist/utils.js"],"names":["Object","defineProperty","exports","value","loadConfig","getPostcssOptions","exec","normalizeSourceMap","normalizeSourceMapAfterPostcss","_path","_interopRequireDefault","require","_module","_full","_cosmiconfig","obj","__esModule","default","parentModule","module","stat","inputFileSystem","filePath","Promise","resolve","reject","err","stats","code","loaderContext","resource","context","paths","_nodeModulePaths","filename","_compile","config","searchPath","dirname","resourcePath","fs","Error","explorer","cosmiconfig","isFile","load","result","search","addDependency","filepath","isEmpty","api","mode","file","webpackLoaderContext","klona","loadPlugin","plugin","options","keys","length","loadedPlugin","error","message","pluginFactory","listOfPlugins","Map","plugins","Array","isArray","name","set","delete","objectPlugins","entries","loadedConfig","postcssOptions","normalizedPostcssOptions","factory","map","item","emitError","processOptionsFromConfig","from","to","processOptionsFromOptions","rootContext","processOptions","parser","stringifier","syntax","inline","IS_NATIVE_WIN32_PATH","ABSOLUTE_SCHEME","getURLType","source","test","resourceContext","newMap","JSON","parse","sourceRoot","sources","sourceType","absoluteSource","normalize","relative","indexOf"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadConfig = loadConfig;\nexports.getPostcssOptions = getPostcssOptions;\nexports.exec = exec;\nexports.normalizeSourceMap = normalizeSourceMap;\nexports.normalizeSourceMapAfterPostcss = normalizeSourceMapAfterPostcss;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _module = _interopRequireDefault(require(\"module\"));\n\nvar _full = require(\"klona/full\");\n\nvar _cosmiconfig = require(\"cosmiconfig\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst parentModule = module;\n\nconst stat = (inputFileSystem, filePath) => new Promise((resolve, reject) => {\n  inputFileSystem.stat(filePath, (err, stats) => {\n    if (err) {\n      reject(err);\n    }\n\n    resolve(stats);\n  });\n});\n\nfunction exec(code, loaderContext) {\n  const {\n    resource,\n    context\n  } = loaderContext;\n  const module = new _module.default(resource, parentModule); // eslint-disable-next-line no-underscore-dangle\n\n  module.paths = _module.default._nodeModulePaths(context);\n  module.filename = resource; // eslint-disable-next-line no-underscore-dangle\n\n  module._compile(code, resource);\n\n  return module.exports;\n}\n\nasync function loadConfig(loaderContext, config) {\n  const searchPath = typeof config === 'string' ? _path.default.resolve(config) : _path.default.dirname(loaderContext.resourcePath);\n  let stats;\n\n  try {\n    stats = await stat(loaderContext.fs, searchPath);\n  } catch (errorIgnore) {\n    throw new Error(`No PostCSS config found in: ${searchPath}`);\n  }\n\n  const explorer = (0, _cosmiconfig.cosmiconfig)('postcss');\n  let result;\n\n  try {\n    if (stats.isFile()) {\n      result = await explorer.load(searchPath);\n    } else {\n      result = await explorer.search(searchPath);\n    }\n  } catch (error) {\n    throw error;\n  }\n\n  if (!result) {\n    return {};\n  }\n\n  loaderContext.addDependency(result.filepath);\n\n  if (result.isEmpty) {\n    return result;\n  }\n\n  if (typeof result.config === 'function') {\n    const api = {\n      mode: loaderContext.mode,\n      file: loaderContext.resourcePath,\n      // For complex use\n      webpackLoaderContext: loaderContext\n    };\n    result.config = result.config(api);\n  }\n\n  result = (0, _full.klona)(result);\n  return result;\n}\n\nfunction loadPlugin(plugin, options, file) {\n  try {\n    if (!options || Object.keys(options).length === 0) {\n      // eslint-disable-next-line global-require, import/no-dynamic-require\n      const loadedPlugin = require(plugin);\n\n      if (loadedPlugin.default) {\n        return loadedPlugin.default;\n      }\n\n      return loadedPlugin;\n    } // eslint-disable-next-line global-require, import/no-dynamic-require\n\n\n    const loadedPlugin = require(plugin);\n\n    if (loadedPlugin.default) {\n      return loadedPlugin.default(options);\n    }\n\n    return loadedPlugin(options);\n  } catch (error) {\n    throw new Error(`Loading PostCSS \"${plugin}\" plugin failed: ${error.message}\\n\\n(@${file})`);\n  }\n}\n\nfunction pluginFactory() {\n  const listOfPlugins = new Map();\n  return plugins => {\n    if (typeof plugins === 'undefined') {\n      return listOfPlugins;\n    }\n\n    if (Array.isArray(plugins)) {\n      for (const plugin of plugins) {\n        if (Array.isArray(plugin)) {\n          const [name, options] = plugin;\n          listOfPlugins.set(name, options);\n        } else if (plugin && typeof plugin === 'function') {\n          listOfPlugins.set(plugin);\n        } else if (plugin && Object.keys(plugin).length === 1 && (typeof plugin[Object.keys(plugin)[0]] === 'object' || typeof plugin[Object.keys(plugin)[0]] === 'boolean') && plugin[Object.keys(plugin)[0]] !== null) {\n          const [name] = Object.keys(plugin);\n          const options = plugin[name];\n\n          if (options === false) {\n            listOfPlugins.delete(name);\n          } else {\n            listOfPlugins.set(name, options);\n          }\n        } else if (plugin) {\n          listOfPlugins.set(plugin);\n        }\n      }\n    } else {\n      const objectPlugins = Object.entries(plugins);\n\n      for (const [name, options] of objectPlugins) {\n        if (options === false) {\n          listOfPlugins.delete(name);\n        } else {\n          listOfPlugins.set(name, options);\n        }\n      }\n    }\n\n    return listOfPlugins;\n  };\n}\n\nfunction getPostcssOptions(loaderContext, loadedConfig = {}, postcssOptions = {}) {\n  const file = loaderContext.resourcePath;\n  let normalizedPostcssOptions = postcssOptions;\n\n  if (typeof normalizedPostcssOptions === 'function') {\n    normalizedPostcssOptions = normalizedPostcssOptions(loaderContext);\n  }\n\n  let plugins = [];\n\n  try {\n    const factory = pluginFactory();\n\n    if (loadedConfig.config && loadedConfig.config.plugins) {\n      factory(loadedConfig.config.plugins);\n    }\n\n    factory(normalizedPostcssOptions.plugins);\n    plugins = [...factory()].map(item => {\n      const [plugin, options] = item;\n\n      if (typeof plugin === 'string') {\n        return loadPlugin(plugin, options, file);\n      }\n\n      return plugin;\n    });\n  } catch (error) {\n    loaderContext.emitError(error);\n  }\n\n  const processOptionsFromConfig = loadedConfig.config || {};\n\n  if (processOptionsFromConfig.from) {\n    processOptionsFromConfig.from = _path.default.resolve(_path.default.dirname(loadedConfig.filepath), processOptionsFromConfig.from);\n  }\n\n  if (processOptionsFromConfig.to) {\n    processOptionsFromConfig.to = _path.default.resolve(_path.default.dirname(loadedConfig.filepath), processOptionsFromConfig.to);\n  } // No need them for processOptions\n\n\n  delete processOptionsFromConfig.plugins;\n  const processOptionsFromOptions = (0, _full.klona)(normalizedPostcssOptions);\n\n  if (processOptionsFromOptions.from) {\n    processOptionsFromOptions.from = _path.default.resolve(loaderContext.rootContext, processOptionsFromOptions.from);\n  }\n\n  if (processOptionsFromOptions.to) {\n    processOptionsFromOptions.to = _path.default.resolve(loaderContext.rootContext, processOptionsFromOptions.to);\n  } // No need them for processOptions\n\n\n  delete processOptionsFromOptions.config;\n  delete processOptionsFromOptions.plugins;\n  const processOptions = {\n    from: file,\n    to: file,\n    map: false,\n    ...processOptionsFromConfig,\n    ...processOptionsFromOptions\n  };\n\n  if (typeof processOptions.parser === 'string') {\n    try {\n      // eslint-disable-next-line import/no-dynamic-require, global-require\n      processOptions.parser = require(processOptions.parser);\n    } catch (error) {\n      loaderContext.emitError(new Error(`Loading PostCSS \"${processOptions.parser}\" parser failed: ${error.message}\\n\\n(@${file})`));\n    }\n  }\n\n  if (typeof processOptions.stringifier === 'string') {\n    try {\n      // eslint-disable-next-line import/no-dynamic-require, global-require\n      processOptions.stringifier = require(processOptions.stringifier);\n    } catch (error) {\n      loaderContext.emitError(new Error(`Loading PostCSS \"${processOptions.stringifier}\" stringifier failed: ${error.message}\\n\\n(@${file})`));\n    }\n  }\n\n  if (typeof processOptions.syntax === 'string') {\n    try {\n      // eslint-disable-next-line import/no-dynamic-require, global-require\n      processOptions.syntax = require(processOptions.syntax);\n    } catch (error) {\n      loaderContext.emitError(new Error(`Loading PostCSS \"${processOptions.syntax}\" syntax failed: ${error.message}\\n\\n(@${file})`));\n    }\n  }\n\n  if (processOptions.map === true) {\n    // https://github.com/postcss/postcss/blob/master/docs/source-maps.md\n    processOptions.map = {\n      inline: true\n    };\n  }\n\n  return {\n    plugins,\n    processOptions\n  };\n}\n\nconst IS_NATIVE_WIN32_PATH = /^[a-z]:[/\\\\]|^\\\\\\\\/i;\nconst ABSOLUTE_SCHEME = /^[a-z0-9+\\-.]+:/i;\n\nfunction getURLType(source) {\n  if (source[0] === '/') {\n    if (source[1] === '/') {\n      return 'scheme-relative';\n    }\n\n    return 'path-absolute';\n  }\n\n  if (IS_NATIVE_WIN32_PATH.test(source)) {\n    return 'path-absolute';\n  }\n\n  return ABSOLUTE_SCHEME.test(source) ? 'absolute' : 'path-relative';\n}\n\nfunction normalizeSourceMap(map, resourceContext) {\n  let newMap = map; // Some loader emit source map as string\n  // Strip any JSON XSSI avoidance prefix from the string (as documented in the source maps specification), and then parse the string as JSON.\n\n  if (typeof newMap === 'string') {\n    newMap = JSON.parse(newMap);\n  }\n\n  delete newMap.file;\n  const {\n    sourceRoot\n  } = newMap;\n  delete newMap.sourceRoot;\n\n  if (newMap.sources) {\n    newMap.sources = newMap.sources.map(source => {\n      const sourceType = getURLType(source); // Do no touch `scheme-relative` and `absolute` URLs\n\n      if (sourceType === 'path-relative' || sourceType === 'path-absolute') {\n        const absoluteSource = sourceType === 'path-relative' && sourceRoot ? _path.default.resolve(sourceRoot, _path.default.normalize(source)) : _path.default.normalize(source);\n        return _path.default.relative(resourceContext, absoluteSource);\n      }\n\n      return source;\n    });\n  }\n\n  return newMap;\n}\n\nfunction normalizeSourceMapAfterPostcss(map, resourceContext) {\n  const newMap = map; // result.map.file is an optional property that provides the output filename.\n  // Since we don't know the final filename in the webpack build chain yet, it makes no sense to have it.\n  // eslint-disable-next-line no-param-reassign\n\n  delete newMap.file; // eslint-disable-next-line no-param-reassign\n\n  newMap.sourceRoot = ''; // eslint-disable-next-line no-param-reassign\n\n  newMap.sources = newMap.sources.map(source => {\n    if (source.indexOf('<') === 0) {\n      return source;\n    }\n\n    const sourceType = getURLType(source); // Do no touch `scheme-relative`, `path-absolute` and `absolute` types\n\n    if (sourceType === 'path-relative') {\n      return _path.default.resolve(resourceContext, source);\n    }\n\n    return source;\n  });\n  return newMap;\n}"]},"metadata":{},"sourceType":"script"}