{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar forEachBail = require(\"./forEachBail\");\n\nvar getPaths = require(\"./getPaths\");\n\nmodule.exports = /*#__PURE__*/function () {\n  function ModulesInHierachicDirectoriesPlugin(source, directories, target) {\n    _classCallCheck(this, ModulesInHierachicDirectoriesPlugin);\n\n    this.source = source;\n    this.directories = [].concat(directories);\n    this.target = target;\n  }\n\n  _createClass(ModulesInHierachicDirectoriesPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"ModulesInHierachicDirectoriesPlugin\", function (request, resolveContext, callback) {\n        var fs = resolver.fileSystem;\n        var addrs = getPaths(request.path).paths.map(function (p) {\n          return _this.directories.map(function (d) {\n            return resolver.join(p, d);\n          });\n        }).reduce(function (array, p) {\n          array.push.apply(array, p);\n          return array;\n        }, []);\n        forEachBail(addrs, function (addr, callback) {\n          fs.stat(addr, function (err, stat) {\n            if (!err && stat && stat.isDirectory()) {\n              var obj = Object.assign({}, request, {\n                path: addr,\n                request: \"./\" + request.request\n              });\n              var message = \"looking for modules in \" + addr;\n              return resolver.doResolve(target, obj, message, resolveContext, callback);\n            }\n\n            if (resolveContext.log) resolveContext.log(addr + \" doesn't exist or is not a directory\");\n            if (resolveContext.missing) resolveContext.missing.add(addr);\n            return callback();\n          });\n        }, callback);\n      });\n    }\n  }]);\n\n  return ModulesInHierachicDirectoriesPlugin;\n}();","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/node_modules/enhanced-resolve/lib/ModulesInHierachicDirectoriesPlugin.js"],"names":["forEachBail","require","getPaths","module","exports","source","directories","target","concat","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","fs","fileSystem","addrs","path","paths","map","p","d","join","reduce","array","push","apply","addr","stat","err","isDirectory","obj","Object","assign","message","doResolve","log","missing","add"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,IAAMA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAA3B;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAxB;;AAEAE,MAAM,CAACC,OAAP;AACC,+CAAYC,MAAZ,EAAoBC,WAApB,EAAiCC,MAAjC,EAAyC;AAAA;;AACxC,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,WAAL,GAAmB,GAAGE,MAAH,CAAUF,WAAV,CAAnB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA;;AALF;AAAA;AAAA,WAOC,eAAME,QAAN,EAAgB;AAAA;;AACf,UAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAT,CAAoB,KAAKH,MAAzB,CAAf;AACAE,MAAAA,QAAQ,CACNE,OADF,CACU,KAAKN,MADf,EAEEO,QAFF,CAGE,qCAHF,EAIE,UAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,EAAuC;AACtC,YAAMC,EAAE,GAAGP,QAAQ,CAACQ,UAApB;AACA,YAAMC,KAAK,GAAGhB,QAAQ,CAACW,OAAO,CAACM,IAAT,CAAR,CACZC,KADY,CACNC,GADM,CACF,UAAAC,CAAC,EAAI;AACf,iBAAO,KAAI,CAAChB,WAAL,CAAiBe,GAAjB,CAAqB,UAAAE,CAAC;AAAA,mBAAId,QAAQ,CAACe,IAAT,CAAcF,CAAd,EAAiBC,CAAjB,CAAJ;AAAA,WAAtB,CAAP;AACA,SAHY,EAIZE,MAJY,CAIL,UAACC,KAAD,EAAQJ,CAAR,EAAc;AACrBI,UAAAA,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiBF,KAAjB,EAAwBJ,CAAxB;AACA,iBAAOI,KAAP;AACA,SAPY,EAOV,EAPU,CAAd;AAQA1B,QAAAA,WAAW,CACVkB,KADU,EAEV,UAACW,IAAD,EAAOd,QAAP,EAAoB;AACnBC,UAAAA,EAAE,CAACc,IAAH,CAAQD,IAAR,EAAc,UAACE,GAAD,EAAMD,IAAN,EAAe;AAC5B,gBAAI,CAACC,GAAD,IAAQD,IAAR,IAAgBA,IAAI,CAACE,WAAL,EAApB,EAAwC;AACvC,kBAAMC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBtB,OAAlB,EAA2B;AACtCM,gBAAAA,IAAI,EAAEU,IADgC;AAEtChB,gBAAAA,OAAO,EAAE,OAAOA,OAAO,CAACA;AAFc,eAA3B,CAAZ;AAIA,kBAAMuB,OAAO,GAAG,4BAA4BP,IAA5C;AACA,qBAAOpB,QAAQ,CAAC4B,SAAT,CACN9B,MADM,EAEN0B,GAFM,EAGNG,OAHM,EAINtB,cAJM,EAKNC,QALM,CAAP;AAOA;;AACD,gBAAID,cAAc,CAACwB,GAAnB,EACCxB,cAAc,CAACwB,GAAf,CACCT,IAAI,GAAG,sCADR;AAGD,gBAAIf,cAAc,CAACyB,OAAnB,EAA4BzB,cAAc,CAACyB,OAAf,CAAuBC,GAAvB,CAA2BX,IAA3B;AAC5B,mBAAOd,QAAQ,EAAf;AACA,WArBD;AAsBA,SAzBS,EA0BVA,QA1BU,CAAX;AA4BA,OA1CH;AA4CA;AArDF;;AAAA;AAAA","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\nconst getPaths = require(\"./getPaths\");\n\nmodule.exports = class ModulesInHierachicDirectoriesPlugin {\n\tconstructor(source, directories, target) {\n\t\tthis.source = source;\n\t\tthis.directories = [].concat(directories);\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\n\t\t\t\t\"ModulesInHierachicDirectoriesPlugin\",\n\t\t\t\t(request, resolveContext, callback) => {\n\t\t\t\t\tconst fs = resolver.fileSystem;\n\t\t\t\t\tconst addrs = getPaths(request.path)\n\t\t\t\t\t\t.paths.map(p => {\n\t\t\t\t\t\t\treturn this.directories.map(d => resolver.join(p, d));\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.reduce((array, p) => {\n\t\t\t\t\t\t\tarray.push.apply(array, p);\n\t\t\t\t\t\t\treturn array;\n\t\t\t\t\t\t}, []);\n\t\t\t\t\tforEachBail(\n\t\t\t\t\t\taddrs,\n\t\t\t\t\t\t(addr, callback) => {\n\t\t\t\t\t\t\tfs.stat(addr, (err, stat) => {\n\t\t\t\t\t\t\t\tif (!err && stat && stat.isDirectory()) {\n\t\t\t\t\t\t\t\t\tconst obj = Object.assign({}, request, {\n\t\t\t\t\t\t\t\t\t\tpath: addr,\n\t\t\t\t\t\t\t\t\t\trequest: \"./\" + request.request\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tconst message = \"looking for modules in \" + addr;\n\t\t\t\t\t\t\t\t\treturn resolver.doResolve(\n\t\t\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (resolveContext.log)\n\t\t\t\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\t\t\taddr + \" doesn't exist or is not a directory\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (resolveContext.missing) resolveContext.missing.add(addr);\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}