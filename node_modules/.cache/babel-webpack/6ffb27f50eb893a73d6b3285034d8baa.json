{"ast":null,"code":"var BaseReporter = require('./base');\n\nfunction DotsReporter(formatError, reportSlow, useColors, browserConsoleLogOptions) {\n  BaseReporter.call(this, formatError, reportSlow, useColors, browserConsoleLogOptions);\n  var DOTS_WRAP = 80;\n  this.EXCLUSIVELY_USE_COLORS = false;\n\n  this.onRunStart = function () {\n    this._browsers = [];\n    this._dotsCount = 0;\n  };\n\n  this.onBrowserStart = function (browser) {\n    this._browsers.push(browser);\n  };\n\n  this.writeCommonMsg = function (msg) {\n    if (this._dotsCount) {\n      this._dotsCount = 0;\n      msg = '\\n' + msg;\n    }\n\n    this.write(msg);\n  };\n\n  this.specSuccess = function () {\n    this._dotsCount = (this._dotsCount + 1) % DOTS_WRAP;\n    this.write(this._dotsCount ? '.' : '.\\n');\n  };\n\n  this.onBrowserComplete = function (browser) {\n    this.writeCommonMsg(this.renderBrowser(browser) + '\\n');\n  };\n\n  this.onRunComplete = function (browsers, results) {\n    if (browsers.length > 1 && !results.disconnected && !results.error) {\n      if (!results.failed) {\n        this.write(this.TOTAL_SUCCESS, results.success);\n      } else {\n        this.write(this.TOTAL_FAILED, results.failed, results.success);\n      }\n    }\n  };\n} // PUBLISH\n\n\nmodule.exports = DotsReporter;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/karma/lib/reporters/dots.js"],"names":["BaseReporter","require","DotsReporter","formatError","reportSlow","useColors","browserConsoleLogOptions","call","DOTS_WRAP","EXCLUSIVELY_USE_COLORS","onRunStart","_browsers","_dotsCount","onBrowserStart","browser","push","writeCommonMsg","msg","write","specSuccess","onBrowserComplete","renderBrowser","onRunComplete","browsers","results","length","disconnected","error","failed","TOTAL_SUCCESS","success","TOTAL_FAILED","module","exports"],"mappings":"AAAA,IAAMA,YAAY,GAAGC,OAAO,CAAC,QAAD,CAA5B;;AAEA,SAASC,YAAT,CAAuBC,WAAvB,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2DC,wBAA3D,EAAqF;AACnFN,EAAAA,YAAY,CAACO,IAAb,CAAkB,IAAlB,EAAwBJ,WAAxB,EAAqCC,UAArC,EAAiDC,SAAjD,EAA4DC,wBAA5D;AAEA,MAAME,SAAS,GAAG,EAAlB;AACA,OAAKC,sBAAL,GAA8B,KAA9B;;AACA,OAAKC,UAAL,GAAkB,YAAY;AAC5B,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACD,GAHD;;AAKA,OAAKC,cAAL,GAAsB,UAAUC,OAAV,EAAmB;AACvC,SAAKH,SAAL,CAAeI,IAAf,CAAoBD,OAApB;AACD,GAFD;;AAIA,OAAKE,cAAL,GAAsB,UAAUC,GAAV,EAAe;AACnC,QAAI,KAAKL,UAAT,EAAqB;AACnB,WAAKA,UAAL,GAAkB,CAAlB;AACAK,MAAAA,GAAG,GAAG,OAAOA,GAAb;AACD;;AAED,SAAKC,KAAL,CAAWD,GAAX;AACD,GAPD;;AASA,OAAKE,WAAL,GAAmB,YAAY;AAC7B,SAAKP,UAAL,GAAkB,CAAC,KAAKA,UAAL,GAAkB,CAAnB,IAAwBJ,SAA1C;AACA,SAAKU,KAAL,CAAW,KAAKN,UAAL,GAAkB,GAAlB,GAAwB,KAAnC;AACD,GAHD;;AAKA,OAAKQ,iBAAL,GAAyB,UAAUN,OAAV,EAAmB;AAC1C,SAAKE,cAAL,CAAoB,KAAKK,aAAL,CAAmBP,OAAnB,IAA8B,IAAlD;AACD,GAFD;;AAIA,OAAKQ,aAAL,GAAqB,UAAUC,QAAV,EAAoBC,OAApB,EAA6B;AAChD,QAAID,QAAQ,CAACE,MAAT,GAAkB,CAAlB,IAAuB,CAACD,OAAO,CAACE,YAAhC,IAAgD,CAACF,OAAO,CAACG,KAA7D,EAAoE;AAClE,UAAI,CAACH,OAAO,CAACI,MAAb,EAAqB;AACnB,aAAKV,KAAL,CAAW,KAAKW,aAAhB,EAA+BL,OAAO,CAACM,OAAvC;AACD,OAFD,MAEO;AACL,aAAKZ,KAAL,CAAW,KAAKa,YAAhB,EAA8BP,OAAO,CAACI,MAAtC,EAA8CJ,OAAO,CAACM,OAAtD;AACD;AACF;AACF,GARD;AASD,C,CAED;;;AACAE,MAAM,CAACC,OAAP,GAAiB/B,YAAjB","sourcesContent":["const BaseReporter = require('./base')\n\nfunction DotsReporter (formatError, reportSlow, useColors, browserConsoleLogOptions) {\n  BaseReporter.call(this, formatError, reportSlow, useColors, browserConsoleLogOptions)\n\n  const DOTS_WRAP = 80\n  this.EXCLUSIVELY_USE_COLORS = false\n  this.onRunStart = function () {\n    this._browsers = []\n    this._dotsCount = 0\n  }\n\n  this.onBrowserStart = function (browser) {\n    this._browsers.push(browser)\n  }\n\n  this.writeCommonMsg = function (msg) {\n    if (this._dotsCount) {\n      this._dotsCount = 0\n      msg = '\\n' + msg\n    }\n\n    this.write(msg)\n  }\n\n  this.specSuccess = function () {\n    this._dotsCount = (this._dotsCount + 1) % DOTS_WRAP\n    this.write(this._dotsCount ? '.' : '.\\n')\n  }\n\n  this.onBrowserComplete = function (browser) {\n    this.writeCommonMsg(this.renderBrowser(browser) + '\\n')\n  }\n\n  this.onRunComplete = function (browsers, results) {\n    if (browsers.length > 1 && !results.disconnected && !results.error) {\n      if (!results.failed) {\n        this.write(this.TOTAL_SUCCESS, results.success)\n      } else {\n        this.write(this.TOTAL_FAILED, results.failed, results.success)\n      }\n    }\n  }\n}\n\n// PUBLISH\nmodule.exports = DotsReporter\n"]},"metadata":{},"sourceType":"script"}