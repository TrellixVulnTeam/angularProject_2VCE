{"ast":null,"code":"var BaseReporter = require('./base');\n\nfunction ProgressReporter(formatError, reportSlow, useColors, browserConsoleLogOptions) {\n  BaseReporter.call(this, formatError, reportSlow, useColors, browserConsoleLogOptions);\n  this.EXCLUSIVELY_USE_COLORS = false;\n  this._browsers = [];\n\n  this.writeCommonMsg = function (msg) {\n    this.write(this._remove() + msg + this._render());\n  };\n\n  this.specSuccess = function () {\n    this.write(this._refresh());\n  };\n\n  this.onBrowserComplete = function () {\n    this.write(this._refresh());\n  };\n\n  this.onRunStart = function () {\n    this._browsers = [];\n    this._isRendered = false;\n  };\n\n  this.onBrowserStart = function (browser) {\n    this._browsers.push(browser);\n\n    if (this._isRendered) {\n      this.write('\\n');\n    }\n\n    this.write(this._refresh());\n  };\n\n  this._remove = function () {\n    if (!this._isRendered) {\n      return '';\n    }\n\n    var cmd = '';\n\n    this._browsers.forEach(function () {\n      cmd += '\\x1B[1A' + '\\x1B[2K';\n    });\n\n    this._isRendered = false;\n    return cmd;\n  };\n\n  this._render = function () {\n    this._isRendered = true;\n    return this._browsers.map(this.renderBrowser).join('\\n') + '\\n';\n  };\n\n  this._refresh = function () {\n    return this._remove() + this._render();\n  };\n} // PUBLISH\n\n\nmodule.exports = ProgressReporter;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/karma/lib/reporters/progress.js"],"names":["BaseReporter","require","ProgressReporter","formatError","reportSlow","useColors","browserConsoleLogOptions","call","EXCLUSIVELY_USE_COLORS","_browsers","writeCommonMsg","msg","write","_remove","_render","specSuccess","_refresh","onBrowserComplete","onRunStart","_isRendered","onBrowserStart","browser","push","cmd","forEach","map","renderBrowser","join","module","exports"],"mappings":"AAAA,IAAMA,YAAY,GAAGC,OAAO,CAAC,QAAD,CAA5B;;AAEA,SAASC,gBAAT,CAA2BC,WAA3B,EAAwCC,UAAxC,EAAoDC,SAApD,EAA+DC,wBAA/D,EAAyF;AACvFN,EAAAA,YAAY,CAACO,IAAb,CAAkB,IAAlB,EAAwBJ,WAAxB,EAAqCC,UAArC,EAAiDC,SAAjD,EAA4DC,wBAA5D;AAEA,OAAKE,sBAAL,GAA8B,KAA9B;AACA,OAAKC,SAAL,GAAiB,EAAjB;;AAEA,OAAKC,cAAL,GAAsB,UAAUC,GAAV,EAAe;AACnC,SAAKC,KAAL,CAAW,KAAKC,OAAL,KAAiBF,GAAjB,GAAuB,KAAKG,OAAL,EAAlC;AACD,GAFD;;AAIA,OAAKC,WAAL,GAAmB,YAAY;AAC7B,SAAKH,KAAL,CAAW,KAAKI,QAAL,EAAX;AACD,GAFD;;AAIA,OAAKC,iBAAL,GAAyB,YAAY;AACnC,SAAKL,KAAL,CAAW,KAAKI,QAAL,EAAX;AACD,GAFD;;AAIA,OAAKE,UAAL,GAAkB,YAAY;AAC5B,SAAKT,SAAL,GAAiB,EAAjB;AACA,SAAKU,WAAL,GAAmB,KAAnB;AACD,GAHD;;AAKA,OAAKC,cAAL,GAAsB,UAAUC,OAAV,EAAmB;AACvC,SAAKZ,SAAL,CAAea,IAAf,CAAoBD,OAApB;;AAEA,QAAI,KAAKF,WAAT,EAAsB;AACpB,WAAKP,KAAL,CAAW,IAAX;AACD;;AAED,SAAKA,KAAL,CAAW,KAAKI,QAAL,EAAX;AACD,GARD;;AAUA,OAAKH,OAAL,GAAe,YAAY;AACzB,QAAI,CAAC,KAAKM,WAAV,EAAuB;AACrB,aAAO,EAAP;AACD;;AAED,QAAII,GAAG,GAAG,EAAV;;AACA,SAAKd,SAAL,CAAee,OAAf,CAAuB,YAAY;AACjCD,MAAAA,GAAG,IAAI,YAAY,SAAnB;AACD,KAFD;;AAIA,SAAKJ,WAAL,GAAmB,KAAnB;AAEA,WAAOI,GAAP;AACD,GAbD;;AAeA,OAAKT,OAAL,GAAe,YAAY;AACzB,SAAKK,WAAL,GAAmB,IAAnB;AAEA,WAAO,KAAKV,SAAL,CAAegB,GAAf,CAAmB,KAAKC,aAAxB,EAAuCC,IAAvC,CAA4C,IAA5C,IAAoD,IAA3D;AACD,GAJD;;AAMA,OAAKX,QAAL,GAAgB,YAAY;AAC1B,WAAO,KAAKH,OAAL,KAAiB,KAAKC,OAAL,EAAxB;AACD,GAFD;AAGD,C,CAED;;;AACAc,MAAM,CAACC,OAAP,GAAiB3B,gBAAjB","sourcesContent":["const BaseReporter = require('./base')\n\nfunction ProgressReporter (formatError, reportSlow, useColors, browserConsoleLogOptions) {\n  BaseReporter.call(this, formatError, reportSlow, useColors, browserConsoleLogOptions)\n\n  this.EXCLUSIVELY_USE_COLORS = false\n  this._browsers = []\n\n  this.writeCommonMsg = function (msg) {\n    this.write(this._remove() + msg + this._render())\n  }\n\n  this.specSuccess = function () {\n    this.write(this._refresh())\n  }\n\n  this.onBrowserComplete = function () {\n    this.write(this._refresh())\n  }\n\n  this.onRunStart = function () {\n    this._browsers = []\n    this._isRendered = false\n  }\n\n  this.onBrowserStart = function (browser) {\n    this._browsers.push(browser)\n\n    if (this._isRendered) {\n      this.write('\\n')\n    }\n\n    this.write(this._refresh())\n  }\n\n  this._remove = function () {\n    if (!this._isRendered) {\n      return ''\n    }\n\n    let cmd = ''\n    this._browsers.forEach(function () {\n      cmd += '\\x1B[1A' + '\\x1B[2K'\n    })\n\n    this._isRendered = false\n\n    return cmd\n  }\n\n  this._render = function () {\n    this._isRendered = true\n\n    return this._browsers.map(this.renderBrowser).join('\\n') + '\\n'\n  }\n\n  this._refresh = function () {\n    return this._remove() + this._render()\n  }\n}\n\n// PUBLISH\nmodule.exports = ProgressReporter\n"]},"metadata":{},"sourceType":"script"}