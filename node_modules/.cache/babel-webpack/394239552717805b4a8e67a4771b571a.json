{"ast":null,"code":"'use strict';\n/* global window: true */\n\n/* eslint-disable\n  no-shadow,\n  no-param-reassign,\n  space-before-function-paren\n*/\n\nvar uuid = require('uuid/v4');\n\nvar colors = require('ansi-colors');\n\nvar loglevel = require('./loglevel');\n\nvar symbols = {\n  trace: colors.grey('₸'),\n  debug: colors.cyan('➤'),\n  info: colors.blue(colors.symbols.info),\n  warn: colors.yellow(colors.symbols.warning),\n  error: colors.red(colors.symbols.cross)\n};\nvar defaults = {\n  name: '<unknown>',\n  level: 'info',\n  unique: true\n};\nvar prefix = {\n  level: function level(options) {\n    return symbols[options.level];\n  },\n  template: \"{{level}} \".concat(colors.gray('｢{{name}}｣'), \": \")\n};\n\nfunction log(options) {\n  var opts = Object.assign({}, defaults, options);\n  var id = options.id;\n  opts.prefix = Object.assign({}, prefix, options.prefix);\n  delete opts.id;\n  Object.defineProperty(opts, 'id', {\n    get: function get() {\n      if (!id) {\n        return this.name + (opts.unique ? \"-\".concat(uuid()) : '');\n      }\n\n      return id;\n    }\n  });\n\n  if (opts.timestamp) {\n    opts.prefix.template = \"[{{time}}] \".concat(opts.prefix.template);\n  }\n\n  var log = loglevel.getLogger(opts);\n\n  if (!Object.prototype.hasOwnProperty.call(log, 'id')) {\n    Object.defineProperty(log, 'id', {\n      get: function get() {\n        return opts.id;\n      }\n    });\n  }\n\n  return log;\n}\n\nmodule.exports = log; // NOTE: this is exported so that consumers of webpack-log can use the same\n// version of ansi-colors to decorate log messages without incurring additional\n// dependency overhead\n\nmodule.exports.colors = colors; // NOTE: This is an undocumented function solely for the purpose of tests.\n// Do not use this method in production code. Using in production code\n// may result in strange behavior.\n\nmodule.exports.delLogger = function delLogger(name) {\n  delete loglevel.loggers[name];\n};\n\nmodule.exports.factories = loglevel.factories;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack-log/src/index.js"],"names":["uuid","require","colors","loglevel","symbols","trace","grey","debug","cyan","info","blue","warn","yellow","warning","error","red","cross","defaults","name","level","unique","prefix","options","template","gray","log","opts","Object","assign","id","defineProperty","get","timestamp","getLogger","prototype","hasOwnProperty","call","module","exports","delLogger","loggers","factories"],"mappings":"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","sourcesContent":["'use strict';\n\n/* global window: true */\n/* eslint-disable\n  no-shadow,\n  no-param-reassign,\n  space-before-function-paren\n*/\nconst uuid = require('uuid/v4');\nconst colors = require('ansi-colors');\nconst loglevel = require('./loglevel');\n\nconst symbols = {\n  trace: colors.grey('₸'),\n  debug: colors.cyan('➤'),\n  info: colors.blue(colors.symbols.info),\n  warn: colors.yellow(colors.symbols.warning),\n  error: colors.red(colors.symbols.cross)\n};\n\nconst defaults = {\n  name: '<unknown>',\n  level: 'info',\n  unique: true\n};\n\nconst prefix = {\n  level (options) {\n    return symbols[options.level];\n  },\n  template: `{{level}} ${colors.gray('｢{{name}}｣')}: `\n};\n\nfunction log (options) {\n  const opts = Object.assign({}, defaults, options);\n  const { id } = options;\n\n  opts.prefix = Object.assign({}, prefix, options.prefix);\n  delete opts.id;\n\n  Object.defineProperty(opts, 'id', {\n    get() {\n      if (!id) {\n        return this.name + (opts.unique ? `-${uuid()}` : '');\n      }\n\n      return id;\n    }\n  });\n\n  if (opts.timestamp) {\n    opts.prefix.template = `[{{time}}] ${opts.prefix.template}`;\n  }\n\n  const log = loglevel.getLogger(opts);\n\n  if (!Object.prototype.hasOwnProperty.call(log, 'id')) {\n    Object.defineProperty(log, 'id', {\n      get() {\n        return opts.id;\n      }\n    });\n  }\n\n  return log;\n}\n\nmodule.exports = log;\n// NOTE: this is exported so that consumers of webpack-log can use the same\n// version of ansi-colors to decorate log messages without incurring additional\n// dependency overhead\nmodule.exports.colors = colors;\n// NOTE: This is an undocumented function solely for the purpose of tests.\n// Do not use this method in production code. Using in production code\n// may result in strange behavior.\nmodule.exports.delLogger = function delLogger(name) {\n  delete loglevel.loggers[name];\n};\n\nmodule.exports.factories = loglevel.factories;\n"]},"metadata":{},"sourceType":"script"}