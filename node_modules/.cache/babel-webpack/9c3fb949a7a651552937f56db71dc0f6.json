{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler-cli/ngcc/src/analysis/util\", [\"require\", \"exports\", \"@angular/compiler-cli/src/ngtsc/file_system\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.NOOP_DEPENDENCY_TRACKER = exports.isWithinPackage = void 0;\n  /**\n   * @license\n   * Copyright Google LLC All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n\n  var file_system_1 = require(\"@angular/compiler-cli/src/ngtsc/file_system\");\n\n  function isWithinPackage(packagePath, filePath) {\n    var relativePath = file_system_1.relative(packagePath, filePath);\n    return file_system_1.isLocalRelativePath(relativePath) && !relativePath.startsWith('node_modules/');\n  }\n\n  exports.isWithinPackage = isWithinPackage;\n\n  var NoopDependencyTracker =\n  /** @class */\n  function () {\n    function NoopDependencyTracker() {}\n\n    NoopDependencyTracker.prototype.addDependency = function () {};\n\n    NoopDependencyTracker.prototype.addResourceDependency = function () {};\n\n    NoopDependencyTracker.prototype.recordDependencyAnalysisFailure = function () {};\n\n    return NoopDependencyTracker;\n  }();\n\n  exports.NOOP_DEPENDENCY_TRACKER = new NoopDependencyTracker();\n});","map":{"version":3,"sources":["../../../../../../../../packages/compiler-cli/ngcc/src/analysis/util.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;AAMG;;AACH,MAAA,aAAA,GAAA,OAAA,CAAA,6CAAA,CAAA;;AAGA,WAAgB,eAAhB,CAAgC,WAAhC,EAA6D,QAA7D,EAAqF;AACnF,QAAM,YAAY,GAAG,aAAA,CAAA,QAAA,CAAS,WAAT,EAAsB,QAAtB,CAArB;AACA,WAAO,aAAA,CAAA,mBAAA,CAAoB,YAApB,KAAqC,CAAC,YAAY,CAAC,UAAb,CAAwB,eAAxB,CAA7C;AACD;;AAHD,EAAA,OAAA,CAAA,eAAA,GAAA,eAAA;;AAKA,MAAA,qBAAA;AAAA;AAAA,cAAA;AAAA,aAAA,qBAAA,GAAA,CAIC;;AAHC,IAAA,qBAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA,CAAwB,CAAxB;;AACA,IAAA,qBAAA,CAAA,SAAA,CAAA,qBAAA,GAAA,YAAA,CAAgC,CAAhC;;AACA,IAAA,qBAAA,CAAA,SAAA,CAAA,+BAAA,GAAA,YAAA,CAA0C,CAA1C;;AACF,WAAA,qBAAA;AAAC,GAJD,EAAA;;AAMa,EAAA,OAAA,CAAA,uBAAA,GAA6C,IAAI,qBAAJ,EAA7C","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AbsoluteFsPath, isLocalRelativePath, relative} from '../../../src/ngtsc/file_system';\nimport {DependencyTracker} from '../../../src/ngtsc/incremental/api';\n\nexport function isWithinPackage(packagePath: AbsoluteFsPath, filePath: AbsoluteFsPath): boolean {\n  const relativePath = relative(packagePath, filePath);\n  return isLocalRelativePath(relativePath) && !relativePath.startsWith('node_modules/');\n}\n\nclass NoopDependencyTracker implements DependencyTracker {\n  addDependency(): void {}\n  addResourceDependency(): void {}\n  recordDependencyAnalysisFailure(): void {}\n}\n\nexport const NOOP_DEPENDENCY_TRACKER: DependencyTracker = new NoopDependencyTracker();\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}