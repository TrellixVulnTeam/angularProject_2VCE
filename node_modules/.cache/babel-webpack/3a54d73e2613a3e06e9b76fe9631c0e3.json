{"ast":null,"code":"var _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar path = require(\"path\");\n\nvar fs = require(\"fs\");\n\nvar chalk = require(\"chalk\");\n\nvar _require = require(\"./WrappedPlugin\"),\n    WrappedPlugin = _require.WrappedPlugin,\n    clear = _require.clear;\n\nvar _require2 = require(\"./utils\"),\n    getModuleName = _require2.getModuleName,\n    getLoaderNames = _require2.getLoaderNames,\n    prependLoader = _require2.prependLoader,\n    tap = _require2.tap;\n\nvar _require3 = require(\"./output\"),\n    getHumanOutput = _require3.getHumanOutput,\n    getMiscOutput = _require3.getMiscOutput,\n    getPluginsOutput = _require3.getPluginsOutput,\n    getLoadersOutput = _require3.getLoadersOutput,\n    smpTag = _require3.smpTag;\n\nvar NS = path.dirname(fs.realpathSync(__filename));\n\nmodule.exports = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function SpeedMeasurePlugin(options) {\n    _classCallCheck(this, SpeedMeasurePlugin);\n\n    this.options = options || {};\n    this.timeEventData = {};\n    this.smpPluginAdded = false;\n    this.wrap = this.wrap.bind(this);\n    this.getOutput = this.getOutput.bind(this);\n    this.addTimeEvent = this.addTimeEvent.bind(this);\n    this.apply = this.apply.bind(this);\n    this.provideLoaderTiming = this.provideLoaderTiming.bind(this);\n  }\n\n  _createClass(SpeedMeasurePlugin, [{\n    key: \"wrap\",\n    value: function wrap(config) {\n      var _this = this;\n\n      if (this.options.disable) return config;\n      if (Array.isArray(config)) return config.map(this.wrap);\n      if (typeof config === \"function\") return function () {\n        return _this.wrap(config.apply(void 0, arguments));\n      };\n      config.plugins = (config.plugins || []).map(function (plugin) {\n        var pluginName = Object.keys(_this.options.pluginNames || {}).find(function (pluginName) {\n          return plugin === _this.options.pluginNames[pluginName];\n        }) || plugin.constructor && plugin.constructor.name || \"(unable to deduce plugin name)\";\n        return new WrappedPlugin(plugin, pluginName, _this);\n      });\n\n      if (config.optimization && config.optimization.minimizer) {\n        config.optimization.minimizer = config.optimization.minimizer.map(function (plugin) {\n          return new WrappedPlugin(plugin, plugin.constructor.name, _this);\n        });\n      }\n\n      if (config.module && this.options.granularLoaderData) {\n        config.module = prependLoader(config.module);\n      }\n\n      if (!this.smpPluginAdded) {\n        config.plugins = config.plugins.concat(this);\n        this.smpPluginAdded = true;\n      }\n\n      return config;\n    }\n  }, {\n    key: \"getOutput\",\n    value: function getOutput() {\n      var outputObj = {};\n      if (this.timeEventData.misc) outputObj.misc = getMiscOutput(this.timeEventData.misc);\n      if (this.timeEventData.plugins) outputObj.plugins = getPluginsOutput(this.timeEventData.plugins);\n      if (this.timeEventData.loaders) outputObj.loaders = getLoadersOutput(this.timeEventData.loaders);\n      if (this.options.outputFormat === \"json\") return JSON.stringify(outputObj, null, 2);\n      if (typeof this.options.outputFormat === \"function\") return this.options.outputFormat(outputObj);\n      return getHumanOutput(outputObj, {\n        verbose: this.options.outputFormat === \"humanVerbose\"\n      });\n    }\n  }, {\n    key: \"addTimeEvent\",\n    value: function addTimeEvent(category, event, eventType) {\n      var data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var allowFailure = data.allowFailure;\n      delete data.allowFailure;\n      var tED = this.timeEventData;\n      if (!tED[category]) tED[category] = {};\n      if (!tED[category][event]) tED[category][event] = [];\n      var eventList = tED[category][event];\n      var curTime = new Date().getTime();\n\n      if (eventType === \"start\") {\n        data.start = curTime;\n        eventList.push(data);\n      } else if (eventType === \"end\") {\n        var matchingEvent = eventList.find(function (e) {\n          var allowOverwrite = !e.end || !data.fillLast;\n          var idMatch = e.id !== undefined && e.id === data.id;\n          var nameMatch = !data.id && e.name !== undefined && e.name === data.name;\n          return allowOverwrite && (idMatch || nameMatch);\n        });\n        var eventToModify = matchingEvent || data.fillLast && eventList.find(function (e) {\n          return !e.end;\n        });\n\n        if (!eventToModify) {\n          console.error(\"Could not find a matching event to end\", category, event, data);\n          if (allowFailure) return;\n          throw new Error(\"No matching event!\");\n        }\n\n        eventToModify.end = curTime;\n      }\n    }\n  }, {\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this2 = this;\n\n      if (this.options.disable) return;\n      tap(compiler, \"compile\", function () {\n        _this2.addTimeEvent(\"misc\", \"compile\", \"start\", {\n          watch: false\n        });\n      });\n      tap(compiler, \"done\", function () {\n        clear();\n\n        _this2.addTimeEvent(\"misc\", \"compile\", \"end\", {\n          fillLast: true\n        });\n\n        var outputToFile = typeof _this2.options.outputTarget === \"string\";\n        chalk.enabled = !outputToFile;\n\n        var output = _this2.getOutput();\n\n        chalk.enabled = true;\n\n        if (outputToFile) {\n          var writeMethod = fs.existsSync(_this2.options.outputTarget) ? fs.appendFileSync : fs.writeFileSync;\n          writeMethod(_this2.options.outputTarget, output + \"\\n\");\n          console.log(smpTag() + \"Outputted timing info to \" + _this2.options.outputTarget);\n        } else {\n          var outputFunc = _this2.options.outputTarget || console.log;\n          outputFunc(output);\n        }\n\n        _this2.timeEventData = {};\n      });\n      tap(compiler, \"compilation\", function (compilation) {\n        tap(compilation, \"normal-module-loader\", function (loaderContext) {\n          loaderContext[NS] = _this2.provideLoaderTiming;\n        });\n        tap(compilation, \"build-module\", function (module) {\n          var name = getModuleName(module);\n\n          if (name) {\n            _this2.addTimeEvent(\"loaders\", \"build\", \"start\", {\n              name: name,\n              fillLast: true,\n              loaders: getLoaderNames(module.loaders)\n            });\n          }\n        });\n        tap(compilation, \"succeed-module\", function (module) {\n          var name = getModuleName(module);\n\n          if (name) {\n            _this2.addTimeEvent(\"loaders\", \"build\", \"end\", {\n              name: name,\n              fillLast: true\n            });\n          }\n        });\n      });\n    }\n  }, {\n    key: \"provideLoaderTiming\",\n    value: function provideLoaderTiming(info) {\n      var infoData = {\n        id: info.id\n      };\n\n      if (info.type !== \"end\") {\n        infoData.loader = info.loaderName;\n        infoData.name = info.module;\n      }\n\n      this.addTimeEvent(\"loaders\", \"build-specific\", info.type, infoData);\n    }\n  }]);\n\n  return SpeedMeasurePlugin;\n}();","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/speed-measure-webpack-plugin/index.js"],"names":["path","require","fs","chalk","WrappedPlugin","clear","getModuleName","getLoaderNames","prependLoader","tap","getHumanOutput","getMiscOutput","getPluginsOutput","getLoadersOutput","smpTag","NS","dirname","realpathSync","__filename","module","exports","options","timeEventData","smpPluginAdded","wrap","bind","getOutput","addTimeEvent","apply","provideLoaderTiming","config","disable","Array","isArray","map","plugins","plugin","pluginName","Object","keys","pluginNames","find","constructor","name","optimization","minimizer","granularLoaderData","concat","outputObj","misc","loaders","outputFormat","JSON","stringify","verbose","category","event","eventType","data","allowFailure","tED","eventList","curTime","Date","getTime","start","push","matchingEvent","e","allowOverwrite","end","fillLast","idMatch","id","undefined","nameMatch","eventToModify","console","error","Error","compiler","watch","outputToFile","outputTarget","enabled","output","writeMethod","existsSync","appendFileSync","writeFileSync","log","outputFunc","compilation","loaderContext","info","infoData","type","loader","loaderName"],"mappings":"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","sourcesContent":["const path = require(\"path\");\nconst fs = require(\"fs\");\nconst chalk = require(\"chalk\");\nconst { WrappedPlugin, clear } = require(\"./WrappedPlugin\");\nconst {\n  getModuleName,\n  getLoaderNames,\n  prependLoader,\n  tap,\n} = require(\"./utils\");\nconst {\n  getHumanOutput,\n  getMiscOutput,\n  getPluginsOutput,\n  getLoadersOutput,\n  smpTag,\n} = require(\"./output\");\n\nconst NS = path.dirname(fs.realpathSync(__filename));\n\nmodule.exports = class SpeedMeasurePlugin {\n  constructor(options) {\n    this.options = options || {};\n\n    this.timeEventData = {};\n    this.smpPluginAdded = false;\n\n    this.wrap = this.wrap.bind(this);\n    this.getOutput = this.getOutput.bind(this);\n    this.addTimeEvent = this.addTimeEvent.bind(this);\n    this.apply = this.apply.bind(this);\n    this.provideLoaderTiming = this.provideLoaderTiming.bind(this);\n  }\n\n  wrap(config) {\n    if (this.options.disable) return config;\n    if (Array.isArray(config)) return config.map(this.wrap);\n    if (typeof config === \"function\")\n      return (...args) => this.wrap(config(...args));\n\n    config.plugins = (config.plugins || []).map(plugin => {\n      const pluginName =\n        Object.keys(this.options.pluginNames || {}).find(\n          pluginName => plugin === this.options.pluginNames[pluginName]\n        ) ||\n        (plugin.constructor && plugin.constructor.name) ||\n        \"(unable to deduce plugin name)\";\n      return new WrappedPlugin(plugin, pluginName, this);\n    });\n\n    if (config.optimization && config.optimization.minimizer) {\n      config.optimization.minimizer = config.optimization.minimizer.map(\n        plugin => {\n          return new WrappedPlugin(plugin, plugin.constructor.name, this);\n        }\n      );\n    }\n\n    if (config.module && this.options.granularLoaderData) {\n      config.module = prependLoader(config.module);\n    }\n\n    if (!this.smpPluginAdded) {\n      config.plugins = config.plugins.concat(this);\n      this.smpPluginAdded = true;\n    }\n\n    return config;\n  }\n\n  getOutput() {\n    const outputObj = {};\n    if (this.timeEventData.misc)\n      outputObj.misc = getMiscOutput(this.timeEventData.misc);\n    if (this.timeEventData.plugins)\n      outputObj.plugins = getPluginsOutput(this.timeEventData.plugins);\n    if (this.timeEventData.loaders)\n      outputObj.loaders = getLoadersOutput(this.timeEventData.loaders);\n\n    if (this.options.outputFormat === \"json\")\n      return JSON.stringify(outputObj, null, 2);\n    if (typeof this.options.outputFormat === \"function\")\n      return this.options.outputFormat(outputObj);\n    return getHumanOutput(outputObj, {\n      verbose: this.options.outputFormat === \"humanVerbose\",\n    });\n  }\n\n  addTimeEvent(category, event, eventType, data = {}) {\n    const allowFailure = data.allowFailure;\n    delete data.allowFailure;\n\n    const tED = this.timeEventData;\n    if (!tED[category]) tED[category] = {};\n    if (!tED[category][event]) tED[category][event] = [];\n    const eventList = tED[category][event];\n    const curTime = new Date().getTime();\n\n    if (eventType === \"start\") {\n      data.start = curTime;\n      eventList.push(data);\n    } else if (eventType === \"end\") {\n      const matchingEvent = eventList.find(e => {\n        const allowOverwrite = !e.end || !data.fillLast;\n        const idMatch = e.id !== undefined && e.id === data.id;\n        const nameMatch =\n          !data.id && e.name !== undefined && e.name === data.name;\n        return allowOverwrite && (idMatch || nameMatch);\n      });\n      const eventToModify =\n        matchingEvent || (data.fillLast && eventList.find(e => !e.end));\n      if (!eventToModify) {\n        console.error(\n          \"Could not find a matching event to end\",\n          category,\n          event,\n          data\n        );\n        if (allowFailure) return;\n        throw new Error(\"No matching event!\");\n      }\n\n      eventToModify.end = curTime;\n    }\n  }\n\n  apply(compiler) {\n    if (this.options.disable) return;\n\n    tap(compiler, \"compile\", () => {\n      this.addTimeEvent(\"misc\", \"compile\", \"start\", { watch: false });\n    });\n    tap(compiler, \"done\", () => {\n      clear();\n      this.addTimeEvent(\"misc\", \"compile\", \"end\", { fillLast: true });\n\n      const outputToFile = typeof this.options.outputTarget === \"string\";\n      chalk.enabled = !outputToFile;\n      const output = this.getOutput();\n      chalk.enabled = true;\n      if (outputToFile) {\n        const writeMethod = fs.existsSync(this.options.outputTarget)\n          ? fs.appendFileSync\n          : fs.writeFileSync;\n        writeMethod(this.options.outputTarget, output + \"\\n\");\n        console.log(\n          smpTag() + \"Outputted timing info to \" + this.options.outputTarget\n        );\n      } else {\n        const outputFunc = this.options.outputTarget || console.log;\n        outputFunc(output);\n      }\n\n      this.timeEventData = {};\n    });\n\n    tap(compiler, \"compilation\", compilation => {\n      tap(compilation, \"normal-module-loader\", loaderContext => {\n        loaderContext[NS] = this.provideLoaderTiming;\n      });\n\n      tap(compilation, \"build-module\", module => {\n        const name = getModuleName(module);\n        if (name) {\n          this.addTimeEvent(\"loaders\", \"build\", \"start\", {\n            name,\n            fillLast: true,\n            loaders: getLoaderNames(module.loaders),\n          });\n        }\n      });\n\n      tap(compilation, \"succeed-module\", module => {\n        const name = getModuleName(module);\n        if (name) {\n          this.addTimeEvent(\"loaders\", \"build\", \"end\", {\n            name,\n            fillLast: true,\n          });\n        }\n      });\n    });\n  }\n\n  provideLoaderTiming(info) {\n    const infoData = { id: info.id };\n    if (info.type !== \"end\") {\n      infoData.loader = info.loaderName;\n      infoData.name = info.module;\n    }\n\n    this.addTimeEvent(\"loaders\", \"build-specific\", info.type, infoData);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}