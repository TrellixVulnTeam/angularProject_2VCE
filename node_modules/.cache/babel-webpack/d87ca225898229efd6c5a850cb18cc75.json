{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getWorkerConfig = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar path_1 = require(\"path\");\n\nvar typescript_1 = require(\"./typescript\");\n\nfunction getWorkerConfig(wco) {\n  var buildOptions = wco.buildOptions;\n\n  if (!buildOptions.webWorkerTsConfig) {\n    return {};\n  }\n\n  if (typeof buildOptions.webWorkerTsConfig != 'string') {\n    throw new Error('The `webWorkerTsConfig` must be a string.');\n  }\n\n  var workerTsConfigPath = path_1.resolve(wco.root, buildOptions.webWorkerTsConfig);\n\n  var WorkerPlugin = require('worker-plugin');\n\n  return {\n    plugins: [new WorkerPlugin({\n      globalObject: false,\n      plugins: [typescript_1.getTypescriptWorkerPlugin(wco, workerTsConfigPath)]\n    })]\n  };\n}\n\nexports.getWorkerConfig = getWorkerConfig;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/src/webpack/configs/worker.js"],"names":["Object","defineProperty","exports","value","getWorkerConfig","path_1","require","typescript_1","wco","buildOptions","webWorkerTsConfig","Error","workerTsConfigPath","resolve","root","WorkerPlugin","plugins","globalObject","getTypescriptWorkerPlugin"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0B,KAAK,CAA/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,MAAD,CAAtB;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,cAAD,CAA5B;;AACA,SAASF,eAAT,CAAyBI,GAAzB,EAA8B;AAC1B,MAAQC,YAAR,GAAyBD,GAAzB,CAAQC,YAAR;;AACA,MAAI,CAACA,YAAY,CAACC,iBAAlB,EAAqC;AACjC,WAAO,EAAP;AACH;;AACD,MAAI,OAAOD,YAAY,CAACC,iBAApB,IAAyC,QAA7C,EAAuD;AACnD,UAAM,IAAIC,KAAJ,CAAU,2CAAV,CAAN;AACH;;AACD,MAAMC,kBAAkB,GAAGP,MAAM,CAACQ,OAAP,CAAeL,GAAG,CAACM,IAAnB,EAAyBL,YAAY,CAACC,iBAAtC,CAA3B;;AACA,MAAMK,YAAY,GAAGT,OAAO,CAAC,eAAD,CAA5B;;AACA,SAAO;AACHU,IAAAA,OAAO,EAAE,CAAC,IAAID,YAAJ,CAAiB;AACnBE,MAAAA,YAAY,EAAE,KADK;AAEnBD,MAAAA,OAAO,EAAE,CAACT,YAAY,CAACW,yBAAb,CAAuCV,GAAvC,EAA4CI,kBAA5C,CAAD;AAFU,KAAjB,CAAD;AADN,GAAP;AAMH;;AACDV,OAAO,CAACE,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getWorkerConfig = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst path_1 = require(\"path\");\nconst typescript_1 = require(\"./typescript\");\nfunction getWorkerConfig(wco) {\n    const { buildOptions } = wco;\n    if (!buildOptions.webWorkerTsConfig) {\n        return {};\n    }\n    if (typeof buildOptions.webWorkerTsConfig != 'string') {\n        throw new Error('The `webWorkerTsConfig` must be a string.');\n    }\n    const workerTsConfigPath = path_1.resolve(wco.root, buildOptions.webWorkerTsConfig);\n    const WorkerPlugin = require('worker-plugin');\n    return {\n        plugins: [new WorkerPlugin({\n                globalObject: false,\n                plugins: [typescript_1.getTypescriptWorkerPlugin(wco, workerTsConfigPath)],\n            })],\n    };\n}\nexports.getWorkerConfig = getWorkerConfig;\n"]},"metadata":{},"sourceType":"script"}