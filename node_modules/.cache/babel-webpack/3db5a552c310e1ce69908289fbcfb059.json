{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\"use strict\";\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar RootPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source hook\n   * @param {Array<string>} root roots\n   * @param {string | ResolveStepHook} target target hook\n   * @param {boolean=} ignoreErrors ignore error during resolving of root paths\n   */\n  function RootPlugin(source, root, target, ignoreErrors) {\n    _classCallCheck(this, RootPlugin);\n\n    this.root = root;\n    this.source = source;\n    this.target = target;\n    this._ignoreErrors = ignoreErrors;\n  }\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n\n\n  _createClass(RootPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"RootPlugin\", function (request, resolveContext, callback) {\n        var req = request.request;\n        if (!req) return callback();\n        if (!req.startsWith(\"/\")) return callback();\n        var path = resolver.join(_this.root, req.slice(1));\n        var obj = Object.assign(request, {\n          path: path,\n          relativePath: request.relativePath && path\n        });\n        resolver.doResolve(target, obj, \"root path \".concat(_this.root), resolveContext, _this._ignoreErrors ? function (err, result) {\n          if (err) {\n            if (resolveContext.log) {\n              resolveContext.log(\"Ignored fatal error while resolving root path:\\n\".concat(err));\n            }\n\n            return callback();\n          }\n\n          if (result) return callback(null, result);\n          callback();\n        } : callback);\n      });\n    }\n  }]);\n\n  return RootPlugin;\n}();\n\nmodule.exports = RootPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/node_modules/enhanced-resolve/lib/RootPlugin.js"],"names":["RootPlugin","source","root","target","ignoreErrors","_ignoreErrors","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","req","startsWith","path","join","slice","obj","Object","assign","relativePath","doResolve","err","result","log","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AACA;;;;;;IAEMA,U;AACL;AACD;AACA;AACA;AACA;AACA;AACC,sBAAYC,MAAZ,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,YAAlC,EAAgD;AAAA;;AAC/C,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKE,MAAL,GAAcA,MAAd;AACA,SAAKE,aAAL,GAAqBD,YAArB;AACA;AAED;AACD;AACA;AACA;;;;;WACC,eAAME,QAAN,EAAgB;AAAA;;AACf,UAAMH,MAAM,GAAGG,QAAQ,CAACC,UAAT,CAAoB,KAAKJ,MAAzB,CAAf;AAEAG,MAAAA,QAAQ,CACNE,OADF,CACU,KAAKP,MADf,EAEEQ,QAFF,CAEW,YAFX,EAEyB,UAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,EAAuC;AAC9D,YAAMC,GAAG,GAAGH,OAAO,CAACA,OAApB;AACA,YAAI,CAACG,GAAL,EAAU,OAAOD,QAAQ,EAAf;AACV,YAAI,CAACC,GAAG,CAACC,UAAJ,CAAe,GAAf,CAAL,EAA0B,OAAOF,QAAQ,EAAf;AAE1B,YAAMG,IAAI,GAAGT,QAAQ,CAACU,IAAT,CAAc,KAAI,CAACd,IAAnB,EAAyBW,GAAG,CAACI,KAAJ,CAAU,CAAV,CAAzB,CAAb;AACA,YAAMC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAcV,OAAd,EAAuB;AAClCK,UAAAA,IAAI,EAAJA,IADkC;AAElCM,UAAAA,YAAY,EAAEX,OAAO,CAACW,YAAR,IAAwBN;AAFJ,SAAvB,CAAZ;AAIAT,QAAAA,QAAQ,CAACgB,SAAT,CACCnB,MADD,EAECe,GAFD,sBAGc,KAAI,CAAChB,IAHnB,GAICS,cAJD,EAKC,KAAI,CAACN,aAAL,GACG,UAACkB,GAAD,EAAMC,MAAN,EAAiB;AACjB,cAAID,GAAJ,EAAS;AACR,gBAAIZ,cAAc,CAACc,GAAnB,EAAwB;AACvBd,cAAAA,cAAc,CAACc,GAAf,2DACoDF,GADpD;AAGA;;AACD,mBAAOX,QAAQ,EAAf;AACA;;AACD,cAAIY,MAAJ,EAAY,OAAOZ,QAAQ,CAAC,IAAD,EAAOY,MAAP,CAAf;AACZZ,UAAAA,QAAQ;AACP,SAZJ,GAaGA,QAlBJ;AAoBA,OAhCF;AAiCA;;;;;;AAGFc,MAAM,CAACC,OAAP,GAAiB3B,UAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nclass RootPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source hook\n\t * @param {Array<string>} root roots\n\t * @param {string | ResolveStepHook} target target hook\n\t * @param {boolean=} ignoreErrors ignore error during resolving of root paths\n\t */\n\tconstructor(source, root, target, ignoreErrors) {\n\t\tthis.root = root;\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t\tthis._ignoreErrors = ignoreErrors;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"RootPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst req = request.request;\n\t\t\t\tif (!req) return callback();\n\t\t\t\tif (!req.startsWith(\"/\")) return callback();\n\n\t\t\t\tconst path = resolver.join(this.root, req.slice(1));\n\t\t\t\tconst obj = Object.assign(request, {\n\t\t\t\t\tpath,\n\t\t\t\t\trelativePath: request.relativePath && path\n\t\t\t\t});\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t`root path ${this.root}`,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tthis._ignoreErrors\n\t\t\t\t\t\t? (err, result) => {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\tif (resolveContext.log) {\n\t\t\t\t\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\t\t\t\t`Ignored fatal error while resolving root path:\\n${err}`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (result) return callback(null, result);\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: callback\n\t\t\t\t);\n\t\t\t});\n\t}\n}\n\nmodule.exports = RootPlugin;\n"]},"metadata":{},"sourceType":"script"}