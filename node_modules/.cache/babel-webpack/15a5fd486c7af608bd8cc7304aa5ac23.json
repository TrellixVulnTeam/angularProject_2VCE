{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar fs = require(\"graceful-fs\");\n\nvar NodeJsInputFileSystem = /*#__PURE__*/function () {\n  function NodeJsInputFileSystem() {\n    _classCallCheck(this, NodeJsInputFileSystem);\n  }\n\n  _createClass(NodeJsInputFileSystem, [{\n    key: \"readdir\",\n    value: function readdir(path, callback) {\n      fs.readdir(path, function (err, files) {\n        callback(err, files && files.map(function (file) {\n          return file.normalize ? file.normalize(\"NFC\") : file;\n        }));\n      });\n    }\n  }, {\n    key: \"readdirSync\",\n    value: function readdirSync(path) {\n      var files = fs.readdirSync(path);\n      return files && files.map(function (file) {\n        return file.normalize ? file.normalize(\"NFC\") : file;\n      });\n    }\n  }]);\n\n  return NodeJsInputFileSystem;\n}();\n\nvar fsMethods = [\"stat\", \"statSync\", \"readFile\", \"readFileSync\", \"readlink\", \"readlinkSync\"];\n\nfor (var _i = 0, _fsMethods = fsMethods; _i < _fsMethods.length; _i++) {\n  var key = _fsMethods[_i];\n  Object.defineProperty(NodeJsInputFileSystem.prototype, key, {\n    configurable: true,\n    writable: true,\n    value: fs[key].bind(fs)\n  });\n}\n\nmodule.exports = NodeJsInputFileSystem;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/node_modules/enhanced-resolve/lib/NodeJsInputFileSystem.js"],"names":["fs","require","NodeJsInputFileSystem","path","callback","readdir","err","files","map","file","normalize","readdirSync","fsMethods","key","Object","defineProperty","prototype","configurable","writable","value","bind","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,IAAMA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAlB;;IAEMC,qB;;;;;;;WACL,iBAAQC,IAAR,EAAcC,QAAd,EAAwB;AACvBJ,MAAAA,EAAE,CAACK,OAAH,CAAWF,IAAX,EAAiB,UAACG,GAAD,EAAMC,KAAN,EAAgB;AAChCH,QAAAA,QAAQ,CACPE,GADO,EAEPC,KAAK,IACJA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI,EAAI;AACjB,iBAAOA,IAAI,CAACC,SAAL,GAAiBD,IAAI,CAACC,SAAL,CAAe,KAAf,CAAjB,GAAyCD,IAAhD;AACA,SAFD,CAHM,CAAR;AAOA,OARD;AASA;;;WAED,qBAAYN,IAAZ,EAAkB;AACjB,UAAMI,KAAK,GAAGP,EAAE,CAACW,WAAH,CAAeR,IAAf,CAAd;AACA,aACCI,KAAK,IACLA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI,EAAI;AACjB,eAAOA,IAAI,CAACC,SAAL,GAAiBD,IAAI,CAACC,SAAL,CAAe,KAAf,CAAjB,GAAyCD,IAAhD;AACA,OAFD,CAFD;AAMA;;;;;;AAGF,IAAMG,SAAS,GAAG,CACjB,MADiB,EAEjB,UAFiB,EAGjB,UAHiB,EAIjB,cAJiB,EAKjB,UALiB,EAMjB,cANiB,CAAlB;;AASA,8BAAkBA,SAAlB,gCAA6B;AAAxB,MAAMC,GAAG,iBAAT;AACJC,EAAAA,MAAM,CAACC,cAAP,CAAsBb,qBAAqB,CAACc,SAA5C,EAAuDH,GAAvD,EAA4D;AAC3DI,IAAAA,YAAY,EAAE,IAD6C;AAE3DC,IAAAA,QAAQ,EAAE,IAFiD;AAG3DC,IAAAA,KAAK,EAAEnB,EAAE,CAACa,GAAD,CAAF,CAAQO,IAAR,CAAapB,EAAb;AAHoD,GAA5D;AAKA;;AAEDqB,MAAM,CAACC,OAAP,GAAiBpB,qBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst fs = require(\"graceful-fs\");\n\nclass NodeJsInputFileSystem {\n\treaddir(path, callback) {\n\t\tfs.readdir(path, (err, files) => {\n\t\t\tcallback(\n\t\t\t\terr,\n\t\t\t\tfiles &&\n\t\t\t\t\tfiles.map(file => {\n\t\t\t\t\t\treturn file.normalize ? file.normalize(\"NFC\") : file;\n\t\t\t\t\t})\n\t\t\t);\n\t\t});\n\t}\n\n\treaddirSync(path) {\n\t\tconst files = fs.readdirSync(path);\n\t\treturn (\n\t\t\tfiles &&\n\t\t\tfiles.map(file => {\n\t\t\t\treturn file.normalize ? file.normalize(\"NFC\") : file;\n\t\t\t})\n\t\t);\n\t}\n}\n\nconst fsMethods = [\n\t\"stat\",\n\t\"statSync\",\n\t\"readFile\",\n\t\"readFileSync\",\n\t\"readlink\",\n\t\"readlinkSync\"\n];\n\nfor (const key of fsMethods) {\n\tObject.defineProperty(NodeJsInputFileSystem.prototype, key, {\n\t\tconfigurable: true,\n\t\twritable: true,\n\t\tvalue: fs[key].bind(fs)\n\t});\n}\n\nmodule.exports = NodeJsInputFileSystem;\n"]},"metadata":{},"sourceType":"script"}