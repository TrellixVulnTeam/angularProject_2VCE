{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler/src/ml_parser/xml_tags\", [\"require\", \"exports\", \"@angular/compiler/src/ml_parser/tags\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getXmlTagDefinition = exports.XmlTagDefinition = void 0;\n\n  var tags_1 = require(\"@angular/compiler/src/ml_parser/tags\");\n\n  var XmlTagDefinition =\n  /** @class */\n  function () {\n    function XmlTagDefinition() {\n      this.closedByParent = false;\n      this.isVoid = false;\n      this.ignoreFirstLf = false;\n      this.canSelfClose = true;\n      this.preventNamespaceInheritance = false;\n    }\n\n    XmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n      return false;\n    };\n\n    XmlTagDefinition.prototype.isClosedByChild = function (name) {\n      return false;\n    };\n\n    XmlTagDefinition.prototype.getContentType = function () {\n      return tags_1.TagContentType.PARSABLE_DATA;\n    };\n\n    return XmlTagDefinition;\n  }();\n\n  exports.XmlTagDefinition = XmlTagDefinition;\n\n  var _TAG_DEFINITION = new XmlTagDefinition();\n\n  function getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n  }\n\n  exports.getXmlTagDefinition = getXmlTagDefinition;\n});","map":{"version":3,"sources":["../../../../../../../packages/compiler/src/ml_parser/xml_tags.ts"],"names":[],"mappings":"AAAA;;;;;;AAMG;;;;;;;;;;;;;;;;AAEH,MAAA,MAAA,GAAA,OAAA,CAAA,sCAAA,CAAA;;AAEA,MAAA,gBAAA;AAAA;AAAA,cAAA;AAAA,aAAA,gBAAA,GAAA;AACE,WAAA,cAAA,GAA0B,KAA1B;AAOA,WAAA,MAAA,GAAkB,KAAlB;AACA,WAAA,aAAA,GAAyB,KAAzB;AACA,WAAA,YAAA,GAAwB,IAAxB;AACA,WAAA,2BAAA,GAAuC,KAAvC;AAaD;;AAXC,IAAA,gBAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,UAAmB,aAAnB,EAAwC;AACtC,aAAO,KAAP;AACD,KAFD;;AAIA,IAAA,gBAAA,CAAA,SAAA,CAAA,eAAA,GAAA,UAAgB,IAAhB,EAA4B;AAC1B,aAAO,KAAP;AACD,KAFD;;AAIA,IAAA,gBAAA,CAAA,SAAA,CAAA,cAAA,GAAA,YAAA;AACE,aAAO,MAAA,CAAA,cAAA,CAAe,aAAtB;AACD,KAFD;;AAGF,WAAA,gBAAA;AAAC,GAxBD,EAAA;;AAAa,EAAA,OAAA,CAAA,gBAAA,GAAA,gBAAA;;AA0Bb,MAAM,eAAe,GAAG,IAAI,gBAAJ,EAAxB;;AAEA,WAAgB,mBAAhB,CAAoC,OAApC,EAAmD;AACjD,WAAO,eAAP;AACD;;AAFD,EAAA,OAAA,CAAA,mBAAA,GAAA,mBAAA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TagContentType, TagDefinition} from './tags';\n\nexport class XmlTagDefinition implements TagDefinition {\n  closedByParent: boolean = false;\n  // TODO(issue/24571): remove '!'.\n  requiredParents!: {[key: string]: boolean};\n  // TODO(issue/24571): remove '!'.\n  parentToAdd!: string;\n  // TODO(issue/24571): remove '!'.\n  implicitNamespacePrefix!: string;\n  isVoid: boolean = false;\n  ignoreFirstLf: boolean = false;\n  canSelfClose: boolean = true;\n  preventNamespaceInheritance: boolean = false;\n\n  requireExtraParent(currentParent: string): boolean {\n    return false;\n  }\n\n  isClosedByChild(name: string): boolean {\n    return false;\n  }\n\n  getContentType(): TagContentType {\n    return TagContentType.PARSABLE_DATA;\n  }\n}\n\nconst _TAG_DEFINITION = new XmlTagDefinition();\n\nexport function getXmlTagDefinition(tagName: string): XmlTagDefinition {\n  return _TAG_DEFINITION;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}