{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar createHash = require(\"./util/createHash\");\n\nvar RequestShortener = require(\"./RequestShortener\");\n\nvar getHash = function getHash(str) {\n  var hash = createHash(\"md4\");\n  hash.update(str);\n  var digest =\n  /** @type {string} */\n  hash.digest(\"hex\");\n  return digest.substr(0, 4);\n};\n\nvar NamedModulesPlugin = /*#__PURE__*/function () {\n  function NamedModulesPlugin(options) {\n    _classCallCheck(this, NamedModulesPlugin);\n\n    this.options = options || {};\n  }\n\n  _createClass(NamedModulesPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.compilation.tap(\"NamedModulesPlugin\", function (compilation) {\n        compilation.hooks.beforeModuleIds.tap(\"NamedModulesPlugin\", function (modules) {\n          var namedModules = new Map();\n          var context = _this.options.context || compiler.options.context;\n\n          var _iterator = _createForOfIteratorHelper(modules),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _module = _step.value;\n\n              if (_module.id === null && _module.libIdent) {\n                _module.id = _module.libIdent({\n                  context: context\n                });\n              }\n\n              if (_module.id !== null) {\n                var namedModule = namedModules.get(_module.id);\n\n                if (namedModule !== undefined) {\n                  namedModule.push(_module);\n                } else {\n                  namedModules.set(_module.id, [_module]);\n                }\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          var _iterator2 = _createForOfIteratorHelper(namedModules.values()),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _namedModule = _step2.value;\n\n              if (_namedModule.length > 1) {\n                var _iterator3 = _createForOfIteratorHelper(_namedModule),\n                    _step3;\n\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    var _module2 = _step3.value;\n                    var requestShortener = new RequestShortener(context);\n                    _module2.id = \"\".concat(_module2.id, \"?\").concat(getHash(requestShortener.shorten(_module2.identifier())));\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        });\n      });\n    }\n  }]);\n\n  return NamedModulesPlugin;\n}();\n\nmodule.exports = NamedModulesPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/NamedModulesPlugin.js"],"names":["createHash","require","RequestShortener","getHash","str","hash","update","digest","substr","NamedModulesPlugin","options","compiler","hooks","compilation","tap","beforeModuleIds","modules","namedModules","Map","context","module","id","libIdent","namedModule","get","undefined","push","set","values","length","requestShortener","shorten","identifier","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;AAEA,IAAMA,UAAU,GAAGC,OAAO,CAAC,mBAAD,CAA1B;;AACA,IAAMC,gBAAgB,GAAGD,OAAO,CAAC,oBAAD,CAAhC;;AAEA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAAAC,GAAG,EAAI;AACtB,MAAMC,IAAI,GAAGL,UAAU,CAAC,KAAD,CAAvB;AACAK,EAAAA,IAAI,CAACC,MAAL,CAAYF,GAAZ;AACA,MAAMG,MAAM;AAAG;AAAuBF,EAAAA,IAAI,CAACE,MAAL,CAAY,KAAZ,CAAtC;AACA,SAAOA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiB,CAAjB,CAAP;AACA,CALD;;IAOMC,kB;AACL,8BAAYC,OAAZ,EAAqB;AAAA;;AACpB,SAAKA,OAAL,GAAeA,OAAO,IAAI,EAA1B;AACA;;;;WAED,eAAMC,QAAN,EAAgB;AAAA;;AACfA,MAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CAA+B,oBAA/B,EAAqD,UAAAD,WAAW,EAAI;AACnEA,QAAAA,WAAW,CAACD,KAAZ,CAAkBG,eAAlB,CAAkCD,GAAlC,CAAsC,oBAAtC,EAA4D,UAAAE,OAAO,EAAI;AACtE,cAAMC,YAAY,GAAG,IAAIC,GAAJ,EAArB;AACA,cAAMC,OAAO,GAAG,KAAI,CAACT,OAAL,CAAaS,OAAb,IAAwBR,QAAQ,CAACD,OAAT,CAAiBS,OAAzD;;AAFsE,qDAIjDH,OAJiD;AAAA;;AAAA;AAItE,gEAA8B;AAAA,kBAAnBI,OAAmB;;AAC7B,kBAAIA,OAAM,CAACC,EAAP,KAAc,IAAd,IAAsBD,OAAM,CAACE,QAAjC,EAA2C;AAC1CF,gBAAAA,OAAM,CAACC,EAAP,GAAYD,OAAM,CAACE,QAAP,CAAgB;AAAEH,kBAAAA,OAAO,EAAPA;AAAF,iBAAhB,CAAZ;AACA;;AAED,kBAAIC,OAAM,CAACC,EAAP,KAAc,IAAlB,EAAwB;AACvB,oBAAME,WAAW,GAAGN,YAAY,CAACO,GAAb,CAAiBJ,OAAM,CAACC,EAAxB,CAApB;;AACA,oBAAIE,WAAW,KAAKE,SAApB,EAA+B;AAC9BF,kBAAAA,WAAW,CAACG,IAAZ,CAAiBN,OAAjB;AACA,iBAFD,MAEO;AACNH,kBAAAA,YAAY,CAACU,GAAb,CAAiBP,OAAM,CAACC,EAAxB,EAA4B,CAACD,OAAD,CAA5B;AACA;AACD;AACD;AAjBqE;AAAA;AAAA;AAAA;AAAA;;AAAA,sDAmB5CH,YAAY,CAACW,MAAb,EAnB4C;AAAA;;AAAA;AAmBtE,mEAAiD;AAAA,kBAAtCL,YAAsC;;AAChD,kBAAIA,YAAW,CAACM,MAAZ,GAAqB,CAAzB,EAA4B;AAAA,4DACNN,YADM;AAAA;;AAAA;AAC3B,yEAAkC;AAAA,wBAAvBH,QAAuB;AACjC,wBAAMU,gBAAgB,GAAG,IAAI5B,gBAAJ,CAAqBiB,OAArB,CAAzB;AACAC,oBAAAA,QAAM,CAACC,EAAP,aAAeD,QAAM,CAACC,EAAtB,cAA4BlB,OAAO,CAClC2B,gBAAgB,CAACC,OAAjB,CAAyBX,QAAM,CAACY,UAAP,EAAzB,CADkC,CAAnC;AAGA;AAN0B;AAAA;AAAA;AAAA;AAAA;AAO3B;AACD;AA5BqE;AAAA;AAAA;AAAA;AAAA;AA6BtE,SA7BD;AA8BA,OA/BD;AAgCA;;;;;;AAGFZ,MAAM,CAACa,OAAP,GAAiBxB,kBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst createHash = require(\"./util/createHash\");\nconst RequestShortener = require(\"./RequestShortener\");\n\nconst getHash = str => {\n\tconst hash = createHash(\"md4\");\n\thash.update(str);\n\tconst digest = /** @type {string} */ (hash.digest(\"hex\"));\n\treturn digest.substr(0, 4);\n};\n\nclass NamedModulesPlugin {\n\tconstructor(options) {\n\t\tthis.options = options || {};\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"NamedModulesPlugin\", compilation => {\n\t\t\tcompilation.hooks.beforeModuleIds.tap(\"NamedModulesPlugin\", modules => {\n\t\t\t\tconst namedModules = new Map();\n\t\t\t\tconst context = this.options.context || compiler.options.context;\n\n\t\t\t\tfor (const module of modules) {\n\t\t\t\t\tif (module.id === null && module.libIdent) {\n\t\t\t\t\t\tmodule.id = module.libIdent({ context });\n\t\t\t\t\t}\n\n\t\t\t\t\tif (module.id !== null) {\n\t\t\t\t\t\tconst namedModule = namedModules.get(module.id);\n\t\t\t\t\t\tif (namedModule !== undefined) {\n\t\t\t\t\t\t\tnamedModule.push(module);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnamedModules.set(module.id, [module]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const namedModule of namedModules.values()) {\n\t\t\t\t\tif (namedModule.length > 1) {\n\t\t\t\t\t\tfor (const module of namedModule) {\n\t\t\t\t\t\t\tconst requestShortener = new RequestShortener(context);\n\t\t\t\t\t\t\tmodule.id = `${module.id}?${getHash(\n\t\t\t\t\t\t\t\trequestShortener.shorten(module.identifier())\n\t\t\t\t\t\t\t)}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = NamedModulesPlugin;\n"]},"metadata":{},"sourceType":"script"}