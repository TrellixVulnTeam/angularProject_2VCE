{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Hook = require(\"./Hook\");\n\nvar HookCodeFactory = require(\"./HookCodeFactory\");\n\nvar AsyncSeriesBailHookCodeFactory = /*#__PURE__*/function (_HookCodeFactory) {\n  _inherits(AsyncSeriesBailHookCodeFactory, _HookCodeFactory);\n\n  var _super = _createSuper(AsyncSeriesBailHookCodeFactory);\n\n  function AsyncSeriesBailHookCodeFactory() {\n    _classCallCheck(this, AsyncSeriesBailHookCodeFactory);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AsyncSeriesBailHookCodeFactory, [{\n    key: \"content\",\n    value: function content(_ref) {\n      var _onError = _ref.onError,\n          _onResult = _ref.onResult,\n          resultReturns = _ref.resultReturns,\n          onDone = _ref.onDone;\n      return this.callTapsSeries({\n        onError: function onError(i, err, next, doneBreak) {\n          return _onError(err) + doneBreak(true);\n        },\n        onResult: function onResult(i, result, next) {\n          return \"if(\".concat(result, \" !== undefined) {\\n\").concat(_onResult(result), \";\\n} else {\\n\").concat(next(), \"}\\n\");\n        },\n        resultReturns: resultReturns,\n        onDone: onDone\n      });\n    }\n  }]);\n\n  return AsyncSeriesBailHookCodeFactory;\n}(HookCodeFactory);\n\nvar factory = new AsyncSeriesBailHookCodeFactory();\n\nvar AsyncSeriesBailHook = /*#__PURE__*/function (_Hook) {\n  _inherits(AsyncSeriesBailHook, _Hook);\n\n  var _super2 = _createSuper(AsyncSeriesBailHook);\n\n  function AsyncSeriesBailHook() {\n    _classCallCheck(this, AsyncSeriesBailHook);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(AsyncSeriesBailHook, [{\n    key: \"compile\",\n    value: function compile(options) {\n      factory.setup(this, options);\n      return factory.create(options);\n    }\n  }]);\n\n  return AsyncSeriesBailHook;\n}(Hook);\n\nObject.defineProperties(AsyncSeriesBailHook.prototype, {\n  _call: {\n    value: undefined,\n    configurable: true,\n    writable: true\n  }\n});\nmodule.exports = AsyncSeriesBailHook;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/tapable/lib/AsyncSeriesBailHook.js"],"names":["Hook","require","HookCodeFactory","AsyncSeriesBailHookCodeFactory","onError","onResult","resultReturns","onDone","callTapsSeries","i","err","next","doneBreak","result","factory","AsyncSeriesBailHook","options","setup","create","Object","defineProperties","prototype","_call","value","undefined","configurable","writable","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;IAEME,8B;;;;;;;;;;;;;WACL,uBAAsD;AAAA,UAA5CC,QAA4C,QAA5CA,OAA4C;AAAA,UAAnCC,SAAmC,QAAnCA,QAAmC;AAAA,UAAzBC,aAAyB,QAAzBA,aAAyB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AACrD,aAAO,KAAKC,cAAL,CAAoB;AAC1BJ,QAAAA,OAAO,EAAE,iBAACK,CAAD,EAAIC,GAAJ,EAASC,IAAT,EAAeC,SAAf;AAAA,iBAA6BR,QAAO,CAACM,GAAD,CAAP,GAAeE,SAAS,CAAC,IAAD,CAArD;AAAA,SADiB;AAE1BP,QAAAA,QAAQ,EAAE,kBAACI,CAAD,EAAII,MAAJ,EAAYF,IAAZ;AAAA,8BACHE,MADG,gCACyBR,SAAQ,CACzCQ,MADyC,CADjC,0BAGQF,IAAI,EAHZ;AAAA,SAFgB;AAM1BL,QAAAA,aAAa,EAAbA,aAN0B;AAO1BC,QAAAA,MAAM,EAANA;AAP0B,OAApB,CAAP;AASA;;;;EAX2CL,e;;AAc7C,IAAMY,OAAO,GAAG,IAAIX,8BAAJ,EAAhB;;IAEMY,mB;;;;;;;;;;;;;WACL,iBAAQC,OAAR,EAAiB;AAChBF,MAAAA,OAAO,CAACG,KAAR,CAAc,IAAd,EAAoBD,OAApB;AACA,aAAOF,OAAO,CAACI,MAAR,CAAeF,OAAf,CAAP;AACA;;;;EAJgChB,I;;AAOlCmB,MAAM,CAACC,gBAAP,CAAwBL,mBAAmB,CAACM,SAA5C,EAAuD;AACtDC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAEC,SAAT;AAAoBC,IAAAA,YAAY,EAAE,IAAlC;AAAwCC,IAAAA,QAAQ,EAAE;AAAlD;AAD+C,CAAvD;AAIAC,MAAM,CAACC,OAAP,GAAiBb,mBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncSeriesBailHookCodeFactory extends HookCodeFactory {\n\tcontent({ onError, onResult, resultReturns, onDone }) {\n\t\treturn this.callTapsSeries({\n\t\t\tonError: (i, err, next, doneBreak) => onError(err) + doneBreak(true),\n\t\t\tonResult: (i, result, next) =>\n\t\t\t\t`if(${result} !== undefined) {\\n${onResult(\n\t\t\t\t\tresult\n\t\t\t\t)};\\n} else {\\n${next()}}\\n`,\n\t\t\tresultReturns,\n\t\t\tonDone\n\t\t});\n\t}\n}\n\nconst factory = new AsyncSeriesBailHookCodeFactory();\n\nclass AsyncSeriesBailHook extends Hook {\n\tcompile(options) {\n\t\tfactory.setup(this, options);\n\t\treturn factory.create(options);\n\t}\n}\n\nObject.defineProperties(AsyncSeriesBailHook.prototype, {\n\t_call: { value: undefined, configurable: true, writable: true }\n});\n\nmodule.exports = AsyncSeriesBailHook;\n"]},"metadata":{},"sourceType":"script"}