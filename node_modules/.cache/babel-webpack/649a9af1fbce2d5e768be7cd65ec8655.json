{"ast":null,"code":"// This is adapted from https://github.com/normalize/mz\n// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors\nvar u = require('universalify').fromCallback;\n\nvar fs = require('graceful-fs');\n\nvar api = ['access', 'appendFile', 'chmod', 'chown', 'close', 'fchmod', 'fchown', 'fdatasync', 'fstat', 'fsync', 'ftruncate', 'futimes', 'lchown', 'link', 'lstat', 'mkdir', 'open', 'readFile', 'readdir', 'readlink', 'realpath', 'rename', 'rmdir', 'stat', 'symlink', 'truncate', 'unlink', 'utimes', 'writeFile']; // Add methods that are only in some Node.js versions\n// fs.copyFile was added in Node.js v8.5.0\n\ntypeof fs.copyFile === 'function' && api.push('copyFile'); // fs.mkdtemp() was added in Node.js v5.10.0\n\ntypeof fs.mkdtemp === 'function' && api.push('mkdtemp'); // Export all keys:\n\nObject.keys(fs).forEach(function (key) {\n  exports[key] = fs[key];\n}); // Universalify async methods:\n\napi.forEach(function (method) {\n  exports[method] = u(fs[method]);\n}); // We differ from mz/fs in that we still ship the old, broken, fs.exists()\n// since we are a drop-in replacement for the native module\n\nexports.exists = function (filename, callback) {\n  if (typeof callback === 'function') {\n    return fs.exists(filename, callback);\n  }\n\n  return new Promise(function (resolve) {\n    return fs.exists(filename, resolve);\n  });\n}; // fs.read() & fs.write need special treatment due to multiple callback args\n\n\nexports.read = function (fd, buffer, offset, length, position, callback) {\n  if (typeof callback === 'function') {\n    return fs.read(fd, buffer, offset, length, position, callback);\n  }\n\n  return new Promise(function (resolve, reject) {\n    fs.read(fd, buffer, offset, length, position, function (err, bytesRead, buffer) {\n      if (err) return reject(err);\n      resolve({\n        bytesRead: bytesRead,\n        buffer: buffer\n      });\n    });\n  });\n}; // Function signature can be\n// fs.write(fd, buffer[, offset[, length[, position]]], callback)\n// OR\n// fs.write(fd, string[, position[, encoding]], callback)\n// so we need to handle both cases\n\n\nexports.write = function (fd, buffer, a, b, c, callback) {\n  if (typeof arguments[arguments.length - 1] === 'function') {\n    return fs.write(fd, buffer, a, b, c, callback);\n  } // Check for old, depricated fs.write(fd, string[, position[, encoding]], callback)\n\n\n  if (typeof buffer === 'string') {\n    return new Promise(function (resolve, reject) {\n      fs.write(fd, buffer, a, b, function (err, bytesWritten, buffer) {\n        if (err) return reject(err);\n        resolve({\n          bytesWritten: bytesWritten,\n          buffer: buffer\n        });\n      });\n    });\n  }\n\n  return new Promise(function (resolve, reject) {\n    fs.write(fd, buffer, a, b, c, function (err, bytesWritten, buffer) {\n      if (err) return reject(err);\n      resolve({\n        bytesWritten: bytesWritten,\n        buffer: buffer\n      });\n    });\n  });\n};","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/fs-extra/lib/fs/index.js"],"names":["u","require","fromCallback","fs","api","copyFile","push","mkdtemp","Object","keys","forEach","key","exports","method","exists","filename","callback","Promise","resolve","read","fd","buffer","offset","length","position","reject","err","bytesRead","write","a","b","c","arguments","bytesWritten"],"mappings":"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","sourcesContent":["// This is adapted from https://github.com/normalize/mz\n// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\n\nconst api = [\n  'access',\n  'appendFile',\n  'chmod',\n  'chown',\n  'close',\n  'fchmod',\n  'fchown',\n  'fdatasync',\n  'fstat',\n  'fsync',\n  'ftruncate',\n  'futimes',\n  'lchown',\n  'link',\n  'lstat',\n  'mkdir',\n  'open',\n  'readFile',\n  'readdir',\n  'readlink',\n  'realpath',\n  'rename',\n  'rmdir',\n  'stat',\n  'symlink',\n  'truncate',\n  'unlink',\n  'utimes',\n  'writeFile'\n]\n// Add methods that are only in some Node.js versions\n// fs.copyFile was added in Node.js v8.5.0\ntypeof fs.copyFile === 'function' && api.push('copyFile')\n// fs.mkdtemp() was added in Node.js v5.10.0\ntypeof fs.mkdtemp === 'function' && api.push('mkdtemp')\n\n// Export all keys:\nObject.keys(fs).forEach(key => {\n  exports[key] = fs[key]\n})\n\n// Universalify async methods:\napi.forEach(method => {\n  exports[method] = u(fs[method])\n})\n\n// We differ from mz/fs in that we still ship the old, broken, fs.exists()\n// since we are a drop-in replacement for the native module\nexports.exists = function (filename, callback) {\n  if (typeof callback === 'function') {\n    return fs.exists(filename, callback)\n  }\n  return new Promise(resolve => {\n    return fs.exists(filename, resolve)\n  })\n}\n\n// fs.read() & fs.write need special treatment due to multiple callback args\n\nexports.read = function (fd, buffer, offset, length, position, callback) {\n  if (typeof callback === 'function') {\n    return fs.read(fd, buffer, offset, length, position, callback)\n  }\n  return new Promise((resolve, reject) => {\n    fs.read(fd, buffer, offset, length, position, (err, bytesRead, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesRead, buffer })\n    })\n  })\n}\n\n// Function signature can be\n// fs.write(fd, buffer[, offset[, length[, position]]], callback)\n// OR\n// fs.write(fd, string[, position[, encoding]], callback)\n// so we need to handle both cases\nexports.write = function (fd, buffer, a, b, c, callback) {\n  if (typeof arguments[arguments.length - 1] === 'function') {\n    return fs.write(fd, buffer, a, b, c, callback)\n  }\n\n  // Check for old, depricated fs.write(fd, string[, position[, encoding]], callback)\n  if (typeof buffer === 'string') {\n    return new Promise((resolve, reject) => {\n      fs.write(fd, buffer, a, b, (err, bytesWritten, buffer) => {\n        if (err) return reject(err)\n        resolve({ bytesWritten, buffer })\n      })\n    })\n  }\n\n  return new Promise((resolve, reject) => {\n    fs.write(fd, buffer, a, b, c, (err, bytesWritten, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesWritten, buffer })\n    })\n  })\n}\n"]},"metadata":{},"sourceType":"script"}