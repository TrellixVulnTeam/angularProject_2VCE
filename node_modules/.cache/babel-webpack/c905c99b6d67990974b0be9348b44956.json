{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.runWebpackDevServer = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar architect_1 = require(\"@angular-devkit/architect\");\n\nvar core_1 = require(\"@angular-devkit/core\");\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar webpack = require(\"webpack\");\n\nvar WebpackDevServer = require(\"webpack-dev-server\");\n\nvar utils_1 = require(\"../utils\");\n\nfunction runWebpackDevServer(config, context) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var createWebpack = function createWebpack(c) {\n    if (options.webpackFactory) {\n      var result = options.webpackFactory(c);\n\n      if (rxjs_1.isObservable(result)) {\n        return result;\n      } else {\n        return rxjs_1.of(result);\n      }\n    } else {\n      return rxjs_1.of(webpack(c));\n    }\n  };\n\n  var createWebpackDevServer = function createWebpackDevServer(webpack, config) {\n    if (options.webpackDevServerFactory) {\n      return new options.webpackDevServerFactory(webpack, config);\n    }\n\n    return new WebpackDevServer(webpack, config);\n  };\n\n  var log = options.logging || function (stats, config) {\n    return context.logger.info(stats.toString(config.stats));\n  };\n\n  var devServerConfig = options.devServerConfig || config.devServer || {};\n\n  if (devServerConfig.stats) {\n    config.stats = devServerConfig.stats;\n  } // Disable stats reporting by the devserver, we have our own logger.\n\n\n  devServerConfig.stats = false;\n  return createWebpack(_objectSpread(_objectSpread({}, config), {}, {\n    watch: false\n  })).pipe(operators_1.switchMap(function (webpackCompiler) {\n    return new rxjs_1.Observable(function (obs) {\n      var server = createWebpackDevServer(webpackCompiler, devServerConfig);\n      var result;\n      webpackCompiler.hooks.done.tap('build-webpack', function (stats) {\n        // Log stats.\n        log(stats, config);\n        obs.next(_objectSpread(_objectSpread({}, result), {}, {\n          emittedFiles: utils_1.getEmittedFiles(stats.compilation),\n          success: !stats.hasErrors()\n        }));\n      });\n      server.listen(devServerConfig.port === undefined ? 8080 : devServerConfig.port, devServerConfig.host === undefined ? 'localhost' : devServerConfig.host, function (err) {\n        if (err) {\n          obs.error(err);\n        } else {\n          var address = this.address();\n          result = {\n            success: true,\n            port: typeof address === 'string' ? 0 : address.port,\n            family: typeof address === 'string' ? '' : address.family,\n            address: typeof address === 'string' ? address : address.address\n          };\n        }\n      }); // Teardown logic. Close the server when unsubscribed from.\n\n      return function () {\n        return server.close();\n      };\n    });\n  }));\n}\n\nexports.runWebpackDevServer = runWebpackDevServer;\nexports.default = architect_1.createBuilder(function (options, context) {\n  var configPath = core_1.resolve(core_1.normalize(context.workspaceRoot), core_1.normalize(options.webpackConfig));\n  return rxjs_1.from(Promise.resolve().then(function () {\n    return require(core_1.getSystemPath(configPath));\n  })).pipe(operators_1.switchMap(function (config) {\n    return runWebpackDevServer(config, context);\n  }));\n});","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-webpack/src/webpack-dev-server/index.js"],"names":["Object","defineProperty","exports","value","runWebpackDevServer","architect_1","require","core_1","rxjs_1","operators_1","webpack","WebpackDevServer","utils_1","config","context","options","createWebpack","c","webpackFactory","result","isObservable","of","createWebpackDevServer","webpackDevServerFactory","log","logging","stats","logger","info","toString","devServerConfig","devServer","watch","pipe","switchMap","webpackCompiler","Observable","obs","server","hooks","done","tap","next","emittedFiles","getEmittedFiles","compilation","success","hasErrors","listen","port","undefined","host","err","error","address","family","close","default","createBuilder","configPath","resolve","normalize","workspaceRoot","webpackConfig","from","Promise","then","getSystemPath"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.runWebpackDevServer = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst architect_1 = require(\"@angular-devkit/architect\");\nconst core_1 = require(\"@angular-devkit/core\");\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst webpack = require(\"webpack\");\nconst WebpackDevServer = require(\"webpack-dev-server\");\nconst utils_1 = require(\"../utils\");\nfunction runWebpackDevServer(config, context, options = {}) {\n    const createWebpack = (c) => {\n        if (options.webpackFactory) {\n            const result = options.webpackFactory(c);\n            if (rxjs_1.isObservable(result)) {\n                return result;\n            }\n            else {\n                return rxjs_1.of(result);\n            }\n        }\n        else {\n            return rxjs_1.of(webpack(c));\n        }\n    };\n    const createWebpackDevServer = (webpack, config) => {\n        if (options.webpackDevServerFactory) {\n            return new options.webpackDevServerFactory(webpack, config);\n        }\n        return new WebpackDevServer(webpack, config);\n    };\n    const log = options.logging\n        || ((stats, config) => context.logger.info(stats.toString(config.stats)));\n    const devServerConfig = options.devServerConfig || config.devServer || {};\n    if (devServerConfig.stats) {\n        config.stats = devServerConfig.stats;\n    }\n    // Disable stats reporting by the devserver, we have our own logger.\n    devServerConfig.stats = false;\n    return createWebpack({ ...config, watch: false }).pipe(operators_1.switchMap(webpackCompiler => new rxjs_1.Observable(obs => {\n        const server = createWebpackDevServer(webpackCompiler, devServerConfig);\n        let result;\n        webpackCompiler.hooks.done.tap('build-webpack', (stats) => {\n            // Log stats.\n            log(stats, config);\n            obs.next({\n                ...result,\n                emittedFiles: utils_1.getEmittedFiles(stats.compilation),\n                success: !stats.hasErrors(),\n            });\n        });\n        server.listen(devServerConfig.port === undefined ? 8080 : devServerConfig.port, devServerConfig.host === undefined ? 'localhost' : devServerConfig.host, function (err) {\n            if (err) {\n                obs.error(err);\n            }\n            else {\n                const address = this.address();\n                result = {\n                    success: true,\n                    port: typeof address === 'string' ? 0 : address.port,\n                    family: typeof address === 'string' ? '' : address.family,\n                    address: typeof address === 'string' ? address : address.address,\n                };\n            }\n        });\n        // Teardown logic. Close the server when unsubscribed from.\n        return () => server.close();\n    })));\n}\nexports.runWebpackDevServer = runWebpackDevServer;\nexports.default = architect_1.createBuilder((options, context) => {\n    const configPath = core_1.resolve(core_1.normalize(context.workspaceRoot), core_1.normalize(options.webpackConfig));\n    return rxjs_1.from(Promise.resolve().then(() => require(core_1.getSystemPath(configPath)))).pipe(operators_1.switchMap((config) => runWebpackDevServer(config, context)));\n});\n"]},"metadata":{},"sourceType":"script"}