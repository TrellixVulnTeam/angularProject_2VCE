{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LoggingAnalytics = void 0;\n/**\n * Analytics implementation that logs analytics events to a logger. This should be used for\n * debugging mainly.\n */\n\nvar LoggingAnalytics = /*#__PURE__*/function () {\n  function LoggingAnalytics(_logger) {\n    _classCallCheck(this, LoggingAnalytics);\n\n    this._logger = _logger;\n  }\n\n  _createClass(LoggingAnalytics, [{\n    key: \"event\",\n    value: function event(category, action, options) {\n      this._logger.info('event ' + JSON.stringify(_objectSpread({\n        category: category,\n        action: action\n      }, options)));\n    }\n  }, {\n    key: \"screenview\",\n    value: function screenview(screenName, appName, options) {\n      this._logger.info('screenview ' + JSON.stringify(_objectSpread({\n        screenName: screenName,\n        appName: appName\n      }, options)));\n    }\n  }, {\n    key: \"pageview\",\n    value: function pageview(path, options) {\n      this._logger.info('pageview ' + JSON.stringify(_objectSpread({\n        path: path\n      }, options)));\n    }\n  }, {\n    key: \"timing\",\n    value: function timing(category, variable, time, options) {\n      this._logger.info('timing ' + JSON.stringify(_objectSpread({\n        category: category,\n        variable: variable,\n        time: time\n      }, options)));\n    }\n  }, {\n    key: \"flush\",\n    value: function flush() {\n      return Promise.resolve();\n    }\n  }]);\n\n  return LoggingAnalytics;\n}();\n\nexports.LoggingAnalytics = LoggingAnalytics;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/@angular-devkit/core/src/analytics/logging.js"],"names":["Object","defineProperty","exports","value","LoggingAnalytics","_logger","category","action","options","info","JSON","stringify","screenName","appName","path","variable","time","Promise","resolve"],"mappings":"AAAA;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2B,KAAK,CAAhC;AACA;AACA;AACA;AACA;;IACMA,gB;AACF,4BAAYC,OAAZ,EAAqB;AAAA;;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACH;;;;WACD,eAAMC,QAAN,EAAgBC,MAAhB,EAAwBC,OAAxB,EAAiC;AAC7B,WAAKH,OAAL,CAAaI,IAAb,CAAkB,WAAWC,IAAI,CAACC,SAAL;AAAiBL,QAAAA,QAAQ,EAARA,QAAjB;AAA2BC,QAAAA,MAAM,EAANA;AAA3B,SAAsCC,OAAtC,EAA7B;AACH;;;WACD,oBAAWI,UAAX,EAAuBC,OAAvB,EAAgCL,OAAhC,EAAyC;AACrC,WAAKH,OAAL,CAAaI,IAAb,CAAkB,gBAAgBC,IAAI,CAACC,SAAL;AAAiBC,QAAAA,UAAU,EAAVA,UAAjB;AAA6BC,QAAAA,OAAO,EAAPA;AAA7B,SAAyCL,OAAzC,EAAlC;AACH;;;WACD,kBAASM,IAAT,EAAeN,OAAf,EAAwB;AACpB,WAAKH,OAAL,CAAaI,IAAb,CAAkB,cAAcC,IAAI,CAACC,SAAL;AAAiBG,QAAAA,IAAI,EAAJA;AAAjB,SAA0BN,OAA1B,EAAhC;AACH;;;WACD,gBAAOF,QAAP,EAAiBS,QAAjB,EAA2BC,IAA3B,EAAiCR,OAAjC,EAA0C;AACtC,WAAKH,OAAL,CAAaI,IAAb,CAAkB,YAAYC,IAAI,CAACC,SAAL;AAAiBL,QAAAA,QAAQ,EAARA,QAAjB;AAA2BS,QAAAA,QAAQ,EAARA,QAA3B;AAAqCC,QAAAA,IAAI,EAAJA;AAArC,SAA8CR,OAA9C,EAA9B;AACH;;;WACD,iBAAQ;AACJ,aAAOS,OAAO,CAACC,OAAR,EAAP;AACH;;;;;;AAELhB,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggingAnalytics = void 0;\n/**\n * Analytics implementation that logs analytics events to a logger. This should be used for\n * debugging mainly.\n */\nclass LoggingAnalytics {\n    constructor(_logger) {\n        this._logger = _logger;\n    }\n    event(category, action, options) {\n        this._logger.info('event ' + JSON.stringify({ category, action, ...options }));\n    }\n    screenview(screenName, appName, options) {\n        this._logger.info('screenview ' + JSON.stringify({ screenName, appName, ...options }));\n    }\n    pageview(path, options) {\n        this._logger.info('pageview ' + JSON.stringify({ path, ...options }));\n    }\n    timing(category, variable, time, options) {\n        this._logger.info('timing ' + JSON.stringify({ category, variable, time, ...options }));\n    }\n    flush() {\n        return Promise.resolve();\n    }\n}\nexports.LoggingAnalytics = LoggingAnalytics;\n"]},"metadata":{},"sourceType":"script"}