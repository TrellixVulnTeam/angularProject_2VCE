{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Logger = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar Logger = /*#__PURE__*/function (_rxjs_1$Observable) {\n  _inherits(Logger, _rxjs_1$Observable);\n\n  var _super = _createSuper(Logger);\n\n  function Logger(name) {\n    var _this;\n\n    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, Logger);\n\n    _this = _super.call(this);\n    _this.name = name;\n    _this.parent = parent;\n    _this._subject = new rxjs_1.Subject();\n    _this._obs = rxjs_1.empty();\n    _this._subscription = null;\n    var path = [];\n    var p = parent;\n\n    while (p) {\n      path.push(p.name);\n      p = p.parent;\n    }\n\n    _this._metadata = {\n      name: name,\n      path: path\n    };\n    _this._observable = _this._subject.asObservable();\n\n    if (_this.parent && _this.parent._subject) {\n      // When the parent completes, complete us as well.\n      _this.parent._subject.subscribe(undefined, undefined, function () {\n        return _this.complete();\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(Logger, [{\n    key: \"_observable\",\n    get: function get() {\n      return this._obs;\n    },\n    set: function set(v) {\n      var _this2 = this;\n\n      if (this._subscription) {\n        this._subscription.unsubscribe();\n      }\n\n      this._obs = v;\n\n      if (this.parent) {\n        this._subscription = this.subscribe(function (value) {\n          if (_this2.parent) {\n            _this2.parent._subject.next(value);\n          }\n        }, function (error) {\n          if (_this2.parent) {\n            _this2.parent._subject.error(error);\n          }\n        }, function () {\n          if (_this2._subscription) {\n            _this2._subscription.unsubscribe();\n          }\n\n          _this2._subscription = null;\n        });\n      }\n    }\n  }, {\n    key: \"asApi\",\n    value: function asApi() {\n      var _this3 = this;\n\n      return {\n        createChild: function createChild(name) {\n          return _this3.createChild(name);\n        },\n        log: function log(level, message, metadata) {\n          return _this3.log(level, message, metadata);\n        },\n        debug: function debug(message, metadata) {\n          return _this3.debug(message, metadata);\n        },\n        info: function info(message, metadata) {\n          return _this3.info(message, metadata);\n        },\n        warn: function warn(message, metadata) {\n          return _this3.warn(message, metadata);\n        },\n        error: function error(message, metadata) {\n          return _this3.error(message, metadata);\n        },\n        fatal: function fatal(message, metadata) {\n          return _this3.fatal(message, metadata);\n        }\n      };\n    }\n  }, {\n    key: \"createChild\",\n    value: function createChild(name) {\n      return new this.constructor(name, this);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      this._subject.complete();\n    }\n  }, {\n    key: \"log\",\n    value: function log(level, message) {\n      var metadata = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var entry = Object.assign({}, metadata, this._metadata, {\n        level: level,\n        message: message,\n        timestamp: +Date.now()\n      });\n\n      this._subject.next(entry);\n    }\n  }, {\n    key: \"next\",\n    value: function next(entry) {\n      this._subject.next(entry);\n    }\n  }, {\n    key: \"debug\",\n    value: function debug(message) {\n      var metadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.log('debug', message, metadata);\n    }\n  }, {\n    key: \"info\",\n    value: function info(message) {\n      var metadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.log('info', message, metadata);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(message) {\n      var metadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.log('warn', message, metadata);\n    }\n  }, {\n    key: \"error\",\n    value: function error(message) {\n      var metadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.log('error', message, metadata);\n    }\n  }, {\n    key: \"fatal\",\n    value: function fatal(message) {\n      var metadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.log('fatal', message, metadata);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"<Logger(\".concat(this.name, \")>\");\n    }\n  }, {\n    key: \"lift\",\n    value: function lift(operator) {\n      return this._observable.lift(operator);\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(_observerOrNext, _error, _complete) {\n      return this._observable.subscribe.apply(this._observable, arguments);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(next, PromiseCtor) {\n      return this._observable.forEach(next, PromiseCtor);\n    }\n  }]);\n\n  return Logger;\n}(rxjs_1.Observable);\n\nexports.Logger = Logger;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/node_modules/@angular-devkit/core/src/logger/logger.js"],"names":["Object","defineProperty","exports","value","Logger","rxjs_1","require","name","parent","_subject","Subject","_obs","empty","_subscription","path","p","push","_metadata","_observable","asObservable","subscribe","undefined","complete","v","unsubscribe","next","error","createChild","log","level","message","metadata","debug","info","warn","fatal","constructor","entry","assign","timestamp","Date","now","operator","lift","_observerOrNext","_error","_complete","apply","arguments","PromiseCtor","forEach","Observable"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst rxjs_1 = require(\"rxjs\");\nclass Logger extends rxjs_1.Observable {\n    constructor(name, parent = null) {\n        super();\n        this.name = name;\n        this.parent = parent;\n        this._subject = new rxjs_1.Subject();\n        this._obs = rxjs_1.empty();\n        this._subscription = null;\n        const path = [];\n        let p = parent;\n        while (p) {\n            path.push(p.name);\n            p = p.parent;\n        }\n        this._metadata = { name, path };\n        this._observable = this._subject.asObservable();\n        if (this.parent && this.parent._subject) {\n            // When the parent completes, complete us as well.\n            this.parent._subject.subscribe(undefined, undefined, () => this.complete());\n        }\n    }\n    get _observable() { return this._obs; }\n    set _observable(v) {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        this._obs = v;\n        if (this.parent) {\n            this._subscription = this.subscribe((value) => {\n                if (this.parent) {\n                    this.parent._subject.next(value);\n                }\n            }, (error) => {\n                if (this.parent) {\n                    this.parent._subject.error(error);\n                }\n            }, () => {\n                if (this._subscription) {\n                    this._subscription.unsubscribe();\n                }\n                this._subscription = null;\n            });\n        }\n    }\n    asApi() {\n        return {\n            createChild: (name) => this.createChild(name),\n            log: (level, message, metadata) => {\n                return this.log(level, message, metadata);\n            },\n            debug: (message, metadata) => this.debug(message, metadata),\n            info: (message, metadata) => this.info(message, metadata),\n            warn: (message, metadata) => this.warn(message, metadata),\n            error: (message, metadata) => this.error(message, metadata),\n            fatal: (message, metadata) => this.fatal(message, metadata),\n        };\n    }\n    createChild(name) {\n        return new this.constructor(name, this);\n    }\n    complete() {\n        this._subject.complete();\n    }\n    log(level, message, metadata = {}) {\n        const entry = Object.assign({}, metadata, this._metadata, {\n            level, message, timestamp: +Date.now(),\n        });\n        this._subject.next(entry);\n    }\n    next(entry) {\n        this._subject.next(entry);\n    }\n    debug(message, metadata = {}) {\n        return this.log('debug', message, metadata);\n    }\n    info(message, metadata = {}) {\n        return this.log('info', message, metadata);\n    }\n    warn(message, metadata = {}) {\n        return this.log('warn', message, metadata);\n    }\n    error(message, metadata = {}) {\n        return this.log('error', message, metadata);\n    }\n    fatal(message, metadata = {}) {\n        return this.log('fatal', message, metadata);\n    }\n    toString() {\n        return `<Logger(${this.name})>`;\n    }\n    lift(operator) {\n        return this._observable.lift(operator);\n    }\n    subscribe(_observerOrNext, _error, _complete) {\n        return this._observable.subscribe.apply(this._observable, arguments);\n    }\n    forEach(next, PromiseCtor) {\n        return this._observable.forEach(next, PromiseCtor);\n    }\n}\nexports.Logger = Logger;\n"]},"metadata":{},"sourceType":"script"}