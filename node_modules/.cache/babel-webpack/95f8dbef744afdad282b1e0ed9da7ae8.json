{"ast":null,"code":"'use strict';\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _require = require('stream'),\n    Transform = _require.Transform;\n\nvar ObjectTransform = /*#__PURE__*/function (_Transform) {\n  _inherits(ObjectTransform, _Transform);\n\n  var _super = _createSuper(ObjectTransform);\n\n  function ObjectTransform() {\n    _classCallCheck(this, ObjectTransform);\n\n    return _super.call(this, {\n      objectMode: true\n    });\n  }\n\n  return ObjectTransform;\n}(Transform);\n\nvar FilterStream = /*#__PURE__*/function (_ObjectTransform) {\n  _inherits(FilterStream, _ObjectTransform);\n\n  var _super2 = _createSuper(FilterStream);\n\n  function FilterStream(filter) {\n    var _this;\n\n    _classCallCheck(this, FilterStream);\n\n    _this = _super2.call(this);\n    _this._filter = filter;\n    return _this;\n  }\n\n  _createClass(FilterStream, [{\n    key: \"_transform\",\n    value: function _transform(data, encoding, callback) {\n      if (this._filter(data)) {\n        this.push(data);\n      }\n\n      callback();\n    }\n  }]);\n\n  return FilterStream;\n}(ObjectTransform);\n\nvar UniqueStream = /*#__PURE__*/function (_ObjectTransform2) {\n  _inherits(UniqueStream, _ObjectTransform2);\n\n  var _super3 = _createSuper(UniqueStream);\n\n  function UniqueStream() {\n    var _this2;\n\n    _classCallCheck(this, UniqueStream);\n\n    _this2 = _super3.call(this);\n    _this2._pushed = new Set();\n    return _this2;\n  }\n\n  _createClass(UniqueStream, [{\n    key: \"_transform\",\n    value: function _transform(data, encoding, callback) {\n      if (!this._pushed.has(data)) {\n        this.push(data);\n\n        this._pushed.add(data);\n      }\n\n      callback();\n    }\n  }]);\n\n  return UniqueStream;\n}(ObjectTransform);\n\nmodule.exports = {\n  FilterStream: FilterStream,\n  UniqueStream: UniqueStream\n};","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/globby/stream-utils.js"],"names":["require","Transform","ObjectTransform","objectMode","FilterStream","filter","_filter","data","encoding","callback","push","UniqueStream","_pushed","Set","has","add","module","exports"],"mappings":"AAAA;;;;;;;;;;AACA,eAAoBA,OAAO,CAAC,QAAD,CAA3B;AAAA,IAAOC,SAAP,YAAOA,SAAP;;IAEMC,e;;;;;AACL,6BAAc;AAAA;;AAAA,6BACP;AACLC,MAAAA,UAAU,EAAE;AADP,KADO;AAIb;;;EAL4BF,S;;IAQxBG,Y;;;;;AACL,wBAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AACnB;AACA,UAAKC,OAAL,GAAeD,MAAf;AAFmB;AAGnB;;;;WAED,oBAAWE,IAAX,EAAiBC,QAAjB,EAA2BC,QAA3B,EAAqC;AACpC,UAAI,KAAKH,OAAL,CAAaC,IAAb,CAAJ,EAAwB;AACvB,aAAKG,IAAL,CAAUH,IAAV;AACA;;AAEDE,MAAAA,QAAQ;AACR;;;;EAZyBP,e;;IAerBS,Y;;;;;AACL,0BAAc;AAAA;;AAAA;;AACb;AACA,WAAKC,OAAL,GAAe,IAAIC,GAAJ,EAAf;AAFa;AAGb;;;;WAED,oBAAWN,IAAX,EAAiBC,QAAjB,EAA2BC,QAA3B,EAAqC;AACpC,UAAI,CAAC,KAAKG,OAAL,CAAaE,GAAb,CAAiBP,IAAjB,CAAL,EAA6B;AAC5B,aAAKG,IAAL,CAAUH,IAAV;;AACA,aAAKK,OAAL,CAAaG,GAAb,CAAiBR,IAAjB;AACA;;AAEDE,MAAAA,QAAQ;AACR;;;;EAbyBP,e;;AAgB3Bc,MAAM,CAACC,OAAP,GAAiB;AAChBb,EAAAA,YAAY,EAAZA,YADgB;AAEhBO,EAAAA,YAAY,EAAZA;AAFgB,CAAjB","sourcesContent":["'use strict';\nconst {Transform} = require('stream');\n\nclass ObjectTransform extends Transform {\n\tconstructor() {\n\t\tsuper({\n\t\t\tobjectMode: true\n\t\t});\n\t}\n}\n\nclass FilterStream extends ObjectTransform {\n\tconstructor(filter) {\n\t\tsuper();\n\t\tthis._filter = filter;\n\t}\n\n\t_transform(data, encoding, callback) {\n\t\tif (this._filter(data)) {\n\t\t\tthis.push(data);\n\t\t}\n\n\t\tcallback();\n\t}\n}\n\nclass UniqueStream extends ObjectTransform {\n\tconstructor() {\n\t\tsuper();\n\t\tthis._pushed = new Set();\n\t}\n\n\t_transform(data, encoding, callback) {\n\t\tif (!this._pushed.has(data)) {\n\t\t\tthis.push(data);\n\t\t\tthis._pushed.add(data);\n\t\t}\n\n\t\tcallback();\n\t}\n}\n\nmodule.exports = {\n\tFilterStream,\n\tUniqueStream\n};\n"]},"metadata":{},"sourceType":"script"}