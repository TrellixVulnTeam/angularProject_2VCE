{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _assertThisInitialized = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\n\nvar RequireEnsureDependency = require(\"./RequireEnsureDependency\");\n\nmodule.exports = /*#__PURE__*/function (_AsyncDependenciesBlo) {\n  _inherits(RequireEnsureDependenciesBlock, _AsyncDependenciesBlo);\n\n  var _super = _createSuper(RequireEnsureDependenciesBlock);\n\n  function RequireEnsureDependenciesBlock(expr, successExpression, errorExpression, chunkName, chunkNameRange, module, loc) {\n    var _this;\n\n    _classCallCheck(this, RequireEnsureDependenciesBlock);\n\n    _this = _super.call(this, chunkName, module, loc, null);\n    _this.expr = expr;\n    var successBodyRange = successExpression && successExpression.body && successExpression.body.range;\n\n    if (successBodyRange) {\n      _this.range = [successBodyRange[0] + 1, successBodyRange[1] - 1];\n    }\n\n    _this.chunkNameRange = chunkNameRange;\n    var dep = new RequireEnsureDependency(_assertThisInitialized(_this));\n    dep.loc = loc;\n\n    _this.addDependency(dep);\n\n    return _this;\n  }\n\n  return RequireEnsureDependenciesBlock;\n}(AsyncDependenciesBlock);","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/dependencies/RequireEnsureDependenciesBlock.js"],"names":["AsyncDependenciesBlock","require","RequireEnsureDependency","module","exports","expr","successExpression","errorExpression","chunkName","chunkNameRange","loc","successBodyRange","body","range","dep","addDependency"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AACA,IAAMA,sBAAsB,GAAGC,OAAO,CAAC,2BAAD,CAAtC;;AACA,IAAMC,uBAAuB,GAAGD,OAAO,CAAC,2BAAD,CAAvC;;AAEAE,MAAM,CAACC,OAAP;AAAA;;AAAA;;AACC,0CACCC,IADD,EAECC,iBAFD,EAGCC,eAHD,EAICC,SAJD,EAKCC,cALD,EAMCN,MAND,EAOCO,GAPD,EAQE;AAAA;;AAAA;;AACD,8BAAMF,SAAN,EAAiBL,MAAjB,EAAyBO,GAAzB,EAA8B,IAA9B;AACA,UAAKL,IAAL,GAAYA,IAAZ;AACA,QAAMM,gBAAgB,GACrBL,iBAAiB,IACjBA,iBAAiB,CAACM,IADlB,IAEAN,iBAAiB,CAACM,IAAlB,CAAuBC,KAHxB;;AAIA,QAAIF,gBAAJ,EAAsB;AACrB,YAAKE,KAAL,GAAa,CAACF,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,CAAvB,EAA0BA,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,CAAhD,CAAb;AACA;;AACD,UAAKF,cAAL,GAAsBA,cAAtB;AACA,QAAMK,GAAG,GAAG,IAAIZ,uBAAJ,+BAAZ;AACAY,IAAAA,GAAG,CAACJ,GAAJ,GAAUA,GAAV;;AACA,UAAKK,aAAL,CAAmBD,GAAnB;;AAbC;AAcD;;AAvBF;AAAA,EAA8Dd,sBAA9D","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\nconst RequireEnsureDependency = require(\"./RequireEnsureDependency\");\n\nmodule.exports = class RequireEnsureDependenciesBlock extends AsyncDependenciesBlock {\n\tconstructor(\n\t\texpr,\n\t\tsuccessExpression,\n\t\terrorExpression,\n\t\tchunkName,\n\t\tchunkNameRange,\n\t\tmodule,\n\t\tloc\n\t) {\n\t\tsuper(chunkName, module, loc, null);\n\t\tthis.expr = expr;\n\t\tconst successBodyRange =\n\t\t\tsuccessExpression &&\n\t\t\tsuccessExpression.body &&\n\t\t\tsuccessExpression.body.range;\n\t\tif (successBodyRange) {\n\t\t\tthis.range = [successBodyRange[0] + 1, successBodyRange[1] - 1];\n\t\t}\n\t\tthis.chunkNameRange = chunkNameRange;\n\t\tconst dep = new RequireEnsureDependency(this);\n\t\tdep.loc = loc;\n\t\tthis.addDependency(dep);\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}