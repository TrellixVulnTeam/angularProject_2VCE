{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLastNode = exports.getFirstNode = exports.collectDeepNodes = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ts = require(\"typescript\"); // Find all nodes from the AST in the subtree of node of SyntaxKind kind.\n\n\nfunction collectDeepNodes(node, kind) {\n  var kinds = Array.isArray(kind) ? kind : [kind];\n  var nodes = [];\n\n  var helper = function helper(child) {\n    if (kinds.includes(child.kind)) {\n      nodes.push(child);\n    }\n\n    ts.forEachChild(child, helper);\n  };\n\n  ts.forEachChild(node, helper);\n  return nodes;\n}\n\nexports.collectDeepNodes = collectDeepNodes;\n\nfunction getFirstNode(sourceFile) {\n  if (sourceFile.statements.length > 0) {\n    return sourceFile.statements[0];\n  }\n\n  return sourceFile.getChildAt(0);\n}\n\nexports.getFirstNode = getFirstNode;\n\nfunction getLastNode(sourceFile) {\n  if (sourceFile.statements.length > 0) {\n    return sourceFile.statements[sourceFile.statements.length - 1] || null;\n  }\n\n  return null;\n}\n\nexports.getLastNode = getLastNode;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@ngtools/webpack/src/transformers/ast_helpers.js"],"names":["Object","defineProperty","exports","value","getLastNode","getFirstNode","collectDeepNodes","ts","require","node","kind","kinds","Array","isArray","nodes","helper","child","includes","push","forEachChild","sourceFile","statements","length","getChildAt"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsBF,OAAO,CAACG,YAAR,GAAuBH,OAAO,CAACI,gBAAR,GAA2B,KAAK,CAA7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,EAAE,GAAGC,OAAO,CAAC,YAAD,CAAlB,C,CACA;;;AACA,SAASF,gBAAT,CAA0BG,IAA1B,EAAgCC,IAAhC,EAAsC;AAClC,MAAMC,KAAK,GAAGC,KAAK,CAACC,OAAN,CAAcH,IAAd,IAAsBA,IAAtB,GAA6B,CAACA,IAAD,CAA3C;AACA,MAAMI,KAAK,GAAG,EAAd;;AACA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtB,QAAIL,KAAK,CAACM,QAAN,CAAeD,KAAK,CAACN,IAArB,CAAJ,EAAgC;AAC5BI,MAAAA,KAAK,CAACI,IAAN,CAAWF,KAAX;AACH;;AACDT,IAAAA,EAAE,CAACY,YAAH,CAAgBH,KAAhB,EAAuBD,MAAvB;AACH,GALD;;AAMAR,EAAAA,EAAE,CAACY,YAAH,CAAgBV,IAAhB,EAAsBM,MAAtB;AACA,SAAOD,KAAP;AACH;;AACDZ,OAAO,CAACI,gBAAR,GAA2BA,gBAA3B;;AACA,SAASD,YAAT,CAAsBe,UAAtB,EAAkC;AAC9B,MAAIA,UAAU,CAACC,UAAX,CAAsBC,MAAtB,GAA+B,CAAnC,EAAsC;AAClC,WAAOF,UAAU,CAACC,UAAX,CAAsB,CAAtB,CAAP;AACH;;AACD,SAAOD,UAAU,CAACG,UAAX,CAAsB,CAAtB,CAAP;AACH;;AACDrB,OAAO,CAACG,YAAR,GAAuBA,YAAvB;;AACA,SAASD,WAAT,CAAqBgB,UAArB,EAAiC;AAC7B,MAAIA,UAAU,CAACC,UAAX,CAAsBC,MAAtB,GAA+B,CAAnC,EAAsC;AAClC,WAAOF,UAAU,CAACC,UAAX,CAAsBD,UAAU,CAACC,UAAX,CAAsBC,MAAtB,GAA+B,CAArD,KAA2D,IAAlE;AACH;;AACD,SAAO,IAAP;AACH;;AACDpB,OAAO,CAACE,WAAR,GAAsBA,WAAtB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLastNode = exports.getFirstNode = exports.collectDeepNodes = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ts = require(\"typescript\");\n// Find all nodes from the AST in the subtree of node of SyntaxKind kind.\nfunction collectDeepNodes(node, kind) {\n    const kinds = Array.isArray(kind) ? kind : [kind];\n    const nodes = [];\n    const helper = (child) => {\n        if (kinds.includes(child.kind)) {\n            nodes.push(child);\n        }\n        ts.forEachChild(child, helper);\n    };\n    ts.forEachChild(node, helper);\n    return nodes;\n}\nexports.collectDeepNodes = collectDeepNodes;\nfunction getFirstNode(sourceFile) {\n    if (sourceFile.statements.length > 0) {\n        return sourceFile.statements[0];\n    }\n    return sourceFile.getChildAt(0);\n}\nexports.getFirstNode = getFirstNode;\nfunction getLastNode(sourceFile) {\n    if (sourceFile.statements.length > 0) {\n        return sourceFile.statements[sourceFile.statements.length - 1] || null;\n    }\n    return null;\n}\nexports.getLastNode = getLastNode;\n"]},"metadata":{},"sourceType":"script"}