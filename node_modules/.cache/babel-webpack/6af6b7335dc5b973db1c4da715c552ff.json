{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler/src/chars\", [\"require\", \"exports\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.isOctalDigit = exports.isNewLine = exports.isAsciiHexDigit = exports.isAsciiLetter = exports.isDigit = exports.isWhitespace = exports.$BT = exports.$AT = exports.$TILDA = exports.$PIPE = exports.$NBSP = exports.$RBRACE = exports.$BAR = exports.$LBRACE = exports.$z = exports.$x = exports.$v = exports.$u = exports.$t = exports.$r = exports.$n = exports.$f = exports.$e = exports.$b = exports.$a = exports.$_ = exports.$CARET = exports.$RBRACKET = exports.$BACKSLASH = exports.$LBRACKET = exports.$Z = exports.$X = exports.$F = exports.$E = exports.$A = exports.$9 = exports.$7 = exports.$0 = exports.$QUESTION = exports.$GT = exports.$EQ = exports.$LT = exports.$SEMICOLON = exports.$COLON = exports.$SLASH = exports.$PERIOD = exports.$MINUS = exports.$COMMA = exports.$PLUS = exports.$STAR = exports.$RPAREN = exports.$LPAREN = exports.$SQ = exports.$AMPERSAND = exports.$PERCENT = exports.$$ = exports.$HASH = exports.$DQ = exports.$BANG = exports.$SPACE = exports.$CR = exports.$FF = exports.$VTAB = exports.$LF = exports.$TAB = exports.$BSPACE = exports.$EOF = void 0;\n  exports.$EOF = 0;\n  exports.$BSPACE = 8;\n  exports.$TAB = 9;\n  exports.$LF = 10;\n  exports.$VTAB = 11;\n  exports.$FF = 12;\n  exports.$CR = 13;\n  exports.$SPACE = 32;\n  exports.$BANG = 33;\n  exports.$DQ = 34;\n  exports.$HASH = 35;\n  exports.$$ = 36;\n  exports.$PERCENT = 37;\n  exports.$AMPERSAND = 38;\n  exports.$SQ = 39;\n  exports.$LPAREN = 40;\n  exports.$RPAREN = 41;\n  exports.$STAR = 42;\n  exports.$PLUS = 43;\n  exports.$COMMA = 44;\n  exports.$MINUS = 45;\n  exports.$PERIOD = 46;\n  exports.$SLASH = 47;\n  exports.$COLON = 58;\n  exports.$SEMICOLON = 59;\n  exports.$LT = 60;\n  exports.$EQ = 61;\n  exports.$GT = 62;\n  exports.$QUESTION = 63;\n  exports.$0 = 48;\n  exports.$7 = 55;\n  exports.$9 = 57;\n  exports.$A = 65;\n  exports.$E = 69;\n  exports.$F = 70;\n  exports.$X = 88;\n  exports.$Z = 90;\n  exports.$LBRACKET = 91;\n  exports.$BACKSLASH = 92;\n  exports.$RBRACKET = 93;\n  exports.$CARET = 94;\n  exports.$_ = 95;\n  exports.$a = 97;\n  exports.$b = 98;\n  exports.$e = 101;\n  exports.$f = 102;\n  exports.$n = 110;\n  exports.$r = 114;\n  exports.$t = 116;\n  exports.$u = 117;\n  exports.$v = 118;\n  exports.$x = 120;\n  exports.$z = 122;\n  exports.$LBRACE = 123;\n  exports.$BAR = 124;\n  exports.$RBRACE = 125;\n  exports.$NBSP = 160;\n  exports.$PIPE = 124;\n  exports.$TILDA = 126;\n  exports.$AT = 64;\n  exports.$BT = 96;\n\n  function isWhitespace(code) {\n    return code >= exports.$TAB && code <= exports.$SPACE || code == exports.$NBSP;\n  }\n\n  exports.isWhitespace = isWhitespace;\n\n  function isDigit(code) {\n    return exports.$0 <= code && code <= exports.$9;\n  }\n\n  exports.isDigit = isDigit;\n\n  function isAsciiLetter(code) {\n    return code >= exports.$a && code <= exports.$z || code >= exports.$A && code <= exports.$Z;\n  }\n\n  exports.isAsciiLetter = isAsciiLetter;\n\n  function isAsciiHexDigit(code) {\n    return code >= exports.$a && code <= exports.$f || code >= exports.$A && code <= exports.$F || isDigit(code);\n  }\n\n  exports.isAsciiHexDigit = isAsciiHexDigit;\n\n  function isNewLine(code) {\n    return code === exports.$LF || code === exports.$CR;\n  }\n\n  exports.isNewLine = isNewLine;\n\n  function isOctalDigit(code) {\n    return exports.$0 <= code && code <= exports.$7;\n  }\n\n  exports.isOctalDigit = isOctalDigit;\n});","map":{"version":3,"sources":["../../../../../../packages/compiler/src/chars.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const $EOF = 0;\nexport const $BSPACE = 8;\nexport const $TAB = 9;\nexport const $LF = 10;\nexport const $VTAB = 11;\nexport const $FF = 12;\nexport const $CR = 13;\nexport const $SPACE = 32;\nexport const $BANG = 33;\nexport const $DQ = 34;\nexport const $HASH = 35;\nexport const $$ = 36;\nexport const $PERCENT = 37;\nexport const $AMPERSAND = 38;\nexport const $SQ = 39;\nexport const $LPAREN = 40;\nexport const $RPAREN = 41;\nexport const $STAR = 42;\nexport const $PLUS = 43;\nexport const $COMMA = 44;\nexport const $MINUS = 45;\nexport const $PERIOD = 46;\nexport const $SLASH = 47;\nexport const $COLON = 58;\nexport const $SEMICOLON = 59;\nexport const $LT = 60;\nexport const $EQ = 61;\nexport const $GT = 62;\nexport const $QUESTION = 63;\n\nexport const $0 = 48;\nexport const $7 = 55;\nexport const $9 = 57;\n\nexport const $A = 65;\nexport const $E = 69;\nexport const $F = 70;\nexport const $X = 88;\nexport const $Z = 90;\n\nexport const $LBRACKET = 91;\nexport const $BACKSLASH = 92;\nexport const $RBRACKET = 93;\nexport const $CARET = 94;\nexport const $_ = 95;\n\nexport const $a = 97;\nexport const $b = 98;\nexport const $e = 101;\nexport const $f = 102;\nexport const $n = 110;\nexport const $r = 114;\nexport const $t = 116;\nexport const $u = 117;\nexport const $v = 118;\nexport const $x = 120;\nexport const $z = 122;\n\nexport const $LBRACE = 123;\nexport const $BAR = 124;\nexport const $RBRACE = 125;\nexport const $NBSP = 160;\n\nexport const $PIPE = 124;\nexport const $TILDA = 126;\nexport const $AT = 64;\n\nexport const $BT = 96;\n\nexport function isWhitespace(code: number): boolean {\n  return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n\nexport function isDigit(code: number): boolean {\n  return $0 <= code && code <= $9;\n}\n\nexport function isAsciiLetter(code: number): boolean {\n  return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n\nexport function isAsciiHexDigit(code: number): boolean {\n  return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\nexport function isNewLine(code: number): boolean {\n  return code === $LF || code === $CR;\n}\n\nexport function isOctalDigit(code: number): boolean {\n  return $0 <= code && code <= $7;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}