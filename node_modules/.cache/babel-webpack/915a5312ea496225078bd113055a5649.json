{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar LessError = /*#__PURE__*/function (_Error) {\n  _inherits(LessError, _Error);\n\n  var _super = _createSuper(LessError);\n\n  function LessError(error) {\n    var _this;\n\n    _classCallCheck(this, LessError);\n\n    _this = _super.call(this);\n    _this.message = ['\\n'].concat(_toConsumableArray(LessError.getFileExcerptIfPossible(error)), [error.message.charAt(0).toUpperCase() + error.message.slice(1), \"      Error in \".concat(_path.default.normalize(error.filename), \" (line \").concat(error.line, \", column \").concat(error.column, \")\")]).join('\\n');\n    _this.hideStack = true;\n    return _this;\n  }\n\n  _createClass(LessError, null, [{\n    key: \"getFileExcerptIfPossible\",\n    value: function getFileExcerptIfPossible(lessError) {\n      if (typeof lessError.extract === 'undefined') {\n        return [];\n      }\n\n      var excerpt = lessError.extract.slice(0, 2);\n      var column = Math.max(lessError.column - 1, 0);\n\n      if (typeof excerpt[0] === 'undefined') {\n        excerpt.shift();\n      }\n\n      excerpt.push(\"\".concat(new Array(column).join(' '), \"^\"));\n      return excerpt;\n    }\n  }]);\n\n  return LessError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar _default = LessError;\nexports.default = _default;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/less-loader/dist/LessError.js"],"names":["Object","defineProperty","exports","value","default","_path","_interopRequireDefault","require","obj","__esModule","LessError","error","message","getFileExcerptIfPossible","charAt","toUpperCase","slice","normalize","filename","line","column","join","hideStack","lessError","extract","excerpt","Math","max","shift","push","Array","Error","_default"],"mappings":"AAAA;;;;;;;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,KAAK,GAAGC,sBAAsB,CAACC,OAAO,CAAC,MAAD,CAAR,CAAlC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEJ,IAAAA,OAAO,EAAEI;AAAX,GAArC;AAAwD;;IAEzFE,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB;AACA,UAAKC,OAAL,GAAe,CAAC,IAAD,4BAAUF,SAAS,CAACG,wBAAV,CAAmCF,KAAnC,CAAV,IAAqDA,KAAK,CAACC,OAAN,CAAcE,MAAd,CAAqB,CAArB,EAAwBC,WAAxB,KAAwCJ,KAAK,CAACC,OAAN,CAAcI,KAAd,CAAoB,CAApB,CAA7F,2BAAuIX,KAAK,CAACD,OAAN,CAAca,SAAd,CAAwBN,KAAK,CAACO,QAA9B,CAAvI,oBAAwLP,KAAK,CAACQ,IAA9L,sBAA8MR,KAAK,CAACS,MAApN,SAA+NC,IAA/N,CAAoO,IAApO,CAAf;AACA,UAAKC,SAAL,GAAiB,IAAjB;AAHiB;AAIlB;;;;WAED,kCAAgCC,SAAhC,EAA2C;AACzC,UAAI,OAAOA,SAAS,CAACC,OAAjB,KAA6B,WAAjC,EAA8C;AAC5C,eAAO,EAAP;AACD;;AAED,UAAMC,OAAO,GAAGF,SAAS,CAACC,OAAV,CAAkBR,KAAlB,CAAwB,CAAxB,EAA2B,CAA3B,CAAhB;AACA,UAAMI,MAAM,GAAGM,IAAI,CAACC,GAAL,CAASJ,SAAS,CAACH,MAAV,GAAmB,CAA5B,EAA+B,CAA/B,CAAf;;AAEA,UAAI,OAAOK,OAAO,CAAC,CAAD,CAAd,KAAsB,WAA1B,EAAuC;AACrCA,QAAAA,OAAO,CAACG,KAAR;AACD;;AAEDH,MAAAA,OAAO,CAACI,IAAR,WAAgB,IAAIC,KAAJ,CAAUV,MAAV,EAAkBC,IAAlB,CAAuB,GAAvB,CAAhB;AACA,aAAOI,OAAP;AACD;;;;iCArBqBM,K;;AAyBxB,IAAIC,QAAQ,GAAGtB,SAAf;AACAR,OAAO,CAACE,OAAR,GAAkB4B,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass LessError extends Error {\n  constructor(error) {\n    super();\n    this.message = ['\\n', ...LessError.getFileExcerptIfPossible(error), error.message.charAt(0).toUpperCase() + error.message.slice(1), `      Error in ${_path.default.normalize(error.filename)} (line ${error.line}, column ${error.column})`].join('\\n');\n    this.hideStack = true;\n  }\n\n  static getFileExcerptIfPossible(lessError) {\n    if (typeof lessError.extract === 'undefined') {\n      return [];\n    }\n\n    const excerpt = lessError.extract.slice(0, 2);\n    const column = Math.max(lessError.column - 1, 0);\n\n    if (typeof excerpt[0] === 'undefined') {\n      excerpt.shift();\n    }\n\n    excerpt.push(`${new Array(column).join(' ')}^`);\n    return excerpt;\n  }\n\n}\n\nvar _default = LessError;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}