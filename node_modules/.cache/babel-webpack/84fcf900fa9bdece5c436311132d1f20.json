{"ast":null,"code":"(function (factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    var v = factory(require, exports);\n    if (v !== undefined) module.exports = v;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(\"@angular/compiler-cli/src/ngtsc/perf/src/noop\", [\"require\", \"exports\", \"@angular/compiler-cli/src/ngtsc/perf/src/api\"], factory);\n  }\n})(function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.NOOP_PERF_RECORDER = void 0;\n  /**\n   * @license\n   * Copyright Google LLC All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n\n  var api_1 = require(\"@angular/compiler-cli/src/ngtsc/perf/src/api\");\n\n  var NoopPerfRecorder =\n  /** @class */\n  function () {\n    function NoopPerfRecorder() {}\n\n    NoopPerfRecorder.prototype.eventCount = function () {};\n\n    NoopPerfRecorder.prototype.memory = function () {};\n\n    NoopPerfRecorder.prototype.phase = function () {\n      return api_1.PerfPhase.Unaccounted;\n    };\n\n    NoopPerfRecorder.prototype.inPhase = function (phase, fn) {\n      return fn();\n    };\n\n    NoopPerfRecorder.prototype.reset = function () {};\n\n    return NoopPerfRecorder;\n  }();\n\n  exports.NOOP_PERF_RECORDER = new NoopPerfRecorder();\n});","map":{"version":3,"sources":["../../../../../../../../../packages/compiler-cli/src/ngtsc/perf/src/noop.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;AAMG;;AACH,MAAA,KAAA,GAAA,OAAA,CAAA,8CAAA,CAAA;;AAEA,MAAA,gBAAA;AAAA;AAAA,cAAA;AAAA,aAAA,gBAAA,GAAA,CAcC;;AAbC,IAAA,gBAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA,CAAqB,CAArB;;AAEA,IAAA,gBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA,CAAiB,CAAjB;;AAEA,IAAA,gBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACE,aAAO,KAAA,CAAA,SAAA,CAAU,WAAjB;AACD,KAFD;;AAIA,IAAA,gBAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAW,KAAX,EAA6B,EAA7B,EAAwC;AACtC,aAAO,EAAE,EAAT;AACD,KAFD;;AAIA,IAAA,gBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA,CAAgB,CAAhB;;AACF,WAAA,gBAAA;AAAC,GAdD,EAAA;;AAiBa,EAAA,OAAA,CAAA,kBAAA,GAAmC,IAAI,gBAAJ,EAAnC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {PerfPhase, PerfRecorder} from './api';\n\nclass NoopPerfRecorder implements PerfRecorder {\n  eventCount(): void {}\n\n  memory(): void {}\n\n  phase(): PerfPhase {\n    return PerfPhase.Unaccounted;\n  }\n\n  inPhase<T>(phase: PerfPhase, fn: () => T): T {\n    return fn();\n  }\n\n  reset(): void {}\n}\n\n\nexport const NOOP_PERF_RECORDER: PerfRecorder = new NoopPerfRecorder();\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}