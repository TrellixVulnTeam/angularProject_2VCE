{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createClass\");\n\nvar DelegatedModule = require(\"./DelegatedModule\"); // options.source\n// options.type\n// options.context\n// options.scope\n// options.content\n\n\nvar DelegatedModuleFactoryPlugin = /*#__PURE__*/function () {\n  function DelegatedModuleFactoryPlugin(options) {\n    _classCallCheck(this, DelegatedModuleFactoryPlugin);\n\n    this.options = options;\n    options.type = options.type || \"require\";\n    options.extensions = options.extensions || [\"\", \".wasm\", \".mjs\", \".js\", \".json\"];\n  }\n\n  _createClass(DelegatedModuleFactoryPlugin, [{\n    key: \"apply\",\n    value: function apply(normalModuleFactory) {\n      var _this = this;\n\n      var scope = this.options.scope;\n\n      if (scope) {\n        normalModuleFactory.hooks.factory.tap(\"DelegatedModuleFactoryPlugin\", function (factory) {\n          return function (data, callback) {\n            var dependency = data.dependencies[0];\n            var request = dependency.request;\n\n            if (request && request.indexOf(scope + \"/\") === 0) {\n              var innerRequest = \".\" + request.substr(scope.length);\n              var resolved;\n\n              if (innerRequest in _this.options.content) {\n                resolved = _this.options.content[innerRequest];\n                return callback(null, new DelegatedModule(_this.options.source, resolved, _this.options.type, innerRequest, request));\n              }\n\n              for (var i = 0; i < _this.options.extensions.length; i++) {\n                var extension = _this.options.extensions[i];\n                var requestPlusExt = innerRequest + extension;\n\n                if (requestPlusExt in _this.options.content) {\n                  resolved = _this.options.content[requestPlusExt];\n                  return callback(null, new DelegatedModule(_this.options.source, resolved, _this.options.type, requestPlusExt, request + extension));\n                }\n              }\n            }\n\n            return factory(data, callback);\n          };\n        });\n      } else {\n        normalModuleFactory.hooks.module.tap(\"DelegatedModuleFactoryPlugin\", function (module) {\n          if (module.libIdent) {\n            var request = module.libIdent(_this.options);\n\n            if (request && request in _this.options.content) {\n              var resolved = _this.options.content[request];\n              return new DelegatedModule(_this.options.source, resolved, _this.options.type, request, module);\n            }\n          }\n\n          return module;\n        });\n      }\n    }\n  }]);\n\n  return DelegatedModuleFactoryPlugin;\n}();\n\nmodule.exports = DelegatedModuleFactoryPlugin;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/webpack/lib/DelegatedModuleFactoryPlugin.js"],"names":["DelegatedModule","require","DelegatedModuleFactoryPlugin","options","type","extensions","normalModuleFactory","scope","hooks","factory","tap","data","callback","dependency","dependencies","request","indexOf","innerRequest","substr","length","resolved","content","source","i","extension","requestPlusExt","module","libIdent","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DelegatedModule = require(\"./DelegatedModule\");\n\n// options.source\n// options.type\n// options.context\n// options.scope\n// options.content\nclass DelegatedModuleFactoryPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t\toptions.type = options.type || \"require\";\n\t\toptions.extensions = options.extensions || [\n\t\t\t\"\",\n\t\t\t\".wasm\",\n\t\t\t\".mjs\",\n\t\t\t\".js\",\n\t\t\t\".json\"\n\t\t];\n\t}\n\n\tapply(normalModuleFactory) {\n\t\tconst scope = this.options.scope;\n\t\tif (scope) {\n\t\t\tnormalModuleFactory.hooks.factory.tap(\n\t\t\t\t\"DelegatedModuleFactoryPlugin\",\n\t\t\t\tfactory => (data, callback) => {\n\t\t\t\t\tconst dependency = data.dependencies[0];\n\t\t\t\t\tconst request = dependency.request;\n\t\t\t\t\tif (request && request.indexOf(scope + \"/\") === 0) {\n\t\t\t\t\t\tconst innerRequest = \".\" + request.substr(scope.length);\n\t\t\t\t\t\tlet resolved;\n\t\t\t\t\t\tif (innerRequest in this.options.content) {\n\t\t\t\t\t\t\tresolved = this.options.content[innerRequest];\n\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\tnew DelegatedModule(\n\t\t\t\t\t\t\t\t\tthis.options.source,\n\t\t\t\t\t\t\t\t\tresolved,\n\t\t\t\t\t\t\t\t\tthis.options.type,\n\t\t\t\t\t\t\t\t\tinnerRequest,\n\t\t\t\t\t\t\t\t\trequest\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let i = 0; i < this.options.extensions.length; i++) {\n\t\t\t\t\t\t\tconst extension = this.options.extensions[i];\n\t\t\t\t\t\t\tconst requestPlusExt = innerRequest + extension;\n\t\t\t\t\t\t\tif (requestPlusExt in this.options.content) {\n\t\t\t\t\t\t\t\tresolved = this.options.content[requestPlusExt];\n\t\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\tnew DelegatedModule(\n\t\t\t\t\t\t\t\t\t\tthis.options.source,\n\t\t\t\t\t\t\t\t\t\tresolved,\n\t\t\t\t\t\t\t\t\t\tthis.options.type,\n\t\t\t\t\t\t\t\t\t\trequestPlusExt,\n\t\t\t\t\t\t\t\t\t\trequest + extension\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn factory(data, callback);\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\tnormalModuleFactory.hooks.module.tap(\n\t\t\t\t\"DelegatedModuleFactoryPlugin\",\n\t\t\t\tmodule => {\n\t\t\t\t\tif (module.libIdent) {\n\t\t\t\t\t\tconst request = module.libIdent(this.options);\n\t\t\t\t\t\tif (request && request in this.options.content) {\n\t\t\t\t\t\t\tconst resolved = this.options.content[request];\n\t\t\t\t\t\t\treturn new DelegatedModule(\n\t\t\t\t\t\t\t\tthis.options.source,\n\t\t\t\t\t\t\t\tresolved,\n\t\t\t\t\t\t\t\tthis.options.type,\n\t\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\t\tmodule\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn module;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n}\nmodule.exports = DelegatedModuleFactoryPlugin;\n"]},"metadata":{},"sourceType":"script"}