{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _toConsumableArray = require(\"/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ensureOutputPaths = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar fs_1 = require(\"fs\");\n\nvar path_1 = require(\"path\");\n\nfunction ensureOutputPaths(baseOutputPath, i18n) {\n  var outputPaths = i18n.shouldInline ? _toConsumableArray(i18n.inlineLocales).map(function (l) {\n    return [l, i18n.flatOutput ? baseOutputPath : path_1.join(baseOutputPath, l)];\n  }) : [i18n.veCompatLocale ? [i18n.veCompatLocale, path_1.join(baseOutputPath, i18n.veCompatLocale)] : ['', baseOutputPath]];\n\n  var _iterator = _createForOfIteratorHelper(outputPaths),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          outputPath = _step$value[1];\n\n      if (!fs_1.existsSync(outputPath)) {\n        fs_1.mkdirSync(outputPath, {\n          recursive: true\n        });\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return new Map(outputPaths);\n}\n\nexports.ensureOutputPaths = ensureOutputPaths;","map":{"version":3,"sources":["/Users/abdillahihussein/Documents/GitHub/angularProject/node_modules/@angular-devkit/build-angular/src/utils/output-paths.js"],"names":["Object","defineProperty","exports","value","ensureOutputPaths","fs_1","require","path_1","baseOutputPath","i18n","outputPaths","shouldInline","inlineLocales","map","l","flatOutput","join","veCompatLocale","outputPath","existsSync","mkdirSync","recursive","Map"],"mappings":"AAAA;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,iBAAR,GAA4B,KAAK,CAAjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAAC,IAAD,CAApB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,MAAD,CAAtB;;AACA,SAASF,iBAAT,CAA2BI,cAA3B,EAA2CC,IAA3C,EAAiD;AAC7C,MAAMC,WAAW,GAAGD,IAAI,CAACE,YAAL,GACd,mBAAIF,IAAI,CAACG,aAAT,EAAwBC,GAAxB,CAA4B,UAAAC,CAAC;AAAA,WAAI,CAACA,CAAD,EAAIL,IAAI,CAACM,UAAL,GAAkBP,cAAlB,GAAmCD,MAAM,CAACS,IAAP,CAAYR,cAAZ,EAA4BM,CAA5B,CAAvC,CAAJ;AAAA,GAA7B,CADc,GAEd,CACEL,IAAI,CAACQ,cAAL,GACM,CAACR,IAAI,CAACQ,cAAN,EAAsBV,MAAM,CAACS,IAAP,CAAYR,cAAZ,EAA4BC,IAAI,CAACQ,cAAjC,CAAtB,CADN,GAEM,CAAC,EAAD,EAAKT,cAAL,CAHR,CAFN;;AAD6C,6CAQhBE,WARgB;AAAA;;AAAA;AAQ7C,wDAA0C;AAAA;AAAA,UAA5BQ,UAA4B;;AACtC,UAAI,CAACb,IAAI,CAACc,UAAL,CAAgBD,UAAhB,CAAL,EAAkC;AAC9Bb,QAAAA,IAAI,CAACe,SAAL,CAAeF,UAAf,EAA2B;AAAEG,UAAAA,SAAS,EAAE;AAAb,SAA3B;AACH;AACJ;AAZ4C;AAAA;AAAA;AAAA;AAAA;;AAa7C,SAAO,IAAIC,GAAJ,CAAQZ,WAAR,CAAP;AACH;;AACDR,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ensureOutputPaths = void 0;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\nfunction ensureOutputPaths(baseOutputPath, i18n) {\n    const outputPaths = i18n.shouldInline\n        ? [...i18n.inlineLocales].map(l => [l, i18n.flatOutput ? baseOutputPath : path_1.join(baseOutputPath, l)])\n        : [\n            i18n.veCompatLocale\n                ? [i18n.veCompatLocale, path_1.join(baseOutputPath, i18n.veCompatLocale)]\n                : ['', baseOutputPath],\n        ];\n    for (const [, outputPath] of outputPaths) {\n        if (!fs_1.existsSync(outputPath)) {\n            fs_1.mkdirSync(outputPath, { recursive: true });\n        }\n    }\n    return new Map(outputPaths);\n}\nexports.ensureOutputPaths = ensureOutputPaths;\n"]},"metadata":{},"sourceType":"script"}